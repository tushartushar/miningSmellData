Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,CreateComponents,The method has 124 lines of code.
Long Method,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The method has 125 lines of code.
Long Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The method has 161 lines of code.
Long Method,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The method has 107 lines of code.
Long Method,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The method has 125 lines of code.
Long Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,The method has 119 lines of code.
Long Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,The method has 190 lines of code.
Long Method,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The method has 185 lines of code.
Long Method,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The method has 124 lines of code.
Long Method,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The method has 108 lines of code.
Long Method,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The method has 122 lines of code.
Long Method,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,RepositionInternal,The method has 163 lines of code.
Long Method,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The method has 175 lines of code.
Long Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,SizeAllocate,The method has 114 lines of code.
Long Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The method has 102 lines of code.
Long Method,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The method has 125 lines of code.
Long Method,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The method has 160 lines of code.
Long Method,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The method has 230 lines of code.
Long Method,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The method has 262 lines of code.
Long Method,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The method has 145 lines of code.
Long Method,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The method has 111 lines of code.
Long Method,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The method has 127 lines of code.
Long Method,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetDocumentationMarkup,The method has 127 lines of code.
Long Method,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The method has 144 lines of code.
Long Method,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The method has 106 lines of code.
Long Method,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,Load,The method has 107 lines of code.
Complex Method,MonoDevelop.Ide.Commands,DefaultStringTagProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\CustomStringTagProvider.cs,GetTagValue,Cyclomatic complexity of the method is 22
Complex Method,MonoDevelop.Ide.Commands,ViewListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ViewCommands.cs,Update,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Gui,ViewCommandHandlers,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ViewCommandHandlers.cs,OnRemoveTrailingWhiteSpaces,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,ShowView,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,CreateComponents,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,InitializeLayout,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,Cyclomatic complexity of the method is 31
Complex Method,MonoDevelop.Ide.Gui,SdiWorkspaceWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SdiWorkspaceWindow.cs,SetTitleEvent,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Gui,SdiWorkspaceWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SdiWorkspaceWindow.cs,SetCurrentView,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui,ConfigurationComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ConfigurationComboBox.cs,RefreshCombo,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,SaveAs,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OnWindowClosing,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,GetProjectContainingFile,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,RealOpenFile,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OnStoringWorkspaceUserPreferences,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OnLoadingWorkspaceUserPreferences,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Gui,LoadFileWrapper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,Invoke,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,CreateMonitorPad,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui,ToolButtonStatus,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockItemToolbarLoader.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui,GLibLogging,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\GLibLogging.cs,LoggerMethod,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnMotionNotifyEvent,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,Draw,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,UpdateCommentTags,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Tasks,TaskStore,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\TaskStore.cs,GetNextLocation,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Tasks,TaskStore,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\TaskStore.cs,GetPreviousLocation,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.ExternalTools,ExternalToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolService.cs,LoadTools,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,FillVariables,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,IndentCode,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,InsertTemplateContents,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.CodeTemplates,CodeTemplateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateService.cs,LoadTemplates,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.CodeTemplates,CodeTemplateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateService.cs,LoadTemplates,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CodeTemplates,EditTemplateDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\EditTemplateDialog.cs,CaretPositionChanged,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.CodeTemplates,CodeTemplateVariable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateVariable.cs,Write,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetCollections,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,LoadFileTemplate,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,IsValidForProject,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,MatchLanguagesWithProject,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,CreateProjectDescriptor,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,InitializeItem,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Templates,ProjectTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectTemplate.cs,ProjectTemplate,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,GetFileName,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,ModifyTags,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Templates,SolutionDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SolutionDescriptor.cs,CreateSolutionDescriptor,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Templates,SolutionDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SolutionDescriptor.cs,CreateEntry,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.Templates,CodeTranslationFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeTranslationFileDescriptionTemplate.cs,CreateContent,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Templates,ParentProjectFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ParentProjectFileTemplateCondition.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Templates,ParentProjectFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ParentProjectFileTemplateCondition.cs,ShouldEnableFor,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Templates,XmlCodeDomReader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\XmlCodeDomReader.cs,GenerateElement,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Templates,XmlCodeDomReader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\XmlCodeDomReader.cs,GenerateCollection,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,KeyPress,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Gui.Content,DocumentStateTracker,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\DocumentStateTracker.cs,UpdateEngine,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,DirtyFilesDialog,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Dialogs,AddinLoadErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AddinLoadErrorDialog.cs,AddinLoadErrorDialog,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FillViewers,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,RemoveSection,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,ShowPage,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePage,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Gui.Dialogs,ConfigurationData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiConfigItemOptionsDialog.cs,Update,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Ide.Gui.Dialogs,ConfigurationData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiConfigItemOptionsDialog.cs,AddConfiguration,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Gui.Dialogs,ConfigurationData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiConfigItemOptionsDialog.cs,RenameConfiguration,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui.Dialogs,GtkAlertDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkAlertDialog.cs,GtkAlertDialog,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.OptionPanels,AddInsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\AddInsOptionsPanel.cs,AddInsPanelWidget,Cyclomatic complexity of the method is 21
Complex Method,MonoDevelop.Ide.Gui.OptionPanels,AddInsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\AddInsOptionsPanel.cs,Store,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.OptionPanels,TasksPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\TasksOptionsPanel.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,CreatePanelWidget,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Pads,TaskListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\TaskListPad.cs,OnContentSwitched,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,AddTaskInternal,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,GetFolderContent,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,Cyclomatic complexity of the method is 35
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,AddExistingFolder,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,RenameItem,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,DeleteMultipleItems,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,DeleteMultipleItems,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectReferenceNodeBuilder.cs,BuildNode,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildChildNodes,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,OnSystemFileDeleted,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,IncludeFileToProject,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnKeyPressEvent,Cyclomatic complexity of the method is 28
Complex Method,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,ProcessAnimations,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,Cyclomatic complexity of the method is 22
Complex Method,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OpenFiles,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,Close,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,BackgroundLoadWorkspace,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,SearchNewFiles,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,RestoreWorkspacePreferences,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,OnCheckWorkspaceItem,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,OnCheckProject,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,LoadStockIcon,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,EnsureStockIconIsLoaded,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,Cyclomatic complexity of the method is 57
Complex Method,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,InternalGetStockIdFromResource,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,GetComposedIcon,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,Save,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,ShowOptions,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddReferenceToProject,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,RemoveSolutionItem,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,DoBeforeCompileAction,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,Cyclomatic complexity of the method is 30
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,Cyclomatic complexity of the method is 23
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,Cyclomatic complexity of the method is 46
Complex Method,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,Cyclomatic complexity of the method is 30
Complex Method,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,Cyclomatic complexity of the method is 28
Complex Method,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckWindowsGtk,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,SetBuilders,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,CheckAndDrop,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,GetBuilderChain,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,UnregisterNode,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnDestroyed,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Components,NodeState,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\NodeState.cs,WriteTo,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Components,LogViewProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,OnCompleted,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Components,StringTagSelectorButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\StringTagSelectorButton.cs,CreateMenu,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,AddEntry,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Components,AnimatedIcon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\AnimatedIcon.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Ide.CodeFormatting,FormatSelectionHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\CodeFormattingCommands.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CodeFormatting,DefaultCodeFormatter,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\DefaultCodeFormatter.cs,FormatText,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,FindInFilesDialog,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,HandleScopeChanged,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,GetScope,Cyclomatic complexity of the method is 29
Complex Method,MonoDevelop.Ide.FindInFiles,DirectoryScope,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\Scope.cs,GetFileNames,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.FindInFiles,PatternMatcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FilterOptions.cs,PatternMatcher,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,FindAll,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,RegexSearch,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,FindPosition,Cyclomatic complexity of the method is 23
Complex Method,MonoDevelop.Ide.FindInFiles,SearchProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchProgressMonitor.cs,OnCompleted,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,GetFileNames,Cyclomatic complexity of the method is 30
Complex Method,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,FindReferences,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\MemberCollector.cs,GetBaseTypes,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\MemberCollector.cs,CollectMembers,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.FindInFiles,SearchCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchCollector.cs,CollectFiles,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.FindInFiles,SearchCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchCollector.cs,Collect,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GenerateExecutionModeCommands,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetExecutionModeCommands,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetCustomModes,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Execution,MonoExecutionParameters,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\MonoExecutionParameters.cs,GenerateOptions,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Ide.Execution,CustomExecutionModeManagerDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeManagerDialog.cs,Fill,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Execution,MonoExecutionParametersPreview,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\MonoExecutionParametersPreview.cs,MonoExecutionParametersPreview,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,UpdateCompleted,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components,DataGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DataGrid.cs,GetResolvedDataSource,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components,FileSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\FileSelector.cs,FileSelector,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components,TreeViewState,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TreeViewState.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components,FixedWidthWrapLabel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\FixedWidthWrapLabel.cs,breakText,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,UpdatePage,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ProcessKey,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Components,TooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipWindow.cs,OnSizeAllocated,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components,ConsoleView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ConsoleView.cs,ProcessReturn,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components,ConsoleView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ConsoleView.cs,ProcessKeyPressEvent,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,UpdateImage,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Components,GtkUtil,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,ReplaceWithWidget,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderOuterShadow,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Components,DropDownBoxListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBoxListWindow.cs,ProcessKey,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components,HeaderBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HeaderBox.cs,OnExposeEvent,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,Cyclomatic complexity of the method is 44
Complex Method,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,Cyclomatic complexity of the method is 25
Complex Method,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,Cyclomatic complexity of the method is 35
Complex Method,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,Cyclomatic complexity of the method is 22
Complex Method,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Components.Chart,Serie,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\Serie.cs,GetData,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,CanUseBinding,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,OnKeyPressed,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,DispatchCommand,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,GetCommandInfo,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,GetTypeHandlerInfo,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,GetNextCommandTarget,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Components.Commands,CommandMenu,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandMenu.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components.Commands,CommandMenuItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandMenuItem.cs,Update,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Components.Commands,CommandToggleToolButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandToggleToolButton.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Commands,CommandToolButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandToolButton.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,SetBinding,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AppleMapKeyToSymbol,Cyclomatic complexity of the method is 25
Complex Method,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,LoadScheme,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components.Commands.ExtensionNodes,CommandCodon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands.ExtensionNodes\CommandCodon.cs,CreateInstance,Cyclomatic complexity of the method is 39
Complex Method,MonoDevelop.Components.DockToolbars,DockToolbarFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarFrame.cs,RestoreStatus,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,DockToolbarPanel,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,RepositionInternal,Cyclomatic complexity of the method is 35
Complex Method,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShiftBar,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,PackRow,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,WindowToPanel,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,PanelToWindow,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,OnSizeRequested,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,OnSizeAllocated,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Extensions,SelectFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\ISelectFileDialog.cs,SetGtkFileFilters,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Components.PropertyGrid,EditorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\EditorManager.cs,GetEditorType,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Populate,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.PropertyGrid.PropertyEditors,IntRangeEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\IntRange.cs,Initialize,Cyclomatic complexity of the method is 34
Complex Method,MonoDevelop.Components.Theming,GtkColors,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkColors.cs,RefreshColors,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,AutoHideBox,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateHide,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components.Docking,ScrollableContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,OnSizeAllocated,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnSizeAllocated,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,Cyclomatic complexity of the method is 40
Complex Method,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,LoadLayout,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,ForAll,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,LayoutWidgets,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,InRegion,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,ExtractDockBar,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,AddObject,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,SizeAllocate,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,SizeRequest,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,UpdateNotebook,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,AddRemoveWidgets,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDefaultSize,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetMinSize,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,DrawSeparators,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,Read,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.Components.Docking,DockItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItem.cs,GetToolbar,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components.Docking,CustomFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemContainer.cs,OnExposeEvent,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.Docking,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\TabStrip.cs,UpdateEllipsize,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Components.Docking,DockVisualStyle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockVisualStyle.cs,CopyValuesFrom,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,UpdateVisualStyle,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.ProgressMonitoring,BaseProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ProgressMonitoring\BaseProgressMonitor.cs,ShowResultDialog,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.ProgressMonitoring,MultiTaskDialogProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ProgressMonitoring\MultiTaskDialogProgressMonitor.cs,ShowDialogs,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,PreProcessKeyEvent,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,ShowListWindow,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,DelayedTooltipShow,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PostProcessKey,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,Cyclomatic complexity of the method is 57
Complex Method,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,FindMatchedEntry,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CodeCompletion,CompletionWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionWindowManager.cs,ShowWindow,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,Iterate,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Desktop,RecentItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\RecentItem.cs,Read,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Desktop,RecentFiles,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\RecentOpen.cs,GetProjects,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,AddTemplate,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,UpdateOkStatus,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,InitializeComponents,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,OpenEvent,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,Fill,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,ConfirmProjectDeleteDialog,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,GetFilesToDelete,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.Projects,ProjectReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectReferencePanel.cs,PopulateListView,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.Projects,ApplyPolicyDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ApplyPolicyDialog.cs,GetPoliciesDescription,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Projects,PoliciesListSummaryTree,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ApplyPolicyDialog.cs,SetPolicies,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,Reset,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,SignalRefChange,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,HandlePolicyContainerPolicyChanged,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,GetItemMimeTypes,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\NamespaceSynchronisationPanel.cs,ApplyChanges,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,PortableRuntimeOptionsPanelWidget,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,GetShortName,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.Navigation,HistoryList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Navigation\HistoryList.cs,MoveTo,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Ide.Gui.Pads.ClassPad,SolutionNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\SolutionNodeBuilder.cs,BuildNode,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.Gui.Pads.ClassPad,ReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ReferenceNodeBuilder.cs,BuildNode,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,WelcomePageFeedItem,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,FindWindowsXmlDocumentation,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetFrameworkLookup,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.TypeSystem,Ambience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\Ambience.cs,GetString,Cyclomatic complexity of the method is 30
Complex Method,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,BreakLines,Cyclomatic complexity of the method is 21
Complex Method,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,EscapeText,Cyclomatic complexity of the method is 21
Complex Method,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,UnescapeText,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,ParseBody,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetDocumentationMarkup,Cyclomatic complexity of the method is 62
Complex Method,MonoDevelop.Ide.TypeSystem,NetAmbience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\NetAmbience.cs,GetTypeString,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.TypeSystem,NetAmbience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\NetAmbience.cs,AppendModifiers,Cyclomatic complexity of the method is 23
Complex Method,MonoDevelop.Ide.TypeSystem,OutputSettings,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\OutputSettings.cs,PangoFormat,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Ide.TypeSystem,FoldingUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\ParsedDocument.cs,ToFolds,Cyclomatic complexity of the method is 23
Complex Method,MonoDevelop.Ide.TypeSystem,MarkupUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\MarkupUtilities.cs,AppendEscapedString,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPosition,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\MonoDocDocumentationProvider.cs,SelectNode,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\MonoDocDocumentationProvider.cs,SelectOverload,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\MonoDocDocumentationProvider.cs,GetTypeString,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SelectActiveRuntime,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,FillRuntimes,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,Cyclomatic complexity of the method is 18
Complex Method,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnDestroyed,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,GetItemAt,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectItemDown,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectNextCategory,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,ProcessKey,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,Cyclomatic complexity of the method is 28
Complex Method,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,Load,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,ResolveConfiguration,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,Cyclomatic complexity of the method is 10
Long Parameter List,MonoDevelop.Ide.Gui,StatusProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StatusProgressMonitor.cs,StatusProgressMonitor,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,SdiWorkspaceWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SdiWorkspaceWindow.cs,InsertButton,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,InitializeEditor,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,Initialize,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,AddPad,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,AddPad,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,ShowPad,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,ShowPad,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,BatchOpenDocument,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,FileOpenInformation,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,FileOpenInformation,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,LoadFileWrapper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,LoadFileWrapper,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetStatusProgressMonitor,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetStatusProgressMonitor,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetOutputProgressMonitor,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,CreateMonitorPad,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,TabStrip,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,StartCloseAnimation,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawClosingTab,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Tasks,Task,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\Task.cs,Task,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Tasks,Task,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\Task.cs,Task,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Tasks,Task,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\Task.cs,Task,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.Tasks,Task,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\Task.cs,Task,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide.Tasks,TaskStore,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\TaskStore.cs,TaskStore,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Codons,PadCodon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Codons\PadCodon.cs,PadCodon,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Codons,PadCodon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Codons\PadCodon.cs,PadCodon,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,FillVariables,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeTemplates,EditTemplateDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\EditTemplateDialog.cs,EditTemplateDialog,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.CodeTemplates,EditTemplateDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\EditTemplateDialog.cs,DocumentTextReplaced,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeTemplates,CodeTemplateCompletionData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateCompletionData.cs,InsertCompletionText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,FileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileDescriptionTemplate.cs,AddToProject,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,Create,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,CanCreateUnsavedFiles,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,CreateFile,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,INewFileCreator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\INewFileCreator.cs,CreateItem,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,SetClosestSupportedTargetFramework,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,RawFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\TextFileDescriptionTemplate.cs,CreateFileContent,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,AddToProject,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,AddFileToProject,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,SaveFile,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,GetFileName,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,CreateFileContent,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,ModifyTags,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,ResourceFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ResourceFileDescriptionTemplate.cs,AddToProject,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,CodeTranslationFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeTranslationFileDescriptionTemplate.cs,ModifyTags,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,FileTemplateReference,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplateReference.cs,AddToProject,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Templates,DirectoryTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\DirectoryTemplate.cs,AddToProject,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Content,ITextEditorResolverProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\ITextEditorResolver.cs,CreateTooltip,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Content,TextStylePolicy,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\TextStylePolicy.cs,TextStylePolicy,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,SaveAndQuit,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,Quit,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,KeyBindingsPanel,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,SetText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,PopulateOpenWithViewers,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectReferenceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectReferenceFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectReferenceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,UnknownEntryNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\UnknownEntryNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,WorkspaceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\WorkspaceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderFileNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,ImplicitFrameworkAssemblyReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ImplicitFrameworkAssemblyReferenceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ProjectPad,PortableFrameworkSubsetNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\PortableFrameworkSubsetNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,CheckWorkspaceItems,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,LoadIcon,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,ShowException,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,GenericAlert,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,GenericAlert,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFileToFolder,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,The method has 10 parameters.
Long Parameter List,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,SetupExceptionManager,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide,MonoDevelopOptions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,GetOptionSet,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.StandardHeader,StandardHeaderService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.StandardHeader\StandardHeaderService.cs,GetHeader,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,Initialize,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,CheckAndDrop,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Components,NodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\NodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Components,TreeViewItemBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\TreeViewItem.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeFormatting,ICodeFormatter,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\ICodeFormatter.cs,FormatText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeFormatting,AbstractCodeFormatter,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\ICodeFormatter.cs,FormatText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeFormatting,DefaultCodeFormatter,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\DefaultCodeFormatter.cs,FormatText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,FindInFilesDialog,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableRemoveRow,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,SearchReplace,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,FindAll,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,FindAll,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,RegexSearch,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,Search,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,GetFileNames,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,FindReferences,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,FindReferences,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\MemberCollector.cs,GetMembers,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\MemberCollector.cs,CollectMembers,The method has 11 parameters.
Long Parameter List,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,CustomToolService,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,UpdateCompleted,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components,CellRendererComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CellRendererComboBox.cs,GetSize,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components,CellRendererComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CellRendererComboBox.cs,StartEditing,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components,GtkUtil,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,DrawImage,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,RoundBorder,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The method has 8 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderOuterShadow,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderTiled,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CachedDraw,The method has 8 parameters.
Long Parameter List,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CachedDraw,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components,MouseTracker,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MouseTracker.cs,MouseTracker,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components.Commands,ActionCommand,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\ActionCommand.cs,ActionCommand,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Commands,CommandEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandEntry.cs,CreateMenuItem,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,DefaultDispatchCommand,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,OnCommandActivating,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,OnCommandActivated,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Commands,CommandActivationEventArgs,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,CommandActivationEventArgs,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,BindingToKeysPartial,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,BindingToKeys,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Reposition,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,RepositionInternal,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,WindowToPanel,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,PanelToWindow,The method has 8 parameters.
Long Parameter List,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Populate,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,EndTransaction,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowCursor,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The method has 9 parameters.
Long Parameter List,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowRule,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowSelection,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowSelection,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowSelection,The method has 8 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowCursor,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowCursor,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowCursor,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowSelection,The method has 9 parameters.
Long Parameter List,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowRule,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,DockBarItem,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,InRegion,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,AddItemAtLocation,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,DrawSeparators,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,DrawSeparators,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The method has 11 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The method has 7 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockObject.cs,GetDockTarget,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,SetLabel,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,CompletionData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionData.cs,InsertCompletionText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ICompletionKeyHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionDataList.cs,PreProcessKey,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ICompletionKeyHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionDataList.cs,PostProcessKey,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,CompletionWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionWindowManager.cs,ShowWindow,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,GetIndex,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,GetItem,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,GetRowArea,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,IterateItems,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Desktop,RecentFileStorage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\RecentFileStorage.cs,AddWithLimit,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Desktop,PlatformService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\PlatformService.cs,StartConsoleProcess,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,AddTopSelectorCombo,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,AddMultiOptionCombo,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,SelectFrameworks,The method has 9 parameters.
Long Parameter List,MonoDevelop.Components.AutoTest,AutoTestSession,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.AutoTest\AutoTestSession.cs,SendKeyEvent,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Fonts,FontChooserPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Fonts\FontChooserPanelWidget.cs,FontChooserPanelWidget,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,CombineNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\CombineNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,EventNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\EventNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,FieldNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\FieldNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,MethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MethodNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,NamespaceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\NamespaceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ProjectNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,PropertyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\PropertyNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,SolutionNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\SolutionNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.Gui.Pads.ClassPad,ReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ReferenceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.WelcomePage,WelcomePageLinkButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageLinkButton.cs,WelcomePageLinkButton,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,FormatText,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The method has 8 parameters.
Long Parameter List,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnExposeEvent,The method has 9 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,TypeSystemService,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ParseFile,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ParseFile,The method has 5 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,CheckModifiedFiles,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,InsertMemberWithCursor,The method has 7 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,AddNewMembers,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.TypeSystem,CodeGenerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerator.cs,CreateFieldEncapsulation,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The method has 20 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StatusArea,The method has 9 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,ShowMessageInner,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnQueryTooltip,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,LayoutRoundedRectangle,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawString,The method has 9 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,Load,The method has 8 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,ResolveConfiguration,The method has 10 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,GetTargetsForConfiguration,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,TypeSearchResult,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchResult.cs,TypeSearchResult,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,FileSearchResult,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchResult.cs,FileSearchResult,The method has 5 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,MemberSearchResult,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchResult.cs,MemberSearchResult,The method has 6 parameters.
Long Parameter List,MonoDevelop.Components.MainToolbar,CommandResult,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchResult.cs,CommandResult,The method has 6 parameters.
Long Parameter List,MonoDevelop.Ide.TextEditing,TextEditorService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TextEditing\TextEditorService.cs,TextEditorService,The method has 9 parameters.
Long Identifier,MonoDevelop.Ide.Gui.OptionPanels,SdkLocationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\SdkLocationPanel.cs,CleanPath,The length of the parameter overridesHigherPriorityDefault is 30.
Long Identifier,MonoDevelop.Components,PangoCairoHelper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PangoCairoHelper.cs,LayoutPath,The length of the parameter iUnderstandThePerformanceImplications is 37.
Long Statement,MonoDevelop.Ide.Commands,PrintHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,CanPrint,The length of the statement  "	return IdeApp.Workbench.ActiveDocument != null && (print = IdeApp.Workbench.ActiveDocument.GetContent<IPrintable> ()) != null && print.CanPrint; " is 144.
Long Statement,MonoDevelop.Ide.Commands,PrintPageSetupHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Run,The length of the statement  "	settings.PageSetup = Gtk.Print.RunPageSetupDialog (IdeApp.Workbench.RootWindow' settings.PageSetup' settings.PrintSettings); " is 124.
Long Statement,MonoDevelop.Ide.Commands,ClearRecentFilesHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Run,The length of the statement  "		if (MessageService.GenericAlert (MonoDevelop.Ide.Gui.Stock.Question' title' question' AlertButton.No' AlertButton.Yes) == AlertButton.Yes) { " is 140.
Long Statement,MonoDevelop.Ide.Commands,RecentProjectListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The length of the statement  "			icon = IdeApp.Services.ProjectService.FileFormats.GetFileFormats (ri.FileName' typeof(Solution)).Length > 0 ? "md-solution" : "md-workspace"; " is 141.
Long Statement,MonoDevelop.Ide.Commands,ClearRecentProjectsHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Run,The length of the statement  "		if (MessageService.GenericAlert (MonoDevelop.Ide.Gui.Stock.Question' title' question' AlertButton.No' AlertButton.Yes) == AlertButton.Yes) { " is 140.
Long Statement,MonoDevelop.Ide.Commands,ProjectOptionsHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	info.Text = project != null ? GettextCatalog.GetString ("{0} _Options"' project.Name) : GettextCatalog.GetString ("Project _Options"); " is 134.
Long Statement,MonoDevelop.Ide.Commands,BuildSolutionHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	info.Enabled = ((IdeApp.ProjectOperations.CurrentSelectedSolution != null) && (IdeApp.ProjectOperations.CurrentBuildOperation.IsCompleted)); " is 140.
Long Statement,MonoDevelop.Ide.Commands,BuildHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "		info.Enabled = ((IdeApp.Workbench.ActiveDocument != null) && (IdeApp.Workbench.ActiveDocument.IsBuildTarget) && (IdeApp.ProjectOperations.CurrentBuildOperation.IsCompleted)); " is 174.
Long Statement,MonoDevelop.Ide.Commands,BuildHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "			info.Text = GettextCatalog.GetString ("B_uild {0}"' Path.GetFileName (IdeApp.Workbench.ActiveDocument.Name).Replace ("_"' "__")); " is 129.
Long Statement,MonoDevelop.Ide.Commands,RebuildSolutionHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	info.Enabled = ((IdeApp.ProjectOperations.CurrentSelectedSolution != null) && (IdeApp.ProjectOperations.CurrentBuildOperation.IsCompleted)); " is 140.
Long Statement,MonoDevelop.Ide.Commands,RebuildHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "			info.Text = GettextCatalog.GetString ("R_ebuild {0}"' IdeApp.ProjectOperations.CurrentSelectedBuildTarget.Name.Replace ("_"' "__")); " is 132.
Long Statement,MonoDevelop.Ide.Commands,RebuildHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "		info.Enabled = ((IdeApp.Workbench.ActiveDocument != null) && (IdeApp.Workbench.ActiveDocument.IsBuildTarget) && (IdeApp.ProjectOperations.CurrentBuildOperation.IsCompleted)); " is 174.
Long Statement,MonoDevelop.Ide.Commands,RebuildHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "			info.Text = GettextCatalog.GetString ("R_ebuild {0}"' IdeApp.Workbench.ActiveDocument.FileName.FileName.Replace ("_"' "__")); " is 125.
Long Statement,MonoDevelop.Ide.Commands,RunHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,GetRunTarget,The length of the statement  "	return IdeApp.ProjectOperations.CurrentSelectedSolution != null && IdeApp.ProjectOperations.CurrentSelectedSolution.StartupItem != null ? IdeApp.ProjectOperations.CurrentSelectedSolution.StartupItem : IdeApp.ProjectOperations.CurrentSelectedBuildTarget; " is 253.
Long Statement,MonoDevelop.Ide.Commands,RunHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,RunMethod,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("An application is already running. Do you want to stop it?")' AlertButton.Stop)) " is 136.
Long Statement,MonoDevelop.Ide.Commands,RunEntryHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	info.Enabled = ((buildTarget != null) && (!(buildTarget is Workspace)) && IdeApp.ProjectOperations.CanExecute (buildTarget) && IdeApp.ProjectOperations.CurrentRunOperation.IsCompleted); " is 185.
Long Statement,MonoDevelop.Ide.Commands,CleanHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "		info.Text = GettextCatalog.GetString ("C_lean {0}"' IdeApp.ProjectOperations.CurrentSelectedBuildTarget.Name.Replace ("_"' "__")); " is 130.
Long Statement,MonoDevelop.Ide.Commands,StopHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	if ((IdeApp.ProjectOperations.CurrentBuildOperation.IsCompleted) && (IdeApp.ProjectOperations.CurrentRunOperation.IsCompleted)) " is 127.
Long Statement,MonoDevelop.Ide.Commands,ExportSolutionHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	// FIXME: Once we fix Workspaces to offer Visual Studio formats (instead of the deprecated MonoDevelop 1.0 format)' we can allow exporting of Workspaces as well. " is 161.
Long Statement,MonoDevelop.Ide.Commands,ExportSolutionHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	if (!(IdeApp.ProjectOperations.CurrentSelectedItem is Solution) && !(IdeApp.ProjectOperations.CurrentSelectedItem is SolutionEntityItem)) " is 137.
Long Statement,MonoDevelop.Ide.Commands,ApplyPolicyHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	info.Enabled = IdeApp.ProjectOperations.CurrentSelectedSolutionItem != null || IdeApp.ProjectOperations.CurrentSelectedSolution != null; " is 136.
Long Statement,MonoDevelop.Ide.Commands,ApplyPolicyHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Run,The length of the statement  "	ApplyPolicyDialog dlg = new ApplyPolicyDialog ((IPolicyProvider)IdeApp.ProjectOperations.CurrentSelectedSolutionItem ?? (IPolicyProvider)IdeApp.ProjectOperations.CurrentSelectedSolution); " is 187.
Long Statement,MonoDevelop.Ide.Commands,ExportPolicyHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Update,The length of the statement  "	info.Enabled = IdeApp.ProjectOperations.CurrentSelectedSolutionItem != null || IdeApp.ProjectOperations.CurrentSelectedSolution != null; " is 136.
Long Statement,MonoDevelop.Ide.Commands,ExportPolicyHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ProjectCommands.cs,Run,The length of the statement  "	ExportProjectPolicyDialog dlg = new ExportProjectPolicyDialog ((IPolicyProvider)IdeApp.ProjectOperations.CurrentSelectedSolutionItem ?? (IPolicyProvider)IdeApp.ProjectOperations.CurrentSelectedSolution); " is 203.
Long Statement,MonoDevelop.Ide.Commands,ToolListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ToolsCommands.cs,Update,The length of the statement  "		commandInfo.Description = GettextCatalog.GetString ("Start tool") + " " + string.Join (string.Empty' externalTool.MenuCommand.Split ('&')); " is 139.
Long Statement,MonoDevelop.Ide.Commands,ToolListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ToolsCommands.cs,Run,The length of the statement  "		string customerArguments = MessageService.GetTextResponse (GettextCatalog.GetString ("Enter any arguments you want to use while launching tool' {0}:"' tool.MenuCommand)' GettextCatalog.GetString ("Command Arguments for {0}"' tool.MenuCommand)' ""); " is 248.
Long Statement,MonoDevelop.Ide.Commands,ToolListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ToolsCommands.cs,RunExternalTool,The length of the statement  "			processWrapper = Runtime.ProcessService.StartProcess (commandTool' argumentsTool' initialDirectoryTool' progressMonitor.Log' progressMonitor.Log' null); " is 152.
Long Statement,MonoDevelop.Ide.Commands,ToolListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ToolsCommands.cs,RunExternalTool,The length of the statement  "			progressMonitor.Log.WriteLine (GettextCatalog.GetString ("Process '{0}' has exited with error code {1}"' processName' processWrapper.ExitCode)); " is 144.
Long Statement,MonoDevelop.Ide.Commands,ToolListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ToolsCommands.cs,RunExternalTool,The length of the statement  "		progressMonitor.ReportError (GettextCatalog.GetString ("External program execution failed.\nError while starting:\n '{0} {1}'"' commandTool' argumentsTool)' ex); " is 161.
Long Statement,MonoDevelop.Ide.Commands,DeleteCurrentLayoutHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ViewCommands.cs,Run,The length of the statement  "	if (MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to delete the active layout?")' AlertButton.Delete)) { " is 131.
Long Statement,MonoDevelop.Ide.Commands,FullScreenHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ViewCommands.cs,Update,The length of the statement  "		info.Text = IdeApp.Workbench.FullScreen ? GettextCatalog.GetString ("Exit Full Screen") : GettextCatalog.GetString ("Enter Full Screen"); " is 137.
Long Statement,MonoDevelop.Ide.Commands,FocusCurrentDocumentHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ViewCommands.cs,Run,The length of the statement  "	IdeApp.Workbench.ActiveDocument.Editor.SetCaretTo (IdeApp.Workbench.ActiveDocument.Editor.Caret.Line' IdeApp.Workbench.ActiveDocument.Editor.Caret.Column); " is 155.
Long Statement,MonoDevelop.Ide.Commands,ToggleCompletionSuggestionModeHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\TextEditorCommands.cs,Run,The length of the statement  "	MonoDevelop.Ide.CodeCompletion.CompletionWindowManager.ForceSuggestionMode = !MonoDevelop.Ide.CodeCompletion.CompletionWindowManager.ForceSuggestionMode; " is 153.
Long Statement,MonoDevelop.Ide.Gui,DisplayBindingService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DisplayBindingService.cs,GetDefaultViewBinding,The length of the statement  "	return GetDisplayBindings (filePath' mimeType' ownerProject).OfType<IViewDisplayBinding> ().FirstOrDefault (d => d.CanUseAsDefault); " is 132.
Long Statement,MonoDevelop.Ide.Gui,ViewCommandHandlers,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ViewCommandHandlers.cs,OnReloadFile,The length of the statement  "	if (MessageService.GenericAlert (MonoDevelop.Ide.Gui.Stock.Warning' GettextCatalog.GetString ("Revert unsaved changes to document '{0}'?"' Path.GetFileName (doc.Name))' GettextCatalog.GetString ("All changes made to the document will be permanently lost.")' 0' AlertButton.Cancel' AlertButton.Revert) == AlertButton.Revert) " is 323.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,SetAppIcons,The length of the statement  "				this.IconList = iconsEl.Elements ("Icon").Select (el => new Gdk.Pixbuf (BrandingService.GetFile ((string)el))).ToArray (); " is 122.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,InitializeWorkspace,The length of the statement  "	IdeApp.ProjectOperations.CurrentProjectChanged += (ProjectEventHandler)DispatchService.GuiDispatch (new ProjectEventHandler (SetProjectTitle)); " is 143.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,InitializeWorkspace,The length of the statement  "	FileService.FileRemoved += (EventHandler<FileEventArgs>)DispatchService.GuiDispatch (new EventHandler<FileEventArgs> (CheckRemovedFile)); " is 137.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,InitializeWorkspace,The length of the statement  "	FileService.FileRenamed += (EventHandler<FileCopyEventArgs>)DispatchService.GuiDispatch (new EventHandler<FileCopyEventArgs> (CheckRenamedFile)); " is 145.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,SetWorkbenchTitle,The length of the statement  "					Title = window.ViewContent.Project.Name + " - " + window.ViewContent.PathRelativeToProject + post + " - " + BrandingService.ApplicationName; " is 140.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,GetStoredMemento,The length of the statement  "		string fileName = content.ContentName.Substring (3).Replace ('/'' '.').Replace ('\\'' '.').Replace (System.IO.Path.DirectorySeparatorChar' '.'); " is 144.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,InitializeLayout,The length of the statement  "		if (!visible.Contains (node.Id) && node.DefaultLayouts != null && (node.DefaultLayouts.Contains (stockLayout.Id) || node.DefaultLayouts.Contains ("*"))) { " is 154.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The length of the statement  "	Gdk.ModifierType winSwitchModifier = Platform.IsMac ? KeyBindingManager.SelectionModifierControl : KeyBindingManager.SelectionModifierAlt; " is 138.
Long Statement,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The length of the statement  "	if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) { " is 183.
Long Statement,MonoDevelop.Ide.Gui,SdiWorkspaceWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SdiWorkspaceWindow.cs,SetCurrentView,The length of the statement  "		pathedDocument = Document != null ? Document.GetContent<IPathedDocument> () : (IPathedDocument)ViewContent.GetContent (typeof(IPathedDocument)); " is 144.
Long Statement,MonoDevelop.Ide.Gui,ConfigurationComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ConfigurationComboBox.cs,OnActiveRuntimeChanged,The length of the statement  "		if ((IdeApp.Workspace.UseDefaultRuntime && item.Item == defaultRuntime) || (item.Label == IdeApp.Workspace.ActiveRuntime.DisplayName)) { " is 136.
Long Statement,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,Save,The length of the statement  "			FileAttributes attr = FileAttributes.ReadOnly | FileAttributes.Directory | FileAttributes.Offline | FileAttributes.System; " is 122.
Long Statement,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,Save,The length of the statement  "			if (!File.Exists (Window.ViewContent.ContentName) || (File.GetAttributes (window.ViewContent.ContentName) & attr) != 0) { " is 121.
Long Statement,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,SaveAs,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("File {0} already exists. Overwrite?"' filename)' AlertButton.OverwriteFile)) " is 132.
Long Statement,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,CanRun,The length of the statement  "	return IsBuildTarget && Window.ViewContent.ContentName != null && IdeApp.ProjectOperations.CanExecuteFile (Window.ViewContent.ContentName' handler); " is 148.
Long Statement,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,InitializeExtensionChain,The length of the statement  "	ExtensionNodeList extensions = window.ExtensionContext.GetExtensionNodes ("/MonoDevelop/Ide/TextEditorExtensions"' typeof(TextEditorExtensionNode)); " is 148.
Long Statement,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,UpdateParseDocument,The length of the statement  "		this.parsedDocument = TypeSystemService.ParseFile (Project' currentParseFile' editor.Document.MimeType' currentParseText); " is 122.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The length of the statement  "	return OpenDocument (fileName' bringToFront ? OpenDocumentOptions.Default : OpenDocumentOptions.Default & ~OpenDocumentOptions.BringToFront); " is 141.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The length of the statement  "	return OpenDocument (fileName' project' bringToFront ? OpenDocumentOptions.Default : OpenDocumentOptions.Default & ~OpenDocumentOptions.BringToFront); " is 150.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The length of the statement  "						doc.RunWhenLoaded (() => ipos.SetCaretTo (info.Line' info.Column >= 1 ? info.Column : 1' info.Options.HasFlag (OpenDocumentOptions.HighlightCaretLine)' info.Options.HasFlag (OpenDocumentOptions.CenterCaretLine))); " is 213.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OpenDocument,The length of the statement  "		IProgressMonitor pm = ProgressMonitors.GetStatusProgressMonitor (GettextCatalog.GetString ("Opening {0}"' info.Project != null ? info.FileName.ToRelative (info.Project.ParentSolution.BaseDirectory) : info.FileName)' Stock.StatusSolutionOperation' true); " is 253.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,NewDocument,The length of the statement  "		throw new ApplicationException (String.Format ("Created view content was null{3}DefaultName:{0}{3}MimeType:{1}{3}Content:{2}"' defaultName' mimeType' content' Environment.NewLine)); " is 181.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,GetStringTagModel,The length of the statement  "		source.Add (IdeApp.ProjectOperations.CurrentSelectedSolutionItem.GetStringTagModel (IdeApp.Workspace.ActiveConfiguration)); " is 123.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OnWindowClosing,The length of the statement  "		AlertButton result = MessageService.GenericAlert (Stock.Warning' GettextCatalog.GetString ("Save the changes to document '{0}' before closing?"' window.ViewContent.IsUntitled ? window.ViewContent.UntitledName : System.IO.Path.GetFileName (window.ViewContent.ContentName))' GettextCatalog.GetString ("If you don't save' all changes will be permanently lost.")' AlertButton.CloseWithoutSave' AlertButton.Cancel' window.ViewContent.IsUntitled ? AlertButton.SaveAs : AlertButton.Save); " is 481.
Long Statement,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,OnLoadingWorkspaceUserPreferences,The length of the statement  "	using (IProgressMonitor pm = ProgressMonitors.GetStatusProgressMonitor (GettextCatalog.GetString ("Loading workspace documents")' Stock.StatusSolutionOperation' true)) { " is 169.
Long Statement,MonoDevelop.Ide.Gui,LoadFileWrapper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,JumpToLine,The length of the statement  "	ipos.SetCaretTo (Math.Max (1' fileInfo.Line)' Math.Max (1' fileInfo.Column)' fileInfo.Options.HasFlag (OpenDocumentOptions.HighlightCaretLine)); " is 144.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetRunProgressMonitor,The length of the statement  "	return GetOutputProgressMonitor ("MonoDevelop.Ide.ApplicationOutput"' GettextCatalog.GetString ("Application Output")' Stock.RunProgramIcon' true' true); " is 153.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetToolOutputProgressMonitor,The length of the statement  "	return GetOutputProgressMonitor ("MonoDevelop.Ide.ToolOutput"' GettextCatalog.GetString ("Tool Output")' Stock.RunProgramIcon' bringToFront' true); " is 147.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetLoadProgressMonitor,The length of the statement  "	return GetStatusProgressMonitor (GettextCatalog.GetString ("Loading...")' Stock.StatusSolutionOperation' true' false' lockGui); " is 127.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,GetSaveProgressMonitor,The length of the statement  "	return GetStatusProgressMonitor (GettextCatalog.GetString ("Saving...")' Stock.StatusSolutionOperation' true' false' lockGui); " is 126.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,CreateConsole,The length of the statement  "	return (IConsole)GetOutputProgressMonitor ("MonoDevelop.Ide.ApplicationOutput"' GettextCatalog.GetString ("Application Output")' Stock.MessageLog' true' true); " is 159.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,CreateMonitorPad,The length of the statement  "		pad = IdeApp.Workbench.ShowPad (monitorPad' newPadId' title' basePadId + "/Center Bottom"' DockItemStatus.AutoHide' icon); " is 122.
Long Statement,MonoDevelop.Ide.Gui,ProgressMonitorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProgressMonitors.cs,CreateMonitorPad,The length of the statement  "		pad = IdeApp.Workbench.AddPad (monitorPad' newPadId' title' basePadId + "/Center Bottom"' DockItemStatus.AutoHide' icon); " is 121.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	TypeBuilder dataTypeBuilder = module.DefineType (typeNameBuilder + "_DelegateData_" + (typeCounter++)' TypeAttributes.Public' typeof(object)' Type.EmptyTypes); " is 159.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	ConstructorBuilder dataCtor = dataTypeBuilder.DefineConstructor (MethodAttributes.Public' CallingConventions.Standard' Type.EmptyTypes); " is 136.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	TypeBuilder typeBuilder = module.DefineType (typeNameBuilder + "_DelegateFactory_" + typeCounter' TypeAttributes.Public' typeof(object)' new Type[] { " is 149.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	ConstructorBuilder ctor = typeBuilder.DefineConstructor (MethodAttributes.Public' CallingConventions.Standard' Type.EmptyTypes); " is 128.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	MethodBuilder methodDispatch = typeBuilder.DefineMethod ("Dispatch"' MethodAttributes.Public' typeof(void)' new Type[] { " is 120.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	MethodBuilder methodProxyCall = typeBuilder.DefineMethod ("ProxyCall"' MethodAttributes.Public' invoke.ReturnType' paramTypes); " is 127.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetDelegateFactoryType,The length of the statement  "	MethodBuilder methodCreate = typeBuilder.DefineMethod ("Create"' MethodAttributes.Public | MethodAttributes.Virtual' typeof(Delegate)' new Type[] { " is 147.
Long Statement,MonoDevelop.Ide.Gui,SyncContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContext.cs,GetModuleBuilder,The length of the statement  "		module = asmBuilder.DefineDynamicModule ("MonoDevelop.DelegateGenerator.GeneratedAssembly"' "MonoDevelop.DelegateGenerator.GeneratedAssembly.dll"); " is 147.
Long Statement,MonoDevelop.Ide.Gui,SyncContextDispatchSink,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContextAttribute.cs,SyncProcessMessage,The length of the statement  "	if ((mm.MethodBase.Name == "FieldGetter" || mm.MethodBase.Name == "FieldSetter") && mm.MethodBase.DeclaringType == typeof(object)) { " is 132.
Long Statement,MonoDevelop.Ide.Gui,SyncContextDispatchSink,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\SyncContextAttribute.cs,GetRealMethod,The length of the statement  "				MethodBase met = t.GetMethod (mm.MethodName' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' (Type[])mm.MethodSignature' null); " is 155.
Long Statement,MonoDevelop.Ide.Gui,GtkProjectLoadProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ProjectLoadProgressMonitor.cs,ShouldMigrateProject,The length of the statement  "	var response = MessageService.AskQuestion (GettextCatalog.GetString ("Migrate Project?")' BrandingService.BrandApplicationName (GettextCatalog.GetString ("One or more projects must be migrated to a new format. " + "After migration' it will not be able to be opened in " + "older versions of MonoDevelop.\n\n" + "If you choose to back up the project before migration' a copy of the project " + "file will be saved in a 'backup' directory in the project directory."))' buttonIgnore' buttonMigrate' buttonBackupAndMigrate); " is 520.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,StartOpenAnimation,The length of the statement  "	new Animation (f => tab.WidthModifier = f).AddConcurrent (new Animation (f => tab.Opacity = f)' 0.0d' 0.2d).Commit (tab' "Open"' easing: Easing.CubicInOut); " is 156.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,StartCloseAnimation,The length of the statement  "	new Animation (f => tab.WidthModifier = f' tab.WidthModifier' 0).AddConcurrent (new Animation (f => tab.Opacity = f' tab.Opacity' 0)' 0.8d' 1.0d).Commit (tab' "Closing"' easing: Easing.CubicOut' finished: (f' a) =>  { " is 217.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnSizeAllocated,The length of the statement  "	NextButton.SizeAllocate (new Gdk.Rectangle (allocation.X + LeftBarPadding / 2' allocation.Y' LeftBarPadding / 2' height)); " is 122.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnMotionNotifyEvent,The length of the statement  "		if (t != null && t != notebook.CurrentTab && (((int)evnt.X > lastDragX && t.Index > notebook.CurrentTab.Index) || ((int)evnt.X < lastDragX && t.Index < notebook.CurrentTab.Index))) { " is 182.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnButtonReleaseEvent,The length of the statement  "		this.Animate ("EndDrag"' f => dragXProgress = f' 1.0d' 0.0d' easing: Easing.CubicOut' finished: (f' a) => draggingTab = false); " is 127.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,GetRenderOffset,The length of the statement  "			this.Animate ("ScrollTabs"' easing: Easing.CubicOut' start: renderOffset' end: targetOffset' callback: f => renderOffset = (int)f); " is 131.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawClosingTab,The length of the statement  "		return c => DrawTab (c' closingTab' Allocation' new Gdk.Rectangle (region.X' region.Y' tmp' region.Height)' false' false' false' CreateTabLayout (closingTab)); " is 159.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,Draw,The length of the statement  "			drawActive = c => DrawTab (c' tab' Allocation' new Gdk.Rectangle (tmp' y' width' Allocation.Height)' true' true' draggingTab' CreateTabLayout (tab)); " is 149.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,Draw,The length of the statement  "			drawCommands.Add (c => DrawTab (c' tab' Allocation' new Gdk.Rectangle (tmp' y' width' Allocation.Height)' highlighted' false' false' CreateTabLayout (tab))); " is 157.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,Draw,The length of the statement  "	// Redraw the dragging tab here to be sure its on top. We drew it before to get the sizing correct' this should be fixed. " is 121.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The length of the statement  "	var crect = new Gdk.Rectangle (tabBounds.Right - padding - CloseButtonSize + 3' tabBounds.Y + TopBarPadding + (ch - CloseButtonSize) / 2' CloseButtonSize' CloseButtonSize); " is 172.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The length of the statement  "	bool closeButtonHovered = tracker.Hovered && tab.CloseButtonAllocation.Contains (tracker.MousePosition) && tab.WidthModifier >= 1.0f; " is 133.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The length of the statement  "		DrawCloseButton (ctx' new Gdk.Point (crect.X + crect.Width / 2' crect.Y + crect.Height / 2)' closeButtonHovered' tab.Opacity' tab.DirtyStrength); " is 145.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The length of the statement  "	ctx.CurveTo (new PointD (x + smoothing' y)' new PointD (x - smoothing' y - height)' new PointD (x + halfLean' y - height)); " is 123.
Long Statement,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The length of the statement  "	ctx.CurveTo (new PointD (rightx + smoothing' y - height)' new PointD (rightx - smoothing' y)' new PointD (rightx + halfLean' y)); " is 129.
Long Statement,MonoDevelop.Ide.Gui,Styles,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Styles.cs,Blend,The length of the statement  "	return new Cairo.Color (color.R + ((targetColor.R - color.R) * factor)' color.G + ((targetColor.G - color.G) * factor)' color.B + ((targetColor.B - color.B) * factor)' color.A); " is 177.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateView,The length of the statement  "	col = view.AppendColumn (GettextCatalog.GetString ("Line")' view.TextRenderer' "text"' Columns.Line' "foreground-gdk"' Columns.Foreground' "weight"' Columns.Bold); " is 163.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateView,The length of the statement  "	col = view.AppendColumn (GettextCatalog.GetString ("Description")' view.TextRenderer' "text"' Columns.Description' "foreground-gdk"' Columns.Foreground' "weight"' Columns.Bold); " is 177.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateView,The length of the statement  "	col = view.AppendColumn (GettextCatalog.GetString ("File")' view.TextRenderer' "text"' Columns.File' "foreground-gdk"' Columns.Foreground' "weight"' Columns.Bold); " is 163.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateView,The length of the statement  "	col = view.AppendColumn (GettextCatalog.GetString ("Path")' view.TextRenderer' "text"' Columns.Path' "foreground-gdk"' Columns.Foreground' "weight"' Columns.Bold); " is 163.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateView,The length of the statement  "	PropertyService.PropertyChanged += DispatchService.GuiDispatch<EventHandler<PropertyChangedEventArgs>> (OnPropertyUpdated); " is 123.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,StoreColumnsVisibility,The length of the statement  "	string columns = String.Format ("{0};{1};{2};{3}"' view.Columns [(int)Columns.Line].Visible' view.Columns [(int)Columns.Description].Visible' view.Columns [(int)Columns.File].Visible' view.Columns [(int)Columns.Path].Visible); " is 226.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,UpdateCommentTags,The length of the statement  "			Task t = new Task (fileName' desc' tag.Region.BeginColumn' tag.Region.BeginLine' TaskSeverity.Information' priority' wob); " is 122.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,UpdateCommentTags,The length of the statement  "			if (oldTasks [j] != null && newTasks [i].Line == oldTasks [j].Line && newTasks [i].Column == oldTasks [j].Column && newTasks [i].Description == oldTasks [j].Description && newTasks [i].Priority == oldTasks [j].Priority) { " is 221.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,AddGeneratedTask,The length of the statement  "	store.AppendValues (t.Line' t.Description' tmpPath.FileName' tmpPath.ParentDirectory.FileName' t' GetColorByPriority (t.Priority)' (int)Pango.Weight.Bold); " is 155.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var copy = new Gtk.Action ("copy"' GettextCatalog.GetString ("_Copy")' GettextCatalog.GetString ("Copy comment task")' Gtk.Stock.Copy); " is 135.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var jump = new Gtk.Action ("jump"' GettextCatalog.GetString ("_Go to")' GettextCatalog.GetString ("Go to comment task")' Gtk.Stock.JumpTo); " is 139.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var delete = new Gtk.Action ("delete"' GettextCatalog.GetString ("_Delete")' GettextCatalog.GetString ("Delete comment task")' Gtk.Stock.Delete); " is 145.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var columnLine = new ToggleAction ("columnLine"' GettextCatalog.GetString ("Line")' GettextCatalog.GetString ("Toggle visibility of Line column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var columnDescription = new ToggleAction ("columnDescription"' GettextCatalog.GetString ("Description")' GettextCatalog.GetString ("Toggle visibility of Description column")' null); " is 181.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var columnFile = new ToggleAction ("columnFile"' GettextCatalog.GetString ("File")' GettextCatalog.GetString ("Toggle visibility of File column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	var columnPath = new ToggleAction ("columnPath"' GettextCatalog.GetString ("Path")' GettextCatalog.GetString ("Toggle visibility of Path column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "	string uiStr = "<ui><popup name='popup'>" + "<menuitem action='copy'/>" + "<menuitem action='jump'/>" + "<menuitem action='delete'/>" + "<separator/>" + "<menu action='columns'>" + "<menuitem action='columnLine' />" + "<menuitem action='columnDescription' />" + "<menuitem action='columnFile' />" + "<menuitem action='columnPath' />" + "</menu>" + "</popup></ui>"; " is 364.
Long Statement,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,CreateMenu,The length of the statement  "		copy.Sensitive = jump.Sensitive = delete.Sensitive = view.Selection != null && view.Selection.CountSelectedRows () > 0 && (columnLine.Active || columnDescription.Active || columnFile.Active || columnPath.Active); " is 212.
Long Statement,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,UserTasksChanged,The length of the statement  "		store.AppendValues (GettextCatalog.GetString (Enum.GetName (typeof(TaskPriority)' task.Priority))' task.Completed' task.Description' task' GetColorByPriority (task.Priority)' task.Completed ? (int)Pango.Weight.Light : (int)Pango.Weight.Bold); " is 242.
Long Statement,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,NewUserTaskClicked,The length of the statement  "	TreeIter iter = store.AppendValues (GettextCatalog.GetString (Enum.GetName (typeof(TaskPriority)' task.Priority))' task.Completed' task.Description' task' GetColorByPriority (task.Priority)' task.Completed ? (int)Pango.Weight.Light : (int)Pango.Weight.Bold); " is 258.
Long Statement,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,PrioirtySortFunc,The length of the statement  "	TaskPriority prio1 = (TaskPriority)Enum.Parse (typeof(TaskPriority)' (string)model.GetValue (iter1' (int)Columns.Priority)); " is 124.
Long Statement,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,PrioirtySortFunc,The length of the statement  "	TaskPriority prio2 = (TaskPriority)Enum.Parse (typeof(TaskPriority)' (string)model.GetValue (iter2' (int)Columns.Priority)); " is 124.
Long Statement,MonoDevelop.Ide.Tasks,TaskStore,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\TaskStore.cs,GetPreviousLocation,The length of the statement  "	while (n != -1 && n < tasks.Count && (iteratingSeverity != tasks [n].Severity || string.IsNullOrEmpty (tasks [n].FileName))) " is 124.
Long Statement,MonoDevelop.Ide.ExternalTools,ExternalToolPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolPanel.cs,MoveUpButtonClicked,The length of the statement  "		((ListStore)toolListBox.Model).GetIter (out selectedItem' (TreePath)toolListBox.Selection.GetSelectedRows (out ls) [0]); " is 120.
Long Statement,MonoDevelop.Ide.ExternalTools,ExternalToolPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolPanel.cs,MoveDownButtonClicked,The length of the statement  "		((ListStore)toolListBox.Model).GetIter (out selectedItem' (TreePath)toolListBox.Selection.GetSelectedRows (out ls) [0]); " is 120.
Long Statement,MonoDevelop.Ide.ExternalTools,ExternalToolPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolPanel.cs,GetSelectedIndex,The length of the statement  "		((ListStore)toolListBox.Model).GetIter (out selectedIter' (TreePath)toolListBox.Selection.GetSelectedRows (out lv) [0]); " is 120.
Long Statement,MonoDevelop.Ide.ExternalTools,ExternalToolPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolPanel.cs,Validate,The length of the statement  "				MessageService.ShowError (String.Format (GettextCatalog.GetString ("The command of tool \"{0}\" is not set.")' tool.MenuCommand)); " is 130.
Long Statement,MonoDevelop.Ide.ExternalTools,ExternalToolPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolPanel.cs,Validate,The length of the statement  "				MessageService.ShowError (String.Format (GettextCatalog.GetString ("The command of tool \"{0}\" is invalid.")' tool.MenuCommand)); " is 130.
Long Statement,MonoDevelop.Ide.ExternalTools,ExternalToolPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolPanel.cs,Validate,The length of the statement  "				MessageService.ShowError (String.Format (GettextCatalog.GetString ("The working directory of tool \"{0}\" is invalid.")' tool.MenuCommand)); " is 140.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,ToString,The length of the statement  "	return string.Format ("[CodeTemplate: Group={0}' Shortcut={1}' CodeTemplateType={2}' MimeType={3}' Description={4}' Code={5}]"' Group' Shortcut' CodeTemplateType' MimeType' Description' Code); " is 192.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,InsertTemplateContents,The length of the statement  "				var translatedOffset = oldVersion.MoveOffsetTo (data.Version' template.InsertPosition + segment.Offset) - template.InsertPosition; " is 130.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,Read,The length of the statement  "					result.CodeTemplateContext = (CodeTemplateContext)Enum.Parse (typeof(CodeTemplateContext)' reader.ReadElementContentAsString ()); " is 129.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,Read,The length of the statement  "					result.CodeTemplateType = (CodeTemplateType)Enum.Parse (typeof(CodeTemplateType)' reader.ReadElementContentAsString ()); " is 120.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateService.cs,AddCompletionDataForMime,The length of the statement  "		list.Add (new CompletionData (ct.Shortcut' ct.Icon' ct.Shortcut + Environment.NewLine + GettextCatalog.GetString (ct.Description))); " is 132.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateService.cs,LoadTemplates,The length of the statement  "	List<CodeTemplate> builtinTemplates = LoadTemplates (XmlTextReader.Create (typeof(CodeTemplateService).Assembly.GetManifestResourceStream (ManifestResourceName))); " is 163.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,ButtonRemoveClicked,The length of the statement  "			if (MessageService.AskQuestion (GettextCatalog.GetString ("Remove template")' GettextCatalog.GetString ("Are you sure you want to remove this template?")' AlertButton.Cancel' AlertButton.Remove) == AlertButton.Remove) { " is 219.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,RenderIcon,The length of the statement  "		pixbufCellRenderer.Pixbuf = ImageService.GetPixbuf (treeviewCodeTemplates.GetRowExpanded (templateStore.GetPath (iter)) ? MonoDevelop.Ide.Gui.Stock.OpenFolder : MonoDevelop.Ide.Gui.Stock.ClosedFolder' IconSize.Menu); " is 216.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,RenderTemplateName,The length of the statement  "		templateCellRenderer.Markup = GLib.Markup.EscapeText (template.Shortcut) + " (" + GLib.Markup.EscapeText (GettextCatalog.GetString (template.Description)) + ")"; " is 161.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,RenderTemplateName,The length of the statement  "		templateCellRenderer.Markup = GLib.Markup.EscapeText (template.Shortcut) + " <span foreground=\"" + GetColorString (Style.Text (StateType.Insensitive)) + "\">(" + GLib.Markup.EscapeText (GettextCatalog.GetString (template.Description)) + ")</span>"; " is 249.
Long Statement,MonoDevelop.Ide.CodeTemplates,CodeTemplateVariable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateVariable.cs,ToString,The length of the statement  "	return string.Format ("[CodeTemplateVariable: Name={0}' Default={1}' ToolTip={2}' Function={3}]"' Name' Default' ToolTip' Function); " is 132.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetCurrentClassName,The length of the statement  "		type = CurrentContext.ParsedDocument.GetInnermostTypeDefinition (CurrentContext.InsertPosition.Line' CurrentContext.InsertPosition.Column); " is 139.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetConstructorModifier,The length of the statement  "		type = CurrentContext.ParsedDocument.GetInnermostTypeDefinition (CurrentContext.InsertPosition.Line' CurrentContext.InsertPosition.Column); " is 139.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetLengthProperty,The length of the statement  "		var result = textEditorResolver.GetLanguageItem (CurrentContext.Document.Editor.Document.LocationToOffset (CurrentContext.InsertPosition)' var); " is 144.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetCollections,The length of the statement  "			list = ext.CodeCompletionCommand (CurrentContext.Document.GetContent<MonoDevelop.Ide.CodeCompletion.ICompletionWidget> ().CurrentCodeCompletionContext); " is 152.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetSimpleTypeName,The length of the statement  "	var type = new GetClassTypeReference (ns' name' 0).Resolve (new SimpleTypeResolveContext (CurrentContext.Document.Compilation.MainAssembly)); " is 141.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,GetSimpleTypeName,The length of the statement  "		type = new GetClassTypeReference (ns' name + "Attribute"' 0).Resolve (new SimpleTypeResolveContext (CurrentContext.Document.Compilation.MainAssembly)); " is 151.
Long Statement,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The length of the statement  "		return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"'))); " is 162.
Long Statement,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,LoadFileTemplate,The length of the statement  "			throw new InvalidOperationException (string.Format ("The file template class '{0}' must be a subclass of MonoDevelop.Ide.Templates.FileTemplate"' xmlNodeConfig ["Type"].InnerText)); " is 181.
Long Statement,MonoDevelop.Ide.Templates,FileTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplate.cs,OnExtensionChanged,The length of the statement  "			LoggingService.LogError ("Error loading template id {0} in addin {1}:\n{2}"' extId ?? "(null)"' addinId ?? "(null)"' e.ToString ()); " is 132.
Long Statement,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,CreateProjectDescriptor,The length of the statement  "			ProjectReference projectReference = new ProjectReference ((ReferenceType)Enum.Parse (typeof(ReferenceType)' refType)' elem.GetAttribute ("refto")); " is 147.
Long Statement,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,InitializeItem,The length of the statement  "		if (policyParent.ParentSolution != null && !policyParent.ParentSolution.FileFormat.SupportsFramework (dnp.TargetFramework)) { " is 125.
Long Statement,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,InitializeItem,The length of the statement  "			ProjectFile projectFile = new ProjectFile (resourceTemplate.SaveFile (policyParent' project' defaultLanguage' project.BaseDirectory' null)); " is 140.
Long Statement,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,SetClosestSupportedTargetFramework,The length of the statement  "	var candidates = Runtime.SystemAssemblyService.GetTargetFrameworks ().Where (fx => //only frameworks with the same ID' else version comparisons are meaningless " is 159.
Long Statement,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,SetClosestSupportedTargetFramework,The length of the statement  "	project.SupportsFramework (fx) && format.SupportsFramework (fx))//FIXME: string comparisons aren't a valid way to compare profiles' but it works w/released .NET versions " is 169.
Long Statement,MonoDevelop.Ide.Templates,ProjectDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectDescriptor.cs,SetClosestSupportedTargetFramework,The length of the statement  "	TargetFramework newFx = candidates.FirstOrDefault (fx => string.CompareOrdinal (fx.Id.Version' curFx.Id.Version) > 0) ?? candidates.LastOrDefault (); " is 149.
Long Statement,MonoDevelop.Ide.Templates,ProjectTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ProjectTemplate.cs,OnExtensionChanged,The length of the statement  "			LoggingService.LogError ("Error loading template id {0} in addin {1}:\n{2}"' extId ?? "(null)"' addinId ?? "(null)"' e.ToString ()); " is 132.
Long Statement,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,ContainsReference,The length of the statement  "		if (pr.ReferenceType == ReferenceType.Package && (pr.Reference == aname || pr.Reference.StartsWith (aname + "'")) || pr.ReferenceType != ReferenceType.Package && pr.Reference.Contains (aname)) " is 192.
Long Statement,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,SaveFile,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("File already exists")' GettextCatalog.GetString ("File {0} already exists. Do you want to overwrite\nthe existing file?"' file)' AlertButton.OverwriteFile)) { " is 214.
Long Statement,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,CreateFileContent,The length of the statement  "	TextStylePolicy textPolicy = policyParent != null ? policyParent.Policies.Get<TextStylePolicy> ("text/plain") : MonoDevelop.Projects.Policies.PolicyService.GetDefaultPolicy<TextStylePolicy> ("text/plain"); " is 205.
Long Statement,MonoDevelop.Ide.Templates,CodeTranslationFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeTranslationFileDescriptionTemplate.cs,CreateContent,The length of the statement  "			throw new InvalidOperationException ("Invalid Code Translation template: the CodeDomProvider of the source language '" + language + "' has not implemented the Parse method."); " is 175.
Long Statement,MonoDevelop.Ide.Templates,CodeTranslationFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeTranslationFileDescriptionTemplate.cs,ModifyTags,The length of the statement  "	//	throw new InvalidOperationException ("CodeTranslationFileDescriptionTemplate can only be used with a DotNetProject"); " is 120.
Long Statement,MonoDevelop.Ide.Templates,SolutionItemFeatures,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ISolutionItemFeature.cs,GetFeatures,The length of the statement  "	foreach (ISolutionItemFeature e in AddinManager.GetExtensionObjects ("/MonoDevelop/Ide/ProjectFeatures"' typeof(ISolutionItemFeature)' true)) { " is 143.
Long Statement,MonoDevelop.Ide.Templates,PartialTypeFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\PartialTypeFileTemplateCondition.cs,Load,The length of the statement  "		filter = (PartialTypeRequirement)Enum.Parse (typeof(PartialTypeRequirement)' element.GetAttribute ("Requirement")' true); " is 121.
Long Statement,MonoDevelop.Ide.Templates,ParentProjectFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ParentProjectFileTemplateCondition.cs,ShouldEnableFor,The length of the statement  "			string requiredFile = (f [0] == '/') ? Path.Combine (proj.BaseDirectory' f.Substring (1)) : Path.Combine (projectPath' f); " is 122.
Long Statement,MonoDevelop.Ide.Templates,ParentProjectFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ParentProjectFileTemplateCondition.cs,ShouldEnableFor,The length of the statement  "			string excludedFile = (f [0] == '/') ? Path.Combine (proj.BaseDirectory' f.Substring (1)) : Path.Combine (projectPath' f); " is 122.
Long Statement,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,KeyPress,The length of the statement  "	var ignoreMods = Gdk.ModifierType.ControlMask | Gdk.ModifierType.MetaMask | Gdk.ModifierType.Mod1Mask | Gdk.ModifierType.SuperMask; " is 131.
Long Statement,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,KeyPress,The length of the statement  "		if (triggerWordLength > 0 && (triggerWordLength < Editor.Caret.Offset || (triggerWordLength == 1 && Editor.Caret.Offset == 1))) { " is 129.
Long Statement,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,RunShowCodeTemplatesWindow,The length of the statement  "	completionList = Document.Editor.IsSomethingSelected ? ShowCodeSurroundingsCommand (ctx) : ShowCodeTemplatesCommand (ctx); " is 122.
Long Statement,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,OnUpdateShowCodeTemplatesWindow,The length of the statement  "		completionList = Document.Editor.IsSomethingSelected ? ShowCodeSurroundingsCommand (ctx) : ShowCodeTemplatesCommand (ctx); " is 122.
Long Statement,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,OnUpdateShowCodeTemplatesWindow,The length of the statement  "		info.Text = Document.Editor.IsSomethingSelected ? GettextCatalog.GetString ("_Surround With...") : GettextCatalog.GetString ("I_nsert Template..."); " is 148.
Long Statement,MonoDevelop.Ide.Gui.Content,DocumentStateTracker,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\DocumentStateTracker.cs,ConsoleWrite,The length of the statement  "		System.Console.WriteLine ("\nError: Exception while formatting '{0}' for an array with {1} elements"' message' args == null ? 0 : args.Length); " is 143.
Long Statement,MonoDevelop.Ide.Gui.Content,TextStylePolicy,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\TextStylePolicy.cs,Equals,The length of the statement  "	return other != null && other.FileWidth == FileWidth && other.TabWidth == TabWidth && other.TabsToSpaces == TabsToSpaces && other.NoTabsAfterNonTabs == NoTabsAfterNonTabs && other.RemoveTrailingWhitespace == RemoveTrailingWhitespace && other.EolMarker == EolMarker && other.IndentWidth == IndentWidth; " is 301.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The length of the statement  "	foreach (var assembly in AppDomain.CurrentDomain.GetAssemblies ().Where (a => !a.IsDynamic).OrderBy (a => a.FullName)) { " is 120.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The length of the statement  "			bitmap.RenderToDrawable (GdkWindow' new Gdk.GC (GdkWindow)' 0' 0' 0' 0' bitmap.Width' bitmap.Height' Gdk.RgbDither.None' 0' 0); " is 127.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FillViewers,The length of the statement  "	if (IdeApp.Services.ProjectService.IsWorkspaceItemFile (Filename) || IdeApp.Services.ProjectService.IsSolutionItemFile (Filename)) { " is 132.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FillViewers,The length of the statement  "		if (!(Filename.EndsWith (".exe"' StringComparison.OrdinalIgnoreCase) || Filename.EndsWith (".dll"' StringComparison.OrdinalIgnoreCase))) " is 136.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,UpdateExtraWidgets,The length of the statement  "	if (IdeApp.Services.ProjectService.IsWorkspaceItemFile (Filename) || IdeApp.Services.ProjectService.IsSolutionItemFile (Filename)) { " is 132.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,MimeTypePolicyOptionsSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MimeTypePolicyOptionsSection.cs,CreatePanelWidget,The length of the statement  "	Label wl = new Label (GettextCatalog.GetString ("Changes done in this section will only be applied to new projects. " + "Settings for existing projects can be modified in the project (or solution) options dialog.")); " is 216.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,MultiConfigItemOptionsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiConfigItemOptionsPanel.cs,Initialize,The length of the statement  "		throw new System.InvalidOperationException ("MultiConfigItemOptionsPanel can only be used in options dialogs of type MultiConfigItemOptionsDialog. Panel type: " + GetType ()); " is 175.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,MultiConfigItemOptionsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiConfigItemOptionsPanel.cs,UpdateSelection,The length of the statement  "	if (allowMixedConfigurations && ConfigurationsAreEqual (FilterConfigurations (dialog.ConfigurationData.Configurations))) { " is 122.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,PolicyOptionsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\PolicyOptionsPanel.cs,CreatePanelWidget,The length of the statement  "	Label wl = new Label (GettextCatalog.GetString ("Changes done in this section will only be applied to new projects. " + "Settings for existing projects can be modified in the project (or solution) options dialog.")); " is 216.
Long Statement,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,TextViewKeyPressed,The length of the statement  "	if (args.Event.State.HasFlag (Gdk.ModifierType.ControlMask) && (args.Event.Key == Gdk.Key.c || args.Event.Key == Gdk.Key.C)) { " is 126.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,TasksPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\TasksOptionsPanel.cs,Validate,The length of the statement  "		buttonChange.Sensitive = ((entryToken.Text.Length > 1) && (entryToken.Text != selectedToken) && !found) || comboPriority.Active != selectedPriority ? true : false; " is 163.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,Refilter,The length of the statement  "			bool visible = allVisible || IsSearchMatch ((string)keyStore.GetValue (iter' labelCol)) || IsSearchMatch ((string)keyStore.GetValue (iter' descCol)) || IsSearchMatch ((string)keyStore.GetValue (iter' bindingCol)); " is 213.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,CreatePanelWidget,The length of the statement  "		keyStore.AppendValues (icat' cmd' label' cmd.AccelKey != null ? cmd.AccelKey : String.Empty' cmd.Description' (int)Pango.Weight.Normal' (string)cmd.Icon' true' true); " is 166.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,UpdateWarningLabel,The length of the statement  "		labelMessage.Markup = "<b>" + GettextCatalog.GetString ("This key combination is already bound to command '{0}'"' bindings [0].Text.Replace ("_"' "")) + "</b>"; " is 160.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,IDEStyleOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\IDEStyleOptionsPanel.cs,Store,The length of the statement  "		MessageService.ShowMessage (GettextCatalog.GetString ("The user interface language change will take effect the next time you start {0}"' BrandingService.ApplicationName)); " is 171.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,AuthorInformationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\AuthorInformationPanel.cs,Get,The length of the statement  "	return checkCustom.Active ? new AuthorInformation (nameEntry.Text' emailEntry.Text' copyrightEntry.Text' companyEntry.Text' trademarkEntry.Text) : null; " is 152.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,AuthorInformationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\AuthorInformationPanel.cs,UseDefaultToggled,The length of the statement  "		info = new AuthorInformation (nameEntry.Text' emailEntry.Text' copyrightEntry.Text' companyEntry.Text' trademarkEntry.Text); " is 124.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,TextStylePolicyPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\TextStylePolicyPanel.cs,GetPolicy,The length of the statement  "	return new TextStylePolicy ((int)columnWidthSpin.Value' (int)tabWidthSpin.Value' (int)indentWidthSpin.Value' tabsToSpaceCheck.Active' !tabsAfterNonTabsCheck.Active' removeTrailingWhitespaceCheck.Active' (EolMarker)lineEndingCombo.Active); " is 238.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,MonoRuntimePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\MonoRuntimePanel.cs,GetProgramFilesX86,The length of the statement  "	return Environment.GetFolderPath (IntPtr.Size == 8 ? Environment.SpecialFolder.ProgramFilesX86 : Environment.SpecialFolder.ProgramFiles); " is 137.
Long Statement,MonoDevelop.Ide.Gui.OptionPanels,MonoRuntimePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\MonoRuntimePanel.cs,OnButtonAddClicked,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("Mono runtime not found")' GettextCatalog.GetString ("Please provide a valid directory prefix where mono is installed (for example' /usr)")); " is 193.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,StoreColumnsVisibility,The length of the statement  "	string columns = String.Format ("{0};{1};{2};{3};{4};{5};{6}"' view.Columns [VisibleColumns.Type].Visible' view.Columns [VisibleColumns.Marked].Visible' view.Columns [VisibleColumns.Line].Visible' view.Columns [VisibleColumns.Description].Visible' view.Columns [VisibleColumns.File].Visible' view.Columns [VisibleColumns.Project].Visible' view.Columns [VisibleColumns.Path].Visible); " is 383.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var help = new Gtk.Action ("help"' GettextCatalog.GetString ("Show Error Reference")' GettextCatalog.GetString ("Show Error Reference")' Gtk.Stock.Help); " is 153.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var copy = new Gtk.Action ("copy"' GettextCatalog.GetString ("_Copy")' GettextCatalog.GetString ("Copy task")' Gtk.Stock.Copy); " is 127.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var jump = new Gtk.Action ("jump"' GettextCatalog.GetString ("_Go to")' GettextCatalog.GetString ("Go to task")' Gtk.Stock.JumpTo); " is 131.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnType = new ToggleAction ("columnType"' GettextCatalog.GetString ("Type")' GettextCatalog.GetString ("Toggle visibility of Type column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnValidity = new ToggleAction ("columnValidity"' GettextCatalog.GetString ("Validity")' GettextCatalog.GetString ("Toggle visibility of Validity column")' null); " is 169.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnLine = new ToggleAction ("columnLine"' GettextCatalog.GetString ("Line")' GettextCatalog.GetString ("Toggle visibility of Line column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnDescription = new ToggleAction ("columnDescription"' GettextCatalog.GetString ("Description")' GettextCatalog.GetString ("Toggle visibility of Description column")' null); " is 181.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnFile = new ToggleAction ("columnFile"' GettextCatalog.GetString ("File")' GettextCatalog.GetString ("Toggle visibility of File column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnProject = new ToggleAction ("columnProject"' GettextCatalog.GetString ("Project")' GettextCatalog.GetString ("Toggle visibility of Project column")' null); " is 165.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	var columnPath = new ToggleAction ("columnPath"' GettextCatalog.GetString ("Path")' GettextCatalog.GetString ("Toggle visibility of Path column")' null); " is 153.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "	string uiStr = "<ui><popup name='popup'>" + "<menuitem action='help'/>" + "<menuitem action='copy'/>" + "<menuitem action='jump'/>" + "<separator/>" + "<menu action='columns'>" + "<menuitem action='columnType' />" + "<menuitem action='columnValidity' />" + "<menuitem action='columnLine' />" + "<menuitem action='columnDescription' />" + "<menuitem action='columnFile' />" + "<menuitem action='columnProject' />" + "<menuitem action='columnPath' />" + "</menu>" + "</popup></ui>"; " is 480.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateMenu,The length of the statement  "		help.Sensitive = copy.Sensitive = jump.Sensitive = view.Selection != null && view.Selection.CountSelectedRows () > 0 && (columnType.Active || columnValidity.Active || columnLine.Active || columnDescription.Active || columnFile.Active || columnPath.Active); " is 256.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,UpdateErrorsNum,The length of the statement  "	errorBtn.Label = " " + string.Format (GettextCatalog.GetPluralString ("{0} Error"' "{0} Errors"' errorCount)' errorCount); " is 122.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,UpdateWarningsNum,The length of the statement  "	warnBtn.Label = " " + string.Format (GettextCatalog.GetPluralString ("{0} Warning"' "{0} Warnings"' warningCount)' warningCount); " is 129.
Long Statement,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,UpdateMessagesNum,The length of the statement  "	msgBtn.Label = " " + string.Format (GettextCatalog.GetPluralString ("{0} Message"' "{0} Messages"' infoCount)' infoCount); " is 122.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderNodeBuilder.cs,RenameItem,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("Solution name may not contain any of the following characters: {0}"' "'' (' )' \"' {' }' |")); " is 147.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderNodeBuilder.cs,OnNodeDrop,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to move the item '{0}' to the solution folder '{1}'?"' it.Name' folder.Name)' AlertButton.Move)) " is 174.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderNodeBuilder.cs,DeleteItem,The length of the statement  "	bool yes = MessageService.Confirm (GettextCatalog.GetString ("Do you really want to remove the folder '{0}' from '{1}'?"' folder.Name' parent.Name)' AlertButton.Remove); " is 169.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,GetFolderContent,The length of the statement  "			dir = file.IsLink ? project.BaseDirectory.Combine (file.ProjectVirtualPath).ParentDirectory : file.FilePath.ParentDirectory; " is 124.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,CanDropNode,The length of the statement  "		var srcDir = (file.Project != null && file.IsLink) ? file.Project.BaseDirectory.Combine (file.ProjectVirtualPath) : file.FilePath.ParentDirectory; " is 146.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				q = GettextCatalog.GetString ("Do you really want to move the folder '{0}' to the root folder of project '{1}'?"' what' targetProject.Name); " is 140.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				q = GettextCatalog.GetString ("Do you really want to move the folder '{0}' to the folder '{1}'?"' what' targetDirectory.FileName); " is 130.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				q = GettextCatalog.GetString ("Do you really want to copy the folder '{0}' to the root folder of project '{1}'?"' what' targetProject.Name); " is 140.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				q = GettextCatalog.GetString ("Do you really want to copy the folder '{0}' to the folder '{1}'?"' what' targetDirectory.FileName); " is 130.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				if (!MessageService.Confirm (GettextCatalog.GetString ("The file '{0}' already exists. Do you want to overwrite it?"' file.FileName)' AlertButton.OverwriteFile)) " is 161.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				question = GettextCatalog.GetString ("Do you want to save the following files before the move operation?\n\n{0}"' sb.ToString ()); " is 130.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "				question = GettextCatalog.GetString ("Do you want to save the following files before the copy operation?\n\n{0}"' sb.ToString ()); " is 130.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,DropNode,The length of the statement  "	using (var monitor = IdeApp.Workbench.ProgressMonitors.GetStatusProgressMonitor (opText' Stock.StatusSolutionOperation' true)) { " is 128.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,AddFilesFromFolder,The length of the statement  "	var impdlg = new IncludeNewFilesDialog (GettextCatalog.GetString ("Select files to add from {0}"' srcRoot.FileName)' srcRoot); " is 126.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,AddFilesFromFolder,The length of the statement  "	var added = IdeApp.ProjectOperations.AddFilesToProject (project' srcFiles.ToArray ()' targetFiles.ToArray ()' null).Any (); " is 123.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,AddExistingFolder,The length of the statement  "		MessageService.ShowWarning (GettextCatalog.GetString ("There is already a file with the name '{0}' in the target directory"' srcRoot.FileName)); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,AddExistingFolder,The length of the statement  "			MessageService.ShowWarning (GettextCatalog.GetString ("There is already a link with the name '{0}' in the target directory"' srcRoot.FileName)); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,AddExistingFolder,The length of the statement  "	var impdlg = new IncludeNewFilesDialog (GettextCatalog.GetString ("Select files to add from {0}"' srcRoot.FileName)' srcRoot.ParentDirectory); " is 142.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,GetParentObject,The length of the statement  "	FilePath dir = !file.IsLink ? file.FilePath.ParentDirectory : file.Project.BaseDirectory.Combine (file.ProjectVirtualPath).ParentDirectory; " is 139.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,RenameItem,The length of the statement  "			MessageService.ShowWarning (GettextCatalog.GetString ("The name you have chosen contains illegal characters. Please choose a different name.")); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,RenameItem,The length of the statement  "			MessageService.ShowWarning (GettextCatalog.GetString ("File or directory name is already in use. Please choose a different one.")); " is 131.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,RenameItem,The length of the statement  "		MessageService.ShowWarning (GettextCatalog.GetString ("The name you have chosen contains illegal characters. Please choose a different name.")); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,Drop,The length of the statement  "			if (!MessageService.Confirm (GettextCatalog.GetString ("The file '{0}' already exists. Do you want to overwrite it?"' targetPath.FileName)' AlertButton.OverwriteFile)) " is 167.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,Drop,The length of the statement  "		using (var monitor = IdeApp.Workbench.ProgressMonitors.GetStatusProgressMonitor (opText' Stock.StatusSolutionOperation' true)) " is 126.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "	secondaryText = GettextCatalog.GetString ("The Delete option permanently removes the file from your hard disk. " + "Click Remove from Project if you only want to remove it from your current solution."); " is 202.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "			question = GettextCatalog.GetString ("Are you sure you want to remove the file {0} and " + "its code-behind children from project {1}?"' Path.GetFileName (files [0].Name)' files [0].Project.Name); " is 196.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "			question = GettextCatalog.GetString ("Are you sure you want to remove the selected files and " + "their code-behind children from the project?"); " is 145.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "			question = GettextCatalog.GetString ("Are you sure you want to remove file {0} from project {1}?"' Path.GetFileName (files [0].Name)' files [0].Project.Name); " is 158.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "	AlertButton result = MessageService.AskQuestion (question' secondaryText' AlertButton.Delete' AlertButton.Cancel' removeFromProject); " is 133.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,RenameItem,The length of the statement  "				MessageService.ShowWarning (GettextCatalog.GetString ("The name you have chosen contains illegal characters. Please choose a different name.")); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,RenameItem,The length of the statement  "				MessageService.ShowWarning (GettextCatalog.GetString ("File or directory name is already in use. Please choose a different one.")); " is 131.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,RenameItem,The length of the statement  "			MessageService.ShowWarning (GettextCatalog.GetString ("The name you have chosen contains illegal characters. Please choose a different name.")); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "		SecondaryText = GettextCatalog.GetString ("The Delete option permanently removes the directory and any files it contains from your hard disk. " + "Click Remove from Project if you only want to remove it from your current solution.") " is 232.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "		SecondaryText = GettextCatalog.GetString ("The directory and any files it contains will be permanintly removed from your hard disk. ") " is 134.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "			question.Text = GettextCatalog.GetString ("Are you sure you want to remove directory {0} from project {1}?"' folder.Name' project.Name); " is 136.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "				MessageService.ShowError (GettextCatalog.GetString ("The folder {0} could not be deleted from disk: {1}"' folder.Path' ex.Message)); " is 132.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFolderCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFolderNodeBuilder.cs,PathExistsInProject,The length of the statement  "		if (f.Name.StartsWith (basePath) && (f.Name.Length == basePath.Length || f.Name [basePath.Length] == Path.DirectorySeparatorChar)) " is 130.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,Initialize,The length of the statement  "	filePropertyChangedHandler = (ProjectFileEventHandler)DispatchService.GuiDispatch (new ProjectFileEventHandler (OnFilePropertyChanged)); " is 136.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,Initialize,The length of the statement  "	fileRenamedHandler = (ProjectFileRenamedEventHandler)DispatchService.GuiDispatch (new ProjectFileRenamedEventHandler (OnRenameFile)); " is 133.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,Initialize,The length of the statement  "	projectChanged = (SolutionItemModifiedEventHandler)DispatchService.GuiDispatch (new SolutionItemModifiedEventHandler (OnProjectModified)); " is 138.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The length of the statement  "		label = GettextCatalog.GetString ("{0} <span foreground='red' size='small'>(Unknown language '{1}')</span>"' escapedProjectName' ((DotNetProject)p).LanguageName); " is 162.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The length of the statement  "		label = GettextCatalog.GetString ("{0} <span foreground='red' size='small'>(Unknown project type)</span>"' escapedProjectName); " is 127.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The length of the statement  "		label = missingConfig ? "<span foreground='red'>" + label + " <small>(invalid configuration mapping)</small></span>" : "<span foreground='gray'>" + label + " <small>(not built in active configuration)</small></span>"; " is 217.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,AddFile,The length of the statement  "	string filePath = file.IsLink ? project.BaseDirectory.Combine (file.ProjectVirtualPath).ParentDirectory : file.FilePath.ParentDirectory; " is 136.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,RemoveFile,The length of the statement  "			string parentPath = file.IsLink ? project.BaseDirectory.Combine (file.Link.IsNullOrEmpty ? file.FilePath.FileName : file.Link.ToString ()).ParentDirectory : file.FilePath.ParentDirectory; " is 187.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,RemoveFile,The length of the statement  "		if (!Directory.Exists (f.Path) && !project.Files.GetFilesInVirtualPath (f.Path.ToRelative (project.BaseDirectory)).Any ()) " is 122.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,OnFilePropertyChanged,The length of the statement  "	foreach (var project in e.Where (x => propertiesThatAffectDisplay.Contains (x.Property)).Select (x => x.Project).Distinct ()) { " is 127.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectReferenceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectReferenceFolderNodeBuilder.cs,HasChildNodes,The length of the statement  "	return ((ProjectReferenceCollection)dataObject).Count > 0 || builder.GetParentDataItem (typeof(DotNetProject)' false) is PortableDotNetProject; " is 143.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,Initialize,The length of the statement  "	createdHandler = (EventHandler<FileEventArgs>)DispatchService.GuiDispatch (new EventHandler<FileEventArgs> (OnSystemFileAdded)); " is 128.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,Initialize,The length of the statement  "	deletedHandler = (EventHandler<FileEventArgs>)DispatchService.GuiDispatch (new EventHandler<FileEventArgs> (OnSystemFileDeleted)); " is 130.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,Initialize,The length of the statement  "	renamedHandler = (EventHandler<FileCopyEventArgs>)DispatchService.GuiDispatch (new EventHandler<FileCopyEventArgs> (OnSystemFileRenamed)); " is 138.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,OnNodeDrop,The length of the statement  "	using (IProgressMonitor monitor = IdeApp.Workbench.ProgressMonitors.GetStatusProgressMonitor (GettextCatalog.GetString ("Copying files...")' Stock.StatusSolutionOperation' true)) { " is 180.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,RenameItem,The length of the statement  "				MessageService.ShowWarning (GettextCatalog.GetString ("The name you have chosen contains illegal characters. Please choose a different name.")); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,RenameItem,The length of the statement  "				MessageService.ShowWarning (GettextCatalog.GetString ("File or directory name is already in use. Please choose a different one.")); " is 131.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,RenameItem,The length of the statement  "			MessageService.ShowWarning (GettextCatalog.GetString ("The name you have chosen contains illegal characters. Please choose a different name.")); " is 144.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to permanently delete the file {0}?"' file.Path)' AlertButton.Delete)) " is 148.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to permanently delete all selected files?")' AlertButton.Delete)) " is 143.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,UnknownEntryNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\UnknownEntryNodeBuilder.cs,BuildNode,The length of the statement  "		label = GettextCatalog.GetString ("{0} <span foreground='red' size='small'>(Load failed)</span>"' GLib.Markup.EscapeText (entry.Name)); " is 135.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,UnknownEntryCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\UnknownEntryNodeBuilder.cs,DeleteItem,The length of the statement  "	bool yes = MessageService.Confirm (GettextCatalog.GetString ("Do you really want to remove project '{0}' from solution '{1}'"' item.FileName' cmb.Name)' AlertButton.Remove); " is 173.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionNodeBuilder.cs,OnNodeDrop,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to move the item '{0}' to the root node of the solution?"' it.Name)' AlertButton.Move)) " is 165.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "		if (MessageService.Confirm (GettextCatalog.GetString ("Do you really want to remove solution {0} from workspace {1}?"' solution.Name' parent.Name)' AlertButton.Remove)) { " is 170.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,WorkspaceNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\WorkspaceNodeBuilder.cs,OnMultipleNodeDrop,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to move the item '{0}' to the workspace '{1}'?"' it.Name' ws.Name)' AlertButton.Move)) " is 164.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,WorkspaceNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\WorkspaceNodeBuilder.cs,RemoveItem,The length of the statement  "		if (MessageService.Confirm (GettextCatalog.GetString ("Do you really want to remove the item '{0}' from workspace '{1}'?"' ws.Name' parent.Name)' AlertButton.Remove)) { " is 168.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "	msg.SecondaryText = GettextCatalog.GetString ("The Delete option permanently removes the file from your hard disk. Click Remove from Solution if you only want to remove it from your current solution."); " is 202.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "	AlertButton removeFromSolution = new AlertButton (GettextCatalog.GetString ("_Remove from Solution")' Gtk.Stock.Remove); " is 120.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "			msg.Text = GettextCatalog.GetString ("Are you sure you want to remove the file {0} from the solution folder {1}?"' file.FileName.FileName' file.Parent.Name); " is 157.
Long Statement,MonoDevelop.Ide.Gui.Pads.ProjectPad,SolutionFolderFileNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SolutionFolderFileNodeBuilder.cs,DeleteMultipleItems,The length of the statement  "			msg.Text = GettextCatalog.GetString ("Are you sure you want to remove the file {0} from the solution {1}?"' file.FileName.FileName' file.Parent.ParentSolution.Name); " is 165.
Long Statement,MonoDevelop.Ide,SelectEncodingsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SelectEncodingsDialog.cs,MoveItem,The length of the statement  "		TreeIter newiter = targetStore.AppendValues (sourceStore.GetValue (iter' 0)' sourceStore.GetValue (iter' 1)' sourceStore.GetValue (iter' 2)); " is 141.
Long Statement,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,HandleFeedbackButtonButtonPressEvent,The length of the statement  "		GLib.ExceptionManager.RaiseUnhandledException (new Exception ("Feedback Button is throwing an exception"' new Exception (Environment.StackTrace))' false); " is 154.
Long Statement,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,ShowCaretState,The length of the statement  "	string cursorText = selectedChars > 0 ? String.Format ("{0'3} : {1'-3} - {2}"' line' column' selectedChars) : String.Format ("{0'3} : {1'-3}"' line' column); " is 157.
Long Statement,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The length of the statement  "				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h); " is 165.
Long Statement,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The length of the statement  "					Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h); " is 167.
Long Statement,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The length of the statement  "				Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2)); " is 124.
Long Statement,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The length of the statement  "	this.GdkWindow.DrawRectangle (this.Style.ForegroundGC (StateType.Insensitive)' false' 0' 0' winWidth - 1' winHeight - 1); " is 121.
Long Statement,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,HandlerError,The length of the statement  "		LoggingService.LogError ("{0} {1}\nCaller stack not available. Define the environment variable MONODEVELOP_DISPATCH_DEBUG to enable caller stack capture."' errormsg' msg.Exception.ToString ()); " is 193.
Long Statement,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OpenFiles,The length of the statement  "		if (Services.ProjectService.IsWorkspaceItemFile (file.FileName) || Services.ProjectService.IsSolutionItemFile (file.FileName)) { " is 128.
Long Statement,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OnExtensionChanged,The length of the statement  "				typeof(CommandHandler).GetMethod ("Run"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance' null' Type.EmptyTypes' null).Invoke (args.ExtensionObject' null); " is 190.
Long Statement,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OnExtensionChanged,The length of the statement  "				LoggingService.LogError ("Type " + args.ExtensionObject.GetType () + " must be a subclass of MonoDevelop.Components.Commands.CommandHandler"); " is 142.
Long Statement,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OnUpgraded,The length of the statement  "		// Reset the current runtime when upgrading from <2.2' to ensure the default runtime is not stuck to an old mono install " is 120.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,Execute,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("No solution has been selected")' GettextCatalog.GetString ("The solution to be executed must be selected in the solution pad.")); " is 182.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,CloseWorkspaceItem,The length of the statement  "			foreach (Document doc in IdeApp.Workbench.Documents.Where (d => d.Project != null && projects.Contains (d.Project)).ToArray ()) { " is 129.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,SearchNewFiles,The length of the statement  "		if (IdeApp.Services.ProjectService.IsSolutionItemFile (sfile) || IdeApp.Services.ProjectService.IsWorkspaceItemFile (sfile)) " is 124.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,SearchNewFiles,The length of the statement  "		var dialog = new IncludeNewFilesDialog (GettextCatalog.GetString ("Found new files in {0}"' project.Name)' project.BaseDirectory); " is 130.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,IgnoreFileInSearch,The length of the statement  "	if (directory.IndexOf (".svn"' StringComparison.Ordinal) != -1 || directory.IndexOf (".git"' StringComparison.Ordinal) != -1 || directory.IndexOf ("CVS"' StringComparison.Ordinal) != -1) " is 186.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,IgnoreFileInSearch,The length of the statement  "	if (directory.IndexOf (Path.DirectorySeparatorChar + "bin" + Path.DirectorySeparatorChar' StringComparison.Ordinal) != -1 || directory.IndexOf (Path.DirectorySeparatorChar + "obj" + Path.DirectorySeparatorChar' StringComparison.Ordinal) != -1) " is 243.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,IgnoreFileInSearch,The length of the statement  "	if (file.EndsWith ("make.sh"' StringComparison.Ordinal) || file.StartsWith ("Makefile"' StringComparison.Ordinal) || directory.EndsWith ("ProjectDocumentation"' StringComparison.Ordinal)) " is 187.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,The length of the statement  "			msg = GettextCatalog.GetString ("WARNING: Some documents may need to be closed' and unsaved data will be lost. You will be asked to save the unsaved documents."); " is 162.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,The length of the statement  "			msg = GettextCatalog.GetString ("WARNING: Some documents may need to be reloaded or closed' and unsaved data will be lost. You will be asked to save the unsaved documents."); " is 174.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,The length of the statement  "			msg = GettextCatalog.GetString ("WARNING: Some files may need to be reloaded' and unsaved data will be lost. You will be asked to save the unsaved files."); " is 156.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,The length of the statement  "		msg = GettextCatalog.GetString ("Some files may need to be reloaded' and editing status for those files (such as the undo queue) will be lost."); " is 145.
Long Statement,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("The project '{0}' has been modified by an external application. Do you want to reload it?"' docs [0].Project.Name)' msg' AlertButton.Reload)) " is 197.
Long Statement,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,LoadStockIcon,The length of the statement  "				var file2x = Path.Combine (Path.GetDirectoryName (file)' Path.GetFileNameWithoutExtension (file) + "@2x" + Path.GetExtension (file)); " is 133.
Long Statement,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,LoadStockIcon,The length of the statement  "					LoggingService.LogError ("Did not find resource '{0}' in addin '{1}' for icon '{2}'"' iconCodon.Resource' iconCodon.Addin.Id' iconCodon.StockId); " is 145.
Long Statement,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,GetComposedIcon,The length of the statement  "	System.Collections.ICollection col = size == Gtk.IconSize.Invalid ? Enum.GetValues (typeof(Gtk.IconSize)) : new object[] { " is 122.
Long Statement,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,LoadIcon,The length of the statement  "	AnimatedImageInfo ainfo = animatedImages.Select (a => (AnimatedImageInfo)a.Target).FirstOrDefault (a => a != null && a.Image == image); " is 135.
Long Statement,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,Confirm,The length of the statement  "	return GenericAlert (MonoDevelop.Ide.Gui.Stock.Question' primaryText' secondaryText' AlertButton.Cancel' button) == button; " is 123.
Long Statement,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,Confirm,The length of the statement  "	return GenericAlert (MonoDevelop.Ide.Gui.Stock.Question' primaryText' secondaryText' confirmIsDefault ? 0 : 1' AlertButton.Cancel' button) == button; " is 149.
Long Statement,MonoDevelop.Ide,WebBrowserService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\WebBrowserService.cs,GetWebBrowser,The length of the statement  "	throw new InvalidOperationException ("Was not able to create web browser; either the consumer did not check for browser availability' or the extension tree has changed since this check."); " is 188.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,JumpToDeclaration,The length of the statement  "	var project = (entity is ITypeDefinition ? ((ITypeDefinition)entity) : entity.DeclaringTypeDefinition).GetProjectWhereTypeIsDefined (); " is 135.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AllowSave,The length of the statement  "		return MessageService.Confirm (GettextCatalog.GetString ("Some project files have been changed from outside {0}. Do you want to overwrite them?"' BrandingService.ApplicationName)' GettextCatalog.GetString ("Changes done in those files will be overwritten by {0}."' BrandingService.ApplicationName)' AlertButton.OverwriteFile); " is 326.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,RemoveSolutionItem,The length of the statement  "	string question = GettextCatalog.GetString ("Do you really want to remove project '{0}' from '{1}'?"' item.Name' item.ParentFolder.Name); " is 137.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,RemoveSolutionItem,The length of the statement  "	string secondaryText = GettextCatalog.GetString ("The Remove option remove the project from the solution' but it will not physically delete any file from disk."); " is 162.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,RemoveSolutionItem,The length of the statement  "	AlertButton result = MessageService.AskQuestion (question' secondaryText' delete' AlertButton.Cancel' AlertButton.Remove); " is 122.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,ConfirmExecutionOperation,The length of the statement  "		if (MessageService.Confirm (GettextCatalog.GetString ("An application is already running and will have to be stopped. Do you want to continue?")' AlertButton.Yes)) { " is 165.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,CanExecute,The length of the statement  "	ExecutionContext context = new ExecutionContext (Runtime.ProcessService.DefaultExecutionHandler' IdeApp.Workbench.ProgressMonitors' IdeApp.Workspace.ActiveExecutionTarget); " is 172.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,CanExecute,The length of the statement  "	ExecutionContext context = new ExecutionContext (handler' IdeApp.Workbench.ProgressMonitors' IdeApp.Workspace.ActiveExecutionTarget); " is 133.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,Execute,The length of the statement  "	ExecutionContext context = new ExecutionContext (handler' IdeApp.Workbench.ProgressMonitors' IdeApp.Workspace.ActiveExecutionTarget); " is 133.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,Build,The length of the statement  "					Pad monitorPad = IdeApp.Workbench.Pads.FirstOrDefault (pad => pad.Content == ((OutputProgressMonitor)((AggregatedProgressMonitor)monitor).MasterMonitor).OutputPad);" is 164.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,PromptForSave,The length of the statement  "			if (MessageService.AskQuestion (GettextCatalog.GetString ("Save changed documents before building?")' GettextCatalog.GetString ("Some of the open documents have unsaved changes.")' AlertButton.BuildWithoutSave' AlertButton.Save) == AlertButton.Save) { " is 251.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,The length of the statement  "			string warningString = GettextCatalog.GetPluralString ("{0} warning"' "{0} warnings"' result.WarningCount' result.WarningCount); " is 128.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,The length of the statement  "				jumpTask = tasks.FirstOrDefault (t => (t.Severity == TaskSeverity.Error || t.Severity == TaskSeverity.Warning) && TaskStore.IsProjectTaskFile (t)); " is 147.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToSolutionFolder,The length of the statement  "			msg.Text = GettextCatalog.GetString ("The file {0} is outside the folder directory. What do you want to do?"' fp.FileName); " is 123.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,The length of the statement  "	Debug.Assert (targetDirectory.CanonicalPath == project.BaseDirectory.CanonicalPath || targetDirectory.IsChildPathOf (project.BaseDirectory)); " is 141.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,The length of the statement  "					MessageService.ShowWarning (GettextCatalog.GetString ("There is a already a file or link in the project with the name '{0}'"' vpath)); " is 134.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,The length of the statement  "					MessageService.ShowException (ex' GettextCatalog.GetString ("An error occurred while attempt to move/copy that file. Please check your permissions.")); " is 151.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFileToFolder,The length of the statement  "		MessageService.ShowWarning (GettextCatalog.GetString ("The link '{0}' in the project already includes the file '{1}'"' link' file)); " is 132.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,MoveCopyFile,The length of the statement  "			if (!MessageService.Confirm (GettextCatalog.GetString ("The file '{0}' already exists. Do you want to replace it?"' targetFilename)' AlertButton.OverwriteFile)) " is 160.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,The length of the statement  "	bool movingFolder = (removeFromSource && sourceIsFolder && (!copyOnlyProjectFiles || IsDirectoryHierarchyEmpty (sourcePath))); " is 126.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,The length of the statement  "				var names = new HashSet<string> (filesToRemove.Select (f => sourceProject.BaseDirectory.Combine (f.ProjectVirtualPath).ToString ())); " is 133.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,The length of the statement  "	if (removeFromSource && sourceProject != null && pfolder.CanonicalPath != sourceProject.BaseDirectory.CanonicalPath && pfolder.IsChildPathOf (sourceProject.BaseDirectory)) { " is 173.
Long Statement,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,IdeAppWorkspaceItemUnloading,The length of the statement  "		if (MessageService.Confirm (GettextCatalog.GetString ("The project '{0}' is currently running and will have to be stopped. Do you want to continue closing it?"' currentRunOperationOwner.Name)' new AlertButton (GettextCatalog.GetString ("Close Project")))) { " is 257.
Long Statement,MonoDevelop.Ide,HelpOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\HelpOperations.cs,GetStartPlatformSpecificMonoDoc,The length of the statement  "		var mdapp = new FilePath (typeof(HelpOperations).Assembly.Location).ParentDirectory.Combine (".."' ".."' ".."' "MonoDoc.app").FullPath; " is 135.
Long Statement,MonoDevelop.Ide,HelpOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\HelpOperations.cs,GetStartPlatformSpecificMonoDoc,The length of the statement  "		string mdapp = new FilePath (typeof(HelpOperations).Assembly.Location).ParentDirectory.Combine ("windoc"' "WinDoc.exe").FullPath; " is 129.
Long Statement,MonoDevelop.Ide,HelpOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\HelpOperations.cs,CheckExternalMonodoc,The length of the statement  "				MessageService.ShowError (String.Format ("MonoDoc exited with exit code {0}. Error : {1}"' pw.ExitCode' errWriter.ToString ())); " is 128.
Long Statement,MonoDevelop.Ide,HelpOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\HelpOperations.cs,CheckExternalMonodoc,The length of the statement  "		MessageService.ShowError (BrandingService.BrandApplicationName (GettextCatalog.GetString ("You need a newer monodoc to use it externally from MonoDevelop. Using the integrated help viewer now."))); " is 197.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The length of the statement  "	string version = Assembly.GetEntryAssembly ().GetName ().Version.Major + "." + Assembly.GetEntryAssembly ().GetName ().Version.Minor; " is 133.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The length of the statement  "		string message = BrandingService.BrandApplicationName (GettextCatalog.GetString ("MonoDevelop failed to start. The following error has been reported: {0}"' error.Message)); " is 172.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,SetupTheme,The length of the statement  "	if (File.Exists (Path.Combine (Gtk.Rc.ModuleDir' "libxamarin.so")) || File.Exists (Path.Combine (Gtk.Rc.ModuleDir' "libxamarin.dll"))) { " is 136.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckWindowsGtk,The length of the statement  "	if (version == null || version < minVersion || location == null || !File.Exists (Path.Combine (location' "bin"' "libgtk-win32-2.0-0.dll"))) { " is 141.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckWindowsGtk,The length of the statement  "		string message = "{0} did not find the required version of GTK#. Please click OK to open the download page' where " + "you can download and install the latest version."; " is 169.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,OnExtensionChanged,The length of the statement  "				typeof(CommandHandler).GetMethod ("Run"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance' null' Type.EmptyTypes' null).Invoke (args.ExtensionObject' null); " is 190.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,OnExtensionChanged,The length of the statement  "				LoggingService.LogError ("Type " + args.ExtensionObject.GetType () + " must be a subclass of MonoDevelop.Components.Commands.CommandHandler"); " is 142.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,openFile,The length of the statement  "		if (MonoDevelop.Projects.Services.ProjectService.IsWorkspaceItemFile (file) || MonoDevelop.Projects.Services.ProjectService.IsSolutionItemFile (file)) { " is 152.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,ValidateGtkTheme,The length of the statement  "	string fallback = gtkThemeFallbacks.Select (fb => themes.FirstOrDefault (t => string.Compare (fb' t' StringComparison.OrdinalIgnoreCase) == 0)).FirstOrDefault (t => t != null); " is 176.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,ValidateGtkTheme,The length of the statement  "		detail = "Your system is using the '{0}' GTK+ theme' which is known to be very unstable. MonoDevelop will " + "now switch to an alternate GTK+ theme.\n\n" + "This message will continue to be shown at startup until you set a alternate GTK+ theme as your " + "default in the GTK+ Theme Selector or MonoDevelop Preferences."; " is 322.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,ValidateGtkTheme,The length of the statement  "		detail = "Your system is using the '{0}' GTK+ theme' which is known to be very unstable' and no other GTK+ " + "themes appear to be installed. Please install another GTK+ theme.\n\n" + "This message will continue to be shown at startup until you install a different GTK+ theme and " + "set it as your default in the GTK+ Theme Selector or MonoDevelop Preferences."; " is 365.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,ValidateGtkTheme,The length of the statement  "	MessageService.GenericAlert (Gtk.Stock.DialogWarning' message' BrandingService.BrandApplicationName (detail)' AlertButton.Ok); " is 126.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckFileWatcher,The length of the statement  "				Runtime.ProcessService.EnvironmentVariableOverrides ["MONO_MANAGED_WATCHER"] = Environment.GetEnvironmentVariable ("MONO_MANAGED_WATCHER"); " is 139.
Long Statement,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Main,The length of the statement  "				LoggingService.LogFatalError (string.Format ("{0} failed to start. Some of the assemblies required to run {0} (for example gtk-sharp)" + "may not be properly installed in the GAC."' BrandingService.ApplicationName)' ex); " is 220.
Long Statement,MonoDevelop.Ide,FeedbackService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\FeedbackService.cs,SendFeedback,The length of the statement  "			string ver = (string)t.InvokeMember ("GetDisplayName"' BindingFlags.InvokeMethod | BindingFlags.Static | BindingFlags.NonPublic' null' null' null); " is 147.
Long Statement,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetVersion,The length of the statement  "			version = new Version (Math.Max (version.Major' 0)' Math.Max (version.Minor' 0)' Math.Max (version.Build' 0)' Math.Max (rev' 0)); " is 129.
Long Statement,MonoDevelop.Ide,LogReportingStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\LogReportingStartup.cs,Run,The length of the statement  "		string title = willShutdown ? GettextCatalog.GetString ("A fatal error has occurred") : GettextCatalog.GetString ("An error has occurred"); " is 139.
Long Statement,MonoDevelop.Ide,LogReportingStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\LogReportingStartup.cs,Run,The length of the statement  "		message = GettextCatalog.GetString ("Details of errors' along with anonymous installation information' can be sent to Xamarin to " + "help improve {0}. Do you wish to send this information?"' BrandingService.ApplicationName); " is 225.
Long Statement,MonoDevelop.Ide,DefaultWebCertificateProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DefaultWebCertificateProvider.cs,GetIsCertificateTrusted,The length of the statement  "				value = MessageService.AskQuestion ("Untrusted HTTP certificate detected"' string.Format ("Do you want to temporarily trust this certificate in order to" + " connect to the server at {0}?"' uri)' AlertButton.Yes' AlertButton.No) == AlertButton.Yes; " is 248.
Long Statement,MonoDevelop.Ide.StandardHeader,StandardHeaderService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.StandardHeader\StandardHeaderService.cs,GetHeader,The length of the statement  "	StandardHeaderPolicy headerPolicy = policyParent != null ? policyParent.Policies.Get<StandardHeaderPolicy> () : MonoDevelop.Projects.Policies.PolicyService.GetDefaultPolicy<StandardHeaderPolicy> (); " is 198.
Long Statement,MonoDevelop.Ide.StandardHeader,StandardHeaderService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.StandardHeader\StandardHeaderService.cs,GetHeader,The length of the statement  "	TextStylePolicy textPolicy = policyParent != null ? policyParent.Policies.Get<TextStylePolicy> ("text/plain") : MonoDevelop.Projects.Policies.PolicyService.GetDefaultPolicy<TextStylePolicy> ("text/plain"); " is 205.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,Initialize,The length of the statement  "			*/store = new Gtk.TreeStore (typeof(string)' typeof(Gdk.Pixbuf)' typeof(Gdk.Pixbuf)' typeof(object)' typeof(object)' typeof(bool)' typeof(bool)); " is 145.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,Initialize,The length of the statement  "		Gtk.Rc.ParseString ("style \"MonoDevelop.ExtensibleTreeView_" + n + "\" {\n GtkTreeView::expander-size = " + n + "\n }\n"); " is 123.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,Initialize,The length of the statement  "		Gtk.Rc.ParseString ("widget \"*.MonoDevelop.ExtensibleTreeView_" + n + "\" style  \"MonoDevelop.ExtensibleTreeView_" + n + "\"\n"); " is 131.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,SetBuilders,The length of the statement  "				throw new ApplicationException (string.Format ("The type node builder {0} can't be used in this context because the type {1} is already handled by {2}"' nb.GetType ()' tnb.NodeDataType' other.GetType ())); " is 205.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,SetBuilders,The length of the statement  "			throw new InvalidOperationException (string.Format ("Invalid NodeBuilder type: {0}. NodeBuilders must inherit either from TypeNodeBuilder or NodeBuilderExtension"' nb.GetType ())); " is 180.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnKeyPress,The length of the statement  "	if (args.Event.Key == Gdk.Key.asterisk || args.Event.Key == Gdk.Key.KP_Multiply || (shift && (args.Event.Key == Gdk.Key.Right || args.Event.Key == Gdk.Key.KP_Right || args.Event.Key == Gdk.Key.plus || args.Event.Key == Gdk.Key.KP_Add))) { " is 238.
Long Statement,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnScrollEvent,The length of the statement  "	var modifier = !Platform.IsMac ? Gdk.ModifierType.ControlMask //Mac window manager already uses control-scroll' so use command " is 126.
Long Statement,MonoDevelop.Ide.Gui.Components,NodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\NodeCommandHandler.cs,CheckCanDeleteFlags,The length of the statement  "		if (GetType ().GetMethod ("DeleteMultipleItems").DeclaringType != typeof(NodeCommandHandler) && GetType ().GetMethod ("CanDeleteItem").DeclaringType == typeof(NodeCommandHandler)) " is 179.
Long Statement,MonoDevelop.Ide.Gui.Components,NodeState,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\NodeState.cs,ToString,The length of the statement  "	return String.Format ("[NodeState: NodeName={0}' Expanded={1}' Selected={2}' Options={3}' #ChildrenState={4}]"' this.NodeName' this.Expanded' this.Selected' this.Options != null ? this.Options.ToString () : "null"' this.ChildrenState != null ? this.ChildrenState.Count.ToString () : "null"); " is 291.
Long Statement,MonoDevelop.Ide.Gui.Components,ExecutionModeComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExecutionModeComboBox.cs,Load,The length of the statement  "	foreach (List<IExecutionMode> modeList in ExecutionModeCommandService.GetExecutionModeCommands (ctx' includeDefault' includeDefaultCustomizer)) { " is 145.
Long Statement,MonoDevelop.Ide.Gui.Components,NotSupportedTextReader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,WarnUser,The length of the statement  "	string desc = GettextCatalog.GetString ("Console input is not supported when using the {0} output console. If your application needs to read " + "data from the standard input' please set the 'Run in External Console' option in the project options."' BrandingService.ApplicationName); " is 283.
Long Statement,MonoDevelop.Ide.CodeFormatting,CodeFormatter,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\CodeFormatter.cs,FormatText,The length of the statement  "		return formatter.FormatText (policyParent ?? PolicyService.DefaultPolicies' mimeTypeChain' input' fromOffset' toOffset); " is 120.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultPad.cs,EndProgress,The length of the statement  "	widget.ShowStatus (" " + GettextCatalog.GetString ("Search completed") + " - " + string.Format (GettextCatalog.GetPluralString ("{0} match."' "{0} matches."' widget.ResultCount)' widget.ResultCount)); " is 200.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,ShowFileMaskUI,The length of the statement  "	var checkMenuItem1 = searchentryFileMask.AddFilterOption (1' GettextCatalog.GetString ("Include hidden files and directories")); " is 128.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,GetScope,The length of the statement  "			MessageService.ShowError (string.Format (GettextCatalog.GetString ("Directory not found: {0}")' comboboxentryPath.Entry.Text)); " is 127.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,GetFilterOptions,The length of the statement  "		FileMask = searchentryFileMask != null && !string.IsNullOrEmpty (searchentryFileMask.Query) ? searchentryFileMask.Query : "*"' " is 126.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,HandleReplaceClicked,The length of the statement  "	SearchReplace (comboboxentryFind.Entry.Text' comboboxentryReplace.Entry.Text ?? ""' GetScope ()' GetFilterOptions ()' () => UpdateStopButton ()); " is 145.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,SearchReplace,The length of the statement  "		if (!MessageService.Confirm (GettextCatalog.GetString ("There is a search already in progress. Do you want to stop it?")' AlertButton.Stop)) " is 140.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,SearchReplace,The length of the statement  "				string matches = string.Format (GettextCatalog.GetPluralString ("{0} match found"' "{0} matches found"' find.FoundMatchesCount)' find.FoundMatchesCount); " is 153.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,SearchReplace,The length of the statement  "				string files = string.Format (GettextCatalog.GetPluralString ("in {0} file."' "in {0} files."' find.SearchedFilesCount)' find.SearchedFilesCount); " is 146.
Long Statement,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,SearchReplace,The length of the statement  "			searchMonitor.Log.WriteLine (GettextCatalog.GetString ("Search time: {0} seconds.")' (DateTime.Now - timer).TotalSeconds); " is 122.
Long Statement,MonoDevelop.Ide.FindInFiles,FileProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FileProvider.cs,SearchDocument,The length of the statement  "	return IdeApp.Workbench.Documents.FirstOrDefault (d => !string.IsNullOrEmpty (d.FileName) && Path.GetFullPath (d.FileName) == Path.GetFullPath (FileName)); " is 155.
Long Statement,MonoDevelop.Ide.FindInFiles,FilterOptions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FilterOptions.cs,IsWholeWordAt,The length of the statement  "	return (offset <= 0 || IsWordSeparator (text [offset - 1])) && (offset + length >= text.Length || IsWordSeparator (text [offset + length])); " is 140.
Long Statement,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,Search,The length of the statement  "	int end = provider.SelectionEndPosition < 0 ? content.Length : Math.Min (content.Length' provider.SelectionEndPosition); " is 120.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColors,The length of the statement  "	Color baseColor = Platform.IsMac ? treeviewSearchResults.Style.Light (treeviewSearchResults.State) : treeviewSearchResults.Style.Base (treeviewSearchResults.State); " is 164.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,FileNameDataFunc,The length of the statement  "	fileNameRenderer.Markup = MarkupText (System.IO.Path.GetFileName (searchResult.FileName) + ":" + searchResult.LineNumber' didRead); " is 131.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,CompareFileNames,The length of the statement  "	return System.IO.Path.GetFileName (searchResult1.FileName).CompareTo (System.IO.Path.GetFileName (searchResult2.FileName)); " is 123.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,CompareFilePaths,The length of the statement  "	return System.IO.Path.GetDirectoryName (searchResult1.FileName).CompareTo (System.IO.Path.GetDirectoryName (searchResult2.FileName)); " is 133.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The length of the statement  "		var markup = doc.SyntaxMode != null ? data.GetMarkup (line.Offset + indent' line.Length - indent' true' !isSelected' false) : GLib.Markup.EscapeText (lineText); " is 160.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The length of the statement  "			LoggingService.LogError ("Exception while translating index to utf8 (column was:" + col + " search result length:" + searchResult.Length + " line text:" + lineText + ")"' e); " is 174.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The length of the statement  "			double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground)); " is 157.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The length of the statement  "			var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue)); " is 166.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,CopySelection,The length of the statement  "		sb.AppendFormat ("{0} ({1}' {2}):{3}"' result.FileName' loc.Line' loc.Column' doc.GetTextAt (line.Offset' line.Length)); " is 120.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchProgressMonitor.cs,ReportResult,The length of the statement  "		LoggingService.LogError ("Error adding search result for file {0}:{1} to result pad:\n{2}"' result.FileName' result.Offset' ex.ToString ()); " is 140.
Long Statement,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,FindReferences,The length of the statement  "	return FindReferences (IdeApp.ProjectOperations.CurrentSelectedSolution' member' searchForAllOverloads' RefactoryScope.Unknown' monitor); " is 137.
Long Statement,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,FindReferences,The length of the statement  "	return FindReferences (IdeApp.ProjectOperations.CurrentSelectedSolution' member' searchForAllOverloads' scope' monitor); " is 120.
Long Statement,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,GetFileNames,The length of the statement  "		var sourceProject = TypeSystemService.GetProject (compilationProvider.Compilation.MainAssembly.UnresolvedAssembly.Location); " is 124.
Long Statement,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,CollectMembers,The length of the statement  "	foreach (var c in type.GetDefinition ().GetMembers (m => m.SymbolKind == SymbolKind.Constructor' GetMemberOptions.IgnoreInheritedMembers)) { " is 140.
Long Statement,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\MemberCollector.cs,CollectMembers,The length of the statement  "			return member.DeclaringType.GetMembers (m => m.SymbolKind == SymbolKind.Constructor' GetMemberOptions.IgnoreInheritedMembers); " is 126.
Long Statement,MonoDevelop.Ide.FindInFiles,MemberCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\MemberCollector.cs,CollectMembers,The length of the statement  "			if ((mainAssemblies.Contains (assembly.AssemblyName) && assembly != compilation.MainAssembly) || !searchedAssemblies.Add (assembly.AssemblyName)) " is 145.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchCollector.cs,GetAllReferencingProjects,The length of the statement  "	return solution.GetAllProjects ().Where (project => TypeSystemService.GetCompilation (project).Assemblies.Any (a => a.AssemblyName == assemblyName)); " is 149.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchCollector.cs,CollectFiles,The length of the statement  "		yield return new FileList (project' TypeSystemService.GetProjectContext (project)' project.Files.Where (f => f.BuildAction == BuildAction.Compile).Select (f => f.FilePath)); " is 173.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchCollector.cs,CollectFiles,The length of the statement  "		yield return new FileList (files.Key' TypeSystemService.GetProjectContext (files.Key)' files.Value.Select (f => (FilePath)f)); " is 126.
Long Statement,MonoDevelop.Ide.FindInFiles,SearchCollector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchCollector.cs,Collect,The length of the statement  "					if (!entity.ParentAssembly.InternalsVisibleTo (TypeSystemService.GetProjectContentWrapper (project).Compilation.MainAssembly)) " is 126.
Long Statement,MonoDevelop.Ide.Execution,ParameterizedExecutionHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ParameterizedExecutionHandler.cs,Execute,The length of the statement  "	return InternalExecute (new CommandExecutionContext (null' command)' new ExecutionMode (""' ""' this)' command' console); " is 121.
Long Statement,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetExecutionCommandCustomizers,The length of the statement  "	foreach (ExecutionCommandCustomizer customizer in AddinManager.GetExtensionNodes ("/MonoDevelop/Ide/ExecutionCommandEditors"' typeof(ExecutionCommandCustomizer))) { " is 164.
Long Statement,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetExecutionCommandCustomizer,The length of the statement  "	foreach (ExecutionCommandCustomizer customizer in AddinManager.GetExtensionNodes ("/MonoDevelop/Ide/ExecutionCommandEditors"' typeof(ExecutionCommandCustomizer))) { " is 164.
Long Statement,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GenerateExecutionModeCommands,The length of the statement  "			if ((mode.ExecutionHandler is ParameterizedExecutionHandler) || ((mode is CustomExecutionMode) && ((CustomExecutionMode)mode).PromptForParameters)) { " is 149.
Long Statement,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetCustomModes,The length of the statement  "		CustomExecutionModes modes = ctx.Project.UserProperties.GetValue<CustomExecutionModes> ("MonoDevelop.Ide.CustomExecutionModes"' GetDataContext ()); " is 147.
Long Statement,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetCustomModes,The length of the statement  "		modes = ctx.Project.ParentSolution.UserProperties.GetValue<CustomExecutionModes> ("MonoDevelop.Ide.CustomExecutionModes"' GetDataContext ()); " is 141.
Long Statement,MonoDevelop.Ide.Execution,ExecutionModeCommandService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\ExecutionModeCommandService.cs,GetDataContext,The length of the statement  "	foreach (ExecutionCommandCustomizer customizer in AddinManager.GetExtensionNodes ("/MonoDevelop/Ide/ExecutionCommandEditors"' typeof(ExecutionCommandCustomizer))) { " is 164.
Long Statement,MonoDevelop.Ide.Execution,CustomExecutionModeManagerDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeManagerDialog.cs,OnButtonRemoveClicked,The length of the statement  "	if (mode != null && MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to delete the custom execution mode '{0}'?"' mode.Name)' AlertButton.Delete)) { " is 172.
Long Statement,MonoDevelop.Ide.Execution,MonoExecutionParametersWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\MonoExecutionParametersWidget.cs,OnButtonResetClicked,The length of the statement  "	if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to clear all specified options?")' AlertButton.Clear)) " is 132.
Long Statement,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,Update,The length of the statement  "	if (!force && genFile != null && File.Exists (genFile.FilePath) && File.GetLastWriteTime (file.FilePath) < File.GetLastWriteTime (genFile.FilePath)) { " is 150.
Long Statement,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,Update,The length of the statement  "		monitor.BeginTask (GettextCatalog.GetString ("Running generator '{0}' on file '{1}'..."' file.Generator' file.Name)' 1); " is 120.
Long Statement,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,UpdateCompleted,The length of the statement  "		genFileName = result.GeneratedFilePath.IsNullOrEmpty ? null : result.GeneratedFilePath.ToRelative (file.FilePath.ParentDirectory); " is 130.
Long Statement,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,UpdateCompleted,The length of the statement  "			string msg = GettextCatalog.GetString ("The '{0}' code generator output invalid filename '{1}'"' file.Generator' result.GeneratedFilePath); " is 139.
Long Statement,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,UpdateCompleted,The length of the statement  "				TaskService.Errors.Add (new Task (file.FilePath' err.ErrorText' err.Column' err.Line' err.IsWarning ? TaskSeverity.Warning : TaskSeverity.Error' TaskPriority.Normal' file.Project.ParentSolution' file)); " is 202.
Long Statement,MonoDevelop.Components,FileSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\FileSelector.cs,CommonSetup,The length of the statement  "	string pathName = PropertyService.Get ("MonoDevelop.Core.Gui.Dialogs.NewProjectDialog.DefaultPath"' Environment.GetFolderPath (Environment.SpecialFolder.Personal)); " is 164.
Long Statement,MonoDevelop.Components,TooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipWindow.cs,OnExposeEvent,The length of the statement  "	Gtk.Style.PaintFlatBox (Style' this.GdkWindow' StateType.Normal' ShadowType.Out' evnt.Area' this' "tooltip"' 0' 0' winWidth' winHeight); " is 136.
Long Statement,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,OnExposeEvent,The length of the statement  "	Style.PaintFlatBox (Style' evnt.Window' StateType.Normal' ShadowType.Out' evnt.Area' this' "tooltip"' Allocation.X + 1' Allocation.Y + 1' Allocation.Width - 2' Allocation.Height - 2); " is 183.
Long Statement,MonoDevelop.Components,GtkUtil,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,ToCairoColor,The length of the statement  "	return new Cairo.Color ((double)color.Red / ushort.MaxValue' (double)color.Green / ushort.MaxValue' (double)color.Blue / ushort.MaxValue); " is 138.
Long Statement,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The length of the statement  "	var alloc = new Gdk.Rectangle (alignment.Allocation.X' box.Allocation.Y' alignment.Allocation.Width' box.Allocation.Height); " is 124.
Long Statement,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The length of the statement  "		Style.PaintShadow (entry.Style' GdkWindow' StateType.Normal' ShadowType.In' evnt.Area' entry' "entry"' alloc.X' alloc.Y' alloc.Width' alloc.Height); " is 148.
Long Statement,MonoDevelop.Components,HoverImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HoverImageButton.cs,OnExposeEvent,The length of the statement  "		Style.PaintFocus (Style' GdkWindow' StateType.Normal' evnt.Area' this' "button"' 0' 0' Allocation.Width' Allocation.Height); " is 124.
Long Statement,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The length of the statement  "			if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering)) " is 125.
Long Statement,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The length of the statement  "			if (hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering)) " is 126.
Long Statement,MonoDevelop.Components,RoundedFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\RoundedFrame.cs,OnSizeAllocated,The length of the statement  "	child_allocation = new Gdk.Rectangle (allocation.X + border' allocation.Y + border' (int)Math.Max (1' allocation.Width - border * 2)' (int)Math.Max (1' allocation.Height - border * 2)); " is 185.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,AlphaBlend,The length of the statement  "	return new Cairo.Color ((1.0 - alpha) * ca.R + alpha * cb.R' (1.0 - alpha) * ca.G + alpha * cb.G' (1.0 - alpha) * ca.B + alpha * cb.B); " is 135.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The length of the statement  "	return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha); " is 136.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The length of the statement  "	return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0); " is 162.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,InterpolateColors,The length of the statement  "	return new Cairo.Color (start.R + (end.R - start.R) * amount' start.G + (end.G - start.G) * amount' start.B + (end.B - start.B) * amount' start.A + (end.A - start.A) * amount); " is 176.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The length of the statement  "		return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255)); " is 143.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderOuterShadow,The length of the statement  "	using (var rg = new RadialGradient (area.X + rounding' area.Y + rounding' rounding' area.X + rounding' area.Y + rounding' size + rounding)) { " is 141.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderOuterShadow,The length of the statement  "	using (var rg = new RadialGradient (area.Right - rounding' area.Y + rounding' rounding' area.Right - rounding' area.Y + rounding' size + rounding)) { " is 149.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderOuterShadow,The length of the statement  "	using (var rg = new RadialGradient (area.X + rounding' area.Bottom - rounding' rounding' area.X + rounding' area.Bottom - rounding' size + rounding)) { " is 151.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RenderOuterShadow,The length of the statement  "	using (var rg = new RadialGradient (area.Right - rounding' area.Bottom - rounding' rounding' area.Right - rounding' area.Bottom - rounding' size + rounding)) { " is 159.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CallCairoMethod,The length of the statement  "		MemberInfo[] members = typeof(Cairo.Context).GetMember (call.Name' MemberTypes.Method' BindingFlags.InvokeMethod | BindingFlags.Instance | BindingFlags.Public); " is 160.
Long Statement,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,LoadImage,The length of the statement  "				return new ImageSurface (px.Pixels' Format.Argb32' px.Width' px.Height' px.Rowstride);*/// Workaround: loading from file name. " is 126.
Long Statement,MonoDevelop.Components,DropDownBoxListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBoxListWindow.cs,OnMapped,The length of the statement  "	Gdk.Pointer.Grab (GdkWindow' true' Gdk.EventMask.ButtonPressMask | Gdk.EventMask.ButtonReleaseMask | Gdk.EventMask.PointerMotionMask | Gdk.EventMask.EnterNotifyMask | Gdk.EventMask.LeaveNotifyMask' null' null' Global.CurrentEventTime); " is 235.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "	// (default-border' inner-border' default-outside-border' etc - see http://git.gnome.org/browse/gtk+/tree/gtk/gtkbutton.c) " is 122.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "		Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height); " is 152.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "		Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X - padding' Allocation.Y - padding' Allocation.Width + padding * 2' Allocation.Height + padding * 2); " is 200.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "		win.DrawPixbuf (this.Style.BaseGC (StateType.Normal)' Pixbuf' 0' 0' xPos + pixbufSpacing' Allocation.Y + (Allocation.Height - Pixbuf.Height) / 2' Pixbuf.Width' Pixbuf.Height' Gdk.RgbDither.None' 0' 0); " is 201.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "	Style.PaintLayout (Style' win' state' true' textArea' this' ""' textArea.X' textArea.Y + Math.Max (0' (textArea.Height - height) / 2)' layout); " is 143.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "	Gtk.Style.PaintArrow (this.Style' win' state' ShadowType.None' args.Area' this' ""' ArrowType.Up' true' arrowXPos' Allocation.Y + (Allocation.Height) / 2 - arrowHeight' arrowWidth' arrowHeight); " is 194.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "	Gtk.Style.PaintArrow (this.Style' win' state' ShadowType.None' args.Area' this' ""' ArrowType.Down' true' arrowXPos' Allocation.Y + (Allocation.Height) / 2' arrowWidth' arrowHeight); " is 182.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "			win.DrawLine (this.Style.DarkGC (StateType.Normal)' Allocation.X + Allocation.Width - 1' Allocation.Y' Allocation.X + Allocation.Width - 1' Allocation.Y + Allocation.Height); " is 174.
Long Statement,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The length of the statement  "			win.DrawLine (this.Style.DarkGC (StateType.Normal)' Allocation.X' Allocation.Y' Allocation.X' Allocation.Y + Allocation.Height); " is 128.
Long Statement,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,GetBounds,The length of the statement  "	return new Cairo.Rectangle (tab.TabPosition == TabPosition.Left ? distance : Allocation.Width - distance - tabSizes [idx].X' 0' tabSizes [idx].X' tabSizes [idx].Y); " is 164.
Long Statement,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnRealized,The length of the statement  "		EventMask = (int)(EventMask.EnterNotifyMask | EventMask.LeaveNotifyMask | EventMask.PointerMotionMask | EventMask.ButtonPressMask | EventMask.ButtonReleaseMask)' " is 161.
Long Statement,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,Convert,The length of the statement  "	return new Cairo.Color (color.Red / (double)ushort.MaxValue' color.Green / (double)ushort.MaxValue' color.Blue / (double)ushort.MaxValue); " is 138.
Long Statement,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The length of the statement  "		using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) { " is 199.
Long Statement,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,AnimatedResize,The length of the statement  "	Func<double' Gdk.Size> transform = x => new Gdk.Size ((int)(start.Width + (size.Width - start.Width) * x)' (int)(start.Height + (size.Height - start.Height) * x)); " is 163.
Long Statement,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,AnimatedResize,The length of the statement  "	this.Animate ("Resize"' transform' s => paintSize = s' length: 150' easing: Easing.SinInOut' finished: (x' aborted) =>  { " is 121.
Long Statement,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,OnExposeEvent,The length of the statement  "			Theme.RenderPager (context' PangoContext' new Gdk.Rectangle (Allocation.X' Allocation.Y' paintSize.Width' paintSize.Height)); " is 125.
Long Statement,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,HandleSizeAllocated,The length of the statement  "			SizeAllocate (new Gdk.Rectangle (parent.Child1.Allocation.X + parent.Child1.Allocation.Width - centerSize' args.Allocation.Y' GrabAreaSize' args.Allocation.Height)); " is 165.
Long Statement,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,HandleSizeAllocated,The length of the statement  "			SizeAllocate (new Gdk.Rectangle (args.Allocation.X' parent.Child1.Allocation.Y + parent.Child1.Allocation.Height - centerSize' args.Allocation.Width' GrabAreaSize)); " is 165.
Long Statement,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPager,The length of the statement  "	Gdk.Rectangle arrowRect = new Gdk.Rectangle (boundingBox.X + arrowPadding' boundingBox.Y + (boundingBox.Height - Styles.PopoverWindow.PagerTriangleSize) / 2' Styles.PopoverWindow.PagerTriangleSize' Styles.PopoverWindow.PagerTriangleSize); " is 238.
Long Statement,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerBackground,The length of the statement  "	CairoExtensions.RoundedRectangle (context' bounds.X' bounds.Y' bounds.Width' bounds.Height' CornerRadius' CairoCorners.BottomLeft); " is 131.
Long Statement,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerBackground,The length of the statement  "	CairoExtensions.RoundedRectangle (context' bounds.X + .5' bounds.Y + .5' bounds.Width - 1' bounds.Height - 1' CornerRadius' CairoCorners.BottomLeft); " is 149.
Long Statement,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,AnimatedResize,The length of the statement  "	Func<double' Gdk.Size> transform = x => new Gdk.Size ((int)(start.Width + (size.Width - start.Width) * x)' (int)(start.Height + (size.Height - start.Height) * x)); " is 163.
Long Statement,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,AnimatedResize,The length of the statement  "	this.Animate ("Resize"' transform' s => paintSize = s' length: 150' easing: Easing.SinInOut' finished: (x' aborted) =>  { " is 121.
Long Statement,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,OnExposeEvent,The length of the statement  "			Theme.RenderPager (context' PangoContext' new Gdk.Rectangle (Allocation.X' Allocation.Y' paintSize.Width' paintSize.Height)); " is 125.
Long Statement,MonoDevelop.Components,ImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ImageButton.cs,OnButtonReleaseEvent,The length of the statement  "	if (pressed && evnt.Button == 1 && new Gdk.Rectangle (0' 0' Allocation.Width' Allocation.Height).Contains ((int)evnt.X' (int)evnt.Y)) { " is 135.
Long Statement,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The length of the statement  "	win.DrawRectangle (Style.BlackGC' false' left - AreaBorderWidth' top - AreaBorderWidth' width + AreaBorderWidth * 2' height + AreaBorderWidth * 2); " is 147.
Long Statement,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,OnKeyPressed,The length of the statement  "			KeyBindingFailed (this' new KeyBindingFailedEventArgs (GettextCatalog.GetString ("The key combination ({0}' {1}) is not a command."' chord' accel))); " is 149.
Long Statement,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,GetTypeHandlerInfo,The length of the statement  "	while (curType != null && curType.Assembly != typeof(Gtk.Widget).Assembly && curType.Assembly != typeof(object).Assembly) { " is 123.
Long Statement,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,GetTypeHandlerInfo,The length of the statement  "		MethodInfo[] methods = curType.GetMethods (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly); " is 141.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Init,The length of the statement  "	throw new InvalidOperationException ("Invalid signature for command update handler: " + method.DeclaringType + "." + method.Name + "()"); " is 137.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			LoggingService.LogWarning ("Slow command update ({0}ms): Command:{1}' CustomUpdater:{2}"' (int)time.TotalMilliseconds' CommandId' customHandlerChain); " is 150.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			throw new InvalidOperationException ("Invalid custom update handler. An implementation of ICommandUpdateHandler was expected."); " is 128.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			throw new InvalidOperationException ("Invalid signature for command update handler: " + Method.DeclaringType + "." + Method.Name + "()"); " is 137.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			LoggingService.LogWarning ("Slow command update ({0}ms): Command:{1}' Method:{2}"' (int)time.TotalMilliseconds' CommandId' Method.DeclaringType + "." + Method.Name); " is 165.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			throw new InvalidOperationException ("Invalid custom update handler. An implementation of ICommandArrayUpdateHandler was expected."); " is 133.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			throw new InvalidOperationException ("Invalid signature for command update handler: " + Method.DeclaringType + "." + Method.Name + "()"); " is 137.
Long Statement,MonoDevelop.Components.Commands,CommandUpdaterInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,Run,The length of the statement  "			LoggingService.LogWarning ("Slow command update ({0}ms): Command:{1}' Method:{2}"' (int)time.TotalMilliseconds' CommandId' Method.DeclaringType + "." + Method.Name); " is 165.
Long Statement,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,BindingToDisplayLabel,The length of the statement  "		label = ModifierToDisplayLabel (binding.Chord.Modifier' concise) + KeyToDisplayLabel (binding.Chord.Key) + (isMac ? " " : "|"); " is 127.
Long Statement,MonoDevelop.Components.Commands.ExtensionNodes,SchemeExtensionNode,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands.ExtensionNodes\SchemeExtensionNode.cs,GetKeyBindingSet,The length of the statement  "		LoggingService.LogError ("Error reading keybindings definition '{0}' in addin '{1}'.\n {2}"' file ?? resource' Addin.Id' e.ToString ()); " is 136.
Long Statement,MonoDevelop.Components.DockToolbars,DockGrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockGrip.cs,OnExposeEvent,The length of the statement  "	Gtk.Style.PaintHandle (this.Style' this.ParentWindow' this.State' Gtk.ShadowType.None' args.Area' this' "grip"' rect.X' rect.Y' rect.Width' rect.Height' or); " is 157.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbar.cs,OnExposeEvent,The length of the statement  "		Style.PaintBox (Style' evnt.Window' State' shadowType' evnt.Area' this' "toolbar"' Allocation.X - widen' Allocation.Y' Allocation.Width + widen + widen' Allocation.Height); " is 172.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbarFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarFrame.cs,StartDragBar,The length of the statement  "	Pointer.Grab (this.GdkWindow' false' EventMask.ButtonPressMask | EventMask.ButtonReleaseMask | EventMask.PointerMotionMask' null' handCursor' time); " is 148.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The length of the statement  "			int prevRequest = Orientation == Orientation.Horizontal ? children [n - 1].SizeRequest ().Width : children [n - 1].SizeRequest ().Height; " is 137.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The length of the statement  "			int minSize = Orientation == Orientation.Horizontal ? children [0].SizeRequest ().Width : children [0].SizeRequest ().Height; " is 125.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,OnExposeEvent,The length of the statement  "	//render each row separately' so the theme treats each as a row' and they match the individual toolbars' themed painting " is 120.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,OnExposeEvent,The length of the statement  "			//otoh this could improve performance when only single rows are repainted' because we can intersect with invalidated area " is 121.
Long Statement,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,OnExposeEvent,The length of the statement  "			Style.PaintBox (bar.Style' evnt.Window' State' shadowType' invalidated' bar' "toolbar"' rowArea.X' rowArea.Y' rowArea.Width' rowArea.Height); " is 141.
Long Statement,MonoDevelop.Components.PropertyGrid,EditorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\EditorManager.cs,GetEditor,The length of the statement  "		throw new Exception ("The property editor '" + editorType + "' must be a subclass of Stetic.PropertyEditorCell or implement Stetic.IPropertyEditor"); " is 149.
Long Statement,MonoDevelop.Components.PropertyGrid,EditorManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\EditorManager.cs,GetEditorType,The length of the statement  "			UITypeEditor UITypeEd = (UITypeEditor) pd.GetEditor(typeof (System.Drawing.Design.UITypeEditor));//first' does it have custom editors?" is 134.
Long Statement,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,UpdateTabs,The length of the statement  "	bool visible = currentObject != null && toolbar.Children.OfType<TabRadioToolButton> ().Count (but => but.Tab.CanExtend (currentObject)) > 1; " is 140.
Long Statement,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The length of the statement  "			r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh); " is 140.
Long Statement,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The length of the statement  "			CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2); " is 123.
Long Statement,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,ShowTooltipWindow,The length of the statement  "				var multiLineValue = string.Join (Environment.NewLine' Enumerable.Range (0' (int)Math.Ceiling ((double)value.Length / chunkLength)).Select (n => string.Concat (value.Skip (n * chunkLength).Take (chunkLength)))); " is 211.
Long Statement,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,ShowTooltipWindow,The length of the statement  "		tooltipWindow.ShowPopup (this' new Gdk.Rectangle (0' row.EditorBounds.Y' Allocation.Width' row.EditorBounds.Height)' PopupPosition.Right); " is 138.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,CharPropertyEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CharPropertyEditor.cs,Initialize,The length of the statement  "		throw new ApplicationException ("Char editor does not support editing values of type " + session.Property.PropertyType); " is 120.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,ColorEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\ColorEditorCell.cs,Initialize,The length of the statement  "		throw new ApplicationException ("Color editor does not support editing values of type " + session.Property.PropertyType); " is 121.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,IntRangeEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\IntRange.cs,Initialize,The length of the statement  "		throw new ApplicationException ("IntRange editor does not support editing values of type " + session.Property.PropertyType); " is 124.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditor.cs,Initialize,The length of the statement  "		object[] atts = session.Property.Converter.GetType ().GetCustomAttributes (typeof(StandardValuesSeparatorAttribute)' true); " is 123.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\BooleanEditorCell.cs,Render,The length of the statement  "	Gtk.Style.PaintCheck (Container.Style' window' state' sh' bounds' Container' "checkbutton"' bounds.X + indicatorSpacing - 1' bounds.Y + (bounds.Height - s) / 2' s' s); " is 167.
Long Statement,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\BooleanEditorCell.cs,Initialize,The length of the statement  "		throw new ApplicationException ("Boolean editor does not support editing values of type " + session.Property.PropertyType); " is 123.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawPie,The length of the statement  "	using (RadialGradient fill = new RadialGradient (Context.X' Context.Y' 0' Context.X' Context.Y' 2.0 * Context.Radius)) { " is 120.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawFrameBorder,The length of the statement  "	CairoExtensions.RoundedRectangle (cr' alloc.X + offset' alloc.Y + offset' alloc.Width - cr.LineWidth' alloc.Height - cr.LineWidth' Context.Radius' CairoCorners.All); " is 165.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawFrameBorderFocused,The length of the statement  "	CairoExtensions.RoundedRectangle (cr' alloc.X + offset' alloc.Y + offset' alloc.Width - cr.LineWidth' alloc.Height - cr.LineWidth' Context.Radius' CairoCorners.All); " is 165.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The length of the statement  "	Cairo.Color stroke_color = CairoExtensions.ColorShade (Colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected)' 0.8); " is 130.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The length of the statement  "	CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (margin + line_width) * 2.0 - right_offset' alloc.Height - (margin + line_width) * 2.0 - top_offset' Context.Radius / 2.0' CairoCorners.None); " is 284.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The length of the statement  "	CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (line_width + margin) * 2.0 - right_offset' alloc.Height - (line_width + margin) * 2.0 - right_offset' Context.Radius / 2.0' CairoCorners.All); " is 285.
Long Statement,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowCursor,The length of the statement  "	CairoExtensions.RoundedRectangle (cr' x + cr.LineWidth / 2.0' y + cr.LineWidth / 2.0' width - cr.LineWidth' height - cr.LineWidth' Context.Radius' corners' true); " is 162.
Long Statement,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawFrameBackground,The length of the statement  "	DrawFrameBackground (cr' alloc' baseColor ? colors.GetWidgetColor (GtkColorClass.Base' StateType.Normal) : colors.GetWidgetColor (GtkColorClass.Background' StateType.Normal)); " is 175.
Long Statement,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawListBackground,The length of the statement  "	DrawListBackground (cr' alloc' baseColor ? colors.GetWidgetColor (GtkColorClass.Base' StateType.Normal) : colors.GetWidgetColor (GtkColorClass.Background' StateType.Normal)); " is 174.
Long Statement,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,DrawRowSelection,The length of the statement  "	DrawRowSelection (cr' x' y' width' height' filled' true' colors.GetWidgetColor (GtkColorClass.Background' StateType.Selected)' CairoCorners.All); " is 145.
Long Statement,MonoDevelop.Components.Docking,CrossfadeIcon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,RenderIcon,The length of the statement  "	context.SetSourceSurface (surface.Surface' Allocation.X + (Allocation.Width - surface.Width) / 2' Allocation.Y + (Allocation.Height - surface.Height) / 2); " is 155.
Long Statement,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,ScheduleAutoHide,The length of the statement  "			if (it.Widget.Visible && it.Widget.IsRealized && it.Widget.Allocation.Contains (px + it.Widget.Allocation.X' py + it.Widget.Allocation.Y) && !force) " is 148.
Long Statement,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,OnRealized,The length of the statement  "	attributes.EventMask = (int)(Events | Gdk.EventMask.ExposureMask | Gdk.EventMask.Button1MotionMask | Gdk.EventMask.ButtonPressMask | Gdk.EventMask.ButtonReleaseMask); " is 166.
Long Statement,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,OnRealized,The length of the statement  "	Gdk.WindowAttributesType attributes_mask = Gdk.WindowAttributesType.X | Gdk.WindowAttributesType.Y | Gdk.WindowAttributesType.Colormap | Gdk.WindowAttributesType.Visual; " is 169.
Long Statement,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,ToCairoColor,The length of the statement  "	return new Cairo.Color (color.Red / (double)ushort.MaxValue' color.Green / (double)ushort.MaxValue' color.Blue / (double)ushort.MaxValue); " is 138.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,IsSelectedPage,The length of the statement  "	if (type != DockGroupType.Tabbed || boundTabStrip == null || boundTabStrip.CurrentTab == -1 || VisibleObjects == null || boundTabStrip.CurrentTab >= VisibleObjects.Count) " is 170.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "		var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1]; " is 120.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "			rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height); " is 146.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "			if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) { " is 171.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "				rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height); " is 153.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "			rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize); " is 146.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "			if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) { " is 173.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The length of the statement  "				rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize); " is 153.
Long Statement,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,Dump,The length of the statement  "	Console.WriteLine (new string (' '' ind) + "Group (" + type + ") size:" + Size + " DefaultSize:" + DefaultSize + " alloc:" + Allocation); " is 137.
Long Statement,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SizeAllocate,The length of the statement  "	if ((ParentGroup.Type != DockGroupType.Tabbed || ParentGroup.VisibleObjects.Count == 1) && (item.Behavior & DockItemBehavior.NoGrip) == 0) { " is 140.
Long Statement,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The length of the statement  "					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2);" is 127.
Long Statement,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The length of the statement  "			outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2); " is 134.
Long Statement,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The length of the statement  "	Gdk.Rectangle geometry = Mono.TextEditor.GtkWorkarounds.GetUsableMonitorGeometry (Screen' Screen.GetMonitorAtPoint (x' y)); " is 123.
Long Statement,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnMotionNotifyEvent,The length of the statement  "	if (tabPressed && !item.Behavior.HasFlag (DockItemBehavior.NoGrip) && Math.Abs (evnt.X - pressX) > 3 && Math.Abs (evnt.Y - pressY) > 3) { " is 137.
Long Statement,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawAsBrowser,The length of the statement  "		gc.RgbFgColor = tabStrip != null ? tabStrip.VisualStyle.InactivePadBackgroundColor.Value : frame.DefaultVisualStyle.InactivePadBackgroundColor.Value; " is 149.
Long Statement,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The length of the statement  "					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2);" is 140.
Long Statement,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The length of the statement  "					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2);" is 136.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,PreProcessKeyEvent,The length of the statement  "			//					if ((modifier & ~(Gdk.ModifierType.LockMask | (Gdk.ModifierType.ModifierMask & ~(Gdk.ModifierType.ShiftMask | Gdk.ModifierType.Mod1Mask | Gdk.ModifierType.ControlMask | Gdk.ModifierType.MetaMask | Gdk.ModifierType.SuperMask)))) != 0) { " is 242.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,PreProcessKeyEvent,The length of the statement  "			if ((modifier & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.Mod1Mask | Gdk.ModifierType.ControlMask | Gdk.ModifierType.MetaMask | Gdk.ModifierType.SuperMask)) != 0) { " is 169.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,Reposition,The length of the statement  "	Gdk.Rectangle geometry = DesktopService.GetUsableMonitorGeometry (Screen' Screen.GetMonitorAtPoint (X + TextOffset' Y)); " is 120.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,UpdateDeclarationView,The length of the statement  "	if (completionDataList == null || List.SelectionFilterIndex >= completionDataList.Count || List.SelectionFilterIndex == -1) { " is 125.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,RepositionDeclarationViewWindow,The length of the statement  "	declarationviewwindow.ShowPopup (this' new Gdk.Rectangle (Gui.Styles.TooltipInfoSpacing' Math.Min (Allocation.Height' Math.Max (0' y))' Allocation.Width' rect.Height)' PopupPosition.Left); " is 188.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,GetMarkup,The length of the statement  "	if (!completionData.HasOverloads && completionData.DisplayFlags.HasFlag (DisplayFlags.Obsolete) || completionData.OverloadedData.All (data => data.DisplayFlags.HasFlag (DisplayFlags.Obsolete))) " is 193.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,ResetSizes,The length of the statement  "	int height = Math.Max (Allocation.Height' list.HeightRequest + 2 + (footer != null ? footer.Allocation.Height : 0) + Theme.CornerRadius * 2); " is 141.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The length of the statement  "		scrollbar.Vadjustment.Value = Math.Max (0' Math.Min (scrollbar.Vadjustment.Upper - scrollbar.Vadjustment.PageSize' scrollbar.Vadjustment.Value + scrollbar.Vadjustment.PageSize)); " is 178.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The length of the statement  "	// special case end with punctuation like 'param:' -> don't input double punctuation' otherwise we would end up with 'param::' " is 126.
Long Statement,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The length of the statement  "		var completionWindow = new Rectangle (CompletionWindowManager.X' CompletionWindowManager.Y' CompletionWindowManager.Wnd.Allocation.Width' CompletionWindowManager.Wnd.Allocation.Height); " is 185.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionData.cs,GetCurrentWord,The length of the statement  "	int endOffset = Math.Min (window.CodeCompletionContext.TriggerOffset + replaceLength' window.CompletionWidget.TextLength); " is 122.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionData.cs,ToString,The length of the statement  "	return string.Format ("[CompletionData: Icon={0}' DisplayText={1}' Description={2}' CompletionText={3}' DisplayFlags={4}]"' Icon' DisplayText' Description' CompletionText' DisplayFlags); " is 186.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionData,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionData.cs,Compare,The length of the statement  "	var result = ((a.DisplayFlags & DisplayFlags.Obsolete) == (b.DisplayFlags & DisplayFlags.Obsolete)) ? StringComparer.OrdinalIgnoreCase.Compare (a.DisplayText' b.DisplayText) : (a.DisplayFlags & DisplayFlags.Obsolete) != 0 ? 1 : -1; " is 231.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The length of the statement  "			//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>"); " is 182.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The length of the statement  "			//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>"); " is 161.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The length of the statement  "			categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized")); " is 125.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The length of the statement  "			string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>"); " is 177.
Long Statement,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The length of the statement  "						var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue)); " is 167.
Long Statement,MonoDevelop.Ide.CodeCompletion,CodeCompletionContext,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CodeCompletionContext.cs,ToString,The length of the statement  "	return string.Format ("[CodeCompletionContext: TriggerOffset={0}' TriggerLine={1}' TriggerLineOffset={2}' TriggerXCoord={3}' TriggerYCoord={4}' TriggerTextHeight={5}' TriggerWordLength={6}]"' TriggerOffset' TriggerLine' TriggerLineOffset' TriggerXCoord' TriggerYCoord' TriggerTextHeight' TriggerWordLength); " is 307.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionCharacters,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionCharacters.cs,Get,The length of the statement  "	return GetCompletionCharacters ().FirstOrDefault (c => c.Language == completionLanguage) ?? FallbackCompletionCharacters; " is 121.
Long Statement,MonoDevelop.Ide.CodeCompletion,CompletionCharacters,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionCharacters.cs,ToString,The length of the statement  "	return string.Format ("[CompletionCharacters: Language={0}' CompleteOnSpace={1}' CompleteOnChars={2}]"' Language' CompleteOnSpace' CompleteOnChars); " is 148.
Long Statement,MonoDevelop.Ide.Desktop,RecentFileStorage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\RecentFileStorage.cs,RemoveMissingFiles,The length of the statement  "	ModifyStore (list => RemoveMatches (list' item => item.IsFile && groups.Any (g => item.IsInGroup (g)) && !File.Exists (item.LocalPath))); " is 137.
Long Statement,MonoDevelop.Ide.Desktop,RecentFiles,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\RecentOpen.cs,AddFile,The length of the statement  "	var displayName = projectName != null ? string.Format ("{0} [{1}]"' Path.GetFileName (fileName)' projectName) : Path.GetFileName (fileName); " is 140.
Long Statement,MonoDevelop.Ide.Projects,ProjectOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectOptionsDialog.cs,RenameItem,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("Illegal project name.\nOnly use letters' digits' space' '.' or '_'.")); " is 124.
Long Statement,MonoDevelop.Ide.Projects,ProjectOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectOptionsDialog.cs,RenameItem,The length of the statement  "			LoggingService.LogError ("File {0} was renamed to {1} instead of {2}."' item.FileName' item.FileName.FileName' newFile.FileName); " is 129.
Long Statement,MonoDevelop.Ide.Projects,RenameConfigDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\RenameConfigDialog.cs,OnButtonOkClicked,The length of the statement  "		MessageService.ShowWarning (GettextCatalog.GetString ("A configuration with the name '{0}' already exists."' ConfigName)); " is 122.
Long Statement,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,InsertCategories,The length of the statement  "			InsertCategories (catStore.AppendValues (node' category.Name' category.Categories' category.Templates)' category.Categories); " is 125.
Long Statement,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,CheckedChange,The length of the statement  "	//((ListView)ControlDictionary["templateListView"]).View = ((RadioButton)ControlDictionary["smallIconsRadioButton"]).Checked ? View.List : View.LargeIcon; " is 154.
Long Statement,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,OpenEvent,The length of the statement  "	//PropertyService.Set("Dialogs.NewProjectDialog.LargeImages"' ((RadioButton)ControlDictionary["largeIconsRadioButton"]).Checked); " is 129.
Long Statement,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,AddToProjectComboChanged,The length of the statement  "		if (basePath == null || basePath == String.Empty || (parentProject != null && basePath == parentProject.BaseDirectory)) { " is 121.
Long Statement,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,GetValidDir,The length of the statement  "		if (c == System.IO.Path.DirectorySeparatorChar || c == System.IO.Path.AltDirectorySeparatorChar || c == System.IO.Path.VolumeSeparatorChar) " is 139.
Long Statement,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The length of the statement  "		PropertyService.Set ("Dialogs.NewProjectDialog.LastSelectedCategory"' ((ProjectTemplate)templateView.CurrentlySelected).Category); " is 130.
Long Statement,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The length of the statement  "		//PropertyService.Set("Dialogs.NewProjectDialog.LargeImages"' ((RadioButton)ControlDictionary["largeIconsRadioButton"]).Checked); " is 129.
Long Statement,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The length of the statement  "	if ((CreateSolutionDirectory && !FileService.IsValidPath (solution)) || !FileService.IsValidFileName (name) || name.IndexOf (' ') >= 0 || !FileService.IsValidPath (location)) { " is 176.
Long Statement,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The length of the statement  "			var btn = MessageService.AskQuestion (GettextCatalog.GetString ("Directory {0} already exists.\nDo you want to continue the Project creation?"' ProjectLocation)' AlertButton.No' AlertButton.Yes); " is 195.
Long Statement,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,ActivateIfReady,The length of the statement  "	if (templateView.CurrentlySelected == null || !txt_name.Sensitive || txt_name.Text.Trim () == "" || (txt_subdirectory.Sensitive && chk_combine_directory.Active && txt_subdirectory.Text.Trim ().Length == 0)) " is 206.
Long Statement,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The length of the statement  "		dit = store.AppendValues (iter' false' DesktopService.GetPixbufForFile (dir' IconSize.Menu)' dir.FileName.ToString ()' dir.ToString ()); " is 136.
Long Statement,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The length of the statement  "		dit = store.AppendValues (false' DesktopService.GetPixbufForFile (dir' IconSize.Menu)' dir.FileName.ToString ()' dir.ToString ()); " is 130.
Long Statement,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,HandleDeleteButtonClicked,The length of the statement  "	if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to delete the policy '{0}'?"' currentSet.Name)' AlertButton.Delete)) " is 146.
Long Statement,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,HandleFromFile,The length of the statement  "	dlg.AddFilter (BrandingService.BrandApplicationName (GettextCatalog.GetString ("MonoDevelop policy files"))' "*.mdpolicy"); " is 123.
Long Statement,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,HandleToFile,The length of the statement  "	dlg.AddFilter (BrandingService.BrandApplicationName (GettextCatalog.GetString ("MonoDevelop policy files"))' "*.mdpolicy"); " is 123.
Long Statement,MonoDevelop.Ide.Projects,NewConfigurationDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewConfigurationDialog.cs,OnOkbutton1Clicked,The length of the statement  "		MessageService.ShowWarning (this' GettextCatalog.GetString ("A configuration with the name '{0}' already exists."' ConfigName)); " is 128.
Long Statement,MonoDevelop.Ide.Projects,ProjectFileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectFileSelectorDialog.cs,FileListKeyPressEvent,The length of the statement  "	if (args.Event.Key == Gdk.Key.Escape || args.Event.Key == Gdk.Key.BackSpace || (args.Event.Key == Gdk.Key.Left && (args.Event.State & modifiers) == 0)) { " is 153.
Long Statement,MonoDevelop.Ide.Projects,ProjectReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectReferencePanel.cs,PopulateListView,The length of the statement  "		Gtk.TreeIter it = store.AppendValues (txt' projectEntry.BaseDirectory.ToString ()' projectEntry' selected' icon' allowSelecting); " is 129.
Long Statement,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,AddAssemplyReference,The length of the statement  "	txt += "<span color='darkgrey'><small>" + GLib.Markup.EscapeText (System.IO.Path.GetFullPath (refInfo.Reference)) + "</small></span>"; " is 134.
Long Statement,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,AddAssemplyReference,The length of the statement  "	return refTreeStore.AppendValues (txt' GetTypeText (refInfo)' System.IO.Path.GetFullPath (refInfo.Reference)' refInfo' ImageService.GetPixbuf ("md-empty-file-icon"' IconSize.Dnd)); " is 180.
Long Statement,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,AddProjectReference,The length of the statement  "	return refTreeStore.AppendValues (txt' GetTypeText (refInfo)' p.BaseDirectory.ToString ()' refInfo' ImageService.GetPixbuf ("md-project"' IconSize.Dnd)); " is 153.
Long Statement,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,AddPackageReference,The length of the statement  "		txt = GLib.Markup.EscapeText (txt.Substring (0' i)) + "\n<span color='darkgrey'><small>" + GLib.Markup.EscapeText (refInfo.Reference.Substring (i + 1).Trim ()) + "</small></span>"; " is 180.
Long Statement,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,AddPackageReference,The length of the statement  "	return refTreeStore.AppendValues (txt' GetTypeText (refInfo)' refInfo.Reference' refInfo' ImageService.GetPixbuf ("md-package"' IconSize.Dnd)); " is 143.
Long Statement,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,GetValidDir,The length of the statement  "		if (c == System.IO.Path.DirectorySeparatorChar || c == System.IO.Path.AltDirectorySeparatorChar || c == System.IO.Path.VolumeSeparatorChar) " is 139.
Long Statement,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,UpdateState,The length of the statement  "	bool ready = FileService.IsValidFileName (Name) && GetValidDir (Name).Length > 0 && FileService.IsValidPath (Location) && (!ShowSolutionOptions || !CreateSolutionDirectory || (FileService.IsValidFileName (Name) && GetValidDir (SolutionName).Length > 0)); " is 254.
Long Statement,MonoDevelop.Ide.Projects,ExportProjectPolicyDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ExportProjectPolicyDialog.cs,OnButtonOkClicked,The length of the statement  "		if (System.IO.File.Exists (file) && !MessageService.Confirm (GettextCatalog.GetString ("The file {0} already exists. Do you want to replace it?"' file)' AlertButton.Replace)) " is 174.
Long Statement,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,Reset,The length of the statement  "		store.AppendValues (name' version' systemAssembly' selected' systemAssembly.FullName' pkg' MonoDevelop.Ide.Gui.Stock.Package' matchRank' ReferenceType.Package); " is 160.
Long Statement,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,Reset,The length of the statement  "			store.AppendValues (name' ""' null' selected' projectEntry.Name' ""' projectEntry.StockIcon' matchRank' ReferenceType.Project); " is 127.
Long Statement,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,Reset,The length of the statement  "			store.AppendValues (name' version' null' selected' (string)file' GLib.Markup.EscapeText (file)' MonoDevelop.Ide.Gui.Stock.OpenFolder' matchRank' ReferenceType.Assembly); " is 169.
Long Statement,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,GetMatchMarkup,The length of the statement  "	var color = Mono.TextEditor.HslColor.GenerateHighlightColors (widget.Style.Base (StateType.Normal)' widget.Style.Text (StateType.Normal)' 3) [2]; " is 145.
Long Statement,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,Sort,The length of the statement  "	result = String.Compare ((string)model.GetValue (left' 0)' (string)model.GetValue (right' 0)' StringComparison.InvariantCultureIgnoreCase); " is 139.
Long Statement,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,Sort,The length of the statement  "	return String.Compare ((string)model.GetValue (left' ColVersion)' (string)model.GetValue (right' ColVersion)' StringComparison.InvariantCultureIgnoreCase); " is 155.
Long Statement,MonoDevelop.Ide.Projects,IdeFileSystemExtensionExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\IdeFileSystemExtensionExtension.cs,RequestFileEdit,The length of the statement  "	var res = MessageService.AskQuestion (error' GettextCatalog.GetString ("Would you like {0} to attempt to make the file writable and try again?"' BrandingService.ApplicationName)' btn' AlertButton.Cancel); " is 204.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CodeFormattingPanelWidget.cs,Build,The length of the statement  "	this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("This is a summary of all file types used in the project or solution:"); " is 133.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CombineConfigurationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineConfigurationPanelWidget.cs,Build,The length of the statement  "	this.label104.LabelProp = global::Mono.Unix.Catalog.GetString ("Select a target configuration for each solution item:"); " is 120.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandPanelWidget.cs,Build,The length of the statement  "	this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("MonoDevelop can execute user specified commands or scripts before' after or as a replacement of common project operations. It is also possible to enter custom commands which will be available in the project or solution menu."); " is 289.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The length of the statement  "	// Container child MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.Gtk.Container+ContainerChild " is 121.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The length of the statement  "	this.checkAssociateNamespacesDirectories.Label = global::Mono.Unix.Catalog.GetString ("_Associate namespaces with directory names"); " is 132.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The length of the statement  "	this.checkVSStyleResourceNames.Label = global::Mono.Unix.Catalog.GetString ("<b>Use _Visual Studio-style resource names</b>\nVisual Studio generates a default ID for embedded resources'\ninstead of simply using the resource's filename."); " is 238.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The length of the statement  "	this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Use _Visual Studio-style resource names</b>\nVisual Studio generates a default ID for embedded resources' instead of simply using the resource's filename."); " is 222.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CombineEntryConfigurationsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineEntryConfigurationsPanelWidget.cs,Build,The length of the statement  "	// Container child MonoDevelop.Ide.Projects.OptionPanels.CombineEntryConfigurationsPanelWidget.Gtk.Container+ContainerChild " is 123.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,Initialize,The length of the statement  "	foreach (MimeTypeOptionsPanelNode node in AddinManager.GetExtensionNodes ("/MonoDevelop/ProjectModel/Gui/MimeTypePolicyPanels")) " is 128.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,AddPanel,The length of the statement  "	var chain = new List<string> (DesktopService.GetMimeTypeInheritanceChain (mt).Where (x => mimeTypesWithPolicies.Contains (x))); " is 127.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,LoadPolicyTypeData,The length of the statement  "	foreach (MimeTypeOptionsPanelNode node in AddinManager.GetExtensionNodes ("/MonoDevelop/ProjectModel/Gui/MimeTypePolicyPanels")) { " is 130.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,LoadPolicyTypeData,The length of the statement  "		IMimeTypePolicyOptionsPanel panel = (IMimeTypePolicyOptionsPanel)node.CreateInstance (typeof(IMimeTypePolicyOptionsPanel)); " is 123.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CodeFormattingPanel.cs,GetItemMimeTypes,The length of the statement  "		foreach (MimeTypeOptionsPanelNode node in AddinManager.GetExtensionNodes ("/MonoDevelop/ProjectModel/Gui/MimeTypePolicyPanels")) { " is 130.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CustomCommandPanel.cs,LoadConfigData,The length of the statement  "	widget.Load (ConfiguredSolutionItem' CurrentConfiguration.CustomCommands' CurrentConfiguration.Selector' supportedTypes); " is 121.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\NamespaceSynchronisationPanel.cs,ValidateChanges,The length of the statement  "		string detail = "Changing the resource naming policy may cause run-time errors if the code using resources is not properly updated. There are two options:\n\n"; " is 160.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\NamespaceSynchronisationPanel.cs,ValidateChanges,The length of the statement  "		detail += GettextCatalog.GetString ("Update all resource identifiers to match the new policy. This will require changes in the source code that references resources using the old policy. Identifiers explicitly set using the file properties pad won't be changed.\n\n"); " is 268.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\NamespaceSynchronisationPanel.cs,ValidateChanges,The length of the statement  "		detail += "Keep curent resource identifiers. It doesn't require source code changes. Resources added from now on will use the new policy)"; " is 139.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	NetPortableProfile1 = Runtime.SystemAssemblyService.GetTargetFramework (new TargetFrameworkMoniker (".NETPortable"' "4.0"' "Profile1")); " is 136.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	SupportedFramework NetFramework = new SupportedFramework (NetPortableProfile1' ".NETFramework"' ".NET Framework"' "*"' new Version (4' 0)' "4"); " is 144.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	SupportedFramework Silverlight = new SupportedFramework (NetPortableProfile1' "Silverlight"' "Silverlight"' ""' new Version (4' 0)' "4"); " is 137.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	SupportedFramework WindowsPhone = new SupportedFramework (NetPortableProfile1' "Silverlight"' "Windows Phone"' "WindowsPhone*"' new Version (4' 0)' "7"); " is 153.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	SupportedFramework Xbox = new SupportedFramework (NetPortableProfile1' "Xbox"' "Xbox 360"' "*"' new Version (4' 0)' ""); " is 120.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	NetPortableProfile2 = Runtime.SystemAssemblyService.GetTargetFramework (new TargetFrameworkMoniker (".NETPortable"' "4.0"' "Profile2")); " is 136.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	NetFramework = new SupportedFramework (NetPortableProfile2' ".NETFramework"' ".NET Framework"' "*"' new Version (4' 0)' "4"); " is 125.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	WindowsPhone = new SupportedFramework (NetPortableProfile2' "Silverlight"' "Windows Phone"' "WindowsPhone*"' new Version (4' 0)' "7"); " is 134.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	NetPortableProfile3 = Runtime.SystemAssemblyService.GetTargetFramework (new TargetFrameworkMoniker (".NETPortable"' "4.0"' "Profile3")); " is 136.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	NetFramework = new SupportedFramework (NetPortableProfile3' ".NETFramework"' ".NET Framework"' "*"' new Version (4' 0)' "4"); " is 125.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	NetPortableProfile4 = Runtime.SystemAssemblyService.GetTargetFramework (new TargetFrameworkMoniker (".NETPortable"' "4.0"' "Profile4")); " is 136.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The length of the statement  "	WindowsPhone = new SupportedFramework (NetPortableProfile4' "Silverlight"' "Windows Phone"' "WindowsPhone*"' new Version (4' 0)' "7"); " is 134.
Long Statement,MonoDevelop.Ide.Projects.OptionPanels,CombineMSBuildOptions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CombineMSBuildOptions.cs,CreatePanelWidget,The length of the statement  "	checkMSBuild = new Xwt.CheckBox (byDefault ? GettextCatalog.GetString ("Use MSBuild build engine (recommended for this project type)") : GettextCatalog.GetString ("Use MSBuild build engine (unsupported for this project type)")) { " is 229.
Long Statement,MonoDevelop.Ide.Navigation,NavigationHistoryService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Navigation\NavigationHistoryService.cs,LogActiveDocument,The length of the statement  "	if (Current == null || (currentIsTransient && DateTime.Now.Subtract (Current.Created).TotalMilliseconds > TRANSIENT_TIMEOUT)) { " is 127.
Long Statement,MonoDevelop.Ide.Navigation,HistoryList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Navigation\HistoryList.cs,AddPoint,The length of the statement  "	if (forward.First != null && (DateTime.Now - forward.First.Value.Visited).TotalSeconds > FORWARD_HISTORY_TIMEOUT_SECONDS) { " is 123.
Long Statement,MonoDevelop.Ide.Fonts,FontChooserPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Fonts\FontChooserPanelWidget.cs,LoadFonts,The length of the statement  "		fontStore.AppendValues (GettextCatalog.GetString (desc.DisplayName)' FontService.GetUnderlyingFontName (desc.Name)' desc.Name); " is 127.
Long Statement,MonoDevelop.Ide.OnlineTemplates,ProjectTemplateDescription,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.OnlineTemplates\ProjectTemplateIndex.cs,Write,The length of the statement  "	return new XElement ("ProjectTemplate"' new XAttribute ("modified"' Modified)' new XElement ("Name"' Name)' new XElement ("Summary"' Summary)' new XElement ("Description"' Description)' new XElement ("Author"' Author)' new XElement ("Tags"' Tags)' new XElement ("IconUrl"' IconUrl)' new XElement ("TemplateUrl"' TemplateUrl)' new XElement ("ScreenshotUrl"' ScreenshotUrl)); " is 373.
Long Statement,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildNode,The length of the statement  "	label = AmbienceService.DefaultAmbience.GetString (classData.Class.GetDefinition ()' OutputFlags.ClassBrowserEntries | OutputFlags.IncludeMarkup); " is 146.
Long Statement,MonoDevelop.Ide.Gui.Pads.ClassPad,NamespaceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\NamespaceNodeBuilder.cs,Initialize,The length of the statement  "	/*			changeClassInformationHandler = (ClassInformationEventHandler) DispatchService.GuiDispatch (new ClassInformationEventHandler (OnClassInformationChanged));" is 159.
Long Statement,MonoDevelop.Ide.Gui.Pads.ClassPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ProjectNodeBuilder.cs,Initialize,The length of the statement  "	//			compilationUnitUpdated = (EventHandler<TypeUpdateInformationEventArgs>) DispatchService.GuiDispatch (new EventHandler<TypeUpdateInformationEventArgs> (OnClassInformationChanged)); " is 184.
Long Statement,MonoDevelop.Ide.Gui.Pads.ClassPad,SolutionNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\SolutionNodeBuilder.cs,RenameItem,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("Solution name may not contain any of the following characters: {0}"' "'' (' )' \"' {' }' |")); " is 147.
Long Statement,MonoDevelop.Ide.Gui.Pads.ClassPad,SolutionNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\SolutionNodeBuilder.cs,RemoveItem,The length of the statement  "	AlertButton res = MessageService.AskQuestion (GettextCatalog.GetString ("Do you really want to remove solution {0} from workspace {1}?"' solution.Name' parent.Name)' AlertButton.Remove); " is 186.
Long Statement,MonoDevelop.Ide.Updater,UpdateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Updater\UpdateService.cs,CheckForUpdates,The length of the statement  "	IProgressMonitor mon = IdeApp.Workbench.ProgressMonitors.GetBackgroundProgressMonitor ("Looking for updates"' "md-software-update"); " is 132.
Long Statement,MonoDevelop.Ide.Updater,UpdateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Updater\UpdateService.cs,CheckUpdates,The length of the statement  "			LoggingService.LogError ("Updates check failed for handler of type '" + handlers [handlers.Length - 1].GetType () + "'"' ex); " is 125.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The length of the statement  "	var btn = new WelcomePageListButton (GettextCatalog.GetString ("New...")' null' newProjectIcon' "monodevelop://MonoDevelop.Ide.Commands.FileCommands.NewProject"); " is 162.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The length of the statement  "	btn = new WelcomePageListButton (GettextCatalog.GetString ("Open...")' null' openProjectIcon' "monodevelop://MonoDevelop.Ide.Commands.FileCommands.OpenFile"); " is 158.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The length of the statement  "		var button = new WelcomePageListButton (recent.DisplayName' System.IO.Path.GetDirectoryName (filename)' pixbuf' "project://" + filename); " is 137.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,TimeSinceEdited,The length of the statement  "		return GettextCatalog.GetPluralString ("Last opened {0} days ago"' "Last opened {0} days ago"' sincelast.Days' sincelast.Days); " is 127.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,TimeSinceEdited,The length of the statement  "		return GettextCatalog.GetPluralString ("Last opened {0} hour ago"' "Last opened {0} hours ago"' sincelast.Hours' sincelast.Hours); " is 130.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,TimeSinceEdited,The length of the statement  "		return GettextCatalog.GetPluralString ("Last opened {0} minute ago"' "Last opened {0} minutes ago"' sincelast.Minutes' sincelast.Minutes); " is 138.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The length of the statement  "		var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2); " is 147.
Long Statement,MonoDevelop.Ide.WelcomePage,Styles,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\Style.cs,GetFormatString,The length of the statement  "	return "<span font=\"" + fontFace + " " + fontSize + "px\" foreground=\"" + color + "\" font_weight=\"" + (bold ? "bold" : "normal") + "\">{0}</span>"; " is 151.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,OnButtonReleaseEvent,The length of the statement  "	if (evnt.Button == 1 && new Gdk.Rectangle (0' 0' Allocation.Width' Allocation.Height).Contains ((int)evnt.X' (int)evnt.Y)) { " is 124.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The length of the statement  "		var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows; " is 122.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The length of the statement  "		titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title)); " is 181.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The length of the statement  "			subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle)); " is 185.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageBarButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageBarButton.cs,OnButtonReleaseEvent,The length of the statement  "	if (evnt.Button == 1 && new Gdk.Rectangle (0' 0' Allocation.Width' Allocation.Height).Contains ((int)evnt.X' (int)evnt.Y)) { " is 124.
Long Statement,MonoDevelop.Ide.WelcomePage,DefaultWelcomePage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\DefaultWelcomePage.cs,BuildContent,The length of the statement  "	row1.PackStart (new WelcomePageButtonBar (new WelcomePageBarButton ("MonoDevelop.com"' "http://www.monodevelop.com"' "link-cloud.png")' new WelcomePageBarButton (GettextCatalog.GetString ("Documentation")' "http://www.go-mono.com/docs"' "link-info.png")' new WelcomePageBarButton (GettextCatalog.GetString ("Support")' "http://monodevelop.com/index.php?title=Help_%26_Contact"' "link-heart.png")' new WelcomePageBarButton (GettextCatalog.GetString ("Q&A")' "http://stackoverflow.com/questions/tagged/monodevelop"' "link-chat.png"))); " is 533.
Long Statement,MonoDevelop.Ide.WelcomePage,DefaultWelcomePage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\DefaultWelcomePage.cs,BuildContent,The length of the statement  "	var row2 = new WelcomePageRow (new WelcomePageColumn (new WelcomePageRecentProjectsList (GettextCatalog.GetString ("Solutions")))' new WelcomePageColumn (new WelcomePageNewsFeed (GettextCatalog.GetString ("Xamarin News")' "http://software.xamarin.com/Service/News"' "NewsLinks"))' new WelcomePageColumn (new WelcomePageTipOfTheDaySection ())); " is 343.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageProjectBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFrame.cs,UpdateContent,The length of the statement  "			messageLabel.Text = GettextCatalog.GetString ("The file '{0}' and other are currently open"' files [0].FileName.FileName); " is 122.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The length of the statement  "		new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200); " is 871.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The length of the statement  "	context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25); " is 133.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The length of the statement  "		RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout); " is 149.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnExposeEvent,The length of the statement  "		context.CachedDraw (ref backgroundSurface' main' opacity: (float)BackgroundOpacity' draw: (ctx' opacity) => RenderBackground (ctx' main)); " is 138.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnButtonReleaseEvent,The length of the statement  "		this.Animate ("FadeOut"' f => TitleOpacity = TextOpacity = IconOpacity = ButtonOpacity = BackgroundOpacity = f' start: 1' end: 0' finished: (f' aborted) => OnDismissed ()); " is 172.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,ButtonLayout,The length of the statement  "	layout.FontDescription = Pango.FontDescription.FromString (Platform.IsMac ? Styles.WelcomeScreen.FontFamilyMac : Styles.WelcomeScreen.FontFamilyWindows); " is 153.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,TitleLayout,The length of the statement  "	layout.FontDescription = Pango.FontDescription.FromString (Platform.IsMac ? Styles.WelcomeScreen.FontFamilyMac : Styles.WelcomeScreen.FontFamilyWindows); " is 153.
Long Statement,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,TextLayout,The length of the statement  "	layout.FontDescription = Pango.FontDescription.FromString (Platform.IsMac ? Styles.WelcomeScreen.FontFamilyMac : Styles.WelcomeScreen.FontFamilyWindows); " is 153.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,CreateCacheDirectory,The length of the statement  "		File.WriteAllText (Path.Combine (cacheDir' "data.xml")' string.Format ("<DerivedData><File name=\"{0}\" version =\"{1}\"/></DerivedData>"' fileName' CurrentVersion)); " is 166.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,DeserializeObject,The length of the statement  "		using (var fs = new FileStream (path' FileMode.Open' FileAccess.Read' FileShare.Read' 4096' FileOptions.SequentialScan)) { " is 122.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,DeserializeObject,The length of the statement  "		LoggingService.LogError ("Error while trying to deserialize " + typeof(T).FullName + ". stack trace:" + Environment.StackTrace' e); " is 131.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetProgramFilesX86,The length of the statement  "	return Environment.GetFolderPath (IntPtr.Size == 8 ? Environment.SpecialFolder.ProgramFilesX86 : Environment.SpecialFolder.ProgramFiles); " is 137.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,FindWindowsXmlDocumentation,The length of the statement  "	ClrVersion version = runtime != null && runtime.CustomFrameworks.Any () ? runtime.CustomFrameworks.First ().ClrVersion : ClrVersion.Default; " is 140.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,FindWindowsXmlDocumentation,The length of the statement  "		fileName = LookupLocalizedXmlDoc (Path.Combine (frameworkPath' "v2.0.50727"' assemblyFileName)) ?? LookupLocalizedXmlDoc (Path.Combine (referenceAssembliesPath' "v3.5")) ?? LookupLocalizedXmlDoc (Path.Combine (referenceAssembliesPath' "v3.0")) ?? LookupLocalizedXmlDoc (Path.Combine (referenceAssembliesPath' @".NETFramework\v3.5\Profile\Client")); " is 348.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,FindWindowsXmlDocumentation,The length of the statement  "		fileName = LookupLocalizedXmlDoc (Path.Combine (referenceAssembliesPath' @".NETFramework\v4.0"' assemblyFileName)) ?? LookupLocalizedXmlDoc (Path.Combine (frameworkPath' "v4.0.30319"' assemblyFileName)); " is 203.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetParseProgressMonitor,The length of the statement  "	var mon = ParseProgressMonitorFactory != null ? ParseProgressMonitorFactory.CreateProgressMonitor () : new NullProgressMonitor (); " is 130.
Long Statement,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetSummaryMarkup,The length of the statement  "				return ParseBody (member' new XmlTextReader (xmlText' XmlNodeType.Element' null)' "summary"' DocumentationFormatOptions.Empty); " is 127.
Long Statement,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,IsEmptyDocumentation,The length of the statement  "	return string.IsNullOrWhiteSpace (documentation) || documentation.StartsWith ("To be added") || documentation == "we have not entered docs yet"; " is 144.
Long Statement,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetCref,The length of the statement  "			ambience.ConversionFlags = ConversionFlags.ShowParameterList | ConversionFlags.ShowParameterNames | ConversionFlags.ShowTypeParameterList; " is 138.
Long Statement,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,IsSpecialChar,The length of the statement  "	return 0x01 <= charValue && charValue <= 0x08 || 0x0B <= charValue && charValue <= 0x0C || 0x0E <= charValue && charValue <= 0x1F || 0x7F <= charValue && charValue <= 0x84 || 0x86 <= charValue && charValue <= 0x9F; " is 214.
Long Statement,MonoDevelop.Ide.TypeSystem,FoldingUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\ParsedDocument.cs,ToFolds,The length of the statement  "			if (curComment == null || !curComment.CommentStartsLine || curComment.CommentType != comment.CommentType || curLine + 1 != curComment.Region.BeginLine) " is 151.
Long Statement,MonoDevelop.Ide.TypeSystem,Comment,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\Comment.cs,ToString,The length of the statement  "	return string.Format ("[Comment: OpenTag={0}' ClosingTag={1}' Region={3}' IsDocumentation={4}' CommentStartsLine={5}' CommentType={6}]"' OpenTag' ClosingTag' Text' Region' IsDocumentation' CommentStartsLine' CommentType); " is 221.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,InsertMemberWithCursor,The length of the statement  "		var mode = new InsertionCursorEditMode (editor.Parent' CodeGenerationService.GetInsertionPoints (loadedDocument' declaringType)); " is 129.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,InsertMemberWithCursor,The length of the statement  "			MessageService.ShowError (GettextCatalog.GetString ("No valid insertion point can be found in type '{0}'."' declaringType.Name)); " is 129.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,InsertMember,The length of the statement  "			MessageService.ShowError (GettextCatalog.GetString ("No valid insertion point can be found in type '{0}'."' declaringType.Name)); " is 129.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,AddNewMembers,The length of the statement  "		sb.Append (generator.CreateMemberImplementation (type' part' newMember' implementExplicit != null ? implementExplicit (newMember) : false).Code); " is 145.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,AddNewMembers,The length of the statement  "	suitableInsertionPoint.Insert (data' string.IsNullOrEmpty (regionName) ? sb.ToString () : generator.WrapInRegions (regionName' sb.ToString ())); " is 144.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The length of the statement  "		result.Add (new InsertionPoint (new DocumentLocation (type.BodyRegion.EndLine' col)' insertLine' NewLineInsertion.Eol)); " is 120.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The length of the statement  "		result.Add (new InsertionPoint (new DocumentLocation (region.Region.BeginLine + 1' 1)' NewLineInsertion.Eol' NewLineInsertion.Eol)); " is 132.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The length of the statement  "		result.Add (new InsertionPoint (new DocumentLocation (region.Region.EndLine' 1)' NewLineInsertion.Eol' NewLineInsertion.Eol)); " is 126.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The length of the statement  "		result.Add (new InsertionPoint (new DocumentLocation (region.Region.EndLine + 1' 1)' NewLineInsertion.Eol' NewLineInsertion.Eol)); " is 130.
Long Statement,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPosition,The length of the statement  "		return new InsertionPoint (new DocumentLocation (line' column + 1)' NewLineInsertion.BlankLine' NewLineInsertion.BlankLine); " is 124.
Long Statement,MonoDevelop.Ide.TypeSystem,TypeSystemParserNode,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemParserNode.cs,CanParse,The length of the statement  "		mimeTypes = this.mimeType != null ? new HashSet<string> (this.mimeType.Split (''').Select (s => s.Trim ())) : new HashSet<string> (); " is 133.
Long Statement,MonoDevelop.Ide.TypeSystem,MonoDocDocumentationProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\MonoDocDocumentationProvider.cs,SelectNode,The length of the statement  "		return SelectOverload (doc.SelectNodes ("/Type/Members/Member[@MemberName='" + entity.Name + "']")' (IParameterizedMember)entity); " is 130.
Long Statement,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,TrackStartupProject,The length of the statement  "	if (currentStartupProject != null && ((currentSolution != null && currentStartupProject != currentSolution.StartupItem) || currentSolution == null)) { " is 150.
Long Statement,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,UpdateSearchEntryLabel,The length of the statement  "	//				matchEntry.EmptyMessage = GettextCatalog.GetString ("Press '{0}' to search"' KeyBindingManager.BindingToDisplayLabel (info.AccelKey' false)); " is 147.
Long Statement,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,BuildToolbar,The length of the statement  "	var bars = AddinManager.GetExtensionNodes (ToolbarExtensionPath).Cast<ItemSetCodon> ().Where (n => visibleBars.Contains (n.Id)).ToList (); " is 138.
Long Statement,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,FillRuntimes,The length of the statement  "		if (!IdeApp.Workspace.IsOpen || currentSolution == null || !currentSolution.SingleStartup || currentSolution.StartupItem == null) " is 129.
Long Statement,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,GetStartButtonCommandInfo,The length of the statement  "	if (!IdeApp.ProjectOperations.CurrentRunOperation.IsCompleted || !IdeApp.ProjectOperations.CurrentBuildOperation.IsCompleted) { " is 127.
Long Statement,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StartBuildAnimation,The length of the statement  "	this.Animate ("BuildOpacity"' start: renderArg.BuildAnimationOpacity' end: 1.0f' callback: x => renderArg.BuildAnimationOpacity = x); " is 133.
Long Statement,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StopBuildAnimation,The length of the statement  "	this.Animate ("BuildOpacity"' x => renderArg.BuildAnimationOpacity = x' renderArg.BuildAnimationOpacity' 0.0f' finished: (val' aborted) =>  { " is 141.
Long Statement,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnSizeAllocated,The length of the statement  "		allocation = new Gdk.Rectangle (allocation.X + (allocation.Width - MaxWidth) / 2' allocation.Y' MaxWidth' allocation.Height); " is 125.
Long Statement,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The length of the statement  "		icon.Show (context' Allocation.X + Math.Max (0' (Allocation.Width - icon.Width) / 2)' Allocation.Y + Math.Max (0' (Allocation.Height - icon.Height) / 2)); " is 154.
Long Statement,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnButtonPressEvent,The length of the statement  "		pushedButton = VisibleButtons.FirstOrDefault (b => b.Allocation.Contains (Allocation.X + (int)evnt.X' Allocation.Y + (int)evnt.Y)); " is 131.
Long Statement,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnSizeRequested,The length of the statement  "	requisition.Width = VisibleButtons.Sum (b => b.Visible ? (!b.IsSeparator ? btnNormalOriginal [0].Width : SeparatorSpacing) : 0); " is 128.
Long Statement,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The length of the statement  "			bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1; " is 127.
Long Statement,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The length of the statement  "			Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2); " is 122.
Long Statement,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,ExpandImageVertically,The length of the statement  "	img.Composite (res' 0' h1' res.Width' newHeight - img.Height' 0' 0' 1' (double)newHeight / (double)img.Height' InterpType.Bilinear' 255); " is 137.
Long Statement,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,GetResults,The length of the statement  "		if (searchPattern.Tag != null && !(typeTags.Contains (searchPattern.Tag) || memberTags.Contains (searchPattern.Tag)) || searchPattern.HasLineNumber) " is 148.
Long Statement,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,GetResults,The length of the statement  "			newResult.ambience = firstType != null ? AmbienceService.GetAmbienceForFile (firstType.Region.FileName) : AmbienceService.DefaultAmbience; " is 138.
Long Statement,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The length of the statement  "		bool startsWithLastFilter = lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern' StringComparison.Ordinal) && lastResult.filteredTypes != null; " is 170.
Long Statement,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The length of the statement  "		bool startsWithLastFilter = lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern' StringComparison.Ordinal) && lastResult.filteredMembers != null; " is 172.
Long Statement,MonoDevelop.Components.MainToolbar,FileSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\FileSearchCategory.cs,AllResults,The length of the statement  "		bool startsWithLastFilter = lastResult != null && lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern) && lastResult.filteredFiles != null; " is 166.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,Update,The length of the statement  "	if (!string.IsNullOrEmpty (pattern.Tag) && string.IsNullOrEmpty (pattern.Pattern) && !categories.Any (c => c.IsValidTag (pattern.Tag))) { " is 137.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,GetIdealSize,The length of the statement  "	var calculatedHeight = Math.Min (maxHeight' (int)y + yMargin + results.Count (res => res.Item2.ItemCount > 0) * categorySeparatorHeight); " is 137.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnMotionNotifyEvent,The length of the statement  "	if (item == null && selectedItem != null || item != null && selectedItem == null || item != null && !item.Equals (selectedItem)) { " is 130.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectItemUp,The length of the statement  "				selectedItem = new ItemIdentifier (results [i].Item1' results [i].Item2' Math.Min (maxItems' results [i].Item2.ItemCount) - 1); " is 127.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectItemUp,The length of the statement  "					selectedItem = new ItemIdentifier (results [i].Item1' results [i].Item2' Math.Min (maxItems' results [i].Item2.ItemCount) - 1); " is 127.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,DelayedTooltipShow,The length of the statement  "	declarationviewwindow.ShowPopup (this' new Gdk.Rectangle (0' (int)rect.Y' Allocation.Width' (int)rect.Height)' PopupPosition.Right); " is 132.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectLastCatgory,The length of the statement  "	var r = results.LastOrDefault (r2 => r2.Item2.ItemCount > 0 && !(r2.Item2.ItemCount == 1 && topItem.Category == r2.Item1)); " is 123.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The length of the statement  "		context.Rectangle (Allocation.X + adjustedMarginSize' Allocation.Y' Allocation.Width - adjustedMarginSize' Allocation.Height); " is 126.
Long Statement,MonoDevelop.Components.MainToolbar,CommandSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\CommandSearchCategory.cs,AllResults,The length of the statement  "	bool startsWithLastFilter = lastResult != null && lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern) && lastResult.filteredCommands != null; " is 169.
Long Statement,MonoDevelop.Components.MainToolbar,CommandSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\CommandSearchCategory.cs,AllResults,The length of the statement  "	IEnumerable<Command> allCommands = startsWithLastFilter ? lastResult.filteredCommands : IdeApp.CommandService.GetCommands (); " is 125.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,GetHashCode,The length of the statement  "	return (Tag != null ? Tag.GetHashCode () : 0) ^ (Pattern != null ? Pattern.GetHashCode () : 0) ^ LineNumber.GetHashCode () ^ Column.GetHashCode (); " is 147.
Long Statement,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ToString,The length of the statement  "	return string.Format ("[SearchPopupSearchPattern: Tag={0}' Pattern={1}' LineNumber={2}' Column={3}]"' FormatString (Tag)' FormatString (Pattern)' LineNumber' Column); " is 166.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The length of the statement  "	context.CachedDraw (surface: ref backgroundSurface' region: arg.Allocation' draw: (c' o) => DrawBackground (c' new Gdk.Rectangle (0' 0' arg.Allocation.Width' arg.Allocation.Height))); " is 183.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The length of the statement  "	Gdk.Rectangle progressArea = new Gdk.Rectangle (progress_bar_x' center - Styles.ProgressBarHeight / 2' progress_bar_width' Styles.ProgressBarHeight); " is 149.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The length of the statement  "		DrawString (arg.LastText' arg.LastTextIsMarkup' context' text_x' center - (int)(textTweenValue * arg.Allocation.Height * 0.3)' text_width' opacity' arg.Pango' arg); " is 164.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The length of the statement  "		DrawString (arg.CurrentText' arg.CurrentTextIsMarkup' context' text_x' center + (int)((1.0f - textTweenValue) * arg.Allocation.Height * 0.3)' text_width' Math.Min (textTweenValue' 1.0)' arg.Pango' arg); " is 202.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,LayoutRoundedRectangle,The length of the statement  "	CairoExtensions.RoundedRectangle (context' region.X + .5' region.Y + .5' region.Width - 1' region.Height - 1' rounding); " is 120.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The length of the statement  "	context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  { " is 236.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawProgressBar,The length of the statement  "	LayoutRoundedRectangle (context' new Gdk.Rectangle (bounding.X' bounding.Y' (int)(bounding.Width * progress)' bounding.Height)); " is 128.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawProgressBar,The length of the statement  "	context.SetSourceColor (Styles.WithAlpha (Styles.StatusBarProgressBackgroundColor' Styles.StatusBarProgressBackgroundColor.A * arg.ProgressBarAlpha)); " is 150.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawProgressBar,The length of the statement  "	context.SetSourceColor (Styles.WithAlpha (Styles.StatusBarProgressOutlineColor' Styles.StatusBarProgressOutlineColor.A * arg.ProgressBarAlpha)); " is 144.
Long Statement,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawString,The length of the statement  "	// use widget height instead of message box height as message box does not have a true height when no widgets are packed in it " is 126.
Long Statement,MonoDevelop.Components.MainToolbar,ConfigurationMerger,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ConfigurationMerger.cs,ResolveConfiguration,The length of the statement  "		var part = currentTargetPartitions.FirstOrDefault (p => ExecutionTargetsContains (p.Targets' currentTarget ?? dummyExecutionTarget)); " is 133.
Long Statement,MonoDevelop.Components.MainToolbar,MemberSearchResult,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchResult.cs,GetMarkupText,The length of the statement  "		return HighlightMatch (widget' member.SymbolKind == SymbolKind.Constructor ? member.DeclaringTypeDefinition.FullName : member.FullName' match); " is 143.
Long Statement,MonoDevelop.Components.MainToolbar,MemberSearchResult,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchResult.cs,GetMarkupText,The length of the statement  "	return HighlightMatch (widget' member.SymbolKind == SymbolKind.Constructor ? member.DeclaringTypeDefinition.Name : member.Name' match); " is 135.
Long Statement,MonoDevelop.Ide.TextEditing,TextEditorService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TextEditing\TextEditorService.cs,GetFileLineExtensions,The length of the statement  "	return fileExtensions.Values.SelectMany (e => e).OfType<FileLineExtension> ().Where (e => e.File.CanonicalPath == file); " is 120.
Long Statement,MonoDevelop.Ide.TextEditing,LineCountEventArgs,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TextEditing\LineCountEventArgs.cs,ToString,The length of the statement  "	return String.Format ("[LineCountEventArgs: LineNumber={0}' LineCount={1}' Column={2}]"' lineNumber' lineCount' column); " is 120.
Complex Conditional,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,InitializeLayout,The conditional expression  "!visible.Contains (node.Id) && node.DefaultLayouts != null && (node.DefaultLayouts.Contains (stockLayout.Id) || node.DefaultLayouts.Contains ("*"))"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,SelectLastActiveWindow,The conditional expression  "lastActiveWindows.Count > 0 && (last == cur || last == null || (last != null && last.ViewContent == null))"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnMotionNotifyEvent,The conditional expression  "t != null && t != notebook.CurrentTab && (((int)evnt.X > lastDragX && t.Index > notebook.CurrentTab.Index) || ((int)evnt.X < lastDragX && t.Index < notebook.CurrentTab.Index))"  is complex.
Complex Conditional,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,UpdateCommentTags,The conditional expression  "oldTasks [j] != null && newTasks [i].Line == oldTasks [j].Line && newTasks [i].Column == oldTasks [j].Column && newTasks [i].Description == oldTasks [j].Description && newTasks [i].Priority == oldTasks [j].Priority"  is complex.
Complex Conditional,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,ParseVariables,The conditional expression  "name == "end" || name == "selected" || string.IsNullOrEmpty (name) || name.Trim ().Length == 0"  is complex.
Complex Conditional,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,ContainsReference,The conditional expression  "pr.ReferenceType == ReferenceType.Package && (pr.Reference == aname || pr.Reference.StartsWith (aname + "'")) || pr.ReferenceType != ReferenceType.Package && pr.Reference.Contains (aname)"  is complex.
Complex Conditional,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,CreateIdentifierName,The conditional expression  "i != 0 && Char.IsLetterOrDigit (ch) || i == 0 && Char.IsLetter (ch) || ch == '_'"  is complex.
Complex Conditional,MonoDevelop.Ide.Templates,FileTemplateReference,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\FileTemplateReference.cs,GetDotNetIdentifier,The conditional expression  "char.IsLetter (c) || c == '_' || (sb.Length > 0 && char.IsNumber (c))"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Content,CompletionTextEditorExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\CompletionTextEditorExtension.cs,KeyPress,The conditional expression  "triggerWordLength > 0 && (triggerWordLength < Editor.Caret.Offset || (triggerWordLength == 1 && Editor.Caret.Offset == 1))"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,UpdateExtraWidgets,The conditional expression  "Filenames.Length == 0 || Filename == null || Filename.Length == 0 || System.IO.Directory.Exists (Filename)"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildChildNodes,The conditional expression  "(project == null || project.Files.GetFile (file) == null) && (folderFiles == null || !folderFiles.Contains (file))"  is complex.
Complex Conditional,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The conditional expression  "xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight"  is complex.
Complex Conditional,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,TransferFiles,The conditional expression  "removeFromSource && sourceProject != null && pfolder.CanonicalPath != sourceProject.BaseDirectory.CanonicalPath && pfolder.IsChildPathOf (sourceProject.BaseDirectory)"  is complex.
Complex Conditional,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckWindowsGtk,The conditional expression  "version == null || version < minVersion || location == null || !File.Exists (Path.Combine (location' "bin"' "libgtk-win32-2.0-0.dll"))"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnKeyPress,The conditional expression  "args.Event.Key == Gdk.Key.asterisk || args.Event.Key == Gdk.Key.KP_Multiply || (shift && (args.Event.Key == Gdk.Key.Right || args.Event.Key == Gdk.Key.KP_Right || args.Event.Key == Gdk.Key.plus || args.Event.Key == Gdk.Key.KP_Add))"  is complex.
Complex Conditional,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,CompareFileNames,The conditional expression  "searchResult1 == null || searchResult2 == null || searchResult1.FileName == null || searchResult2.FileName == null"  is complex.
Complex Conditional,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,CompareFilePaths,The conditional expression  "searchResult1 == null || searchResult2 == null || searchResult1.FileName == null || searchResult2.FileName == null"  is complex.
Complex Conditional,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,FindPosition,The conditional expression  "ch != '<' && ch != '&' && !inTag && !inChar && realPos >= pos"  is complex.
Complex Conditional,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,GetFileNames,The conditional expression  "!(node is IField) && !(node is IParameter) && node is IVariable || scope == RefactoryScope.File"  is complex.
Complex Conditional,MonoDevelop.Ide.Execution,MonoExecutionParameters,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\MonoExecutionParameters.cs,GenerateOptions,The conditional expression  "DebugMode || DebugMdbOptimizations || DebugCasts || GdbInfo"  is complex.
Complex Conditional,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,Update,The conditional expression  "!force && genFile != null && File.Exists (genFile.FilePath) && File.GetLastWriteTime (file.FilePath) < File.GetLastWriteTime (genFile.FilePath)"  is complex.
Complex Conditional,MonoDevelop.Components,MiniButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MiniButton.cs,OnButtonPressEvent,The conditional expression  "!ClickOnRelease && Clickable && evnt.Button == 1 && !evnt.TriggersContextMenu ()"  is complex.
Complex Conditional,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The conditional expression  "hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))"  is complex.
Complex Conditional,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The conditional expression  "hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering)"  is complex.
Complex Conditional,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The conditional expression  "hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering)"  is complex.
Complex Conditional,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CachedDraw,The conditional expression  "(surface.Data == null && parameters != null) || (surface.Data != null && !surface.Data.Equals (parameters))"  is complex.
Complex Conditional,MonoDevelop.Components,VPanedThin,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\VPanedThin.cs,OnExposeEvent,The conditional expression  "Child1 != null && Child1.Visible && Child2 != null && Child2.Visible"  is complex.
Complex Conditional,MonoDevelop.Components,HPanedThin,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnExposeEvent,The conditional expression  "Child1 != null && Child1.Visible && Child2 != null && Child2.Visible"  is complex.
Complex Conditional,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,HandleSizeAllocated,The conditional expression  "parent.Child1 != null && parent.Child1.Visible && parent.Child2 != null && parent.Child2.Visible"  is complex.
Complex Conditional,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The conditional expression  "r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)"  is complex.
Complex Conditional,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,GetAllRows,The conditional expression  "r.ChildRows != null && (!onlyVisible || r.Expanded || r.AnimatingExpand)"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,ScheduleAutoHide,The conditional expression  "it.Widget.Visible && it.Widget.IsRealized && it.Widget.Allocation.Contains (px + it.Widget.Allocation.X' py + it.Widget.Allocation.Y) && !force"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,IsSelectedPage,The conditional expression  "type != DockGroupType.Tabbed || boundTabStrip == null || boundTabStrip.CurrentTab == -1 || VisibleObjects == null || boundTabStrip.CurrentTab >= VisibleObjects.Count"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The conditional expression  "x != rx || y != ry || w != rw || h != rh"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnMotionNotifyEvent,The conditional expression  "tabPressed && !item.Behavior.HasFlag (DockItemBehavior.NoGrip) && Math.Abs (evnt.X - pressX) > 3 && Math.Abs (evnt.Y - pressY) > 3"  is complex.
Complex Conditional,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawAsBrowser,The conditional expression  "!(last && first) && !(tabStrip != null && tabStrip.VisualStyle.ExpandedTabs.Value && last)"  is complex.
Complex Conditional,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,AddToProjectComboChanged,The conditional expression  "basePath == null || basePath == String.Empty || (parentProject != null && basePath == parentProject.BaseDirectory)"  is complex.
Complex Conditional,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The conditional expression  "(CreateSolutionDirectory && !FileService.IsValidPath (solution)) || !FileService.IsValidFileName (name) || name.IndexOf (' ') >= 0 || !FileService.IsValidPath (location)"  is complex.
Complex Conditional,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,ActivateIfReady,The conditional expression  "templateView.CurrentlySelected == null || !txt_name.Sensitive || txt_name.Text.Trim () == "" || (txt_subdirectory.Sensitive && chk_combine_directory.Active && txt_subdirectory.Text.Trim ().Length == 0)"  is complex.
Complex Conditional,MonoDevelop.Ide.Projects,ProjectFileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectFileSelectorDialog.cs,FileListKeyPressEvent,The conditional expression  "args.Event.Key == Gdk.Key.Escape || args.Event.Key == Gdk.Key.BackSpace || (args.Event.Key == Gdk.Key.Left && (args.Event.State & modifiers) == 0)"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,The conditional expression  "innerClass.IsPublic || (innerClass.IsProtected && publicProtectedOnly) || !publicOnly"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,The conditional expression  "method.IsPublic || (method.IsProtected && publicProtectedOnly) || !publicOnly"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,The conditional expression  "property.IsPublic || (property.IsProtected && publicProtectedOnly) || !publicOnly"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,The conditional expression  "field.IsPublic || (field.IsProtected && publicProtectedOnly) || !publicOnly"  is complex.
Complex Conditional,MonoDevelop.Ide.Gui.Pads.ClassPad,ClassNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\ClassNodeBuilder.cs,BuildChildNodes,The conditional expression  "e.IsPublic || (e.IsProtected && publicProtectedOnly) || !publicOnly"  is complex.
Complex Conditional,MonoDevelop.Ide.TypeSystem,FoldingUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\ParsedDocument.cs,ToFolds,The conditional expression  "curComment == null || !curComment.CommentStartsLine || curComment.CommentType != comment.CommentType || curLine + 1 != curComment.Region.BeginLine"  is complex.
Complex Conditional,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,TrackStartupProject,The conditional expression  "currentStartupProject != null && ((currentSolution != null && currentStartupProject != currentSolution.StartupItem) || currentSolution == null)"  is complex.
Complex Conditional,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,FillRuntimes,The conditional expression  "!IdeApp.Workspace.IsOpen || currentSolution == null || !currentSolution.SingleStartup || currentSolution.StartupItem == null"  is complex.
Complex Conditional,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,GetResults,The conditional expression  "searchPattern.Tag != null && !(typeTags.Contains (searchPattern.Tag) || memberTags.Contains (searchPattern.Tag)) || searchPattern.HasLineNumber"  is complex.
Complex Conditional,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnMotionNotifyEvent,The conditional expression  "item == null && selectedItem != null || item != null && selectedItem == null || item != null && !item.Equals (selectedItem)"  is complex.
Virtual Method Call from Constructor,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The constructor "OptionsDialog" calls a virtual method "InitializeContext".
Virtual Method Call from Constructor,MonoDevelop.Ide.Gui.OptionPanels,SdkLocationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\SdkLocationPanel.cs,SdkLocationWidget,The constructor "SdkLocationWidget" calls a virtual method "LoadSdkLocationSetting".
Virtual Method Call from Constructor,MonoDevelop.Components.Theming,Theme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\Theme.cs,Theme,The constructor "Theme" calls a virtual method "OnColorsRefreshed".
Virtual Method Call from Constructor,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,ListWindow,The constructor "ListWindow" calls a virtual method "DoubleClick".
Virtual Method Call from Constructor,MonoDevelop.Ide.WelcomePage,WelcomePageWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageWidget.cs,WelcomePageWidget,The constructor "WelcomePageWidget" calls a virtual method "BuildContent".
Virtual Method Call from Constructor,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,AmbienceService,The constructor "AmbienceService" calls a virtual method "CreateInstance".
Empty Catch Block,MonoDevelop.Ide.Commands,ToolListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\ToolsCommands.cs,RunExternalTool,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,SaveFileStatus,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,CheckFileStatus,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.Gui,InternalLog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\InternalLog.cs,InternalLog,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,FileStatusTracker,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AddFiles,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,FileStatusTracker,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,NotifyChanges,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckWindowsGtk,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,openFile,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetMonoUpdateInfo,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components,FileSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\FileSelector.cs,CommonSetup,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components,HoverImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HoverImageButton.cs,LoadPixbufs,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid.PropertyEditors,DateTimeEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\DateTimeEditor.cs,OnChanged,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditor.cs,TextChanged,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.PropertyGrid.PropertyEditors,TimeSpanEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TimeSpanEditor.cs,OnChanged,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,AddToProjectComboChanged,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.Projects,AddMimeTypeDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AddMimeTypeDialog.cs,TryGetFileType,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Components.AutoTest,AutoTestClientSession,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.AutoTest\AutoTestClientSession.cs,StartApplication,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.WelcomePage,WelcomePageNewsFeed,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageNewsFeed.cs,GetNewsXml,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,CheckModifiedFile,The method has an empty catch block.
Magic Number,MonoDevelop.Ide.Commands,RecentFileListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The following statement contains a magic number: foreach (var ri in files) {  	string acceleratorKeyPrefix = i < 10 ? "_" + ((i + 1) % 10).ToString () + " " : "";  	var cmd = new CommandInfo (acceleratorKeyPrefix + ri.DisplayName.Replace ("_"' "__")) {  		Description = GettextCatalog.GetString ("Open {0}"' ri.FileName)  	};  	Gdk.Pixbuf icon = DesktopService.GetPixbufForFile (ri.FileName' IconSize.Menu);  	#pragma  	if (icon != null)  		cmd.Icon = ImageService.GetStockId (icon' IconSize.Menu);  	#pragma  	info.Add (cmd' ri.FileName);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,RecentFileListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The following statement contains a magic number: foreach (var ri in files) {  	string acceleratorKeyPrefix = i < 10 ? "_" + ((i + 1) % 10).ToString () + " " : "";  	var cmd = new CommandInfo (acceleratorKeyPrefix + ri.DisplayName.Replace ("_"' "__")) {  		Description = GettextCatalog.GetString ("Open {0}"' ri.FileName)  	};  	Gdk.Pixbuf icon = DesktopService.GetPixbufForFile (ri.FileName' IconSize.Menu);  	#pragma  	if (icon != null)  		cmd.Icon = ImageService.GetStockId (icon' IconSize.Menu);  	#pragma  	info.Add (cmd' ri.FileName);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,RecentFileListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The following statement contains a magic number: foreach (var ri in files) {  	string acceleratorKeyPrefix = i < 10 ? "_" + ((i + 1) % 10).ToString () + " " : "";  	var cmd = new CommandInfo (acceleratorKeyPrefix + ri.DisplayName.Replace ("_"' "__")) {  		Description = GettextCatalog.GetString ("Open {0}"' ri.FileName)  	};  	Gdk.Pixbuf icon = DesktopService.GetPixbufForFile (ri.FileName' IconSize.Menu);  	#pragma  	if (icon != null)  		cmd.Icon = ImageService.GetStockId (icon' IconSize.Menu);  	#pragma  	info.Add (cmd' ri.FileName);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,RecentFileListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The following statement contains a magic number: foreach (var ri in files) {  	string acceleratorKeyPrefix = i < 10 ? "_" + ((i + 1) % 10).ToString () + " " : "";  	var cmd = new CommandInfo (acceleratorKeyPrefix + ri.DisplayName.Replace ("_"' "__")) {  		Description = GettextCatalog.GetString ("Open {0}"' ri.FileName)  	};  	Gdk.Pixbuf icon = DesktopService.GetPixbufForFile (ri.FileName' IconSize.Menu);  	#pragma  	if (icon != null)  		cmd.Icon = ImageService.GetStockId (icon' IconSize.Menu);  	#pragma  	info.Add (cmd' ri.FileName);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,RecentProjectListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The following statement contains a magic number: foreach (var ri in projects) {  	//getting the icon requires probing the file' so handle IO errors  	IconId icon;  	try {  		if (!File.Exists (ri.FileName))  			continue;  		icon = IdeApp.Services.ProjectService.FileFormats.GetFileFormats (ri.FileName' typeof(Solution)).Length > 0 ? "md-solution" : "md-workspace";  	}  	catch (UnauthorizedAccessException exAccess) {  		LoggingService.LogWarning ("Error building recent solutions list (Permissions)"' exAccess);  		continue;  	}  	catch (IOException ex) {  		LoggingService.LogWarning ("Error building recent solutions list"' ex);  		continue;  	}  	string acceleratorKeyPrefix = i < 10 ? "_" + ((i + 1) % 10).ToString () + " " : "";  	string str = GettextCatalog.GetString ("Load solution {0}"' ri.ToString ());  	if (IdeApp.Workspace.IsOpen)  		str += " - " + GettextCatalog.GetString ("Hold Control to open in current workspace.");  	var cmd = new CommandInfo (acceleratorKeyPrefix + ri.DisplayName.Replace ("_"' "__")) {  		Icon = icon'  		Description = str'  	};  	info.Add (cmd' ri.FileName);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,RecentProjectListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\FileCommands.cs,Update,The following statement contains a magic number: foreach (var ri in projects) {  	//getting the icon requires probing the file' so handle IO errors  	IconId icon;  	try {  		if (!File.Exists (ri.FileName))  			continue;  		icon = IdeApp.Services.ProjectService.FileFormats.GetFileFormats (ri.FileName' typeof(Solution)).Length > 0 ? "md-solution" : "md-workspace";  	}  	catch (UnauthorizedAccessException exAccess) {  		LoggingService.LogWarning ("Error building recent solutions list (Permissions)"' exAccess);  		continue;  	}  	catch (IOException ex) {  		LoggingService.LogWarning ("Error building recent solutions list"' ex);  		continue;  	}  	string acceleratorKeyPrefix = i < 10 ? "_" + ((i + 1) % 10).ToString () + " " : "";  	string str = GettextCatalog.GetString ("Load solution {0}"' ri.ToString ());  	if (IdeApp.Workspace.IsOpen)  		str += " - " + GettextCatalog.GetString ("Hold Control to open in current workspace.");  	var cmd = new CommandInfo (acceleratorKeyPrefix + ri.DisplayName.Replace ("_"' "__")) {  		Icon = icon'  		Description = str'  	};  	info.Add (cmd' ri.FileName);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,NextWindowHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: if (IdeApp.Workbench.Documents.Count < 2) {  	info.Enabled = false;  }  
Magic Number,MonoDevelop.Ide.Commands,PrevWindowHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: if (IdeApp.Workbench.Documents.Count < 2)  	info.Enabled = false;  
Magic Number,MonoDevelop.Ide.Commands,OpenWindowListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: foreach (Document document in IdeApp.Workbench.Documents) {  	//Create CommandInfo object  	CommandInfo commandInfo = new CommandInfo ();  	commandInfo.Text = document.Window.Title.Replace ("_"' "__");  	if (document == IdeApp.Workbench.ActiveDocument)  		commandInfo.Checked = true;  	commandInfo.Description = GettextCatalog.GetString ("Activate window '{0}'"' commandInfo.Text);  	if (document.Window.ShowNotification) {  		commandInfo.UseMarkup = true;  		commandInfo.Text = "<span foreground=" + '"' + "blue" + '"' + ">" + commandInfo.Text + "</span>";  	}  	//Add AccelKey  	if (i < 10) {  		commandInfo.AccelKey = ((Platform.IsMac) ? "Meta" : "Alt") + "|" + ((i + 1) % 10).ToString ();  	}  	//Add menu item  	info.Add (commandInfo' document);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,OpenWindowListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: foreach (Document document in IdeApp.Workbench.Documents) {  	//Create CommandInfo object  	CommandInfo commandInfo = new CommandInfo ();  	commandInfo.Text = document.Window.Title.Replace ("_"' "__");  	if (document == IdeApp.Workbench.ActiveDocument)  		commandInfo.Checked = true;  	commandInfo.Description = GettextCatalog.GetString ("Activate window '{0}'"' commandInfo.Text);  	if (document.Window.ShowNotification) {  		commandInfo.UseMarkup = true;  		commandInfo.Text = "<span foreground=" + '"' + "blue" + '"' + ">" + commandInfo.Text + "</span>";  	}  	//Add AccelKey  	if (i < 10) {  		commandInfo.AccelKey = ((Platform.IsMac) ? "Meta" : "Alt") + "|" + ((i + 1) % 10).ToString ();  	}  	//Add menu item  	info.Add (commandInfo' document);  	i++;  }  
Magic Number,MonoDevelop.Ide.Commands,OpenWindowListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: if (i < 10) {  	commandInfo.AccelKey = ((Platform.IsMac) ? "Meta" : "Alt") + "|" + ((i + 1) % 10).ToString ();  }  
Magic Number,MonoDevelop.Ide.Commands,OpenWindowListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: if (i < 10) {  	commandInfo.AccelKey = ((Platform.IsMac) ? "Meta" : "Alt") + "|" + ((i + 1) % 10).ToString ();  }  
Magic Number,MonoDevelop.Ide.Commands,OpenWindowListHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\WindowCommands.cs,Update,The following statement contains a magic number: commandInfo.AccelKey = ((Platform.IsMac) ? "Meta" : "Alt") + "|" + ((i + 1) % 10).ToString ();  
Magic Number,MonoDevelop.Ide.Gui,BackgroundProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\BackgroundProgressMonitor.cs,OnProgressChanged,The following statement contains a magic number: if (Tracker.UnknownWork)  	tip = string.Format ("{0}\n{1}"' title' Tracker.CurrentTask);  else  	tip = string.Format ("{0} ({1}%)\n{2}"' title' (int)(Tracker.GlobalWork * 100)' Tracker.CurrentTask);  
Magic Number,MonoDevelop.Ide.Gui,BackgroundProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\BackgroundProgressMonitor.cs,OnProgressChanged,The following statement contains a magic number: tip = string.Format ("{0} ({1}%)\n{2}"' title' (int)(Tracker.GlobalWork * 100)' Tracker.CurrentTask);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,GetStoredMemento,The following statement contains a magic number: if (content != null && content.ContentName != null) {  	string directory = UserProfile.Current.CacheDir.Combine ("temp");  	if (!Directory.Exists (directory)) {  		Directory.CreateDirectory (directory);  	}  	string fileName = content.ContentName.Substring (3).Replace ('/'' '.').Replace ('\\'' '.').Replace (System.IO.Path.DirectorySeparatorChar' '.');  	string fullFileName = directory + System.IO.Path.DirectorySeparatorChar + fileName;  	// check the file name length because it could be more than the maximum length of a file name  	if (FileService.IsValidPath (fullFileName) && File.Exists (fullFileName)) {  		return Properties.Load (fullFileName);  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: if ((evnt.State & winSwitchModifier) != 0 && (evnt.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) != (Gdk.ModifierType.ControlMask | Gdk.ModifierType.Mod1Mask)) {  	switch (evnt.Key) {  	case Gdk.Key.KP_1:  	case Gdk.Key.Key_1:  		SwitchToDocument (0);  		return true;  	case Gdk.Key.KP_2:  	case Gdk.Key.Key_2:  		SwitchToDocument (1);  		return true;  	case Gdk.Key.KP_3:  	case Gdk.Key.Key_3:  		SwitchToDocument (2);  		return true;  	case Gdk.Key.KP_4:  	case Gdk.Key.Key_4:  		SwitchToDocument (3);  		return true;  	case Gdk.Key.KP_5:  	case Gdk.Key.Key_5:  		SwitchToDocument (4);  		return true;  	case Gdk.Key.KP_6:  	case Gdk.Key.Key_6:  		SwitchToDocument (5);  		return true;  	case Gdk.Key.KP_7:  	case Gdk.Key.Key_7:  		SwitchToDocument (6);  		return true;  	case Gdk.Key.KP_8:  	case Gdk.Key.Key_8:  		SwitchToDocument (7);  		return true;  	case Gdk.Key.KP_9:  	case Gdk.Key.Key_9:  		SwitchToDocument (8);  		return true;  	case Gdk.Key.KP_0:  	case Gdk.Key.Key_0:  		SwitchToDocument (9);  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (2);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (3);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (4);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (5);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (6);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (7);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (8);  
Magic Number,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following statement contains a magic number: SwitchToDocument (9);  
Magic Number,MonoDevelop.Ide.Gui,ConfigurationComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ConfigurationComboBox.cs,ConfigurationComboBox,The following statement contains a magic number: align.LeftPadding = 3;  
Magic Number,MonoDevelop.Ide.Gui,ConfigurationComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ConfigurationComboBox.cs,ConfigurationComboBox,The following statement contains a magic number: align.RightPadding = 3;  
Magic Number,MonoDevelop.Ide.Gui,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ConfigurationComboBox.cs,DropDownBox,The following statement contains a magic number: label.WidthRequest = 125;  
Magic Number,MonoDevelop.Ide.Gui,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ConfigurationComboBox.cs,DropDownBox,The following statement contains a magic number: hbox.PackStart (label' true' true' 3);  
Magic Number,MonoDevelop.Ide.Gui,Document,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Document.cs,GetCommentTags,The following statement contains a magic number: if (tags.Count == 2)  	return tags.ToArray ();  else  	return null;  
Magic Number,MonoDevelop.Ide.Gui,Workbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\Workbench.cs,Initialize,The following statement contains a magic number: monitor.BeginTask (GettextCatalog.GetString ("Initializing Main Window")' 4);  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: foreach (string arg in args) {  	string a = arg;  	Match fileMatch = FileExpression.Match (a);  	// this does not yet work with relative paths  	if (a [0] == '~') {  		var sf = MonoDevelop.Core.Platform.IsWindows ? Environment.SpecialFolder.UserProfile : Environment.SpecialFolder.Personal;  		a = Path.Combine (Environment.GetFolderPath (sf)' a.Substring (1));  	}  	if (fileMatch != null && fileMatch.Success) {  		string filename = fileMatch.Groups ["filename"].Value;  		if (File.Exists (filename)) {  			int line = 1' column = 1;  			filename = Path.GetFullPath (filename);  			if (fileMatch.Groups ["line"].Success)  				int.TryParse (fileMatch.Groups ["line"].Value' out line);  			if (fileMatch.Groups ["column"].Success)  				int.TryParse (fileMatch.Groups ["column"].Value' out column);  			var file = new FileOpenInformation (filename' line' column' OpenDocumentOptions.Default);  			requestedFileList.Add (file);  		}  	}  	else if (a [0] == '-' || a [0] == '/') {  		int markerLength = 1;  		if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  			markerLength = 2;  		}  		parameterList.Add (a.Substring (markerLength));  	}  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: foreach (string arg in args) {  	string a = arg;  	Match fileMatch = FileExpression.Match (a);  	// this does not yet work with relative paths  	if (a [0] == '~') {  		var sf = MonoDevelop.Core.Platform.IsWindows ? Environment.SpecialFolder.UserProfile : Environment.SpecialFolder.Personal;  		a = Path.Combine (Environment.GetFolderPath (sf)' a.Substring (1));  	}  	if (fileMatch != null && fileMatch.Success) {  		string filename = fileMatch.Groups ["filename"].Value;  		if (File.Exists (filename)) {  			int line = 1' column = 1;  			filename = Path.GetFullPath (filename);  			if (fileMatch.Groups ["line"].Success)  				int.TryParse (fileMatch.Groups ["line"].Value' out line);  			if (fileMatch.Groups ["column"].Success)  				int.TryParse (fileMatch.Groups ["column"].Value' out column);  			var file = new FileOpenInformation (filename' line' column' OpenDocumentOptions.Default);  			requestedFileList.Add (file);  		}  	}  	else if (a [0] == '-' || a [0] == '/') {  		int markerLength = 1;  		if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  			markerLength = 2;  		}  		parameterList.Add (a.Substring (markerLength));  	}  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: if (fileMatch != null && fileMatch.Success) {  	string filename = fileMatch.Groups ["filename"].Value;  	if (File.Exists (filename)) {  		int line = 1' column = 1;  		filename = Path.GetFullPath (filename);  		if (fileMatch.Groups ["line"].Success)  			int.TryParse (fileMatch.Groups ["line"].Value' out line);  		if (fileMatch.Groups ["column"].Success)  			int.TryParse (fileMatch.Groups ["column"].Value' out column);  		var file = new FileOpenInformation (filename' line' column' OpenDocumentOptions.Default);  		requestedFileList.Add (file);  	}  }  else if (a [0] == '-' || a [0] == '/') {  	int markerLength = 1;  	if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  		markerLength = 2;  	}  	parameterList.Add (a.Substring (markerLength));  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: if (fileMatch != null && fileMatch.Success) {  	string filename = fileMatch.Groups ["filename"].Value;  	if (File.Exists (filename)) {  		int line = 1' column = 1;  		filename = Path.GetFullPath (filename);  		if (fileMatch.Groups ["line"].Success)  			int.TryParse (fileMatch.Groups ["line"].Value' out line);  		if (fileMatch.Groups ["column"].Success)  			int.TryParse (fileMatch.Groups ["column"].Value' out column);  		var file = new FileOpenInformation (filename' line' column' OpenDocumentOptions.Default);  		requestedFileList.Add (file);  	}  }  else if (a [0] == '-' || a [0] == '/') {  	int markerLength = 1;  	if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  		markerLength = 2;  	}  	parameterList.Add (a.Substring (markerLength));  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: if (a [0] == '-' || a [0] == '/') {  	int markerLength = 1;  	if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  		markerLength = 2;  	}  	parameterList.Add (a.Substring (markerLength));  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: if (a [0] == '-' || a [0] == '/') {  	int markerLength = 1;  	if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  		markerLength = 2;  	}  	parameterList.Add (a.Substring (markerLength));  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  	markerLength = 2;  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: if (a.Length >= 2 && a [0] == '-' && a [1] == '-') {  	markerLength = 2;  }  
Magic Number,MonoDevelop.Ide.Gui,StartupInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\StartupInfo.cs,StartupInfo,The following statement contains a magic number: markerLength = 2;  
Magic Number,MonoDevelop.Ide.Gui,InternalLog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\InternalLog.cs,NotifyError,The following statement contains a magic number: errorIcon.SetAlertMode (5);  
Magic Number,MonoDevelop.Ide.Gui,ToolbarComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ToolbarComboBox.cs,ToolbarComboBox,The following statement contains a magic number: align.LeftPadding = 3;  
Magic Number,MonoDevelop.Ide.Gui,ToolbarComboBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\ToolbarComboBox.cs,ToolbarComboBox,The following statement contains a magic number: align.RightPadding = 3;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,TabStrip,The following statement contains a magic number: TabWidth = 125;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,TabStrip,The following statement contains a magic number: TargetWidth = 125;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,TabStrip,The following statement contains a magic number: arr.HeightRequest = arr.WidthRequest = 10;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,TabStrip,The following statement contains a magic number: arr.HeightRequest = arr.WidthRequest = 10;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnSizeAllocated,The following statement contains a magic number: tabStartX = allocation.X + LeftBarPadding + LeanWidth / 2;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnSizeAllocated,The following statement contains a magic number: PreviousButton.SizeAllocate (new Gdk.Rectangle (allocation.X' allocation.Y' LeftBarPadding / 2' height));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnSizeAllocated,The following statement contains a magic number: NextButton.SizeAllocate (new Gdk.Rectangle (allocation.X + LeftBarPadding / 2' allocation.Y' LeftBarPadding / 2' height));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnSizeAllocated,The following statement contains a magic number: NextButton.SizeAllocate (new Gdk.Rectangle (allocation.X + LeftBarPadding / 2' allocation.Y' LeftBarPadding / 2' height));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (!draggingTab) {  	var t = FindTab ((int)evnt.X' (int)evnt.Y);  	// If the user clicks and drags on the 'x' which closes the current  	// tab we can end up with a null tab here  	if (t == null)  		return base.OnMotionNotifyEvent (evnt);  	SetHighlightedTab (t);  	var newOver = IsOverCloseButton (t' (int)evnt.X' (int)evnt.Y);  	if (newOver != overCloseButton) {  		overCloseButton = newOver;  		QueueDraw ();  	}  	if (!overCloseButton && !draggingTab && buttonPressedOnTab) {  		draggingTab = true;  		dragXProgress = 1.0f;  		int x = (int)evnt.X;  		dragOffset = x - t.Allocation.X;  		dragX = x - dragOffset;  		lastDragX = (int)evnt.X;  	}  	else if (t != null)  		newTooltip = t.Tooltip;  }  else if (evnt.State.HasFlag (ModifierType.Button1Mask)) {  	dragX = (int)evnt.X - dragOffset;  	QueueDraw ();  	var t = FindTab ((int)evnt.X' TopPadding + 3);  	if (t == null) {  		var last = (DockNotebookTab)notebook.Tabs.Last ();  		if (dragX > last.Allocation.Right)  			t = last;  		if (dragX < 0)  			t = (DockNotebookTab)notebook.Tabs.First ();  	}  	if (t != null && t != notebook.CurrentTab && (((int)evnt.X > lastDragX && t.Index > notebook.CurrentTab.Index) || ((int)evnt.X < lastDragX && t.Index < notebook.CurrentTab.Index))) {  		t.SaveAllocation ();  		t.SaveStrength = 1;  		notebook.ReorderTab ((DockNotebookTab)notebook.CurrentTab' t);  		t.Animate ("TabMotion"' f => t.SaveStrength = f' 1.0f' 0.0f' easing: Easing.CubicInOut);  	}  	lastDragX = (int)evnt.X;  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (evnt.State.HasFlag (ModifierType.Button1Mask)) {  	dragX = (int)evnt.X - dragOffset;  	QueueDraw ();  	var t = FindTab ((int)evnt.X' TopPadding + 3);  	if (t == null) {  		var last = (DockNotebookTab)notebook.Tabs.Last ();  		if (dragX > last.Allocation.Right)  			t = last;  		if (dragX < 0)  			t = (DockNotebookTab)notebook.Tabs.First ();  	}  	if (t != null && t != notebook.CurrentTab && (((int)evnt.X > lastDragX && t.Index > notebook.CurrentTab.Index) || ((int)evnt.X < lastDragX && t.Index < notebook.CurrentTab.Index))) {  		t.SaveAllocation ();  		t.SaveStrength = 1;  		notebook.ReorderTab ((DockNotebookTab)notebook.CurrentTab' t);  		t.Animate ("TabMotion"' f => t.SaveStrength = f' 1.0f' 0.0f' easing: Easing.CubicInOut);  	}  	lastDragX = (int)evnt.X;  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnButtonPressEvent,The following statement contains a magic number: if (t != null) {  	if (evnt.IsContextMenuButton ()) {  		notebook.DoPopupMenu (t.Index' evnt);  		return true;  	}  	// Don't select the tab if we are clicking the close button  	if (IsOverCloseButton (t' (int)evnt.X' (int)evnt.Y)) {  		overCloseOnPress = true;  		return true;  	}  	overCloseOnPress = false;  	if (evnt.Type == Gdk.EventType.TwoButtonPress) {  		if (allowDoubleClick) {  			notebook.OnActivateTab (t);  			buttonPressedOnTab = false;  		}  		return true;  	}  	if (evnt.Button == 2) {  		notebook.OnCloseTab (t);  		return true;  	}  	buttonPressedOnTab = true;  	notebook.CurrentTab = t;  	return true;  }  else  	buttonPressedOnTab = true;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,OnButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 2) {  	notebook.OnCloseTab (t);  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,UpdateTabWidth,The following statement contains a magic number: if (notebook.Tabs.Any ())  	TargetWidth = Clamp (width / notebook.Tabs.Count' 50' 200);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,UpdateTabWidth,The following statement contains a magic number: if (notebook.Tabs.Any ())  	TargetWidth = Clamp (width / notebook.Tabs.Count' 50' 200);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,UpdateTabWidth,The following statement contains a magic number: TargetWidth = Clamp (width / notebook.Tabs.Count' 50' 200);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,UpdateTabWidth,The following statement contains a magic number: TargetWidth = Clamp (width / notebook.Tabs.Count' 50' 200);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,UpdateTabWidth,The following statement contains a magic number: if (adjustLast) {  	// adjust to align close buttons properly  	LastTabWidthAdjustment = width - (TargetWidth * notebook.Tabs.Count) + 1;  	LastTabWidthAdjustment = Math.Abs (LastTabWidthAdjustment) < 50 ? LastTabWidthAdjustment : 0;  }  else {  	LastTabWidthAdjustment = 0;  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,UpdateTabWidth,The following statement contains a magic number: LastTabWidthAdjustment = Math.Abs (LastTabWidthAdjustment) < 50 ? LastTabWidthAdjustment : 0;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawBackground,The following statement contains a magic number: ctx.MoveTo (region.X' 0.5);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawBackground,The following statement contains a magic number: ctx.LineTo (region.Right + 1' 0.5);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,Draw,The following statement contains a magic number: for (; n < notebook.Tabs.Count; n++) {  	if (x + TabWidth < tabStartX) {  		x += TabWidth;  		continue;  	}  	if (x > tabEndX)  		break;  	int closingWidth;  	var cmd = DrawClosingTab (n' new Gdk.Rectangle (x' y' 0' Allocation.Height)' out closingWidth);  	drawCommands.Add (cmd);  	x += closingWidth;  	var tab = (DockNotebookTab)notebook.Tabs [n];  	bool active = tab == notebook.CurrentTab;  	int width = Math.Min (TabWidth' Math.Max (50' tabEndX - x - 1));  	if (tab == notebook.Tabs.Last ())  		width += LastTabWidthAdjustment;  	width = (int)(width * tab.WidthModifier);  	if (active) {  		int tmp = x;  		drawActive = c => DrawTab (c' tab' Allocation' new Gdk.Rectangle (tmp' y' width' Allocation.Height)' true' true' draggingTab' CreateTabLayout (tab));  		tab.Allocation = new Gdk.Rectangle (tmp' Allocation.Y' width' Allocation.Height);  	}  	else {  		int tmp = x;  		bool highlighted = tab == highlightedTab;  		if (tab.SaveStrength > 0.0f) {  			tmp = (int)(tab.SavedAllocation.X + (tmp - tab.SavedAllocation.X) * (1.0f - tab.SaveStrength));  		}  		drawCommands.Add (c => DrawTab (c' tab' Allocation' new Gdk.Rectangle (tmp' y' width' Allocation.Height)' highlighted' false' false' CreateTabLayout (tab)));  		tab.Allocation = new Gdk.Rectangle (tmp' Allocation.Y' width' Allocation.Height);  	}  	x += width;  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,Draw,The following statement contains a magic number: ctx.Rectangle (tabStartX - LeanWidth / 2' allocation.Y' tabArea + LeanWidth' allocation.Height);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.SetSource (lg);  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.SetSource (lg);  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2 - partialProg;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  	context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  	lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  	context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  	lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  	context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  	lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: padding = (int)(padding * Math.Min (1.0' Math.Max (0.5' (tabBounds.Width - 30) / 70.0)));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: padding = (int)(padding * Math.Min (1.0' Math.Max (0.5' (tabBounds.Width - 30) / 70.0)));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: padding = (int)(padding * Math.Min (1.0' Math.Max (0.5' (tabBounds.Width - 30) / 70.0)));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: ctx.SetSourceColor (new Cairo.Color (1' 1' 1' .5).MultiplyAlpha (tab.Opacity));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: if (tab.GlowStrength > 0) {  	Gdk.Point mouse = tracker.MousePosition;  	using (var rg = new RadialGradient (mouse.X' tabBounds.Bottom' 0' mouse.X' tabBounds.Bottom' 100)) {  		rg.AddColorStop (0' new Cairo.Color (1' 1' 1' 0.4 * tab.Opacity * tab.GlowStrength));  		rg.AddColorStop (1' new Cairo.Color (1' 1' 1' 0));  		ctx.SetSource (rg);  		ctx.Fill ();  	}  }  else {  	ctx.NewPath ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: if (tab.GlowStrength > 0) {  	Gdk.Point mouse = tracker.MousePosition;  	using (var rg = new RadialGradient (mouse.X' tabBounds.Bottom' 0' mouse.X' tabBounds.Bottom' 100)) {  		rg.AddColorStop (0' new Cairo.Color (1' 1' 1' 0.4 * tab.Opacity * tab.GlowStrength));  		rg.AddColorStop (1' new Cairo.Color (1' 1' 1' 0));  		ctx.SetSource (rg);  		ctx.Fill ();  	}  }  else {  	ctx.NewPath ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: using (var rg = new RadialGradient (mouse.X' tabBounds.Bottom' 0' mouse.X' tabBounds.Bottom' 100)) {  	rg.AddColorStop (0' new Cairo.Color (1' 1' 1' 0.4 * tab.Opacity * tab.GlowStrength));  	rg.AddColorStop (1' new Cairo.Color (1' 1' 1' 0));  	ctx.SetSource (rg);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: using (var rg = new RadialGradient (mouse.X' tabBounds.Bottom' 0' mouse.X' tabBounds.Bottom' 100)) {  	rg.AddColorStop (0' new Cairo.Color (1' 1' 1' 0.4 * tab.Opacity * tab.GlowStrength));  	rg.AddColorStop (1' new Cairo.Color (1' 1' 1' 0));  	ctx.SetSource (rg);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: rg.AddColorStop (0' new Cairo.Color (1' 1' 1' 0.4 * tab.Opacity * tab.GlowStrength));  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: tab.CloseButtonAllocation.Inflate (2' 2);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: tab.CloseButtonAllocation.Inflate (2' 2);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: if (drawCloseButton) {  	DrawCloseButton (ctx' new Gdk.Point (crect.X + crect.Width / 2' crect.Y + crect.Height / 2)' closeButtonHovered' tab.Opacity' tab.DirtyStrength);  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: if (drawCloseButton) {  	DrawCloseButton (ctx' new Gdk.Point (crect.X + crect.Width / 2' crect.Y + crect.Height / 2)' closeButtonHovered' tab.Opacity' tab.DirtyStrength);  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: DrawCloseButton (ctx' new Gdk.Point (crect.X + crect.Width / 2' crect.Y + crect.Height / 2)' closeButtonHovered' tab.Opacity' tab.DirtyStrength);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: DrawCloseButton (ctx' new Gdk.Point (crect.X + crect.Width / 2' crect.Y + crect.Height / 2)' closeButtonHovered' tab.Opacity' tab.DirtyStrength);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: using (var lg = new LinearGradient (textStart + w - 5' 0' textStart + w + 3' 0)) {  	var color = tab.Notify ? new Cairo.Color (0' 0' 1) : Styles.TabBarActiveTextColor;  	color = color.MultiplyAlpha (tab.Opacity);  	lg.AddColorStop (0' color);  	color.A = 0;  	lg.AddColorStop (1' color);  	ctx.SetSource (lg);  	Pango.CairoHelper.ShowLayoutLine (ctx' la.GetLine (0));  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,DrawTab,The following statement contains a magic number: using (var lg = new LinearGradient (textStart + w - 5' 0' textStart + w + 3' 0)) {  	var color = tab.Notify ? new Cairo.Color (0' 0' 1) : Styles.TabBarActiveTextColor;  	color = color.MultiplyAlpha (tab.Opacity);  	lg.AddColorStop (0' color);  	color.A = 0;  	lg.AddColorStop (1' color);  	ctx.SetSource (lg);  	Pango.CairoHelper.ShowLayoutLine (ctx' la.GetLine (0));  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: contentWidth -= (TabSpacing + margin) * 2;  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: if (active) {  	ctx.MoveTo (0' y + 0.5);  	ctx.LineTo (0' y);  	ctx.LineTo (x - halfLean' y);  }  else {  	ctx.MoveTo (x - halfLean' y + 0.5);  	ctx.LineTo (x - halfLean' y);  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: if (active) {  	ctx.MoveTo (0' y + 0.5);  	ctx.LineTo (0' y);  	ctx.LineTo (x - halfLean' y);  }  else {  	ctx.MoveTo (x - halfLean' y + 0.5);  	ctx.LineTo (x - halfLean' y);  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: ctx.MoveTo (0' y + 0.5);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: ctx.MoveTo (x - halfLean' y + 0.5);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: if (active) {  	ctx.LineTo (allocation.Width' y);  	ctx.LineTo (allocation.Width' y + 0.5);  }  else {  	ctx.LineTo (rightx + halfLean' y + 0.5);  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: if (active) {  	ctx.LineTo (allocation.Width' y);  	ctx.LineTo (allocation.Width' y + 0.5);  }  else {  	ctx.LineTo (rightx + halfLean' y + 0.5);  }  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: ctx.LineTo (allocation.Width' y + 0.5);  
Magic Number,MonoDevelop.Ide.Gui,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DockNotebook.cs,LayoutTabBorder,The following statement contains a magic number: ctx.LineTo (rightx + halfLean' y + 0.5);  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,DocumentToolbar,The following statement contains a magic number: box.Spacing = 3;  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,DocumentToolbar,The following statement contains a magic number: al.LeftPadding = 5;  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,DocumentToolbar,The following statement contains a magic number: al.TopPadding = 4;  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,DocumentToolbar,The following statement contains a magic number: al.BottomPadding = 4;  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,Add,The following statement contains a magic number: if (widget is Button) {  	((Button)widget).Relief = ReliefStyle.None;  	((Button)widget).FocusOnClick = false;  	defaultPadding = 0;  	ChangeColor (widget);  }  else if (widget is Entry) {  	((Entry)widget).HasFrame = false;  }  else if (widget is ComboBox) {  	((ComboBox)widget).HasFrame = false;  }  else if (widget is VSeparator) {  	((VSeparator)widget).HeightRequest = 10;  	ChangeColor (widget);  }  else  	ChangeColor (widget);  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,Add,The following statement contains a magic number: if (widget is Entry) {  	((Entry)widget).HasFrame = false;  }  else if (widget is ComboBox) {  	((ComboBox)widget).HasFrame = false;  }  else if (widget is VSeparator) {  	((VSeparator)widget).HeightRequest = 10;  	ChangeColor (widget);  }  else  	ChangeColor (widget);  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,Add,The following statement contains a magic number: if (widget is ComboBox) {  	((ComboBox)widget).HasFrame = false;  }  else if (widget is VSeparator) {  	((VSeparator)widget).HeightRequest = 10;  	ChangeColor (widget);  }  else  	ChangeColor (widget);  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,Add,The following statement contains a magic number: if (widget is VSeparator) {  	((VSeparator)widget).HeightRequest = 10;  	ChangeColor (widget);  }  else  	ChangeColor (widget);  
Magic Number,MonoDevelop.Ide.Gui,DocumentToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentToolbar.cs,Add,The following statement contains a magic number: ((VSeparator)widget).HeightRequest = 10;  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,LoadColumnsVisibility,The following statement contains a magic number: if (tokens.Length == 4 && view != null && view.Columns.Length == 4) {  	for (int i = 0; i < 4; i++) {  		bool visible;  		if (bool.TryParse (tokens [i]' out visible))  			view.Columns [i].Visible = visible;  	}  }  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,LoadColumnsVisibility,The following statement contains a magic number: if (tokens.Length == 4 && view != null && view.Columns.Length == 4) {  	for (int i = 0; i < 4; i++) {  		bool visible;  		if (bool.TryParse (tokens [i]' out visible))  			view.Columns [i].Visible = visible;  	}  }  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,LoadColumnsVisibility,The following statement contains a magic number: if (tokens.Length == 4 && view != null && view.Columns.Length == 4) {  	for (int i = 0; i < 4; i++) {  		bool visible;  		if (bool.TryParse (tokens [i]' out visible))  			view.Columns [i].Visible = visible;  	}  }  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,LoadColumnsVisibility,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	bool visible;  	if (bool.TryParse (tokens [i]' out visible))  		view.Columns [i].Visible = visible;  }  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,StringToColor,The following statement contains a magic number: if (rgb.Length != 3)  	return new Gdk.Color (0' 0' 0);  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,StringToColor,The following statement contains a magic number: try {  	color.Red = UInt16.Parse (rgb [0]' System.Globalization.NumberStyles.HexNumber);  	color.Green = UInt16.Parse (rgb [1]' System.Globalization.NumberStyles.HexNumber);  	color.Blue = UInt16.Parse (rgb [2]' System.Globalization.NumberStyles.HexNumber);  }  catch {  	// something went wrong' then use neutral black color  	color = new Gdk.Color (0' 0' 0);  }  
Magic Number,MonoDevelop.Ide.Tasks,CommentTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTasksView.cs,StringToColor,The following statement contains a magic number: color.Blue = UInt16.Parse (rgb [2]' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,StringToColor,The following statement contains a magic number: if (rgb.Length != 3)  	return new Gdk.Color (0' 0' 0);  
Magic Number,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,StringToColor,The following statement contains a magic number: try {  	color.Red = UInt16.Parse (rgb [0]' System.Globalization.NumberStyles.HexNumber);  	color.Green = UInt16.Parse (rgb [1]' System.Globalization.NumberStyles.HexNumber);  	color.Blue = UInt16.Parse (rgb [2]' System.Globalization.NumberStyles.HexNumber);  }  catch {  	// something went wrong' then use neutral black color  	color = new Gdk.Color (0' 0' 0);  }  
Magic Number,MonoDevelop.Ide.Tasks,UserTasksView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\UserTasksView.cs,StringToColor,The following statement contains a magic number: color.Blue = UInt16.Parse (rgb [2]' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MonoDevelop.Ide.Tasks,CommentTag,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTag.cs,CreateCommentTags,The following statement contains a magic number: for (int n = 0; n < tags.Length; n++) {  	string[] split = tags [n].Split (':');  	int priority;  	if (split.Length == 2 && int.TryParse (split [1]' out priority))  		list.Add (new CommentTag (split [0]' priority));  	else  		MonoDevelop.Core.LoggingService.LogWarning ("Invalid tag list in CommentTagSet: '{0}'"' tagListString);  }  
Magic Number,MonoDevelop.Ide.Tasks,CommentTag,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Tasks\CommentTag.cs,CreateCommentTags,The following statement contains a magic number: if (split.Length == 2 && int.TryParse (split [1]' out priority))  	list.Add (new CommentTag (split [0]' priority));  else  	MonoDevelop.Core.LoggingService.LogWarning ("Invalid tag list in CommentTagSet: '{0}'"' tagListString);  
Magic Number,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,RenderTemplateName,The following statement contains a magic number: if (template == null) {  	templateCellRenderer.Markup = (string)templateStore.GetValue (iter' 2);  	return;  }  
Magic Number,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,RenderTemplateName,The following statement contains a magic number: templateCellRenderer.Markup = (string)templateStore.GetValue (iter' 2);  
Magic Number,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);  
Magic Number,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);  
Magic Number,MonoDevelop.Ide.CodeTemplates,CodeTemplatePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplatePanel.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);  
Magic Number,MonoDevelop.Ide.CodeTemplates,EditTemplateDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\EditTemplateDialog.cs,EditTemplateDialog,The following statement contains a magic number: treeviewVariable.AppendColumn (""' nameRenderer' delegate (TreeViewColumn col' CellRenderer cell' TreeModel model' TreeIter iter) {  	nameRenderer.Markup = ((string)model.GetValue (iter' 2));  });  
Magic Number,MonoDevelop.Ide.CodeTemplates,EditTemplateDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\EditTemplateDialog.cs,EditTemplateDialog,The following statement contains a magic number: nameRenderer.Markup = ((string)model.GetValue (iter' 2));  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: switch (name) {  case "GetCollections":  	return GetCollections ();  case "GetCurrentClassName":  	return new CodeTemplateListDataProvider (GetCurrentClassName ());  case "GetConstructorModifier":  	return new CodeTemplateListDataProvider (GetConstructorModifier ());  case "GetSimpleTypeName":  	return new CodeTemplateListDataProvider (GetSimpleTypeName (match.Groups [2].Value.Trim ('"')));  case "GetLengthProperty":  	return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  case "GetComponentTypeOf":  	return new CodeTemplateListDataProvider (GetComponentTypeOf (callback' match.Groups [2].Value.Trim ('"')));  }  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: switch (name) {  case "GetCollections":  	return GetCollections ();  case "GetCurrentClassName":  	return new CodeTemplateListDataProvider (GetCurrentClassName ());  case "GetConstructorModifier":  	return new CodeTemplateListDataProvider (GetConstructorModifier ());  case "GetSimpleTypeName":  	return new CodeTemplateListDataProvider (GetSimpleTypeName (match.Groups [2].Value.Trim ('"')));  case "GetLengthProperty":  	return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  case "GetComponentTypeOf":  	return new CodeTemplateListDataProvider (GetComponentTypeOf (callback' match.Groups [2].Value.Trim ('"')));  }  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: switch (name) {  case "GetCollections":  	return GetCollections ();  case "GetCurrentClassName":  	return new CodeTemplateListDataProvider (GetCurrentClassName ());  case "GetConstructorModifier":  	return new CodeTemplateListDataProvider (GetConstructorModifier ());  case "GetSimpleTypeName":  	return new CodeTemplateListDataProvider (GetSimpleTypeName (match.Groups [2].Value.Trim ('"')));  case "GetLengthProperty":  	return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  case "GetComponentTypeOf":  	return new CodeTemplateListDataProvider (GetComponentTypeOf (callback' match.Groups [2].Value.Trim ('"')));  }  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: switch (name) {  case "GetCollections":  	return GetCollections ();  case "GetCurrentClassName":  	return new CodeTemplateListDataProvider (GetCurrentClassName ());  case "GetConstructorModifier":  	return new CodeTemplateListDataProvider (GetConstructorModifier ());  case "GetSimpleTypeName":  	return new CodeTemplateListDataProvider (GetSimpleTypeName (match.Groups [2].Value.Trim ('"')));  case "GetLengthProperty":  	return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  case "GetComponentTypeOf":  	return new CodeTemplateListDataProvider (GetComponentTypeOf (callback' match.Groups [2].Value.Trim ('"')));  }  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: return new CodeTemplateListDataProvider (GetSimpleTypeName (match.Groups [2].Value.Trim ('"')));  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  
Magic Number,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following statement contains a magic number: return new CodeTemplateListDataProvider (GetComponentTypeOf (callback' match.Groups [2].Value.Trim ('"')));  
Magic Number,MonoDevelop.Ide.Templates,CodeDomFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeDomFileDescriptionTemplate.cs,StripHeaderAndBlankLines,The following statement contains a magic number: for (int i = 1; i <= doc.LineCount; i++) {  	string lineText = doc.GetTextAt (doc.GetLine (i));  	// Microsoft.NET generates "auto-generated" tags where Mono generates "autogenerated" tags.  	if (lineText.Contains ("</autogenerated>") || lineText.Contains ("</auto-generated>")) {  		realStartLine = i + 2;  		break;  	}  }  
Magic Number,MonoDevelop.Ide.Templates,CodeDomFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeDomFileDescriptionTemplate.cs,StripHeaderAndBlankLines,The following statement contains a magic number: if (lineText.Contains ("</autogenerated>") || lineText.Contains ("</auto-generated>")) {  	realStartLine = i + 2;  	break;  }  
Magic Number,MonoDevelop.Ide.Templates,CodeDomFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\CodeDomFileDescriptionTemplate.cs,StripHeaderAndBlankLines,The following statement contains a magic number: realStartLine = i + 2;  
Magic Number,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,SaveFile,The following statement contains a magic number: try {  	fs = File.Create (file);  	while ((nr = stream.Read (buffer' 0' 2048)) > 0)  		fs.Write (buffer' 0' nr);  }  finally {  	stream.Close ();  	if (fs != null)  		fs.Close ();  }  
Magic Number,MonoDevelop.Ide.Templates,SingleFileDescriptionTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SingleFileDescriptionTemplate.cs,SaveFile,The following statement contains a magic number: while ((nr = stream.Read (buffer' 0' 2048)) > 0)  	fs.Write (buffer' 0' nr);  
Magic Number,MonoDevelop.Ide.Templates,XmlCodeDomReader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\XmlCodeDomReader.cs,GenerateElement,The following statement contains a magic number: foreach (XmlAttribute att in elem.Attributes) {  	PropertyInfo prop = type.GetProperty (att.Name);  	if (prop == null) {  		if (att.Name.EndsWith ("Type") && type.GetProperty (att.Name.Substring (0' att.Name.Length - 4)) != null)  			continue;  		throw new InvalidOperationException ("Property '" + att.Name + "' not found in type '" + type + "'.");  	}  	Type ptype = null;  	string typeatt = elem.GetAttribute (att.Name + "Type");  	if (typeatt != "")  		ptype = Type.GetType (typeatt);  	if (ptype == null)  		ptype = prop.PropertyType;  	object val = GenerateValue (att.Value' ptype);  	prop.SetValue (ob' val' null);  }  
Magic Number,MonoDevelop.Ide.Templates,XmlCodeDomReader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\XmlCodeDomReader.cs,GenerateElement,The following statement contains a magic number: if (prop == null) {  	if (att.Name.EndsWith ("Type") && type.GetProperty (att.Name.Substring (0' att.Name.Length - 4)) != null)  		continue;  	throw new InvalidOperationException ("Property '" + att.Name + "' not found in type '" + type + "'.");  }  
Magic Number,MonoDevelop.Ide.Templates,XmlCodeDomReader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\XmlCodeDomReader.cs,GenerateElement,The following statement contains a magic number: if (att.Name.EndsWith ("Type") && type.GetProperty (att.Name.Substring (0' att.Name.Length - 4)) != null)  	continue;  
Magic Number,MonoDevelop.Ide.Gui.Content,TextStylePolicy,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\TextStylePolicy.cs,TextStylePolicy,The following statement contains a magic number: FileWidth = 120;  
Magic Number,MonoDevelop.Ide.Gui.Content,TextStylePolicy,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\TextStylePolicy.cs,TextStylePolicy,The following statement contains a magic number: TabWidth = 4;  
Magic Number,MonoDevelop.Ide.Gui.Content,TextStylePolicy,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\TextStylePolicy.cs,TextStylePolicy,The following statement contains a magic number: IndentWidth = 4;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyBg (Gtk.StateType.Normal' new Gdk.Color (69' 69' 94));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyBg (Gtk.StateType.Normal' new Gdk.Color (69' 69' 94));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyBg (Gtk.StateType.Normal' new Gdk.Color (69' 69' 94));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyBg (Gtk.StateType.Active' new Gdk.Color (69' 69' 94));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyBg (Gtk.StateType.Active' new Gdk.Color (69' 69' 94));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyBg (Gtk.StateType.Active' new Gdk.Color (69' 69' 94));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Normal' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Normal' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Normal' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Active' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Active' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Active' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Prelight' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Prelight' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,CommonAboutDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\CommonAboutDialog.cs,ChangeColor,The following statement contains a magic number: w.ModifyFg (Gtk.StateType.Prelight' new Gdk.Color (255' 255' 255));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,DirtyFilesDialog,The following statement contains a magic number: mainColumn.AddAttribute (togRender' "inconsistent"' 3);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,DirtyFilesDialog,The following statement contains a magic number: sc.BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,DirtyFilesDialog,The following statement contains a magic number: this.VBox.PackStart (sc' true' true' 6);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,DirtyFilesDialog,The following statement contains a magic number: this.SetDefaultSize (300' 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,DirtyFilesDialog,The following statement contains a magic number: this.SetDefaultSize (300' 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,SaveAndQuit,The following statement contains a magic number: tsFiles.Foreach (delegate (TreeModel model' TreePath path' TreeIter iter) {  	var window = tsFiles.GetValue (iter' 2) as SdiWorkspaceWindow;  	if (window == null)  		return false;  	if ((bool)tsFiles.GetValue (iter' 1)) {  		window.ViewContent.Save (window.ViewContent.ContentName);  	}  	else {  		window.ViewContent.DiscardChanges ();  	}  	return false;  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,Quit,The following statement contains a magic number: tsFiles.Foreach (delegate (TreeModel model' TreePath path' TreeIter iter) {  	var window = tsFiles.GetValue (iter' 2) as SdiWorkspaceWindow;  	if (window == null)  		return false;  	window.ViewContent.DiscardChanges ();  	return false;  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,NewCheckStatus,The following statement contains a magic number: if (tsFiles.IterHasChild (iter)) {  	TreeIter childIter;  	tsFiles.IterNthChild (out childIter' iter' 0);  	if (tsFiles.IterHasChild (childIter))  		NewCheckStatus (childIter);  	bool lastsetting = (bool)tsFiles.GetValue (childIter' 1);  	bool inconsistant = (bool)tsFiles.GetValue (childIter' 3);  	bool anytrue;  	anytrue = lastsetting;  	while (tsFiles.IterNext (ref childIter)) {  		if (tsFiles.IterHasChild (childIter))  			NewCheckStatus (childIter);  		bool newsetting = (bool)tsFiles.GetValue (childIter' 1);  		if (newsetting != lastsetting || (bool)tsFiles.GetValue (childIter' 3) == true)  			inconsistant = true;  		if (newsetting)  			anytrue = true;  		lastsetting = newsetting;  	}  	tsFiles.SetValue (iter' 3' inconsistant);  	tsFiles.SetValue (iter' 1' anytrue);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,NewCheckStatus,The following statement contains a magic number: if (tsFiles.IterHasChild (iter)) {  	TreeIter childIter;  	tsFiles.IterNthChild (out childIter' iter' 0);  	if (tsFiles.IterHasChild (childIter))  		NewCheckStatus (childIter);  	bool lastsetting = (bool)tsFiles.GetValue (childIter' 1);  	bool inconsistant = (bool)tsFiles.GetValue (childIter' 3);  	bool anytrue;  	anytrue = lastsetting;  	while (tsFiles.IterNext (ref childIter)) {  		if (tsFiles.IterHasChild (childIter))  			NewCheckStatus (childIter);  		bool newsetting = (bool)tsFiles.GetValue (childIter' 1);  		if (newsetting != lastsetting || (bool)tsFiles.GetValue (childIter' 3) == true)  			inconsistant = true;  		if (newsetting)  			anytrue = true;  		lastsetting = newsetting;  	}  	tsFiles.SetValue (iter' 3' inconsistant);  	tsFiles.SetValue (iter' 1' anytrue);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,NewCheckStatus,The following statement contains a magic number: if (tsFiles.IterHasChild (iter)) {  	TreeIter childIter;  	tsFiles.IterNthChild (out childIter' iter' 0);  	if (tsFiles.IterHasChild (childIter))  		NewCheckStatus (childIter);  	bool lastsetting = (bool)tsFiles.GetValue (childIter' 1);  	bool inconsistant = (bool)tsFiles.GetValue (childIter' 3);  	bool anytrue;  	anytrue = lastsetting;  	while (tsFiles.IterNext (ref childIter)) {  		if (tsFiles.IterHasChild (childIter))  			NewCheckStatus (childIter);  		bool newsetting = (bool)tsFiles.GetValue (childIter' 1);  		if (newsetting != lastsetting || (bool)tsFiles.GetValue (childIter' 3) == true)  			inconsistant = true;  		if (newsetting)  			anytrue = true;  		lastsetting = newsetting;  	}  	tsFiles.SetValue (iter' 3' inconsistant);  	tsFiles.SetValue (iter' 1' anytrue);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,NewCheckStatus,The following statement contains a magic number: while (tsFiles.IterNext (ref childIter)) {  	if (tsFiles.IterHasChild (childIter))  		NewCheckStatus (childIter);  	bool newsetting = (bool)tsFiles.GetValue (childIter' 1);  	if (newsetting != lastsetting || (bool)tsFiles.GetValue (childIter' 3) == true)  		inconsistant = true;  	if (newsetting)  		anytrue = true;  	lastsetting = newsetting;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,NewCheckStatus,The following statement contains a magic number: if (newsetting != lastsetting || (bool)tsFiles.GetValue (childIter' 3) == true)  	inconsistant = true;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,DirtyFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\DirtyFilesDialog.cs,NewCheckStatus,The following statement contains a magic number: tsFiles.SetValue (iter' 3' inconsistant);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: infoBox.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: infoBox.Margin = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: infoBox.PackStart (new Xwt.Label () {  	Text = IdeVersionInfo.MonoDevelopVersion'  	MarginLeft = 12  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: infoBox.PackStart (new Xwt.Label () {  	Text = GettextCatalog.GetString ("Released under the GNU Lesser General Public License.")'  	MarginLeft = 12  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: infoBox.PackStart (new Xwt.Label () {  	Text = "© 2004-2013 MonoDevelop contributors"'  	MarginLeft = 12  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: cbox = new Xwt.HBox () {  	Spacing = 0'  	MarginLeft = 12  };  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,AboutMonoDevelopTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\AboutMonoDevelopTabPage.cs,AboutMonoDevelopTabPage,The following statement contains a magic number: cbox = new Xwt.HBox () {  	Spacing = 0'  	MarginLeft = 12  };  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,VersionInformationTabPage,The following statement contains a magic number: BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,SetText,The following statement contains a magic number: contentBox.BorderWidth = 4;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: table.ColumnSpacing = 3;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: foreach (var assembly in AppDomain.CurrentDomain.GetAssemblies ().Where (a => !a.IsDynamic).OrderBy (a => a.FullName)) {  	try {  		var assemblyName = assembly.GetName ();  		table.Attach (new Gtk.Label (assemblyName.Name) {  			Xalign = 0  		}' 0' 1' line' line + 1);  		table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  			Xalign = 0  		}' 1' 2' line' line + 1);  		table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  			Xalign = 0  		}' 2' 3' line' line + 1);  	}  	catch {  	}  	line++;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: foreach (var assembly in AppDomain.CurrentDomain.GetAssemblies ().Where (a => !a.IsDynamic).OrderBy (a => a.FullName)) {  	try {  		var assemblyName = assembly.GetName ();  		table.Attach (new Gtk.Label (assemblyName.Name) {  			Xalign = 0  		}' 0' 1' line' line + 1);  		table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  			Xalign = 0  		}' 1' 2' line' line + 1);  		table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  			Xalign = 0  		}' 2' 3' line' line + 1);  	}  	catch {  	}  	line++;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: foreach (var assembly in AppDomain.CurrentDomain.GetAssemblies ().Where (a => !a.IsDynamic).OrderBy (a => a.FullName)) {  	try {  		var assemblyName = assembly.GetName ();  		table.Attach (new Gtk.Label (assemblyName.Name) {  			Xalign = 0  		}' 0' 1' line' line + 1);  		table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  			Xalign = 0  		}' 1' 2' line' line + 1);  		table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  			Xalign = 0  		}' 2' 3' line' line + 1);  	}  	catch {  	}  	line++;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: try {  	var assemblyName = assembly.GetName ();  	table.Attach (new Gtk.Label (assemblyName.Name) {  		Xalign = 0  	}' 0' 1' line' line + 1);  	table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  		Xalign = 0  	}' 1' 2' line' line + 1);  	table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  		Xalign = 0  	}' 2' 3' line' line + 1);  }  catch {  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: try {  	var assemblyName = assembly.GetName ();  	table.Attach (new Gtk.Label (assemblyName.Name) {  		Xalign = 0  	}' 0' 1' line' line + 1);  	table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  		Xalign = 0  	}' 1' 2' line' line + 1);  	table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  		Xalign = 0  	}' 2' 3' line' line + 1);  }  catch {  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: try {  	var assemblyName = assembly.GetName ();  	table.Attach (new Gtk.Label (assemblyName.Name) {  		Xalign = 0  	}' 0' 1' line' line + 1);  	table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  		Xalign = 0  	}' 1' 2' line' line + 1);  	table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  		Xalign = 0  	}' 2' 3' line' line + 1);  }  catch {  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: table.Attach (new Gtk.Label (assemblyName.Version.ToString ()) {  	Xalign = 0  }' 1' 2' line' line + 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  	Xalign = 0  }' 2' 3' line' line + 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,VersionInformationTabPage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\VersionInformationTabPage.cs,CreateAssembliesTable,The following statement contains a magic number: table.Attach (new Gtk.Label (System.IO.Path.GetFullPath (assembly.Location)) {  	Xalign = 0  }' 2' 3' line' line + 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The following statement contains a magic number: if (bitmap != null) {  	using (var context = Gdk.CairoHelper.Create (GdkWindow)) {  		context.Antialias = Cairo.Antialias.Subpixel;  		// Render the image first.  		bitmap.RenderToDrawable (GdkWindow' new Gdk.GC (GdkWindow)' 0' 0' 0' 0' bitmap.Width' bitmap.Height' Gdk.RgbDither.None' 0' 0);  		if (showVersionInfo) {  			var bottomRight = new Cairo.PointD (bitmap.Width - 12' bitmap.Height - 25);  			// Render the alpha/beta text if we're an alpha or beta. If this  			// is rendered' the bottomRight point will be shifted upwards to  			// allow the MonoDevelop version to be rendered above the alpha marker  			if (!string.IsNullOrEmpty (build)) {  				DrawAlphaBetaMarker (context' ref bottomRight' build);  			}  			// Render the MonoDevelop version  			DrawVersionNumber (context' ref bottomRight' version);  		}  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The following statement contains a magic number: if (bitmap != null) {  	using (var context = Gdk.CairoHelper.Create (GdkWindow)) {  		context.Antialias = Cairo.Antialias.Subpixel;  		// Render the image first.  		bitmap.RenderToDrawable (GdkWindow' new Gdk.GC (GdkWindow)' 0' 0' 0' 0' bitmap.Width' bitmap.Height' Gdk.RgbDither.None' 0' 0);  		if (showVersionInfo) {  			var bottomRight = new Cairo.PointD (bitmap.Width - 12' bitmap.Height - 25);  			// Render the alpha/beta text if we're an alpha or beta. If this  			// is rendered' the bottomRight point will be shifted upwards to  			// allow the MonoDevelop version to be rendered above the alpha marker  			if (!string.IsNullOrEmpty (build)) {  				DrawAlphaBetaMarker (context' ref bottomRight' build);  			}  			// Render the MonoDevelop version  			DrawVersionNumber (context' ref bottomRight' version);  		}  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (GdkWindow)) {  	context.Antialias = Cairo.Antialias.Subpixel;  	// Render the image first.  	bitmap.RenderToDrawable (GdkWindow' new Gdk.GC (GdkWindow)' 0' 0' 0' 0' bitmap.Width' bitmap.Height' Gdk.RgbDither.None' 0' 0);  	if (showVersionInfo) {  		var bottomRight = new Cairo.PointD (bitmap.Width - 12' bitmap.Height - 25);  		// Render the alpha/beta text if we're an alpha or beta. If this  		// is rendered' the bottomRight point will be shifted upwards to  		// allow the MonoDevelop version to be rendered above the alpha marker  		if (!string.IsNullOrEmpty (build)) {  			DrawAlphaBetaMarker (context' ref bottomRight' build);  		}  		// Render the MonoDevelop version  		DrawVersionNumber (context' ref bottomRight' version);  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (GdkWindow)) {  	context.Antialias = Cairo.Antialias.Subpixel;  	// Render the image first.  	bitmap.RenderToDrawable (GdkWindow' new Gdk.GC (GdkWindow)' 0' 0' 0' 0' bitmap.Width' bitmap.Height' Gdk.RgbDither.None' 0' 0);  	if (showVersionInfo) {  		var bottomRight = new Cairo.PointD (bitmap.Width - 12' bitmap.Height - 25);  		// Render the alpha/beta text if we're an alpha or beta. If this  		// is rendered' the bottomRight point will be shifted upwards to  		// allow the MonoDevelop version to be rendered above the alpha marker  		if (!string.IsNullOrEmpty (build)) {  			DrawAlphaBetaMarker (context' ref bottomRight' build);  		}  		// Render the MonoDevelop version  		DrawVersionNumber (context' ref bottomRight' version);  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The following statement contains a magic number: if (showVersionInfo) {  	var bottomRight = new Cairo.PointD (bitmap.Width - 12' bitmap.Height - 25);  	// Render the alpha/beta text if we're an alpha or beta. If this  	// is rendered' the bottomRight point will be shifted upwards to  	// allow the MonoDevelop version to be rendered above the alpha marker  	if (!string.IsNullOrEmpty (build)) {  		DrawAlphaBetaMarker (context' ref bottomRight' build);  	}  	// Render the MonoDevelop version  	DrawVersionNumber (context' ref bottomRight' version);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,OnExposeEvent,The following statement contains a magic number: if (showVersionInfo) {  	var bottomRight = new Cairo.PointD (bitmap.Width - 12' bitmap.Height - 25);  	// Render the alpha/beta text if we're an alpha or beta. If this  	// is rendered' the bottomRight point will be shifted upwards to  	// allow the MonoDevelop version to be rendered above the alpha marker  	if (!string.IsNullOrEmpty (build)) {  		DrawAlphaBetaMarker (context' ref bottomRight' build);  	}  	// Render the MonoDevelop version  	DrawVersionNumber (context' ref bottomRight' version);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawAlphaBetaMarker,The following statement contains a magic number: x = x + extents.XBearing + (rectangle.Width - extents.Width) / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawAlphaBetaMarker,The following statement contains a magic number: y = y - extents.YBearing + (rectangle.Height - extents.Height) / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawAlphaBetaMarker,The following statement contains a magic number: bottomRight.Y -= rectangle.Height - 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.Arc (x + radius' y + radius' radius' Math.PI' -Math.PI / 2);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.Arc (x + width - radius' y + radius' radius' -Math.PI / 2' 0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.Arc (x + width - radius' y + height - radius' radius' 0' Math.PI / 2);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.Arc (x + radius' y + height - radius' radius' Math.PI / 2' Math.PI);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.SetSourceRGB (161 / 255.0' 40 / 255.0' 48 / 255.0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.SetSourceRGB (161 / 255.0' 40 / 255.0' 48 / 255.0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.SetSourceRGB (161 / 255.0' 40 / 255.0' 48 / 255.0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.SetSourceRGB (161 / 255.0' 40 / 255.0' 48 / 255.0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.SetSourceRGB (161 / 255.0' 40 / 255.0' 48 / 255.0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,SplashScreenForm,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SplashScreen.cs,DrawRoundedRectangle,The following statement contains a magic number: c.SetSourceRGB (161 / 255.0' 40 / 255.0' 48 / 255.0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FileSelectorDialog,The following statement contains a magic number: table.RowSpacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FileSelectorDialog,The following statement contains a magic number: table.ColumnSpacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FileSelectorDialog,The following statement contains a magic number: table.Attach (encodingMenu' 1' 2' 0' 1' AttachOptions.Expand | AttachOptions.Fill' AttachOptions.Expand | AttachOptions.Fill' 0' 0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FileSelectorDialog,The following statement contains a magic number: table.Attach (viewerLabel' 0' 1' 1' 2' AttachOptions.Fill' AttachOptions.Fill' 0' 0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FileSelectorDialog,The following statement contains a magic number: table.Attach (box' 1' 2' 1' 2' AttachOptions.Expand | AttachOptions.Fill' AttachOptions.Expand | AttachOptions.Fill' 0' 0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FileSelectorDialog,The following statement contains a magic number: table.Attach (box' 1' 2' 1' 2' AttachOptions.Expand | AttachOptions.Fill' AttachOptions.Expand | AttachOptions.Fill' 0' 0);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FillEncodings,The following statement contains a magic number: if (Action != Gtk.FileChooserAction.Save) {  	RadioMenuItem autodetect = new RadioMenuItem (GettextCatalog.GetString ("Auto Detected"));  	autodetect.Group = new GLib.SList (typeof(object));  	menu.Append (autodetect);  	menu.Append (new Gtk.SeparatorMenuItem ());  	autodetect.Active = true;  	defaultActivated = autodetect;  	firstEncIndex = 2;  }  else  	firstEncIndex = 0;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FileSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FileSelectorDialog.cs,FillEncodings,The following statement contains a magic number: firstEncIndex = 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,AddMessage,The following statement contains a magic number: box.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,AddMessage,The following statement contains a magic number: lab.WidthRequest = 500;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,Run,The following statement contains a magic number: if (msgBox.SizeRequest ().Height < 400) {  	scrolled.VscrollbarPolicy = PolicyType.Never;  	this.Resize (10' 10);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,Run,The following statement contains a magic number: if (msgBox.SizeRequest ().Height < 400) {  	scrolled.VscrollbarPolicy = PolicyType.Never;  	this.Resize (10' 10);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,Run,The following statement contains a magic number: if (msgBox.SizeRequest ().Height < 400) {  	scrolled.VscrollbarPolicy = PolicyType.Never;  	this.Resize (10' 10);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,Run,The following statement contains a magic number: this.Resize (10' 10);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiMessageDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiMessageDialog.cs,Run,The following statement contains a magic number: this.Resize (10' 10);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,MultiTaskProgressDialog,The following statement contains a magic number: textColumn.MinWidth = 292;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,MultiTaskProgressDialog,The following statement contains a magic number: progressRenderer.Xpad = 4;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,MultiTaskProgressDialog,The following statement contains a magic number: progressRenderer.Ypad = 4;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,MultiTaskProgressDialog,The following statement contains a magic number: progressColumn.MinWidth = 108;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,MultiTaskProgressDialog,The following statement contains a magic number: tag.Indent = 10;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,SetProgress,The following statement contains a magic number: if (statusStore.IterIsValid (currentTaskIter)) {  	statusStore.SetValue (currentTaskIter' STORE_TaskProgress' System.Convert.ToInt32 (fraction * 100));  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,SetProgress,The following statement contains a magic number: statusStore.SetValue (currentTaskIter' STORE_TaskProgress' System.Convert.ToInt32 (fraction * 100));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,SetProgress,The following statement contains a magic number: if (statusStore.GetIterFirst (out iter)) {  	do {  		if (((string)statusStore.GetValue (iter' STORE_TaskName)) == taskName) {  			statusStore.SetValue (iter' STORE_TaskProgress' System.Convert.ToInt32 (fraction * 100));  			return true;  		}  	}  	while (statusStore.IterNext (ref iter));  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,SetProgress,The following statement contains a magic number: do {  	if (((string)statusStore.GetValue (iter' STORE_TaskName)) == taskName) {  		statusStore.SetValue (iter' STORE_TaskProgress' System.Convert.ToInt32 (fraction * 100));  		return true;  	}  }  while (statusStore.IterNext (ref iter));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,SetProgress,The following statement contains a magic number: if (((string)statusStore.GetValue (iter' STORE_TaskName)) == taskName) {  	statusStore.SetValue (iter' STORE_TaskProgress' System.Convert.ToInt32 (fraction * 100));  	return true;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,SetProgress,The following statement contains a magic number: statusStore.SetValue (iter' STORE_TaskProgress' System.Convert.ToInt32 (fraction * 100));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,Indent,The following statement contains a magic number: if (ident >= tags.Count) {  	tag = new TextTag (ident.ToString ());  	tag.Indent = 10 + 15 * (ident - 1);  	buffer.TagTable.Add (tag);  	tags.Add (tag);  }  else {  	tag = (TextTag)tags [ident];  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,Indent,The following statement contains a magic number: if (ident >= tags.Count) {  	tag = new TextTag (ident.ToString ());  	tag.Indent = 10 + 15 * (ident - 1);  	buffer.TagTable.Add (tag);  	tags.Add (tag);  }  else {  	tag = (TextTag)tags [ident];  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,Indent,The following statement contains a magic number: tag.Indent = 10 + 15 * (ident - 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MultiTaskProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MultiTaskProgressDialog.cs,Indent,The following statement contains a magic number: tag.Indent = 10 + 15 * (ident - 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: fboxTree.BackgroundColor = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: fboxTree.BackgroundColor = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: fboxTree.BackgroundColor = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: textHeader.BorderWidth = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: Realized += delegate {  	var c = new HslColor (Style.Background (Gtk.StateType.Normal));  	c.L += 0.09;  	fboxHeader.BackgroundColor = c;  };  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: c.L += 0.09;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: col0.MinWidth = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: DefaultWidth = 722;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,OptionsDialog,The following statement contains a magic number: DefaultHeight = 502;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: do {  	PanelInstance lastAuto = null;  	mainPageSize = 0;  	foreach (PanelInstance pi in boxPanels) {  		if (pi.Node.Grouping == PanelGrouping.Auto)  			lastAuto = pi;  		// HACK: This we are parenting/unparenting the widget here as a workaround  		// for a layout issue. To properly calculate the size of the widget' the widget  		// needs to have the style that it will have when added to the window.  		pi.Widget.Parent = this;  		mainPageSize += pi.Widget.SizeRequest ().Height + 6;  		pi.Widget.Unparent ();  	}  	fits = mainPageSize <= pageFrame.Allocation.Height;  	if (!fits) {  		if (lastAuto != null && boxPanels.Count > 1) {  			boxPanels.Remove (lastAuto);  			tabPanels.Insert (0' lastAuto);  		}  		else {  			fits = true;  		}  	}  }  while (!fits);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: foreach (PanelInstance pi in boxPanels) {  	if (pi.Node.Grouping == PanelGrouping.Auto)  		lastAuto = pi;  	// HACK: This we are parenting/unparenting the widget here as a workaround  	// for a layout issue. To properly calculate the size of the widget' the widget  	// needs to have the style that it will have when added to the window.  	pi.Widget.Parent = this;  	mainPageSize += pi.Widget.SizeRequest ().Height + 6;  	pi.Widget.Unparent ();  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: mainPageSize += pi.Widget.SizeRequest ().Height + 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: box.BorderWidth = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: if (tabPanels.Count > 0) {  	/*				SquaredNotebook nb = new SquaredNotebook (); 				nb.Show (); 				nb.AddTab (box' GettextCatalog.GetString ("General")); 				foreach (PanelInstance pi in tabPanels) { 					Gtk.Alignment a = new Alignment (0' 0' 1' 1); 					a.BorderWidth = 9; 					a.Show (); 					a.Add (pi.Widget); 					nb.AddTab (a' GettextCatalog.GetString (pi.Node.Label)); 					pi.Widget.Show (); 				}*/Gtk.Notebook nb = new Notebook ();  	nb.Show ();  	Gtk.Label blab = new Gtk.Label (GettextCatalog.GetString ("General"));  	blab.Show ();  	box.BorderWidth = 9;  	nb.InsertPage (box' blab' -1);  	foreach (PanelInstance pi in tabPanels) {  		Gtk.Label lab = new Gtk.Label (GettextCatalog.GetString (pi.Node.Label));  		lab.Show ();  		Gtk.Alignment a = new Alignment (0' 0' 1' 1);  		a.BorderWidth = 9;  		a.Show ();  		a.Add (pi.Widget);  		nb.InsertPage (a' lab' -1);  		pi.Widget.Show ();  	}  	page.Widget = nb;  	nb.BorderWidth = 12;  }  else {  	page.Widget = box;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: if (tabPanels.Count > 0) {  	/*				SquaredNotebook nb = new SquaredNotebook (); 				nb.Show (); 				nb.AddTab (box' GettextCatalog.GetString ("General")); 				foreach (PanelInstance pi in tabPanels) { 					Gtk.Alignment a = new Alignment (0' 0' 1' 1); 					a.BorderWidth = 9; 					a.Show (); 					a.Add (pi.Widget); 					nb.AddTab (a' GettextCatalog.GetString (pi.Node.Label)); 					pi.Widget.Show (); 				}*/Gtk.Notebook nb = new Notebook ();  	nb.Show ();  	Gtk.Label blab = new Gtk.Label (GettextCatalog.GetString ("General"));  	blab.Show ();  	box.BorderWidth = 9;  	nb.InsertPage (box' blab' -1);  	foreach (PanelInstance pi in tabPanels) {  		Gtk.Label lab = new Gtk.Label (GettextCatalog.GetString (pi.Node.Label));  		lab.Show ();  		Gtk.Alignment a = new Alignment (0' 0' 1' 1);  		a.BorderWidth = 9;  		a.Show ();  		a.Add (pi.Widget);  		nb.InsertPage (a' lab' -1);  		pi.Widget.Show ();  	}  	page.Widget = nb;  	nb.BorderWidth = 12;  }  else {  	page.Widget = box;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: if (tabPanels.Count > 0) {  	/*				SquaredNotebook nb = new SquaredNotebook (); 				nb.Show (); 				nb.AddTab (box' GettextCatalog.GetString ("General")); 				foreach (PanelInstance pi in tabPanels) { 					Gtk.Alignment a = new Alignment (0' 0' 1' 1); 					a.BorderWidth = 9; 					a.Show (); 					a.Add (pi.Widget); 					nb.AddTab (a' GettextCatalog.GetString (pi.Node.Label)); 					pi.Widget.Show (); 				}*/Gtk.Notebook nb = new Notebook ();  	nb.Show ();  	Gtk.Label blab = new Gtk.Label (GettextCatalog.GetString ("General"));  	blab.Show ();  	box.BorderWidth = 9;  	nb.InsertPage (box' blab' -1);  	foreach (PanelInstance pi in tabPanels) {  		Gtk.Label lab = new Gtk.Label (GettextCatalog.GetString (pi.Node.Label));  		lab.Show ();  		Gtk.Alignment a = new Alignment (0' 0' 1' 1);  		a.BorderWidth = 9;  		a.Show ();  		a.Add (pi.Widget);  		nb.InsertPage (a' lab' -1);  		pi.Widget.Show ();  	}  	page.Widget = nb;  	nb.BorderWidth = 12;  }  else {  	page.Widget = box;  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: box.BorderWidth = 9;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: foreach (PanelInstance pi in tabPanels) {  	Gtk.Label lab = new Gtk.Label (GettextCatalog.GetString (pi.Node.Label));  	lab.Show ();  	Gtk.Alignment a = new Alignment (0' 0' 1' 1);  	a.BorderWidth = 9;  	a.Show ();  	a.Add (pi.Widget);  	nb.InsertPage (a' lab' -1);  	pi.Widget.Show ();  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: a.BorderWidth = 9;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,OptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\OptionsDialog.cs,CreatePageWidget,The following statement contains a magic number: nb.BorderWidth = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: DefaultHeight = 5;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: tag.Indent = 10;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,Indent,The following statement contains a magic number: if (ident >= tags.Count) {  	tag = new TextTag (ident.ToString ());  	tag.Indent = 10 + 15 * (ident - 1);  	buffer.TagTable.Add (tag);  	tags.Add (tag);  }  else {  	tag = (TextTag)tags [ident];  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,Indent,The following statement contains a magic number: if (ident >= tags.Count) {  	tag = new TextTag (ident.ToString ());  	tag.Indent = 10 + 15 * (ident - 1);  	buffer.TagTable.Add (tag);  	tags.Add (tag);  }  else {  	tag = (TextTag)tags [ident];  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,Indent,The following statement contains a magic number: tag.Indent = 10 + 15 * (ident - 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,Indent,The following statement contains a magic number: tag.Indent = 10 + 15 * (ident - 1);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,ProgressDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\ProgressDialog.cs,OnExpander1Activated,The following statement contains a magic number: GLib.Timeout.Add (100' new GLib.TimeoutHandler (UpdateSize));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MimeTypePolicyOptionsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MimeTypePolicyOptionsPanel.cs,CreateMimePanelWidget,The following statement contains a magic number: box.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MimeTypePolicyOptionsSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MimeTypePolicyOptionsSection.cs,CreatePanelWidget,The following statement contains a magic number: warningMessage.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MimeTypePolicyOptionsSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MimeTypePolicyOptionsSection.cs,CreatePanelWidget,The following statement contains a magic number: wl.WidthRequest = 450;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MimeTypePolicyOptionsSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MimeTypePolicyOptionsSection.cs,CreatePanelWidget,The following statement contains a magic number: foreach (IMimeTypePolicyOptionsPanel panel in panelData.Panels) {  	panel.SetParentSection (this);  	Widget child = panel.CreateMimePanelWidget ();  	Label tlabel = new Label (panel.Label);  	label.Show ();  	child.Show ();  	Alignment align = new Alignment (0.5f' 0.5f' 1f' 1f);  	align.BorderWidth = 6;  	align.Add (child);  	align.Show ();  	notebook.AppendPage (align' tlabel);  	panel.LoadCurrentPolicy ();  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,MimeTypePolicyOptionsSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\MimeTypePolicyOptionsSection.cs,CreatePanelWidget,The following statement contains a magic number: align.BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,PolicyOptionsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\PolicyOptionsPanel.cs,CreatePanelWidget,The following statement contains a magic number: warningMessage.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,PolicyOptionsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\PolicyOptionsPanel.cs,CreatePanelWidget,The following statement contains a magic number: wl.WidthRequest = 450;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkAlertDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkAlertDialog.cs,Init,The following statement contains a magic number: this.BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkAlertDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkAlertDialog.cs,Init,The following statement contains a magic number: this.VBox.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkAlertDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkAlertDialog.cs,Init,The following statement contains a magic number: this.hbox.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkAlertDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkAlertDialog.cs,Init,The following statement contains a magic number: this.hbox.BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: DefaultWidth = 624;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: DefaultHeight = 142;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: this.VBox.BorderWidth = 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (message)) {  	message = message.Trim ();  	var descriptionLabel = new Label (message) {  		Xalign = 0F'  		Selectable = true'  	};  	descriptionLabel.LineWrap = true;  	descriptionLabel.WidthRequest = 500;  	descriptionLabel.ModifyBg (StateType.Normal' new Gdk.Color (255' 0' 0));  	vbox.PackStart (descriptionLabel' false' false' 0);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (message)) {  	message = message.Trim ();  	var descriptionLabel = new Label (message) {  		Xalign = 0F'  		Selectable = true'  	};  	descriptionLabel.LineWrap = true;  	descriptionLabel.WidthRequest = 500;  	descriptionLabel.ModifyBg (StateType.Normal' new Gdk.Color (255' 0' 0));  	vbox.PackStart (descriptionLabel' false' false' 0);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: descriptionLabel.WidthRequest = 500;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: descriptionLabel.ModifyBg (StateType.Normal' new Gdk.Color (255' 0' 0));  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: aa.Spacing = 10;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: aa.BorderWidth = 5;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: expander.Activated += delegate {  	this.AllowGrow = expander.Expanded;  	GLib.Timeout.Add (100' delegate {  		Resize (DefaultWidth' 1);  		return false;  	});  };  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,GtkErrorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\GtkErrorDialog.cs,GtkErrorDialog,The following statement contains a magic number: GLib.Timeout.Add (100' delegate {  	Resize (DefaultWidth' 1);  	return false;  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: SetDefaultSize (350' 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: SetDefaultSize (350' 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: if (x == -1 && y == -1) {  	int ww' wh;  	IdeApp.Workbench.RootWindow.GdkWindow.GetSize (out ww' out wh);  	IdeApp.Workbench.RootWindow.GdkWindow.GetOrigin (out x' out y);  	x = ww / 2 - 350 / 2;  	y = wh / 2 - 200 / 2;  	Move (x' y);  }  else  	Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: x = ww / 2 - 350 / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: x = ww / 2 - 350 / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: x = ww / 2 - 350 / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: y = wh / 2 - 200 / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: y = wh / 2 - 200 / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: y = wh / 2 - 200 / 2;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: Move (x - 350' y - 200);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: mainBox.BorderWidth = 12;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: mainBox.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: headerBox.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,FeedbackDialog,The following statement contains a magic number: textEntry.WidthRequest = 300;  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,FeedbackDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,HandleSendButtonClicked,The following statement contains a magic number: GLib.Timeout.Add (1000' delegate {  	Close ();  	return false;  });  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,TextViewWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: if (Buffer.Text.Length == 0 && !string.IsNullOrEmpty (EmptyMessage)) {  	if (text_gc == null) {  		text_gc = new Gdk.GC (evnt.Window);  		text_gc.Copy (Style.TextGC (Gtk.StateType.Normal));  		Gdk.Color color_a = Style.Base (Gtk.StateType.Normal);  		Gdk.Color color_b = Style.Text (Gtk.StateType.Normal);  		text_gc.RgbFgColor = EntryWithEmptyMessage.ColorBlend (color_a' color_b);  	}  	if (layout == null) {  		layout = new Pango.Layout (PangoContext);  		layout.FontDescription = PangoContext.FontDescription.Copy ();  	}  	int width' height;  	layout.SetMarkup (EmptyMessage);  	layout.GetPixelSize (out width' out height);  	evnt.Window.DrawLayout (text_gc' 2' 2' layout);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,TextViewWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: if (Buffer.Text.Length == 0 && !string.IsNullOrEmpty (EmptyMessage)) {  	if (text_gc == null) {  		text_gc = new Gdk.GC (evnt.Window);  		text_gc.Copy (Style.TextGC (Gtk.StateType.Normal));  		Gdk.Color color_a = Style.Base (Gtk.StateType.Normal);  		Gdk.Color color_b = Style.Text (Gtk.StateType.Normal);  		text_gc.RgbFgColor = EntryWithEmptyMessage.ColorBlend (color_a' color_b);  	}  	if (layout == null) {  		layout = new Pango.Layout (PangoContext);  		layout.FontDescription = PangoContext.FontDescription.Copy ();  	}  	int width' height;  	layout.SetMarkup (EmptyMessage);  	layout.GetPixelSize (out width' out height);  	evnt.Window.DrawLayout (text_gc' 2' 2' layout);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,TextViewWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: evnt.Window.DrawLayout (text_gc' 2' 2' layout);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,TextViewWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: evnt.Window.DrawLayout (text_gc' 2' 2' layout);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,EntryWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: if (Text.Length == 0 && !string.IsNullOrEmpty (EmptyMessage)) {  	if (text_gc == null) {  		text_gc = new Gdk.GC (evnt.Window);  		text_gc.Copy (Style.TextGC (Gtk.StateType.Normal));  		Gdk.Color color_a = Style.Base (Gtk.StateType.Normal);  		Gdk.Color color_b = Style.Text (Gtk.StateType.Normal);  		text_gc.RgbFgColor = ColorBlend (color_a' color_b);  	}  	if (layout == null) {  		layout = new Pango.Layout (PangoContext);  		layout.FontDescription = PangoContext.FontDescription.Copy ();  	}  	int width' height;  	layout.SetMarkup (EmptyMessage);  	layout.GetPixelSize (out width' out height);  	evnt.Window.DrawLayout (text_gc' 2' 2' layout);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,EntryWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: if (Text.Length == 0 && !string.IsNullOrEmpty (EmptyMessage)) {  	if (text_gc == null) {  		text_gc = new Gdk.GC (evnt.Window);  		text_gc.Copy (Style.TextGC (Gtk.StateType.Normal));  		Gdk.Color color_a = Style.Base (Gtk.StateType.Normal);  		Gdk.Color color_b = Style.Text (Gtk.StateType.Normal);  		text_gc.RgbFgColor = ColorBlend (color_a' color_b);  	}  	if (layout == null) {  		layout = new Pango.Layout (PangoContext);  		layout.FontDescription = PangoContext.FontDescription.Copy ();  	}  	int width' height;  	layout.SetMarkup (EmptyMessage);  	layout.GetPixelSize (out width' out height);  	evnt.Window.DrawLayout (text_gc' 2' 2' layout);  }  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,EntryWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: evnt.Window.DrawLayout (text_gc' 2' 2' layout);  
Magic Number,MonoDevelop.Ide.Gui.Dialogs,EntryWithEmptyMessage,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\FeedbackDialog.cs,OnExposeEvent,The following statement contains a magic number: evnt.Window.DrawLayout (text_gc' 2' 2' layout);  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,TasksPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\TasksOptionsPanel.cs,StringToColor,The following statement contains a magic number: if (rgb.Length != 3)  	return new Gdk.Color (0' 0' 0);  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,TasksPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\TasksOptionsPanel.cs,StringToColor,The following statement contains a magic number: try {  	color.Red = UInt16.Parse (rgb [0]' System.Globalization.NumberStyles.HexNumber);  	color.Green = UInt16.Parse (rgb [1]' System.Globalization.NumberStyles.HexNumber);  	color.Blue = UInt16.Parse (rgb [2]' System.Globalization.NumberStyles.HexNumber);  }  catch {  	// something went wrong' then use neutral black color  	color = new Gdk.Color (0' 0' 0);  }  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,TasksPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\TasksOptionsPanel.cs,StringToColor,The following statement contains a magic number: color.Blue = UInt16.Parse (rgb [2]' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,KeyBindingsPanel,The following statement contains a magic number: col.Spacing = 4;  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,KeyBindingsPanel,The following statement contains a magic number: searchEntry.Changed += delegate {  	processedFilterTerms = searchEntry.Text.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries).Select (s => s.ToLower ()).ToArray ();  	;  	filterChanged = true;  	if (!filterTimeoutRunning) {  		filterTimeoutRunning = true;  		GLib.Timeout.Add (300' delegate {  			if (!filterChanged) {  				if (filterTimeoutRunning)  					Refilter ();  				filterTimeoutRunning = false;  				return false;  			}  			filterChanged = false;  			return true;  		});  	}  	;  };  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,KeyBindingsPanel,The following statement contains a magic number: if (!filterTimeoutRunning) {  	filterTimeoutRunning = true;  	GLib.Timeout.Add (300' delegate {  		if (!filterChanged) {  			if (filterTimeoutRunning)  				Refilter ();  			filterTimeoutRunning = false;  			return false;  		}  		filterChanged = false;  		return true;  	});  }  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,KeyBindingsPanel,The following statement contains a magic number: GLib.Timeout.Add (300' delegate {  	if (!filterChanged) {  		if (filterTimeoutRunning)  			Refilter ();  		filterTimeoutRunning = false;  		return false;  	}  	filterChanged = false;  	return true;  });  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,OnKeysTreeViewSelectionChange,The following statement contains a magic number: if (sel.GetSelected (out model' out iter) && model.GetValue (iter' commandCol) != null) {  	accelEntry.Sensitive = true;  	CurrentBinding = (string)model.GetValue (iter' bindingCol);  	//grab focus AFTER the selection event' or focus gets screwy  	GLib.Timeout.Add (10' delegate {  		accelEntry.GrabFocus ();  		return false;  	});  	accelIncomplete = false;  	accelComplete = true;  }  else {  	accelEntry.Sensitive = false;  	CurrentBinding = string.Empty;  }  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,KeyBindingsPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\KeyBindingsPanel.cs,OnKeysTreeViewSelectionChange,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	accelEntry.GrabFocus ();  	return false;  });  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,IDEStyleOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\IDEStyleOptionsPanel.cs,Load,The following statement contains a magic number: for (int n = 1; n < isoCodes.Length; n += 2)  	comboLanguage.AppendText (GettextCatalog.GetString (isoCodes [n]));  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,IDEStyleOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\IDEStyleOptionsPanel.cs,Load,The following statement contains a magic number: n += 2
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,IDEStyleOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\IDEStyleOptionsPanel.cs,Load,The following statement contains a magic number: comboLanguage.Active = i / 2;  
Magic Number,MonoDevelop.Ide.Gui.OptionPanels,MonoRuntimePanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.OptionPanels\MonoRuntimePanel.cs,GetProgramFilesX86,The following statement contains a magic number: return Environment.GetFolderPath (IntPtr.Size == 8 ? Environment.SpecialFolder.ProgramFilesX86 : Environment.SpecialFolder.ProgramFiles);  
Magic Number,MonoDevelop.Ide.Gui.Pads,TaskListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\TaskListPad.cs,TaskListPad,The following statement contains a magic number: foreach (object[] row in switcherComboList) {  	if ((string)row [2] == className) {  		pos = i;  		break;  	}  	i++;  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,TaskListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\TaskListPad.cs,TaskListPad,The following statement contains a magic number: if ((string)row [2] == className) {  	pos = i;  	break;  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,TaskListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\TaskListPad.cs,OnContentSwitched,The following statement contains a magic number: if (switcherCombo.GetActiveIter (out iter)) {  	if (sw.Children.Length > 0)  		sw.Remove (sw.Children [0]);  	ITaskListView view = (ITaskListView)switcherCombo.Model.GetValue (iter' 1);  	sw.Add (view.Content);  	if (activeView != null && activeView.ToolBarItems != null && activeView.ToolBarItems.Length > 0) {  		foreach (Widget w in activeView.ToolBarItems)  			toolbar.Remove (w);  		toolbar.Remove (separator);  	}  	if (view != null && view.ToolBarItems != null && view.ToolBarItems.Length > 0) {  		toolbar.Add (separator);  		foreach (Widget w in view.ToolBarItems)  			toolbar.Add (w);  	}  	if (toolbar != null)  		toolbar.ShowAll ();  	activeView = view;  	control.ShowAll ();  	string className = (string)switcherCombo.Model.GetValue (iter' 2);  	PropertyService.Set ("Monodevelop.TaskList.ActiveView"' className);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,LoadColumnsVisibility,The following statement contains a magic number: if (tokens.Length == 7 && view != null && view.Columns.Length == 7) {  	for (int i = 0; i < 7; i++) {  		bool visible;  		if (bool.TryParse (tokens [i]' out visible))  			view.Columns [i].Visible = visible;  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,LoadColumnsVisibility,The following statement contains a magic number: if (tokens.Length == 7 && view != null && view.Columns.Length == 7) {  	for (int i = 0; i < 7; i++) {  		bool visible;  		if (bool.TryParse (tokens [i]' out visible))  			view.Columns [i].Visible = visible;  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,LoadColumnsVisibility,The following statement contains a magic number: if (tokens.Length == 7 && view != null && view.Columns.Length == 7) {  	for (int i = 0; i < 7; i++) {  		bool visible;  		if (bool.TryParse (tokens [i]' out visible))  			view.Columns [i].Visible = visible;  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,LoadColumnsVisibility,The following statement contains a magic number: for (int i = 0; i < 7; i++) {  	bool visible;  	if (bool.TryParse (tokens [i]' out visible))  		view.Columns [i].Visible = visible;  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,AddTasks,The following statement contains a magic number: foreach (Task t in tasks) {  	AddTaskInternal (t);  	if ((n++ % 100) == 0) {  		// Adding many tasks is a bit slow' so refresh the  		// ui at every block of 100.  		DispatchService.RunPendingEvents ();  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,AddTasks,The following statement contains a magic number: if ((n++ % 100) == 0) {  	// Adding many tasks is a bit slow' so refresh the  	// ui at every block of 100.  	DispatchService.RunPendingEvents ();  }  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,SetInitialOutputViewSize,The following statement contains a magic number: pos = Math.Max (30' Math.Min (pos' controlWidth - 30));  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorListPad,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,SetInitialOutputViewSize,The following statement contains a magic number: pos = Math.Max (30' Math.Min (pos' controlWidth - 30));  
Magic Number,MonoDevelop.Ide.Gui.Pads,ErrorPadLabelProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads\ErrorListPad.cs,CreateLabel,The following statement contains a magic number: box.Spacing = 3;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,FolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\FolderNodeBuilder.cs,HasChildNodes,The following statement contains a magic number: if (project.Files.Count > 500)  	return true;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (file.IsLink && icon != null) {  	var overlay = ImageService.GetPixbuf ("md-link-overlay"' Gtk.IconSize.Menu);  	var cached = Context.GetComposedIcon (icon' overlay);  	if (cached != null)  		icon = cached;  	else {  		var res = icon.Copy ();  		overlay.Composite (res' 0' 0' icon.Width' icon.Width' 0' 0' 1' 1' Gdk.InterpType.Bilinear' 255);  		Context.CacheComposedIcon (icon' overlay' res);  		icon = res;  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (cached != null)  	icon = cached;  else {  	var res = icon.Copy ();  	overlay.Composite (res' 0' 0' icon.Width' icon.Width' 0' 0' 1' 1' Gdk.InterpType.Bilinear' 255);  	Context.CacheComposedIcon (icon' overlay' res);  	icon = res;  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectFileNodeBuilder.cs,BuildNode,The following statement contains a magic number: overlay.Composite (res' 0' 0' icon.Width' icon.Width' 0' 0' 1' 1' Gdk.InterpType.Bilinear' 255);  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (noMapping || !ce.Build || (missingConfig = p.Configurations [ce.ItemConfiguration] == null)) {  	Gdk.Pixbuf ticon = Context.GetComposedIcon (icon' "project-no-build");  	if (ticon == null)  		ticon = Context.CacheComposedIcon (icon' "project-no-build"' ImageService.MakeTransparent (icon' 0.5));  	icon = ticon;  	label = missingConfig ? "<span foreground='red'>" + label + " <small>(invalid configuration mapping)</small></span>" : "<span foreground='gray'>" + label + " <small>(not built in active configuration)</small></span>";  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (ticon == null)  	ticon = Context.CacheComposedIcon (icon' "project-no-build"' ImageService.MakeTransparent (icon' 0.5));  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,BuildNode,The following statement contains a magic number: ticon = Context.CacheComposedIcon (icon' "project-no-build"' ImageService.MakeTransparent (icon' 0.5));  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ProjectNodeBuilder.cs,OnAddFile,The following statement contains a magic number: if (args.CommonProject != null && args.Count > 2 && args.SingleVirtualDirectory) {  	ITreeBuilder tb = GetFolder (args.CommonProject' args.CommonVirtualRootDirectory);  	if (tb != null)  		tb.UpdateChildren ();  }  else {  	foreach (ProjectFileEventInfo e in args)  		AddFile (e.ProjectFile' e.Project);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: if ((dataObject is ProjectFolder) && builder.Options ["ShowAllFiles"] && Directory.Exists (thisPath)) {  	ProjectFolder pf = (ProjectFolder)dataObject;  	if (pf.Project == null || !ProjectFolderCommandHandler.PathExistsInProject (pf.Project' thisPath)) {  		Gdk.Pixbuf gicon = Context.GetComposedIcon (icon' "fade");  		if (gicon == null) {  			gicon = ImageService.MakeTransparent (icon' 0.5);  			Context.CacheComposedIcon (icon' "fade"' gicon);  		}  		icon = gicon;  		gicon = Context.GetComposedIcon (closedIcon' "fade");  		if (gicon == null) {  			gicon = ImageService.MakeTransparent (closedIcon' 0.5);  			Context.CacheComposedIcon (closedIcon' "fade"' gicon);  		}  		closedIcon = gicon;  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: if ((dataObject is ProjectFolder) && builder.Options ["ShowAllFiles"] && Directory.Exists (thisPath)) {  	ProjectFolder pf = (ProjectFolder)dataObject;  	if (pf.Project == null || !ProjectFolderCommandHandler.PathExistsInProject (pf.Project' thisPath)) {  		Gdk.Pixbuf gicon = Context.GetComposedIcon (icon' "fade");  		if (gicon == null) {  			gicon = ImageService.MakeTransparent (icon' 0.5);  			Context.CacheComposedIcon (icon' "fade"' gicon);  		}  		icon = gicon;  		gicon = Context.GetComposedIcon (closedIcon' "fade");  		if (gicon == null) {  			gicon = ImageService.MakeTransparent (closedIcon' 0.5);  			Context.CacheComposedIcon (closedIcon' "fade"' gicon);  		}  		closedIcon = gicon;  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: if (pf.Project == null || !ProjectFolderCommandHandler.PathExistsInProject (pf.Project' thisPath)) {  	Gdk.Pixbuf gicon = Context.GetComposedIcon (icon' "fade");  	if (gicon == null) {  		gicon = ImageService.MakeTransparent (icon' 0.5);  		Context.CacheComposedIcon (icon' "fade"' gicon);  	}  	icon = gicon;  	gicon = Context.GetComposedIcon (closedIcon' "fade");  	if (gicon == null) {  		gicon = ImageService.MakeTransparent (closedIcon' 0.5);  		Context.CacheComposedIcon (closedIcon' "fade"' gicon);  	}  	closedIcon = gicon;  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: if (pf.Project == null || !ProjectFolderCommandHandler.PathExistsInProject (pf.Project' thisPath)) {  	Gdk.Pixbuf gicon = Context.GetComposedIcon (icon' "fade");  	if (gicon == null) {  		gicon = ImageService.MakeTransparent (icon' 0.5);  		Context.CacheComposedIcon (icon' "fade"' gicon);  	}  	icon = gicon;  	gicon = Context.GetComposedIcon (closedIcon' "fade");  	if (gicon == null) {  		gicon = ImageService.MakeTransparent (closedIcon' 0.5);  		Context.CacheComposedIcon (closedIcon' "fade"' gicon);  	}  	closedIcon = gicon;  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: if (gicon == null) {  	gicon = ImageService.MakeTransparent (icon' 0.5);  	Context.CacheComposedIcon (icon' "fade"' gicon);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: gicon = ImageService.MakeTransparent (icon' 0.5);  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: if (gicon == null) {  	gicon = ImageService.MakeTransparent (closedIcon' 0.5);  	Context.CacheComposedIcon (closedIcon' "fade"' gicon);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,ShowAllFilesBuilderExtension,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\ShowAllFilesBuilderExtension.cs,BuildNode,The following statement contains a magic number: gicon = ImageService.MakeTransparent (closedIcon' 0.5);  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (file.ShowTransparent) {  	Gdk.Pixbuf gicon = Context.GetComposedIcon (icon' "fade");  	if (gicon == null) {  		gicon = ImageService.MakeTransparent (icon' 0.5);  		Context.CacheComposedIcon (icon' "fade"' gicon);  	}  	icon = gicon;  	label = "<span foreground='dimgrey'>" + label + "</span>";  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (gicon == null) {  	gicon = ImageService.MakeTransparent (icon' 0.5);  	Context.CacheComposedIcon (icon' "fade"' gicon);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,SystemFileNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\SystemFileNodeBuilder.cs,BuildNode,The following statement contains a magic number: gicon = ImageService.MakeTransparent (icon' 0.5);  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,UnknownEntryNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\UnknownEntryNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (entry.LoadError.Length > 0) {  	icon = Context.GetIcon (Gtk.Stock.DialogError);  	label = GettextCatalog.GetString ("{0} <span foreground='red' size='small'>(Load failed)</span>"' GLib.Markup.EscapeText (entry.Name));  }  else {  	icon = Context.GetIcon (MonoDevelop.Ide.Gui.Stock.Project);  	Gdk.Pixbuf gicon = Context.GetComposedIcon (icon' "fade");  	if (gicon == null) {  		gicon = ImageService.MakeTransparent (icon' 0.5);  		Context.CacheComposedIcon (icon' "fade"' gicon);  	}  	icon = gicon;  	label = GLib.Markup.EscapeText (entry.Name);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,UnknownEntryNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\UnknownEntryNodeBuilder.cs,BuildNode,The following statement contains a magic number: if (gicon == null) {  	gicon = ImageService.MakeTransparent (icon' 0.5);  	Context.CacheComposedIcon (icon' "fade"' gicon);  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ProjectPad,UnknownEntryNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ProjectPad\UnknownEntryNodeBuilder.cs,BuildNode,The following statement contains a magic number: gicon = ImageService.MakeTransparent (icon' 0.5);  
Magic Number,MonoDevelop.Ide,SelectEncodingsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SelectEncodingsDialog.cs,OnRespond,The following statement contains a magic number: if (storeSelected.GetIterFirst (out iter)) {  	do {  		var enc = (int)storeSelected.GetValue (iter' 2);  		list.Add (enc);  	}  	while (storeSelected.IterNext (ref iter));  }  
Magic Number,MonoDevelop.Ide,SelectEncodingsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SelectEncodingsDialog.cs,OnRespond,The following statement contains a magic number: do {  	var enc = (int)storeSelected.GetValue (iter' 2);  	list.Add (enc);  }  while (storeSelected.IterNext (ref iter));  
Magic Number,MonoDevelop.Ide,SelectEncodingsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Dialogs\SelectEncodingsDialog.cs,MoveItem,The following statement contains a magic number: if (sourceList.Selection.GetSelected (out model' out iter)) {  	TreeIter newiter = targetStore.AppendValues (sourceStore.GetValue (iter' 0)' sourceStore.GetValue (iter' 1)' sourceStore.GetValue (iter' 2));  	targetList.Selection.SelectIter (newiter);  	TreeIter oldIter = iter;  	if (sourceStore.IterNext (ref iter))  		sourceList.Selection.SelectIter (iter);  	sourceStore.Remove (ref oldIter);  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: if (FeedbackService.Enabled) {  	CustomFrame fr = new CustomFrame (0' 0' 1' 0);  	Gdk.Pixbuf px = Gdk.Pixbuf.LoadFromResource ("balloon.png");  	HBox b = new HBox (false' 3);  	b.PackStart (new Gtk.Image (px));  	b.PackStart (new Gtk.Label ("Feedback"));  	Gtk.Alignment al = new Gtk.Alignment (0f' 0f' 1f' 1f);  	al.RightPadding = 5;  	al.LeftPadding = 3;  	al.Add (b);  	feedbackButton = new MiniButton (al);  	//feedbackButton.BackroundColor = new Gdk.Color (200' 200' 255);  	fr.Add (feedbackButton);  	mainBox.PackStart (fr' false' false' 0);  	feedbackButton.Clicked += HandleFeedbackButtonClicked;  	feedbackButton.ButtonPressEvent += HandleFeedbackButtonButtonPressEvent;  	;  	feedbackButton.ClickOnRelease = true;  	FeedbackService.FeedbackPositionGetter = delegate {  		int x' y;  		if (feedbackButton.GdkWindow != null) {  			feedbackButton.GdkWindow.GetOrigin (out x' out y);  			x += feedbackButton.Allocation.Width;  			y -= 6;  		}  		else {  			x = y = -1;  		}  		return new Gdk.Point (x' y);  	};  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: if (FeedbackService.Enabled) {  	CustomFrame fr = new CustomFrame (0' 0' 1' 0);  	Gdk.Pixbuf px = Gdk.Pixbuf.LoadFromResource ("balloon.png");  	HBox b = new HBox (false' 3);  	b.PackStart (new Gtk.Image (px));  	b.PackStart (new Gtk.Label ("Feedback"));  	Gtk.Alignment al = new Gtk.Alignment (0f' 0f' 1f' 1f);  	al.RightPadding = 5;  	al.LeftPadding = 3;  	al.Add (b);  	feedbackButton = new MiniButton (al);  	//feedbackButton.BackroundColor = new Gdk.Color (200' 200' 255);  	fr.Add (feedbackButton);  	mainBox.PackStart (fr' false' false' 0);  	feedbackButton.Clicked += HandleFeedbackButtonClicked;  	feedbackButton.ButtonPressEvent += HandleFeedbackButtonButtonPressEvent;  	;  	feedbackButton.ClickOnRelease = true;  	FeedbackService.FeedbackPositionGetter = delegate {  		int x' y;  		if (feedbackButton.GdkWindow != null) {  			feedbackButton.GdkWindow.GetOrigin (out x' out y);  			x += feedbackButton.Allocation.Width;  			y -= 6;  		}  		else {  			x = y = -1;  		}  		return new Gdk.Point (x' y);  	};  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: if (FeedbackService.Enabled) {  	CustomFrame fr = new CustomFrame (0' 0' 1' 0);  	Gdk.Pixbuf px = Gdk.Pixbuf.LoadFromResource ("balloon.png");  	HBox b = new HBox (false' 3);  	b.PackStart (new Gtk.Image (px));  	b.PackStart (new Gtk.Label ("Feedback"));  	Gtk.Alignment al = new Gtk.Alignment (0f' 0f' 1f' 1f);  	al.RightPadding = 5;  	al.LeftPadding = 3;  	al.Add (b);  	feedbackButton = new MiniButton (al);  	//feedbackButton.BackroundColor = new Gdk.Color (200' 200' 255);  	fr.Add (feedbackButton);  	mainBox.PackStart (fr' false' false' 0);  	feedbackButton.Clicked += HandleFeedbackButtonClicked;  	feedbackButton.ButtonPressEvent += HandleFeedbackButtonButtonPressEvent;  	;  	feedbackButton.ClickOnRelease = true;  	FeedbackService.FeedbackPositionGetter = delegate {  		int x' y;  		if (feedbackButton.GdkWindow != null) {  			feedbackButton.GdkWindow.GetOrigin (out x' out y);  			x += feedbackButton.Allocation.Width;  			y -= 6;  		}  		else {  			x = y = -1;  		}  		return new Gdk.Point (x' y);  	};  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: if (FeedbackService.Enabled) {  	CustomFrame fr = new CustomFrame (0' 0' 1' 0);  	Gdk.Pixbuf px = Gdk.Pixbuf.LoadFromResource ("balloon.png");  	HBox b = new HBox (false' 3);  	b.PackStart (new Gtk.Image (px));  	b.PackStart (new Gtk.Label ("Feedback"));  	Gtk.Alignment al = new Gtk.Alignment (0f' 0f' 1f' 1f);  	al.RightPadding = 5;  	al.LeftPadding = 3;  	al.Add (b);  	feedbackButton = new MiniButton (al);  	//feedbackButton.BackroundColor = new Gdk.Color (200' 200' 255);  	fr.Add (feedbackButton);  	mainBox.PackStart (fr' false' false' 0);  	feedbackButton.Clicked += HandleFeedbackButtonClicked;  	feedbackButton.ButtonPressEvent += HandleFeedbackButtonButtonPressEvent;  	;  	feedbackButton.ClickOnRelease = true;  	FeedbackService.FeedbackPositionGetter = delegate {  		int x' y;  		if (feedbackButton.GdkWindow != null) {  			feedbackButton.GdkWindow.GetOrigin (out x' out y);  			x += feedbackButton.Allocation.Width;  			y -= 6;  		}  		else {  			x = y = -1;  		}  		return new Gdk.Point (x' y);  	};  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: al.RightPadding = 5;  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: al.LeftPadding = 3;  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: FeedbackService.FeedbackPositionGetter = delegate {  	int x' y;  	if (feedbackButton.GdkWindow != null) {  		feedbackButton.GdkWindow.GetOrigin (out x' out y);  		x += feedbackButton.Allocation.Width;  		y -= 6;  	}  	else {  		x = y = -1;  	}  	return new Gdk.Point (x' y);  };  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: if (feedbackButton.GdkWindow != null) {  	feedbackButton.GdkWindow.GetOrigin (out x' out y);  	x += feedbackButton.Allocation.Width;  	y -= 6;  }  else {  	x = y = -1;  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: y -= 6;  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,MonoDevelopStatusBar,The following statement contains a magic number: caretStatusBox.PackEnd (modeLabel' false' false' 8);  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,OnExposeEvent,The following statement contains a magic number: if (HasResizeGrip) {  	Gdk.Rectangle rect = GetGripRect ();  	int w = rect.Width - Style.Xthickness;  	int h = Allocation.Height - Style.YThickness;  	if (h < 18 - Style.YThickness)  		h = 18 - Style.YThickness;  	Gdk.WindowEdge edge = Direction == TextDirection.Ltr ? Gdk.WindowEdge.SouthEast : Gdk.WindowEdge.SouthWest;  	Gtk.Style.PaintResizeGrip (Style' GdkWindow' State' evnt.Area' this' "statusbar"' edge' rect.X' rect.Y' w' h);  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,OnExposeEvent,The following statement contains a magic number: if (HasResizeGrip) {  	Gdk.Rectangle rect = GetGripRect ();  	int w = rect.Width - Style.Xthickness;  	int h = Allocation.Height - Style.YThickness;  	if (h < 18 - Style.YThickness)  		h = 18 - Style.YThickness;  	Gdk.WindowEdge edge = Direction == TextDirection.Ltr ? Gdk.WindowEdge.SouthEast : Gdk.WindowEdge.SouthWest;  	Gtk.Style.PaintResizeGrip (Style' GdkWindow' State' evnt.Area' this' "statusbar"' edge' rect.X' rect.Y' w' h);  }  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,OnExposeEvent,The following statement contains a magic number: if (h < 18 - Style.YThickness)  	h = 18 - Style.YThickness;  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,OnExposeEvent,The following statement contains a magic number: if (h < 18 - Style.YThickness)  	h = 18 - Style.YThickness;  
Magic Number,MonoDevelop.Ide,MonoDevelopStatusBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\MonoDevelopStatusBar.cs,OnExposeEvent,The following statement contains a magic number: h = 18 - Style.YThickness;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: using (var layout = PangoUtil.CreateLayout (this)) {  	int w' h;  	foreach (Category cat in categories) {  		if (cat.Items.Count == 0)  			continue;  		yPos = padding;  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		layout.SetMarkup ("");  		layout.GetPixelSize (out w' out h);  		yPos += h;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		layout.SetText (new string ('X'' maxLength));  		layout.GetPixelSize (out w' out h);  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  				return item;  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: foreach (Category cat in categories) {  	if (cat.Items.Count == 0)  		continue;  	yPos = padding;  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	layout.SetMarkup ("");  	layout.GetPixelSize (out w' out h);  	yPos += h;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  			return item;  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  		return item;  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  		return item;  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  		return item;  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	if (xPos <= x && yPos <= y && x < xPos + itemWidth && y < yPos + iconHeight)  		return item;  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: if (++curItem >= maxItems) {  	curItem = 0;  	yPos = startY;  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: if (++curItem >= maxItems) {  	curItem = 0;  	yPos = startY;  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,GetItemAt,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,Ellipsize,The following statement contains a magic number: if (str != null && str.Length > maxLength)  	return str.Substring (0' maxLength - 3) + "...";  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,Ellipsize,The following statement contains a magic number: return str.Substring (0' maxLength - 3) + "...";  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	double xPos = padding' yPos = padding;  	var layout = PangoUtil.CreateLayout (this);  	int w' h;  	layout.SetText (new string ('X'' maxLength));  	layout.GetPixelSize (out w' out h);  	foreach (Category cat in categories) {  		yPos = padding;  		cr.MoveTo (xPos' yPos);  		layout.SetMarkup ("<b>" + cat.Title + "</b>");  		cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  		cr.ShowLayout (layout);  		if (cat.Items.Count == 0)  			continue;  		layout.SetMarkup ("");  		int w2' h2;  		layout.GetPixelSize (out w2' out h2);  		yPos += h2;  		yPos += headerDistance;  		var startY = yPos;  		int curItem = 0;  		int row = 0;  		var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  		if (cat.FirstVisibleItem > 0) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  			yPos += iconHeight;  			curItem++;  		}  		for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  			var item = cat.Items [i];  			if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  				Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  				break;  			}  			if (item == ActiveItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Fill ();  			}  			else if (item == hoverItem) {  				int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  				cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  				cr.LineWidth = 1;  				cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  				cr.Stroke ();  			}  			cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  			cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  			layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  			cr.ShowLayout (layout);  			Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  			cr.Paint ();  			yPos += iconHeight;  			if (++curItem >= maxItems) {  				curItem = 0;  				yPos = startY;  				xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  				row++;  			}  		}  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	}  	layout.Dispose ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: foreach (Category cat in categories) {  	yPos = padding;  	cr.MoveTo (xPos' yPos);  	layout.SetMarkup ("<b>" + cat.Title + "</b>");  	cr.SetSourceColor ((HslColor)Style.Text (StateType.Normal));  	cr.ShowLayout (layout);  	if (cat.Items.Count == 0)  		continue;  	layout.SetMarkup ("");  	int w2' h2;  	layout.GetPixelSize (out w2' out h2);  	yPos += h2;  	yPos += headerDistance;  	var startY = yPos;  	int curItem = 0;  	int row = 0;  	var iconHeight = Math.Max (h' cat.Items [0].Icon.Height + 2) + itemPadding * 2;  	if (cat.FirstVisibleItem > 0) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Up' true' (int)xPos' (int)yPos' w' h);  		yPos += iconHeight;  		curItem++;  	}  	for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  		var item = cat.Items [i];  		if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  			Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  			break;  		}  		if (item == ActiveItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Fill ();  		}  		else if (item == hoverItem) {  			int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  			cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  			cr.LineWidth = 1;  			cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  			cr.Stroke ();  		}  		cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  		cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  		layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  		cr.ShowLayout (layout);  		Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  		cr.Paint ();  		yPos += iconHeight;  		if (++curItem >= maxItems) {  			curItem = 0;  			yPos = startY;  			xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  			row++;  		}  	}  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: for (int i = cat.FirstVisibleItem; i < cat.Items.Count; i++) {  	var item = cat.Items [i];  	if (curItem + 1 >= maxItems && row + 1 >= maxRows && i + 1 < cat.Items.Count) {  		Gtk.Style.PaintArrow (Style' e.Window' State' ShadowType.None' new Rectangle ((int)xPos' (int)yPos' w' h)' this' ""' ArrowType.Down' true' (int)xPos' (int)yPos' w' h);  		break;  	}  	if (item == ActiveItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Fill ();  	}  	else if (item == hoverItem) {  		int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  		cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  		cr.LineWidth = 1;  		cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  		cr.Stroke ();  	}  	cr.SetSourceColor ((HslColor)Style.Text (item == ActiveItem ? StateType.Selected : StateType.Normal));  	cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  	layout.SetText (Ellipsize (item.ListTitle ?? item.Title' maxLength));  	cr.ShowLayout (layout);  	Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  	cr.Paint ();  	yPos += iconHeight;  	if (++curItem >= maxItems) {  		curItem = 0;  		yPos = startY;  		xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  		row++;  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == ActiveItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Fill ();  }  else if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == ActiveItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Fill ();  }  else if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == ActiveItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Fill ();  }  else if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == ActiveItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Fill ();  }  else if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == ActiveItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Fill ();  }  else if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == ActiveItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos' yPos' itemWidth' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Fill ();  }  else if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (item == hoverItem) {  	int itemWidth = w + item.Icon.Width + 2 + itemPadding * 2;  	cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  	cr.LineWidth = 1;  	cr.SetSourceColor ((HslColor)Style.Base (StateType.Selected));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: cr.Rectangle (xPos + 0.5' yPos + 0.5' itemWidth - 1' iconHeight);  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (xPos + item.Icon.Width + 2 + itemPadding' yPos + (iconHeight - h) / 2);  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (cr' item.Icon' (int)xPos + itemPadding' (int)(yPos + (iconHeight - item.Icon.Height) / 2));  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (++curItem >= maxItems) {  	curItem = 0;  	yPos = startY;  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	row++;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: if (++curItem >= maxItems) {  	curItem = 0;  	yPos = startY;  	xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  	row++;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnExposeEvent,The following statement contains a magic number: xPos += w + cat.Items [0].Icon.Width + 2 + padding + itemPadding * 2;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,NextItem,The following statement contains a magic number: for (int i = 0; i < categories.Count; i++) {  	var cat = categories [i];  	int idx = cat.Items.IndexOf (ActiveItem);  	if (idx < 0)  		continue;  	if (idx + 1 < cat.Items.Count) {  		if (idx + 1 > cat.FirstVisibleItem + maxItems * maxRows - 3)  			cat.FirstVisibleItem++;  		ActiveItem = cat.Items [idx + 1];  	}  	else {  		if (!stayInCategory) {  			cat = GetNextCat (i);  		}  		cat.FirstVisibleItem = 0;  		ActiveItem = cat.Items [0];  	}  	break;  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,NextItem,The following statement contains a magic number: if (idx + 1 < cat.Items.Count) {  	if (idx + 1 > cat.FirstVisibleItem + maxItems * maxRows - 3)  		cat.FirstVisibleItem++;  	ActiveItem = cat.Items [idx + 1];  }  else {  	if (!stayInCategory) {  		cat = GetNextCat (i);  	}  	cat.FirstVisibleItem = 0;  	ActiveItem = cat.Items [0];  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,NextItem,The following statement contains a magic number: if (idx + 1 > cat.FirstVisibleItem + maxItems * maxRows - 3)  	cat.FirstVisibleItem++;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnSizeRequested,The following statement contains a magic number: maxLength = 15;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnSizeRequested,The following statement contains a magic number: foreach (var cat in categories) {  	foreach (var item in cat.Items) {  		maxLength = Math.Min (30' Math.Max (maxLength' (item.ListTitle ?? item.Title).Length));  	}  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnSizeRequested,The following statement contains a magic number: foreach (var item in cat.Items) {  	maxLength = Math.Min (30' Math.Max (maxLength' (item.ListTitle ?? item.Title).Length));  }  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnSizeRequested,The following statement contains a magic number: maxLength = Math.Min (30' Math.Max (maxLength' (item.ListTitle ?? item.Title).Length));  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnSizeRequested,The following statement contains a magic number: req.Width = totalWidth + padding * 2 + (categories.Count - 1) * padding;  
Magic Number,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnSizeRequested,The following statement contains a magic number: req.Height = totalHeight + padding * 2;  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: hBox2.PackStart (hBox' false' false' 8);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: hBox.PackStart (imageTitle' true' false' 2);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: labelTitle.HeightRequest = 24;  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: hBox.PackStart (labelTitle' true' true' 2);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: vBox.PackStart (hBox2' false' false' 6);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: labelType.HeightRequest = 16;  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: hBox.PackStart (labelType' false' false' 8);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: vBox.PackStart (hBox' false' false' 2);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: hBox.PackStart (labelFileName' true' true' 8);  
Magic Number,MonoDevelop.Ide,DocumentSwitcher,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,DocumentSwitcher,The following statement contains a magic number: vBox.PackEnd (hBox' false' false' 6);  
Magic Number,MonoDevelop.Ide,DesktopService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DesktopService.cs,GetFileIsText,The following statement contains a magic number: using (var f = File.OpenRead (file)) {  	var buf = new byte[8192];  	var read = f.Read (buf' 0' buf.Length);  	for (int i = 0; i < read; i++)  		if (buf [i] == 0)  			return false;  }  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,RunPendingEvents,The following statement contains a magic number: if (diff > TimeSpan.FromMilliseconds (500) || diff < TimeSpan.Zero) {  	lastPendingEvents = DateTime.UtcNow;  	while (Gtk.Application.EventsPending () && sw.ElapsedMilliseconds < maxLength) {  		Gtk.Application.RunIteration (false);  	}  }  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,BackgroundDispatchAndWait,The following statement contains a magic number: lock (eventObject) {  	BackgroundDispatch (delegate {  		try {  			cb ();  		}  		finally {  			lock (eventObject) {  				Monitor.Pulse (eventObject);  			}  		}  	});  	if (IsGuiThread) {  		while (true) {  			if (Monitor.Wait (eventObject' 50))  				return;  			RunPendingEvents ();  		}  	}  	else {  		Monitor.Wait (eventObject);  	}  }  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,BackgroundDispatchAndWait,The following statement contains a magic number: if (IsGuiThread) {  	while (true) {  		if (Monitor.Wait (eventObject' 50))  			return;  		RunPendingEvents ();  	}  }  else {  	Monitor.Wait (eventObject);  }  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,BackgroundDispatchAndWait,The following statement contains a magic number: while (true) {  	if (Monitor.Wait (eventObject' 50))  		return;  	RunPendingEvents ();  }  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,BackgroundDispatchAndWait,The following statement contains a magic number: if (Monitor.Wait (eventObject' 50))  	return;  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,RunAnimation,The following statement contains a magic number: if (animationHandle == 0 || currentAnimationSpan > 20)  	ProcessAnimations ();  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,ProcessAnimations,The following statement contains a magic number: if (nms < 20)  	nms = 20;  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,ProcessAnimations,The following statement contains a magic number: if (nms < 20)  	nms = 20;  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,ProcessAnimations,The following statement contains a magic number: nms = 20;  
Magic Number,MonoDevelop.Ide,DispatchService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\DispatchService.cs,ProcessAnimations,The following statement contains a magic number: if (animationHandle != 0 && Math.Abs (nms - currentAnimationSpan) <= 3)  	return true;  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: monitor.BeginTask (GettextCatalog.GetString ("Loading Workbench")' 5);  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: if (lastRevision != CurrentRevision && !isInitialRun) {  	isInitialRunAfterUpgrade = true;  	if (lastRevision == 0) {  		switch (lastVersion) {  		case "1.0":  			lastRevision = 1;  			break;  		case "2.0":  			lastRevision = 2;  			break;  		case "2.2":  			lastRevision = 3;  			break;  		case "2.2.1":  			lastRevision = 4;  			break;  		}  	}  	upgradedFromRevision = lastRevision;  	PropertyService.Set ("MonoDevelop.Core.LastRunVersion"' BuildInfo.Version);  	PropertyService.Set ("MonoDevelop.Core.LastRunRevision"' CurrentRevision);  	PropertyService.SaveProperties ();  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: if (lastRevision != CurrentRevision && !isInitialRun) {  	isInitialRunAfterUpgrade = true;  	if (lastRevision == 0) {  		switch (lastVersion) {  		case "1.0":  			lastRevision = 1;  			break;  		case "2.0":  			lastRevision = 2;  			break;  		case "2.2":  			lastRevision = 3;  			break;  		case "2.2.1":  			lastRevision = 4;  			break;  		}  	}  	upgradedFromRevision = lastRevision;  	PropertyService.Set ("MonoDevelop.Core.LastRunVersion"' BuildInfo.Version);  	PropertyService.Set ("MonoDevelop.Core.LastRunRevision"' CurrentRevision);  	PropertyService.SaveProperties ();  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: if (lastRevision != CurrentRevision && !isInitialRun) {  	isInitialRunAfterUpgrade = true;  	if (lastRevision == 0) {  		switch (lastVersion) {  		case "1.0":  			lastRevision = 1;  			break;  		case "2.0":  			lastRevision = 2;  			break;  		case "2.2":  			lastRevision = 3;  			break;  		case "2.2.1":  			lastRevision = 4;  			break;  		}  	}  	upgradedFromRevision = lastRevision;  	PropertyService.Set ("MonoDevelop.Core.LastRunVersion"' BuildInfo.Version);  	PropertyService.Set ("MonoDevelop.Core.LastRunRevision"' CurrentRevision);  	PropertyService.SaveProperties ();  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: if (lastRevision == 0) {  	switch (lastVersion) {  	case "1.0":  		lastRevision = 1;  		break;  	case "2.0":  		lastRevision = 2;  		break;  	case "2.2":  		lastRevision = 3;  		break;  	case "2.2.1":  		lastRevision = 4;  		break;  	}  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: if (lastRevision == 0) {  	switch (lastVersion) {  	case "1.0":  		lastRevision = 1;  		break;  	case "2.0":  		lastRevision = 2;  		break;  	case "2.2":  		lastRevision = 3;  		break;  	case "2.2.1":  		lastRevision = 4;  		break;  	}  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: if (lastRevision == 0) {  	switch (lastVersion) {  	case "1.0":  		lastRevision = 1;  		break;  	case "2.0":  		lastRevision = 2;  		break;  	case "2.2":  		lastRevision = 3;  		break;  	case "2.2.1":  		lastRevision = 4;  		break;  	}  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: switch (lastVersion) {  case "1.0":  	lastRevision = 1;  	break;  case "2.0":  	lastRevision = 2;  	break;  case "2.2":  	lastRevision = 3;  	break;  case "2.2.1":  	lastRevision = 4;  	break;  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: switch (lastVersion) {  case "1.0":  	lastRevision = 1;  	break;  case "2.0":  	lastRevision = 2;  	break;  case "2.2":  	lastRevision = 3;  	break;  case "2.2.1":  	lastRevision = 4;  	break;  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: switch (lastVersion) {  case "1.0":  	lastRevision = 1;  	break;  case "2.0":  	lastRevision = 2;  	break;  case "2.2":  	lastRevision = 3;  	break;  case "2.2.1":  	lastRevision = 4;  	break;  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: lastRevision = 2;  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: lastRevision = 3;  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following statement contains a magic number: lastRevision = 4;  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OnUpgraded,The following statement contains a magic number: if (previousRevision <= 3) {  	// Reset the current runtime when upgrading from <2.2' to ensure the default runtime is not stuck to an old mono install  	IdeApp.Preferences.DefaultTargetRuntime = Runtime.SystemAssemblyService.CurrentRuntime;  }  
Magic Number,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,OnUpgraded,The following statement contains a magic number: if (previousRevision < 5)  	SetInitialLayout ();  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,ScaleIcon,The following statement contains a magic number: if (icon2x != null)  	Set2xIconVariant (res' ScaleIcon (icon2x' width * 2' height * 2));  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,ScaleIcon,The following statement contains a magic number: if (icon2x != null)  	Set2xIconVariant (res' ScaleIcon (icon2x' width * 2' height * 2));  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,ScaleIcon,The following statement contains a magic number: Set2xIconVariant (res' ScaleIcon (icon2x' width * 2' height * 2));  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,ScaleIcon,The following statement contains a magic number: Set2xIconVariant (res' ScaleIcon (icon2x' width * 2' height * 2));  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: icon2.Composite (res' 0' 0' icon2.Width' icon2.Height' 0' 0' 1' 1' Gdk.InterpType.Bilinear' 255);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon1_2x != null || icon2_2x != null) {  	if (icon1_2x == null)  		icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  	if (icon2_2x == null)  		icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  	var res2x = MergeIcons (icon1_2x' icon2_2x);  	Set2xIconVariant (res' res2x);  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon1_2x != null || icon2_2x != null) {  	if (icon1_2x == null)  		icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  	if (icon2_2x == null)  		icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  	var res2x = MergeIcons (icon1_2x' icon2_2x);  	Set2xIconVariant (res' res2x);  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon1_2x != null || icon2_2x != null) {  	if (icon1_2x == null)  		icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  	if (icon2_2x == null)  		icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  	var res2x = MergeIcons (icon1_2x' icon2_2x);  	Set2xIconVariant (res' res2x);  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon1_2x != null || icon2_2x != null) {  	if (icon1_2x == null)  		icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  	if (icon2_2x == null)  		icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  	var res2x = MergeIcons (icon1_2x' icon2_2x);  	Set2xIconVariant (res' res2x);  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon1_2x == null)  	icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon1_2x == null)  	icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: icon1_2x = ScaleIcon (icon1' icon1.Width * 2' icon1.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon2_2x == null)  	icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: if (icon2_2x == null)  	icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MergeIcons,The following statement contains a magic number: icon2_2x = ScaleIcon (icon2' icon2.Width * 2' icon2.Height * 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeTransparent,The following statement contains a magic number: icon.Composite (result' 0' 0' icon.Width' icon.Height' 0' 0' 1' 1' Gdk.InterpType.Bilinear' (int)(256 * opacity));  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: if (icon.BitsPerSample != 8)  	throw new NotSupportedException ();  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: unsafe {  	byte* pix = (byte*)copy.Pixels;  	bool hasAlpha = copy.HasAlpha;  	for (int y = 0; y < copy.Height; y++) {  		var start = pix;  		for (int x = 0; x < copy.Width; x++) {  			pix [0] = (byte)~pix [0];  			pix [1] = (byte)~pix [1];  			pix [2] = (byte)~pix [2];  			pix += hasAlpha ? 4 : 3;  		}  		pix = start + copy.Rowstride;  	}  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: unsafe {  	byte* pix = (byte*)copy.Pixels;  	bool hasAlpha = copy.HasAlpha;  	for (int y = 0; y < copy.Height; y++) {  		var start = pix;  		for (int x = 0; x < copy.Width; x++) {  			pix [0] = (byte)~pix [0];  			pix [1] = (byte)~pix [1];  			pix [2] = (byte)~pix [2];  			pix += hasAlpha ? 4 : 3;  		}  		pix = start + copy.Rowstride;  	}  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: unsafe {  	byte* pix = (byte*)copy.Pixels;  	bool hasAlpha = copy.HasAlpha;  	for (int y = 0; y < copy.Height; y++) {  		var start = pix;  		for (int x = 0; x < copy.Width; x++) {  			pix [0] = (byte)~pix [0];  			pix [1] = (byte)~pix [1];  			pix [2] = (byte)~pix [2];  			pix += hasAlpha ? 4 : 3;  		}  		pix = start + copy.Rowstride;  	}  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: unsafe {  	byte* pix = (byte*)copy.Pixels;  	bool hasAlpha = copy.HasAlpha;  	for (int y = 0; y < copy.Height; y++) {  		var start = pix;  		for (int x = 0; x < copy.Width; x++) {  			pix [0] = (byte)~pix [0];  			pix [1] = (byte)~pix [1];  			pix [2] = (byte)~pix [2];  			pix += hasAlpha ? 4 : 3;  		}  		pix = start + copy.Rowstride;  	}  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int y = 0; y < copy.Height; y++) {  	var start = pix;  	for (int x = 0; x < copy.Width; x++) {  		pix [0] = (byte)~pix [0];  		pix [1] = (byte)~pix [1];  		pix [2] = (byte)~pix [2];  		pix += hasAlpha ? 4 : 3;  	}  	pix = start + copy.Rowstride;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int y = 0; y < copy.Height; y++) {  	var start = pix;  	for (int x = 0; x < copy.Width; x++) {  		pix [0] = (byte)~pix [0];  		pix [1] = (byte)~pix [1];  		pix [2] = (byte)~pix [2];  		pix += hasAlpha ? 4 : 3;  	}  	pix = start + copy.Rowstride;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int y = 0; y < copy.Height; y++) {  	var start = pix;  	for (int x = 0; x < copy.Width; x++) {  		pix [0] = (byte)~pix [0];  		pix [1] = (byte)~pix [1];  		pix [2] = (byte)~pix [2];  		pix += hasAlpha ? 4 : 3;  	}  	pix = start + copy.Rowstride;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int y = 0; y < copy.Height; y++) {  	var start = pix;  	for (int x = 0; x < copy.Width; x++) {  		pix [0] = (byte)~pix [0];  		pix [1] = (byte)~pix [1];  		pix [2] = (byte)~pix [2];  		pix += hasAlpha ? 4 : 3;  	}  	pix = start + copy.Rowstride;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int x = 0; x < copy.Width; x++) {  	pix [0] = (byte)~pix [0];  	pix [1] = (byte)~pix [1];  	pix [2] = (byte)~pix [2];  	pix += hasAlpha ? 4 : 3;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int x = 0; x < copy.Width; x++) {  	pix [0] = (byte)~pix [0];  	pix [1] = (byte)~pix [1];  	pix [2] = (byte)~pix [2];  	pix += hasAlpha ? 4 : 3;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int x = 0; x < copy.Width; x++) {  	pix [0] = (byte)~pix [0];  	pix [1] = (byte)~pix [1];  	pix [2] = (byte)~pix [2];  	pix += hasAlpha ? 4 : 3;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: for (int x = 0; x < copy.Width; x++) {  	pix [0] = (byte)~pix [0];  	pix [1] = (byte)~pix [1];  	pix [2] = (byte)~pix [2];  	pix += hasAlpha ? 4 : 3;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: pix [2] = (byte)~pix [2];  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: pix [2] = (byte)~pix [2];  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: pix += hasAlpha ? 4 : 3;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,MakeInverted,The following statement contains a magic number: pix += hasAlpha ? 4 : 3;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,CreateColorBlock,The following statement contains a magic number: if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out w' out h))  	w = h = 22;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,CreateColorBlock,The following statement contains a magic number: w = h = 22;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: if (str.Length != (alpha ? 9 : 7))  	return false;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: if (str.Length != (alpha ? 9 : 7))  	return false;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: for (int stringIndex = 1; stringIndex < str.Length; stringIndex++) {  	uint bits;  	switch (str [stringIndex]) {  	case '0':  		bits = 0;  		break;  	case '1':  		bits = 1;  		break;  	case '2':  		bits = 2;  		break;  	case '3':  		bits = 3;  		break;  	case '4':  		bits = 4;  		break;  	case '5':  		bits = 5;  		break;  	case '6':  		bits = 6;  		break;  	case '7':  		bits = 7;  		break;  	case '8':  		bits = 8;  		break;  	case '9':  		bits = 9;  		break;  	case 'A':  	case 'a':  		bits = 10;  		break;  	case 'B':  	case 'b':  		bits = 11;  		break;  	case 'C':  	case 'c':  		bits = 12;  		break;  	case 'D':  	case 'd':  		bits = 13;  		break;  	case 'E':  	case 'e':  		bits = 14;  		break;  	case 'F':  	case 'f':  		bits = 15;  		break;  	default:  		return false;  	}  	val = (val << 4) | bits;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: switch (str [stringIndex]) {  case '0':  	bits = 0;  	break;  case '1':  	bits = 1;  	break;  case '2':  	bits = 2;  	break;  case '3':  	bits = 3;  	break;  case '4':  	bits = 4;  	break;  case '5':  	bits = 5;  	break;  case '6':  	bits = 6;  	break;  case '7':  	bits = 7;  	break;  case '8':  	bits = 8;  	break;  case '9':  	bits = 9;  	break;  case 'A':  case 'a':  	bits = 10;  	break;  case 'B':  case 'b':  	bits = 11;  	break;  case 'C':  case 'c':  	bits = 12;  	break;  case 'D':  case 'd':  	bits = 13;  	break;  case 'E':  case 'e':  	bits = 14;  	break;  case 'F':  case 'f':  	bits = 15;  	break;  default:  	return false;  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 2;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 3;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 4;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 5;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 6;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 7;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 8;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 9;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 10;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 11;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 12;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 13;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 14;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: bits = 15;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: val = (val << 4) | bits;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: if (!alpha)  	val = (val << 8) | 0xff;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,TryParseColourFromHex,The following statement contains a magic number: val = (val << 8) | 0xff;  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,AddToIconFactory,The following statement contains a magic number: if (pixbuf2x != null) {  	if (Mono.TextEditor.GtkWorkarounds.SetSourceScale (source' 1)) {  		Mono.TextEditor.GtkWorkarounds.SetSourceScaleWildcarded (source' false);  		source2x = new Gtk.IconSource ();  		source2x.Pixbuf = pixbuf2x;  		source2x.Size = iconSize;  		source2x.SizeWildcarded = iconSize == Gtk.IconSize.Invalid;  		Mono.TextEditor.GtkWorkarounds.SetSourceScale (source2x' 2);  		Mono.TextEditor.GtkWorkarounds.SetSourceScaleWildcarded (source2x' false);  	}  }  else {  	Mono.TextEditor.GtkWorkarounds.SetSourceScaleWildcarded (source' true);  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,AddToIconFactory,The following statement contains a magic number: if (Mono.TextEditor.GtkWorkarounds.SetSourceScale (source' 1)) {  	Mono.TextEditor.GtkWorkarounds.SetSourceScaleWildcarded (source' false);  	source2x = new Gtk.IconSource ();  	source2x.Pixbuf = pixbuf2x;  	source2x.Size = iconSize;  	source2x.SizeWildcarded = iconSize == Gtk.IconSize.Invalid;  	Mono.TextEditor.GtkWorkarounds.SetSourceScale (source2x' 2);  	Mono.TextEditor.GtkWorkarounds.SetSourceScaleWildcarded (source2x' false);  }  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,AddToIconFactory,The following statement contains a magic number: Mono.TextEditor.GtkWorkarounds.SetSourceScale (source2x' 2);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,InternalGetStockIdFromResource,The following statement contains a magic number: id = id.Substring (4);  
Magic Number,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,InternalGetStockIdFromAnimation,The following statement contains a magic number: id = id.Substring (10);  
Magic Number,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,CenterWindow,The following statement contains a magic number: x = Math.Max (0' (winw - w) / 2) + winx;  
Magic Number,MonoDevelop.Ide,MessageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\MessageService.cs,CenterWindow,The following statement contains a magic number: y = Math.Max (0' (winh - h) / 2) + winy;  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,AddFilesToProject,The following statement contains a magic number: if (files.Length > 10) {  	monitor = new MessageDialogProgressMonitor (true);  	monitor.BeginTask (GettextCatalog.GetString ("Adding files...")' files.Length);  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetTargetCopyName,The following statement contains a magic number: for (int i = 1; i < 100; i++) {  	string copyTag = GetCopyTag (i);  	if (fn.EndsWith (copyTag)) {  		string newfn = fn.Substring (0' fn.Length - copyTag.Length);  		if (newfn.Trim ().Length > 0) {  			n = i + 1;  			path = path.ParentDirectory.Combine (newfn + path.Extension);  			break;  		}  	}  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,GetCopyTag,The following statement contains a magic number: switch (n) {  case 1:  	sc = GettextCatalog.GetString ("copy");  	break;  case 2:  	sc = GettextCatalog.GetString ("another copy");  	break;  case 3:  	sc = GettextCatalog.GetString ("3rd copy");  	break;  case 4:  	sc = GettextCatalog.GetString ("4th copy");  	break;  case 5:  	sc = GettextCatalog.GetString ("5th copy");  	break;  case 6:  	sc = GettextCatalog.GetString ("6th copy");  	break;  case 7:  	sc = GettextCatalog.GetString ("7th copy");  	break;  case 8:  	sc = GettextCatalog.GetString ("8th copy");  	break;  case 9:  	sc = GettextCatalog.GetString ("9th copy");  	break;  default:  	sc = GettextCatalog.GetString ("copy {0}");  	break;  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The following statement contains a magic number: if (options.PerfLog) {  	string logFile = Path.Combine (Environment.CurrentDirectory' "monodevelop.perf-log");  	LoggingService.LogInfo ("Logging instrumentation service data to file: " + logFile);  	InstrumentationService.StartAutoSave (logFile' 1000);  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The following statement contains a magic number: InstrumentationService.StartAutoSave (logFile' 1000);  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The following statement contains a magic number: if (Platform.IsWindows && Mono.TextEditor.GtkWorkarounds.GtkMinorVersion >= 16) {  	var settings = Gtk.Settings.Default;  	var val = Mono.TextEditor.GtkWorkarounds.GetProperty (settings' "gtk-im-module");  	if (string.IsNullOrEmpty (val.Val as string))  		Mono.TextEditor.GtkWorkarounds.SetProperty (settings' "gtk-im-module"' new GLib.Value ("ime"));  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The following statement contains a magic number: monitor.BeginTask (GettextCatalog.GetString ("Starting {0}"' BrandingService.ApplicationName)' 2);  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The following statement contains a magic number: try {  	listen_socket.Bind (ep);  	listen_socket.Listen (5);  	listen_socket.BeginAccept (new AsyncCallback (ListenCallback)' listen_socket);  }  catch {  	// Socket already in use  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,Run,The following statement contains a magic number: listen_socket.Listen (5);  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckFileWatcher,The following statement contains a magic number: try {  	if (File.Exists (watchesFile)) {  		string val = File.ReadAllText (watchesFile);  		int n = int.Parse (val);  		if (n <= 9000) {  			string msg = "Inotify watch limit is too low (" + n + ").\n";  			msg += "MonoDevelop will switch to managed file watching.\n";  			msg += "See http://monodevelop.com/Inotify_Watches_Limit for more info.";  			LoggingService.LogWarning (BrandingService.BrandApplicationName (msg));  			Runtime.ProcessService.EnvironmentVariableOverrides ["MONO_MANAGED_WATCHER"] = Environment.GetEnvironmentVariable ("MONO_MANAGED_WATCHER");  			Environment.SetEnvironmentVariable ("MONO_MANAGED_WATCHER"' "1");  		}  	}  }  catch (Exception e) {  	LoggingService.LogWarning ("There was a problem checking whether to use managed file watching"' e);  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckFileWatcher,The following statement contains a magic number: if (File.Exists (watchesFile)) {  	string val = File.ReadAllText (watchesFile);  	int n = int.Parse (val);  	if (n <= 9000) {  		string msg = "Inotify watch limit is too low (" + n + ").\n";  		msg += "MonoDevelop will switch to managed file watching.\n";  		msg += "See http://monodevelop.com/Inotify_Watches_Limit for more info.";  		LoggingService.LogWarning (BrandingService.BrandApplicationName (msg));  		Runtime.ProcessService.EnvironmentVariableOverrides ["MONO_MANAGED_WATCHER"] = Environment.GetEnvironmentVariable ("MONO_MANAGED_WATCHER");  		Environment.SetEnvironmentVariable ("MONO_MANAGED_WATCHER"' "1");  	}  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,CheckFileWatcher,The following statement contains a magic number: if (n <= 9000) {  	string msg = "Inotify watch limit is too low (" + n + ").\n";  	msg += "MonoDevelop will switch to managed file watching.\n";  	msg += "See http://monodevelop.com/Inotify_Watches_Limit for more info.";  	LoggingService.LogWarning (BrandingService.BrandApplicationName (msg));  	Runtime.ProcessService.EnvironmentVariableOverrides ["MONO_MANAGED_WATCHER"] = Environment.GetEnvironmentVariable ("MONO_MANAGED_WATCHER");  	Environment.SetEnvironmentVariable ("MONO_MANAGED_WATCHER"' "1");  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: for (int i = 0; i < input.Length; i++) {  	unchecked {  		hash = ((ulong)input [i]) + (hash << 6) + (hash << 16) - hash;  	}  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: for (int i = 0; i < input.Length; i++) {  	unchecked {  		hash = ((ulong)input [i]) + (hash << 6) + (hash << 16) - hash;  	}  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: unchecked {  	hash = ((ulong)input [i]) + (hash << 6) + (hash << 16) - hash;  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: unchecked {  	hash = ((ulong)input [i]) + (hash << 6) + (hash << 16) - hash;  }  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: hash = ((ulong)input [i]) + (hash << 6) + (hash << 16) - hash;  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: hash = ((ulong)input [i]) + (hash << 6) + (hash << 16) - hash;  
Magic Number,MonoDevelop.Ide,IdeStartup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeStartup.cs,HashSdbmBounded,The following statement contains a magic number: return (int)(hash % 1000);  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetGtkVersion,The following statement contains a magic number: while (v1 < 99 && Gtk.Global.CheckVersion (v1' v2' v3) == null)  	v1++;  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetGtkVersion,The following statement contains a magic number: while (v2 < 99 && Gtk.Global.CheckVersion (v1' v2' v3) == null)  	v2++;  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetGtkVersion,The following statement contains a magic number: while (v3 < 99 && Gtk.Global.CheckVersion (v1' v2' v3) == null)  	v3++;  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetGtkVersion,The following statement contains a magic number: if (v1 == 99 || v2 == 99 || v3 == 99)  	return "unknown";  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetGtkVersion,The following statement contains a magic number: if (v1 == 99 || v2 == 99 || v3 == 99)  	return "unknown";  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetGtkVersion,The following statement contains a magic number: if (v1 == 99 || v2 == 99 || v3 == 99)  	return "unknown";  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetRuntimeInfo,The following statement contains a magic number: if (IntPtr.Size == 8)  	val += (" (64-bit)");  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetVersion,The following statement contains a magic number: if (version == null) {  	version = new Version (BuildInfo.Version);  	var relId = SystemInformation.GetReleaseId ();  	if (relId != null && relId.Length >= 9) {  		int rev;  		int.TryParse (relId.Substring (relId.Length - 4)' out rev);  		version = new Version (Math.Max (version.Major' 0)' Math.Max (version.Minor' 0)' Math.Max (version.Build' 0)' Math.Max (rev' 0));  	}  }  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetVersion,The following statement contains a magic number: if (version == null) {  	version = new Version (BuildInfo.Version);  	var relId = SystemInformation.GetReleaseId ();  	if (relId != null && relId.Length >= 9) {  		int rev;  		int.TryParse (relId.Substring (relId.Length - 4)' out rev);  		version = new Version (Math.Max (version.Major' 0)' Math.Max (version.Minor' 0)' Math.Max (version.Build' 0)' Math.Max (rev' 0));  	}  }  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetVersion,The following statement contains a magic number: if (relId != null && relId.Length >= 9) {  	int rev;  	int.TryParse (relId.Substring (relId.Length - 4)' out rev);  	version = new Version (Math.Max (version.Major' 0)' Math.Max (version.Minor' 0)' Math.Max (version.Build' 0)' Math.Max (rev' 0));  }  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetVersion,The following statement contains a magic number: if (relId != null && relId.Length >= 9) {  	int rev;  	int.TryParse (relId.Substring (relId.Length - 4)' out rev);  	version = new Version (Math.Max (version.Major' 0)' Math.Max (version.Minor' 0)' Math.Max (version.Build' 0)' Math.Max (rev' 0));  }  
Magic Number,MonoDevelop.Ide,IdeVersionInfo,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\IdeVersionInfo.cs,GetVersion,The following statement contains a magic number: int.TryParse (relId.Substring (relId.Length - 4)' out rev);  
Magic Number,MonoDevelop.Ide,ThreadedRenderer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ThreadedRenderer.cs,ThreadedRenderer,The following statement contains a magic number: ThreadPool.SetMinThreads (20' 20);  
Magic Number,MonoDevelop.Ide,ThreadedRenderer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ThreadedRenderer.cs,ThreadedRenderer,The following statement contains a magic number: ThreadPool.SetMinThreads (20' 20);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 0' 0);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,Initialize,The following statement contains a magic number: for (int n = 3; n < 16; n++) {  	Gtk.Rc.ParseString ("style \"MonoDevelop.ExtensibleTreeView_" + n + "\" {\n GtkTreeView::expander-size = " + n + "\n }\n");  	Gtk.Rc.ParseString ("widget \"*.MonoDevelop.ExtensibleTreeView_" + n + "\" style  \"MonoDevelop.ExtensibleTreeView_" + n + "\"\n");  }  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,Initialize,The following statement contains a magic number: for (int n = 3; n < 16; n++) {  	Gtk.Rc.ParseString ("style \"MonoDevelop.ExtensibleTreeView_" + n + "\" {\n GtkTreeView::expander-size = " + n + "\n }\n");  	Gtk.Rc.ParseString ("widget \"*.MonoDevelop.ExtensibleTreeView_" + n + "\" style  \"MonoDevelop.ExtensibleTreeView_" + n + "\"\n");  }  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: if (expanderSize < 3)  	expanderSize = 3;  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: if (expanderSize < 3)  	expanderSize = 3;  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: expanderSize = 3;  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: if (expanderSize > 15)  	expanderSize = 15;  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: if (expanderSize > 15)  	expanderSize = 15;  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: expanderSize = 15;  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,OnZoomChanged,The following statement contains a magic number: if (expanderSize != 12)  	tree.Name = "MonoDevelop.ExtensibleTreeView_" + expanderSize;  else  	tree.Name = "";  
Magic Number,MonoDevelop.Ide.Gui.Components,ExtensibleTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ExtensibleTreeView.cs,StartLabelEdit,The following statement contains a magic number: GLib.Timeout.Add (20' new GLib.TimeoutHandler (wantFocus));  
Magic Number,MonoDevelop.Ide.Gui.Components,PadTreeView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\PadTreeView.cs,OnSizeAllocated,The following statement contains a magic number: if (forceInternalOffsetUpdate && IsRealized) {  	forceInternalOffsetUpdate = false;  	var v = Vadjustment.Value;  	int delta = v > 2 ? 0 : 1;  	Vadjustment.Value = v + delta;  	Vadjustment.Value = v;  }  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,LogView,The following statement contains a magic number: tag.LeftMargin = 10;  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,addQueuedUpdate,The following statement contains a magic number: lock (updates) {  	updates.Enqueue (update);  	if (!outputDispatcherRunning) {  		GLib.Timeout.Add (50' outputDispatcher);  		outputDispatcherRunning = true;  	}  	lastTextWrite = update as QueuedTextWrite;  }  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,addQueuedUpdate,The following statement contains a magic number: if (!outputDispatcherRunning) {  	GLib.Timeout.Add (50' outputDispatcher);  	outputDispatcherRunning = true;  }  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,addQueuedUpdate,The following statement contains a magic number: GLib.Timeout.Add (50' outputDispatcher);  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,UnsafeAddText,The following statement contains a magic number: if (window != null) {  	scrollToEnd = window.Vadjustment.Value >= window.Vadjustment.Upper - 2 * window.Vadjustment.PageSize;  }  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,UnsafeAddText,The following statement contains a magic number: scrollToEnd = window.Vadjustment.Value >= window.Vadjustment.Upper - 2 * window.Vadjustment.PageSize;  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,Indent,The following statement contains a magic number: if (ident >= tags.Count) {  	tag = new TextTag (ident.ToString ());  	tag.LeftMargin = 10 + 15 * (ident - 1);  	buffer.TagTable.Add (tag);  	tags.Add (tag);  }  else {  	tag = tags [ident];  }  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,Indent,The following statement contains a magic number: if (ident >= tags.Count) {  	tag = new TextTag (ident.ToString ());  	tag.LeftMargin = 10 + 15 * (ident - 1);  	buffer.TagTable.Add (tag);  	tags.Add (tag);  }  else {  	tag = tags [ident];  }  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,Indent,The following statement contains a magic number: tag.LeftMargin = 10 + 15 * (ident - 1);  
Magic Number,MonoDevelop.Ide.Gui.Components,LogView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\LogView.cs,Indent,The following statement contains a magic number: tag.LeftMargin = 10 + 15 * (ident - 1);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectFileEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectFileEntry.cs,ProjectFileEntry,The following statement contains a magic number: PackStart (button' false' false' 2);  
Magic Number,MonoDevelop.Ide.Gui.Components,EnvVarList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\EnvVarList.cs,EnvVarList,The following statement contains a magic number: col = list.AppendColumn (GettextCatalog.GetString ("Value")' crv' "text"' 1' "editable"' 2);  
Magic Number,MonoDevelop.Ide.Gui.Components,EnvVarList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\EnvVarList.cs,StoreValues,The following statement contains a magic number: do {  	bool inserter = !(bool)store.GetValue (it' 2);  	if (!inserter) {  		string var = (string)store.GetValue (it' 0);  		string val = (string)store.GetValue (it' 1);  		values [var] = val;  	}  }  while (store.IterNext (ref it));  
Magic Number,MonoDevelop.Ide.Gui.Components,EnvVarList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\EnvVarList.cs,OnExpEdited,The following statement contains a magic number: store.SetValue (it' 2' true);  
Magic Number,MonoDevelop.Ide.Gui.Components,EnvVarList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\EnvVarList.cs,OnExpEdited,The following statement contains a magic number: store.SetValue (it' 3' null);  
Magic Number,MonoDevelop.Ide.Gui.Components,StringTagSelectorButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\StringTagSelectorButton.cs,OnButtonClicked,The following statement contains a magic number: if (menu != null) {  	isOpen = true;  	//make sure the button looks depressed  	ReliefStyle oldRelief = button.Relief;  	button.Relief = ReliefStyle.Normal;  	//clean up after the menu's done  	menu.Hidden += delegate {  		button.Relief = oldRelief;  		isOpen = false;  		button.State = StateType.Normal;  		//FIXME: for some reason the menu's children don't get activated if we destroy   		//directly here' so use a timeout to delay it  		GLib.Timeout.Add (100' delegate {  			menu.Destroy ();  			return false;  		});  	};  	menu.Popup (null' null' PositionFunc' 0' Gtk.Global.CurrentEventTime);  }  
Magic Number,MonoDevelop.Ide.Gui.Components,StringTagSelectorButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\StringTagSelectorButton.cs,OnButtonClicked,The following statement contains a magic number: menu.Hidden += delegate {  	button.Relief = oldRelief;  	isOpen = false;  	button.State = StateType.Normal;  	//FIXME: for some reason the menu's children don't get activated if we destroy   	//directly here' so use a timeout to delay it  	GLib.Timeout.Add (100' delegate {  		menu.Destroy ();  		return false;  	});  };  
Magic Number,MonoDevelop.Ide.Gui.Components,StringTagSelectorButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\StringTagSelectorButton.cs,OnButtonClicked,The following statement contains a magic number: GLib.Timeout.Add (100' delegate {  	menu.Destroy ();  	return false;  });  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,ProjectSelectorWidget,The following statement contains a magic number: col.AddAttribute (ctog' "active"' 3);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,ProjectSelectorWidget,The following statement contains a magic number: col.AddAttribute (ctog' "visible"' 4);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,HandleTreeSelectionChanged,The following statement contains a magic number: if (tree.Selection.GetSelected (out it))  	currentSelection = (IBuildTarget)store.GetValue (it' 2);  else  	currentSelection = null;  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,HandleTreeSelectionChanged,The following statement contains a magic number: currentSelection = (IBuildTarget)store.GetValue (it' 2);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,SetSelection,The following statement contains a magic number: do {  	IBuildTarget item = (IBuildTarget)store.GetValue (it' 2);  	if (selected != null && item == selected) {  		tree.Selection.SelectIter (it);  		tree.ExpandToPath (store.GetPath (it));  		tree.ScrollToCell (store.GetPath (it)' tree.Columns [0]' false' 0' 0);  		if (active == null)  			return true;  	}  	bool val = (bool)store.GetValue (it' 3);  	bool newVal = active != null ? active.Contains (item) : val;  	if (val != newVal)  		store.SetValue (it' 3' newVal);  	TreeIter ci;  	if (store.IterChildren (out ci' it)) {  		if (SetSelection (ci' selected' active))  			return true;  	}  }  while (store.IterNext (ref it));  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,SetSelection,The following statement contains a magic number: do {  	IBuildTarget item = (IBuildTarget)store.GetValue (it' 2);  	if (selected != null && item == selected) {  		tree.Selection.SelectIter (it);  		tree.ExpandToPath (store.GetPath (it));  		tree.ScrollToCell (store.GetPath (it)' tree.Columns [0]' false' 0' 0);  		if (active == null)  			return true;  	}  	bool val = (bool)store.GetValue (it' 3);  	bool newVal = active != null ? active.Contains (item) : val;  	if (val != newVal)  		store.SetValue (it' 3' newVal);  	TreeIter ci;  	if (store.IterChildren (out ci' it)) {  		if (SetSelection (ci' selected' active))  			return true;  	}  }  while (store.IterNext (ref it));  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,SetSelection,The following statement contains a magic number: do {  	IBuildTarget item = (IBuildTarget)store.GetValue (it' 2);  	if (selected != null && item == selected) {  		tree.Selection.SelectIter (it);  		tree.ExpandToPath (store.GetPath (it));  		tree.ScrollToCell (store.GetPath (it)' tree.Columns [0]' false' 0' 0);  		if (active == null)  			return true;  	}  	bool val = (bool)store.GetValue (it' 3);  	bool newVal = active != null ? active.Contains (item) : val;  	if (val != newVal)  		store.SetValue (it' 3' newVal);  	TreeIter ci;  	if (store.IterChildren (out ci' it)) {  		if (SetSelection (ci' selected' active))  			return true;  	}  }  while (store.IterNext (ref it));  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,SetSelection,The following statement contains a magic number: if (val != newVal)  	store.SetValue (it' 3' newVal);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,SetSelection,The following statement contains a magic number: store.SetValue (it' 3' newVal);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,The following statement contains a magic number: if (activeItems.Contains (ob)) {  	activeItems.Remove (ob);  	if (CascadeCheckboxSelection) {  		foreach (var i in GetAllChildren (ob))  			activeItems.Remove (i);  		SetSelection (iter' null' new HashSet<IBuildTarget> ());  	}  	else {  		store.SetValue (iter' 3' false);  	}  }  else {  	activeItems.Add (ob);  	if (CascadeCheckboxSelection) {  		foreach (var i in GetAllChildren (ob))  			activeItems.Add (i);  		SetSelection (iter' null' activeItems);  	}  	else {  		store.SetValue (iter' 3' true);  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,The following statement contains a magic number: if (activeItems.Contains (ob)) {  	activeItems.Remove (ob);  	if (CascadeCheckboxSelection) {  		foreach (var i in GetAllChildren (ob))  			activeItems.Remove (i);  		SetSelection (iter' null' new HashSet<IBuildTarget> ());  	}  	else {  		store.SetValue (iter' 3' false);  	}  }  else {  	activeItems.Add (ob);  	if (CascadeCheckboxSelection) {  		foreach (var i in GetAllChildren (ob))  			activeItems.Add (i);  		SetSelection (iter' null' activeItems);  	}  	else {  		store.SetValue (iter' 3' true);  	}  }  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,The following statement contains a magic number: if (CascadeCheckboxSelection) {  	foreach (var i in GetAllChildren (ob))  		activeItems.Remove (i);  	SetSelection (iter' null' new HashSet<IBuildTarget> ());  }  else {  	store.SetValue (iter' 3' false);  }  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,The following statement contains a magic number: store.SetValue (iter' 3' false);  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,The following statement contains a magic number: if (CascadeCheckboxSelection) {  	foreach (var i in GetAllChildren (ob))  		activeItems.Add (i);  	SetSelection (iter' null' activeItems);  }  else {  	store.SetValue (iter' 3' true);  }  
Magic Number,MonoDevelop.Ide.Gui.Components,ProjectSelectorWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\ProjectSelectorWidget.cs,OnToggled,The following statement contains a magic number: store.SetValue (iter' 3' true);  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: if (column1 != null) {  	table.Add (column1);  	tr = (Table.TableChild)table [column1];  	tr.XOptions = (AttachOptions)4;  	tr.YOptions = (AttachOptions)4;  	tr.BottomAttach = row + 1;  	tr.TopAttach = row;  	tr.LeftAttach = 0;  	tr.RightAttach = 1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: if (column1 != null) {  	table.Add (column1);  	tr = (Table.TableChild)table [column1];  	tr.XOptions = (AttachOptions)4;  	tr.YOptions = (AttachOptions)4;  	tr.BottomAttach = row + 1;  	tr.TopAttach = row;  	tr.LeftAttach = 0;  	tr.RightAttach = 1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: tr.XOptions = (AttachOptions)4;  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: tr.YOptions = (AttachOptions)4;  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: if (column2 != null) {  	table.Add (column2);  	tr = (Table.TableChild)table [column2];  	tr.XOptions = (AttachOptions)4;  	tr.YOptions = (AttachOptions)4;  	tr.BottomAttach = row + 1;  	tr.TopAttach = row;  	tr.LeftAttach = 1;  	tr.RightAttach = 2;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: if (column2 != null) {  	table.Add (column2);  	tr = (Table.TableChild)table [column2];  	tr.XOptions = (AttachOptions)4;  	tr.YOptions = (AttachOptions)4;  	tr.BottomAttach = row + 1;  	tr.TopAttach = row;  	tr.LeftAttach = 1;  	tr.RightAttach = 2;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: if (column2 != null) {  	table.Add (column2);  	tr = (Table.TableChild)table [column2];  	tr.XOptions = (AttachOptions)4;  	tr.YOptions = (AttachOptions)4;  	tr.BottomAttach = row + 1;  	tr.TopAttach = row;  	tr.LeftAttach = 1;  	tr.RightAttach = 2;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: tr.XOptions = (AttachOptions)4;  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: tr.YOptions = (AttachOptions)4;  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,TableAddRow,The following statement contains a magic number: tr.RightAttach = 2;  
Magic Number,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = Math.Max (480' requisition.Width);  
Magic Number,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,FindAll,The following statement contains a magic number: monitor.BeginTask (scope.GetDescription (filter' pattern' replacePattern)' 50);  
Magic Number,MonoDevelop.Ide.FindInFiles,FindReplace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindReplace.cs,FindAll,The following statement contains a magic number: try {  	int totalWork = scope.GetTotalWork (filter);  	int step = Math.Max (1' totalWork / 50);  	string content;  	foreach (FileProvider provider in scope.GetFiles (monitor' filter)) {  		if (monitor.IsCancelRequested)  			yield break;  		SearchedFilesCount++;  		try {  			content = provider.ReadString ();  			if (replacePattern != null)  				provider.BeginReplace (content);  		}  		catch (System.IO.FileNotFoundException) {  			Application.Invoke (delegate {  				MessageService.ShowError (string.Format (GettextCatalog.GetString ("File {0} not found."))' provider.FileName);  			});  			continue;  		}  		foreach (SearchResult result in FindAll (monitor' provider' content' pattern' replacePattern' filter)) {  			if (monitor.IsCancelRequested)  				yield break;  			FoundMatchesCount++;  			yield return result;  		}  		if (replacePattern != null)  			provider.EndReplace ();  		if (SearchedFilesCount % step == 0)  			monitor.Step (1);  	}  }  finally {  	monitor.EndTask ();  	IsRunning = false;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: fileNameColumn.FixedWidth = 200;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: textColumn.SortColumnId = 2;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: textColumn.FixedWidth = 300;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: pathColumn.SortColumnId = 3;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: pathColumn.FixedWidth = 500;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: store.SetSortFunc (3' CompareFilePaths);  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,SearchResultWidget,The following statement contains a magic number: store.SetSortColumnId (3' SortType.Ascending);  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,EndProgress,The following statement contains a magic number: newStore.SetSortFunc (3' CompareFilePaths);  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColor,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = color;  	color1.L -= 0.5;  	if (Math.Abs (Mono.TextEditor.HslColor.Brightness (color1) - b2) < delta) {  		color1 = color;  		color1.L += 0.5;  	}  	return color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColor,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = color;  	color1.L -= 0.5;  	if (Math.Abs (Mono.TextEditor.HslColor.Brightness (color1) - b2) < delta) {  		color1 = color;  		color1.L += 0.5;  	}  	return color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColor,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = color;  	color1.L -= 0.5;  	if (Math.Abs (Mono.TextEditor.HslColor.Brightness (color1) - b2) < delta) {  		color1 = color;  		color1.L += 0.5;  	}  	return color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColor,The following statement contains a magic number: color1.L -= 0.5;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColor,The following statement contains a magic number: if (Math.Abs (Mono.TextEditor.HslColor.Brightness (color1) - b2) < delta) {  	color1 = color;  	color1.L += 0.5;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColor,The following statement contains a magic number: color1.L += 0.5;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColors,The following statement contains a magic number: while (idx > 0) {  	idx += "foreground=\"".Length;  	result.Append (markup.Substring (offset' idx - offset));  	if (idx + 7 >= markup.Length) {  		offset = idx;  		break;  	}  	offset = idx + 7;  	string colorStr = markup.Substring (idx' 7);  	Color color = Color.Zero;  	if (Color.Parse (colorStr' ref color))  		colorStr = SyntaxMode.ColorToPangoMarkup (AdjustColor (baseColor' color));  	result.Append (colorStr);  	idx = markup.IndexOf ("foreground=\""' idx);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColors,The following statement contains a magic number: while (idx > 0) {  	idx += "foreground=\"".Length;  	result.Append (markup.Substring (offset' idx - offset));  	if (idx + 7 >= markup.Length) {  		offset = idx;  		break;  	}  	offset = idx + 7;  	string colorStr = markup.Substring (idx' 7);  	Color color = Color.Zero;  	if (Color.Parse (colorStr' ref color))  		colorStr = SyntaxMode.ColorToPangoMarkup (AdjustColor (baseColor' color));  	result.Append (colorStr);  	idx = markup.IndexOf ("foreground=\""' idx);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColors,The following statement contains a magic number: while (idx > 0) {  	idx += "foreground=\"".Length;  	result.Append (markup.Substring (offset' idx - offset));  	if (idx + 7 >= markup.Length) {  		offset = idx;  		break;  	}  	offset = idx + 7;  	string colorStr = markup.Substring (idx' 7);  	Color color = Color.Zero;  	if (Color.Parse (colorStr' ref color))  		colorStr = SyntaxMode.ColorToPangoMarkup (AdjustColor (baseColor' color));  	result.Append (colorStr);  	idx = markup.IndexOf ("foreground=\""' idx);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColors,The following statement contains a magic number: if (idx + 7 >= markup.Length) {  	offset = idx;  	break;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,AdjustColors,The following statement contains a magic number: offset = idx + 7;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: try {  	textRenderer.Markup = searchResult.Markup;  	if (!isSelected) {  		var searchColor = highlightStyle.SearchResult.Color;  		double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  		double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  		double delta = Math.Abs (b1 - b2);  		if (delta < 0.1) {  			Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  			if (color1.L + 0.5 > 1.0) {  				color1.L -= 0.5;  			}  			else {  				color1.L += 0.5;  			}  			searchColor = color1;  		}  		var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  		attr.StartIndex = searchResult.StartIndex;  		attr.EndIndex = searchResult.EndIndex;  		using (var list = textRenderer.Attributes.Copy ()) {  			list.Insert (attr);  			textRenderer.Attributes = list;  		}  	}  }  catch (Exception e) {  	LoggingService.LogError ("Error whil setting the text renderer markup to: " + searchResult.Markup' e);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: try {  	textRenderer.Markup = searchResult.Markup;  	if (!isSelected) {  		var searchColor = highlightStyle.SearchResult.Color;  		double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  		double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  		double delta = Math.Abs (b1 - b2);  		if (delta < 0.1) {  			Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  			if (color1.L + 0.5 > 1.0) {  				color1.L -= 0.5;  			}  			else {  				color1.L += 0.5;  			}  			searchColor = color1;  		}  		var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  		attr.StartIndex = searchResult.StartIndex;  		attr.EndIndex = searchResult.EndIndex;  		using (var list = textRenderer.Attributes.Copy ()) {  			list.Insert (attr);  			textRenderer.Attributes = list;  		}  	}  }  catch (Exception e) {  	LoggingService.LogError ("Error whil setting the text renderer markup to: " + searchResult.Markup' e);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: try {  	textRenderer.Markup = searchResult.Markup;  	if (!isSelected) {  		var searchColor = highlightStyle.SearchResult.Color;  		double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  		double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  		double delta = Math.Abs (b1 - b2);  		if (delta < 0.1) {  			Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  			if (color1.L + 0.5 > 1.0) {  				color1.L -= 0.5;  			}  			else {  				color1.L += 0.5;  			}  			searchColor = color1;  		}  		var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  		attr.StartIndex = searchResult.StartIndex;  		attr.EndIndex = searchResult.EndIndex;  		using (var list = textRenderer.Attributes.Copy ()) {  			list.Insert (attr);  			textRenderer.Attributes = list;  		}  	}  }  catch (Exception e) {  	LoggingService.LogError ("Error whil setting the text renderer markup to: " + searchResult.Markup' e);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: try {  	textRenderer.Markup = searchResult.Markup;  	if (!isSelected) {  		var searchColor = highlightStyle.SearchResult.Color;  		double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  		double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  		double delta = Math.Abs (b1 - b2);  		if (delta < 0.1) {  			Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  			if (color1.L + 0.5 > 1.0) {  				color1.L -= 0.5;  			}  			else {  				color1.L += 0.5;  			}  			searchColor = color1;  		}  		var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  		attr.StartIndex = searchResult.StartIndex;  		attr.EndIndex = searchResult.EndIndex;  		using (var list = textRenderer.Attributes.Copy ()) {  			list.Insert (attr);  			textRenderer.Attributes = list;  		}  	}  }  catch (Exception e) {  	LoggingService.LogError ("Error whil setting the text renderer markup to: " + searchResult.Markup' e);  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (!isSelected) {  	var searchColor = highlightStyle.SearchResult.Color;  	double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  	double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  	double delta = Math.Abs (b1 - b2);  	if (delta < 0.1) {  		Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  		if (color1.L + 0.5 > 1.0) {  			color1.L -= 0.5;  		}  		else {  			color1.L += 0.5;  		}  		searchColor = color1;  	}  	var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  	attr.StartIndex = searchResult.StartIndex;  	attr.EndIndex = searchResult.EndIndex;  	using (var list = textRenderer.Attributes.Copy ()) {  		list.Insert (attr);  		textRenderer.Attributes = list;  	}  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (!isSelected) {  	var searchColor = highlightStyle.SearchResult.Color;  	double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  	double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  	double delta = Math.Abs (b1 - b2);  	if (delta < 0.1) {  		Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  		if (color1.L + 0.5 > 1.0) {  			color1.L -= 0.5;  		}  		else {  			color1.L += 0.5;  		}  		searchColor = color1;  	}  	var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  	attr.StartIndex = searchResult.StartIndex;  	attr.EndIndex = searchResult.EndIndex;  	using (var list = textRenderer.Attributes.Copy ()) {  		list.Insert (attr);  		textRenderer.Attributes = list;  	}  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (!isSelected) {  	var searchColor = highlightStyle.SearchResult.Color;  	double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  	double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  	double delta = Math.Abs (b1 - b2);  	if (delta < 0.1) {  		Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  		if (color1.L + 0.5 > 1.0) {  			color1.L -= 0.5;  		}  		else {  			color1.L += 0.5;  		}  		searchColor = color1;  	}  	var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  	attr.StartIndex = searchResult.StartIndex;  	attr.EndIndex = searchResult.EndIndex;  	using (var list = textRenderer.Attributes.Copy ()) {  		list.Insert (attr);  		textRenderer.Attributes = list;  	}  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (!isSelected) {  	var searchColor = highlightStyle.SearchResult.Color;  	double b1 = Mono.TextEditor.HslColor.Brightness (searchColor);  	double b2 = Mono.TextEditor.HslColor.Brightness (AdjustColor (Style.Base (StateType.Normal)' (Mono.TextEditor.HslColor)highlightStyle.PlainText.Foreground));  	double delta = Math.Abs (b1 - b2);  	if (delta < 0.1) {  		Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  		if (color1.L + 0.5 > 1.0) {  			color1.L -= 0.5;  		}  		else {  			color1.L += 0.5;  		}  		searchColor = color1;  	}  	var attr = new Pango.AttrBackground ((ushort)(searchColor.R * ushort.MaxValue)' (ushort)(searchColor.G * ushort.MaxValue)' (ushort)(searchColor.B * ushort.MaxValue));  	attr.StartIndex = searchResult.StartIndex;  	attr.EndIndex = searchResult.EndIndex;  	using (var list = textRenderer.Attributes.Copy ()) {  		list.Insert (attr);  		textRenderer.Attributes = list;  	}  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  	if (color1.L + 0.5 > 1.0) {  		color1.L -= 0.5;  	}  	else {  		color1.L += 0.5;  	}  	searchColor = color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  	if (color1.L + 0.5 > 1.0) {  		color1.L -= 0.5;  	}  	else {  		color1.L += 0.5;  	}  	searchColor = color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  	if (color1.L + 0.5 > 1.0) {  		color1.L -= 0.5;  	}  	else {  		color1.L += 0.5;  	}  	searchColor = color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (delta < 0.1) {  	Mono.TextEditor.HslColor color1 = highlightStyle.SearchResult.Color;  	if (color1.L + 0.5 > 1.0) {  		color1.L -= 0.5;  	}  	else {  		color1.L += 0.5;  	}  	searchColor = color1;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (color1.L + 0.5 > 1.0) {  	color1.L -= 0.5;  }  else {  	color1.L += 0.5;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (color1.L + 0.5 > 1.0) {  	color1.L -= 0.5;  }  else {  	color1.L += 0.5;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: if (color1.L + 0.5 > 1.0) {  	color1.L -= 0.5;  }  else {  	color1.L += 0.5;  }  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: color1.L -= 0.5;  
Magic Number,MonoDevelop.Ide.FindInFiles,SearchResultWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\SearchResultWidget.cs,ResultTextDataFunc,The following statement contains a magic number: color1.L += 0.5;  
Magic Number,MonoDevelop.Ide.Execution,CustomExecutionModeDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeDialog.cs,SuggestName,The following statement contains a magic number: for (int n = 1; n < 100; n++) {  	if (baseName.EndsWith (GetNamePosfix (n))) {  		count = n + 1;  		baseName = baseName.Substring (0' baseName.Length - GetNamePosfix (n).Length);  	}  }  
Magic Number,MonoDevelop.Ide.Execution,CustomExecutionModeDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeDialog.cs,GetNamePosfix,The following statement contains a magic number: if (n < 2)  	return " " + GettextCatalog.GetString ("(Custom)");  else  	return " " + GettextCatalog.GetString ("(Custom {0})"' n);  
Magic Number,MonoDevelop.Ide.Execution,CustomExecutionModeManagerDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeManagerDialog.cs,CustomExecutionModeManagerDialog,The following statement contains a magic number: listModes.AppendColumn (GettextCatalog.GetString ("Execution Mode")' crt' "text"' 2);  
Magic Number,MonoDevelop.Ide.Execution,CustomExecutionModeManagerDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeManagerDialog.cs,CustomExecutionModeManagerDialog,The following statement contains a magic number: listModes.AppendColumn (GettextCatalog.GetString ("Available for")' crt' "text"' 3);  
Magic Number,MonoDevelop.Ide.Execution,CustomExecutionModeManagerDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeManagerDialog.cs,CustomExecutionModeManagerDialog,The following statement contains a magic number: treeState = new TreeViewState (listModes' 4);  
Magic Number,MonoDevelop.Components,IconView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\IconView.cs,IconView,The following statement contains a magic number: iconView.ColumnSpacing = 6;  
Magic Number,MonoDevelop.Components,IconView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\IconView.cs,IconView,The following statement contains a magic number: iconView.RowSpacing = 6;  
Magic Number,MonoDevelop.Components,IconView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\IconView.cs,IconView,The following statement contains a magic number: cr.WrapWidth = 80;  
Magic Number,MonoDevelop.Components,IconView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\IconView.cs,IconView,The following statement contains a magic number: iconView.ItemWidth = 80;  
Magic Number,MonoDevelop.Components,IconView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\IconView.cs,IconView,The following statement contains a magic number: this.WidthRequest = 350;  
Magic Number,MonoDevelop.Components,IconView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\IconView.cs,IconView,The following statement contains a magic number: this.HeightRequest = 200;  
Magic Number,MonoDevelop.Components,Navbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Navbar.cs,Navbar,The following statement contains a magic number: address.WidthChars = 50;  
Magic Number,MonoDevelop.Components,TabLabel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TabLabel.cs,TabLabel,The following statement contains a magic number: icon.Xpad = 2;  
Magic Number,MonoDevelop.Components,TabLabel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TabLabel.cs,OnButtonReleaseEvent,The following statement contains a magic number: if (evnt.Button == 2 && CloseClicked != null) {  	CloseClicked (this' null);  	return true;  }  
Magic Number,MonoDevelop.Components,MenuButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButton.cs,MenuButton,The following statement contains a magic number: box.Spacing = 6;  
Magic Number,MonoDevelop.Components,MenuButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButton.cs,OnClicked,The following statement contains a magic number: if (creator != null) {  	Menu menu = creator (this);  	if (menu != null) {  		isOpen = true;  		//make sure the button looks depressed  		ReliefStyle oldRelief = this.Relief;  		this.Relief = ReliefStyle.Normal;  		//clean up after the menu's done  		menu.Hidden += delegate {  			this.Relief = oldRelief;  			isOpen = false;  			this.State = StateType.Normal;  			//FIXME: for some reason the menu's children don't get activated if we destroy   			//directly here' so use a timeout to delay it  			GLib.Timeout.Add (100' delegate {  				menu.Destroy ();  				return false;  			});  		};  		menu.Popup (null' null' PositionFunc' 0' Gtk.Global.CurrentEventTime);  	}  }  
Magic Number,MonoDevelop.Components,MenuButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButton.cs,OnClicked,The following statement contains a magic number: if (menu != null) {  	isOpen = true;  	//make sure the button looks depressed  	ReliefStyle oldRelief = this.Relief;  	this.Relief = ReliefStyle.Normal;  	//clean up after the menu's done  	menu.Hidden += delegate {  		this.Relief = oldRelief;  		isOpen = false;  		this.State = StateType.Normal;  		//FIXME: for some reason the menu's children don't get activated if we destroy   		//directly here' so use a timeout to delay it  		GLib.Timeout.Add (100' delegate {  			menu.Destroy ();  			return false;  		});  	};  	menu.Popup (null' null' PositionFunc' 0' Gtk.Global.CurrentEventTime);  }  
Magic Number,MonoDevelop.Components,MenuButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButton.cs,OnClicked,The following statement contains a magic number: menu.Hidden += delegate {  	this.Relief = oldRelief;  	isOpen = false;  	this.State = StateType.Normal;  	//FIXME: for some reason the menu's children don't get activated if we destroy   	//directly here' so use a timeout to delay it  	GLib.Timeout.Add (100' delegate {  		menu.Destroy ();  		return false;  	});  };  
Magic Number,MonoDevelop.Components,MenuButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButton.cs,OnClicked,The following statement contains a magic number: GLib.Timeout.Add (100' delegate {  	menu.Destroy ();  	return false;  });  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,The following statement contains a magic number: if (up) {  	// See if the most recent selection was one down from the previous.  	// If so' we actually want to turn it off.  	if (addTo && !page) {  		if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] + 1)) {  			UnselectRow (this.SelectedRow);  		}  		else {  			SelectRow (this.SelectedRow - 1);  		}  	}  	else {  		if (page)  			this.SelectedRow -= VisibleRows - 1;  		else  			this.SelectedRow--;  	}  }  else {  	if (addTo && !page) {  		if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] - 1)) {  			UnselectRow (this.SelectedRow);  		}  		else {  			SelectRow (this.SelectedRow + 1);  		}  	}  	else {  		if (page)  			this.SelectedRow += VisibleRows - 1;  		else  			this.SelectedRow++;  	}  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,The following statement contains a magic number: if (up) {  	// See if the most recent selection was one down from the previous.  	// If so' we actually want to turn it off.  	if (addTo && !page) {  		if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] + 1)) {  			UnselectRow (this.SelectedRow);  		}  		else {  			SelectRow (this.SelectedRow - 1);  		}  	}  	else {  		if (page)  			this.SelectedRow -= VisibleRows - 1;  		else  			this.SelectedRow--;  	}  }  else {  	if (addTo && !page) {  		if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] - 1)) {  			UnselectRow (this.SelectedRow);  		}  		else {  			SelectRow (this.SelectedRow + 1);  		}  	}  	else {  		if (page)  			this.SelectedRow += VisibleRows - 1;  		else  			this.SelectedRow++;  	}  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,The following statement contains a magic number: if (addTo && !page) {  	if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] + 1)) {  		UnselectRow (this.SelectedRow);  	}  	else {  		SelectRow (this.SelectedRow - 1);  	}  }  else {  	if (page)  		this.SelectedRow -= VisibleRows - 1;  	else  		this.SelectedRow--;  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,The following statement contains a magic number: if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] + 1)) {  	UnselectRow (this.SelectedRow);  }  else {  	SelectRow (this.SelectedRow - 1);  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,The following statement contains a magic number: if (addTo && !page) {  	if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] - 1)) {  		UnselectRow (this.SelectedRow);  	}  	else {  		SelectRow (this.SelectedRow + 1);  	}  }  else {  	if (page)  		this.SelectedRow += VisibleRows - 1;  	else  		this.SelectedRow++;  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ModifySelection,The following statement contains a magic number: if (selectedRows.Count > 1 && this.SelectedRow == (selectedRows [selectedRows.Count - 2] - 1)) {  	UnselectRow (this.SelectedRow);  }  else {  	SelectRow (this.SelectedRow + 1);  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,CenterViewToSelection,The following statement contains a magic number: if (vAdjustement != null) {  	int val = SelectedRow - VisibleRows / 2;  	if (val + VisibleRows >= RowCount)  		val = RowCount - VisibleRows;  	vAdjustement.Value = val > 0 ? val : 0;  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,UpdatePage,The following statement contains a magic number: if (SelectedRow < page || SelectedRow >= page + VisibleRows) {  	if (centerRow) {  		page = SelectedRow - (VisibleRows / 2);  	}  	else if (keepSelectionInView) {  		if (SelectedRow < page)  			page = SelectedRow;  		else  			page = SelectedRow - VisibleRows + 1;  	}  	if (page < 0)  		page = 0;  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,UpdatePage,The following statement contains a magic number: if (centerRow) {  	page = SelectedRow - (VisibleRows / 2);  }  else if (keepSelectionInView) {  	if (SelectedRow < page)  		page = SelectedRow;  	else  		page = SelectedRow - VisibleRows + 1;  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,UpdatePage,The following statement contains a magic number: page = SelectedRow - (VisibleRows / 2);  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,DrawList,The following statement contains a magic number: while (ypos < winHeight - margin && (page + n) < RowCount) {  	bool isSelected = selectedRows.Contains (page + n);  	bool hasMarkup = SetLayoutText (page + n' isSelected);  	Gdk.Pixbuf icon = dataProvider.GetIcon (page + n);  	int iconHeight = icon != null ? icon.Height : IconWidth;  	int iconWidth = icon != null ? icon.Width : IconWidth;  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (isSelected) {  		if (!disableSelection) {  			window.DrawRectangle (this.Style.BaseGC (StateType.Selected)' true' margin' ypos' lineWidth' he + padding);  			window.DrawLayout (this.Style.TextGC (StateType.Selected)' xpos + iconWidth + ColumnGap' typos' layout);  		}  		else {  			window.DrawRectangle (this.Style.BaseGC (StateType.Selected)' false' margin' ypos' lineWidth' he + padding);  			window.DrawLayout (textGCNormal' xpos + iconWidth + ColumnGap' typos' layout);  		}  		// Draw a 'most recent selection' rectangle.  		if (this.SelectedRow == page + n) {  			window.DrawRectangle (this.Style.BaseGC (StateType.Active)' false' margin' ypos' lineWidth' he + padding - 1);  			window.DrawLayout (this.Style.TextGC (StateType.Active)' xpos + iconWidth + ColumnGap' typos' layout);  		}  	}  	else  		window.DrawLayout (textGCNormal' xpos + iconWidth + ColumnGap' typos' layout);  	if (icon != null)  		window.DrawPixbuf (fgGCNormal' icon' 0' 0' xpos' iypos' iconWidth' iconHeight' RgbDither.None' 0' 0);  	ypos += rowHeight;  	n++;  	//reset the markup or it carries over to the next SetText  	if (hasMarkup)  		layout.SetMarkup (string.Empty);  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,DrawList,The following statement contains a magic number: while (ypos < winHeight - margin && (page + n) < RowCount) {  	bool isSelected = selectedRows.Contains (page + n);  	bool hasMarkup = SetLayoutText (page + n' isSelected);  	Gdk.Pixbuf icon = dataProvider.GetIcon (page + n);  	int iconHeight = icon != null ? icon.Height : IconWidth;  	int iconWidth = icon != null ? icon.Width : IconWidth;  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (isSelected) {  		if (!disableSelection) {  			window.DrawRectangle (this.Style.BaseGC (StateType.Selected)' true' margin' ypos' lineWidth' he + padding);  			window.DrawLayout (this.Style.TextGC (StateType.Selected)' xpos + iconWidth + ColumnGap' typos' layout);  		}  		else {  			window.DrawRectangle (this.Style.BaseGC (StateType.Selected)' false' margin' ypos' lineWidth' he + padding);  			window.DrawLayout (textGCNormal' xpos + iconWidth + ColumnGap' typos' layout);  		}  		// Draw a 'most recent selection' rectangle.  		if (this.SelectedRow == page + n) {  			window.DrawRectangle (this.Style.BaseGC (StateType.Active)' false' margin' ypos' lineWidth' he + padding - 1);  			window.DrawLayout (this.Style.TextGC (StateType.Active)' xpos + iconWidth + ColumnGap' typos' layout);  		}  	}  	else  		window.DrawLayout (textGCNormal' xpos + iconWidth + ColumnGap' typos' layout);  	if (icon != null)  		window.DrawPixbuf (fgGCNormal' icon' 0' 0' xpos' iypos' iconWidth' iconHeight' RgbDither.None' 0' 0);  	ypos += rowHeight;  	n++;  	//reset the markup or it carries over to the next SetText  	if (hasMarkup)  		layout.SetMarkup (string.Empty);  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,DrawList,The following statement contains a magic number: typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,DrawList,The following statement contains a magic number: iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,CalcVisibleRows,The following statement contains a magic number: visibleRows = (lvHeight + padding - margin * 2) / rowHeight;  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,CalcVisibleRows,The following statement contains a magic number: if (dataProvider != null) {  	int maxr = Math.Min (page + visibleRows' dataProvider.ItemCount);  	for (int n = page; n < maxr; n++) {  		SetLayoutText (n' false);  		int rh' rw;  		layout.GetPixelSize (out rw' out rh);  		rw += (margin + padding) * 2 + IconWidth + ColumnGap;  		if (rw > viewWidth)  			viewWidth = rw;  	}  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,CalcVisibleRows,The following statement contains a magic number: for (int n = page; n < maxr; n++) {  	SetLayoutText (n' false);  	int rh' rw;  	layout.GetPixelSize (out rw' out rh);  	rw += (margin + padding) * 2 + IconWidth + ColumnGap;  	if (rw > viewWidth)  		viewWidth = rw;  }  
Magic Number,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,CalcVisibleRows,The following statement contains a magic number: rw += (margin + padding) * 2 + IconWidth + ColumnGap;  
Magic Number,MonoDevelop.Components,TooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipWindow.cs,TooltipWindow,The following statement contains a magic number: this.BorderWidth = 2;  
Magic Number,MonoDevelop.Components,TooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (NudgeHorizontal || NudgeVertical) {  	int x' y;  	this.GetPosition (out x' out y);  	int oldY = y' oldX = x;  	const int edgeGap = 2;  	//				int w = allocation.Width;  	//				  	//				if (fitWidthToScreen && (x + w >= screenW - edgeGap)) {  	//					int fittedWidth = screenW - x - edgeGap;  	//					if (fittedWidth < minFittedWidth) {  	//						x -= (minFittedWidth - fittedWidth);  	//						fittedWidth = minFittedWidth;  	//					}  	//					LimitWidth (fittedWidth);  	//				}  	Gdk.Rectangle geometry = DesktopService.GetUsableMonitorGeometry (Screen' Screen.GetMonitorAtPoint (x' y));  	if (NudgeHorizontal) {  		if (allocation.Width <= geometry.Width && x + allocation.Width >= geometry.Left + geometry.Width - edgeGap)  			x = geometry.Left + (geometry.Width - allocation.Width - edgeGap);  		if (x <= geometry.Left + edgeGap)  			x = geometry.Left + edgeGap;  	}  	if (NudgeVertical) {  		if (allocation.Height <= geometry.Height && y + allocation.Height >= geometry.Top + geometry.Height - edgeGap)  			y = geometry.Top + (geometry.Height - allocation.Height - edgeGap);  		if (y <= geometry.Top + edgeGap)  			y = geometry.Top + edgeGap;  	}  	if (y != oldY || x != oldX)  		Move (x' y);  }  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,InfoBar,The following statement contains a magic number: BorderWidth = 6;  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,InfoBar,The following statement contains a magic number: Spacing = 6;  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,InfoBar,The following statement contains a magic number: ActionArea = new VButtonBox () {  	Spacing = 6'  	LayoutStyle = ButtonBoxStyle.Start  };  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,SetImage,The following statement contains a magic number: if (img == null) {  	img = new Gtk.Image (iconName' IconSize.Dialog);  	messageHBox.PackEnd (img' false' false' 12);  	img.SetAlignment (0.5f' 0.5f);  }  else {  	img.IconName = iconName;  }  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,SetImage,The following statement contains a magic number: messageHBox.PackEnd (img' false' false' 12);  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,SetMessageLabel,The following statement contains a magic number: l.SizeAllocated += delegate (object o' SizeAllocatedArgs args) {  	l.WidthRequest = Math.Max (350' args.Allocation.Width - 15);  };  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,SetMessageLabel,The following statement contains a magic number: l.SizeAllocated += delegate (object o' SizeAllocatedArgs args) {  	l.WidthRequest = Math.Max (350' args.Allocation.Width - 15);  };  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,SetMessageLabel,The following statement contains a magic number: l.WidthRequest = Math.Max (350' args.Allocation.Width - 15);  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,SetMessageLabel,The following statement contains a magic number: l.WidthRequest = Math.Max (350' args.Allocation.Width - 15);  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,OnExposeEvent,The following statement contains a magic number: Style.PaintFlatBox (Style' evnt.Window' StateType.Normal' ShadowType.Out' evnt.Area' this' "tooltip"' Allocation.X + 1' Allocation.Y + 1' Allocation.Width - 2' Allocation.Height - 2);  
Magic Number,MonoDevelop.Components,InfoBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\InfoBar.cs,OnExposeEvent,The following statement contains a magic number: Style.PaintFlatBox (Style' evnt.Window' StateType.Normal' ShadowType.Out' evnt.Area' this' "tooltip"' Allocation.X + 1' Allocation.Y + 1' Allocation.Width - 2' Allocation.Height - 2);  
Magic Number,MonoDevelop.Components,GtkUtil,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,HandleLeaveNotifyEvent,The following statement contains a magic number: data.LeaveTimer = GLib.Timeout.Add (50' delegate {  	data.LeaveTimer = 0;  	if (data != null && data.Tooltip != null && data.Tooltip.MouseIsOver)  		return false;  	HideTooltip (tree);  	return false;  });  
Magic Number,MonoDevelop.Components,GtkUtil,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,HandleMotionNotifyEvent,The following statement contains a magic number: data.ShowTimer = GLib.Timeout.Add (300' delegate {  	data.ShowTimer = 0;  	int ox' oy;  	tree.BinWindow.GetOrigin (out ox' out oy);  	Gdk.Rectangle rect = tree.GetCellArea (path' col);  	data.Tooltip = new CellTooltipWindow (tree' col' path);  	if (rect.X + data.Tooltip.SizeRequest ().Width > tree.Allocation.Width) {  		data.Tooltip.Move (ox + rect.X - 1' oy + rect.Y);  		data.Tooltip.ShowAll ();  	}  	else {  		data.Tooltip.Destroy ();  		data.Tooltip = null;  	}  	return false;  });  
Magic Number,MonoDevelop.Components,CellTooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,CellTooltipWindow,The following statement contains a magic number: rect.Inflate (2' 2);  
Magic Number,MonoDevelop.Components,CellTooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,CellTooltipWindow,The following statement contains a magic number: rect.Inflate (2' 2);  
Magic Number,MonoDevelop.Components,CellTooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,CellTooltipWindow,The following statement contains a magic number: SetSizeRequest (x' th + 2);  
Magic Number,MonoDevelop.Components,CellTooltipWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\GtkUtil.cs,OnExposeEvent,The following statement contains a magic number: foreach (CellRenderer cr in col.CellRenderers) {  	if (!cr.Visible)  		continue;  	if (cr is CellRendererText) {  		save = ((CellRendererText)cr).ForegroundGdk;  		((CellRendererText)cr).ForegroundGdk = Style.Foreground (State);  	}  	int sp' wi' he' xo' yo;  	col.CellGetPosition (cr' out sp' out wi);  	Gdk.Rectangle bgrect = new Gdk.Rectangle (x' expose.Y' wi' expose.Height - 2);  	cr.GetSize (tree' ref bgrect' out xo' out yo' out wi' out he);  	int leftMargin = (int)((bgrect.Width - wi) * cr.Xalign);  	int topMargin = (int)((bgrect.Height - he) * cr.Yalign);  	Gdk.Rectangle cellrect = new Gdk.Rectangle (bgrect.X + leftMargin' bgrect.Y + topMargin + 1' wi' he);  	cr.Render (this.GdkWindow' this' bgrect' cellrect' expose' CellRendererState.Focused);  	x += bgrect.Width + col.Spacing + 1;  	if (cr is CellRendererText) {  		((CellRendererText)cr).ForegroundGdk = save;  	}  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.L = (m + v) / 2.0;  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  	this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  }  else {  	return;  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (this.S > 0.0) {  	this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  }  else {  	return;  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.S /= (this.L <= 0.5) ? (v + m) : (2.0 - v - m);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (r == v) {  	this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  }  else if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (g == m ? 5.0 + b2 : 1.0 - g2);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: if (g == v) {  	this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  }  else {  	this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  }  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (b == m ? 1.0 + r2 : 3.0 - b2);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.H = (r == m ? 3.0 + g2 : 5.0 - r2);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,HslColor,The following statement contains a magic number: this.H /= 6.0;  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);  
Magic Number,MonoDevelop.Components,HslColor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HslColor.cs,Brightness,The following statement contains a magic number: return System.Math.Sqrt (r * .241 + g * .691 + b * .068);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (1' 1' 3' 3);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (1' 1' 3' 3);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (0' 0' 3' 3);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,BuildWidget,The following statement contains a magic number: alignment.SetPadding (0' 0' 3' 3);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,ShowHideButtons,The following statement contains a magic number: entryAlignment.RightPadding = (uint)(!clear_button.Visible && roundedShape ? 6 : 0);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,ShowHideButtons,The following statement contains a magic number: entryAlignment.LeftPadding = (uint)(!filter_button.Visible && roundedShape ? 6 : 0);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnInnerEntryChanged,The following statement contains a magic number: if (Ready)  	changed_timeout_id = GLib.Timeout.Add (25' OnChangedTimeout);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnInnerEntryChanged,The following statement contains a magic number: changed_timeout_id = GLib.Timeout.Add (25' OnChangedTimeout);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,UpdateStyle,The following statement contains a magic number: if (diff > 1)  	box.BorderWidth = (uint)(diff / 2);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,UpdateStyle,The following statement contains a magic number: box.BorderWidth = (uint)(diff / 2);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))) {  	Style.PaintShadow (entry.Style' GdkWindow' StateType.Normal' ShadowType.In' evnt.Area' entry' "entry"' alloc.X' alloc.Y' alloc.Width' alloc.Height);  	/*				using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) { 					ctx.LineWidth = 1; 					ctx.Rectangle (alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1); 					ctx.Color = new Cairo.Color (1'0'0); 					ctx.Stroke (); 				}*/}  else if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))) {  	Style.PaintShadow (entry.Style' GdkWindow' StateType.Normal' ShadowType.In' evnt.Area' entry' "entry"' alloc.X' alloc.Y' alloc.Width' alloc.Height);  	/*				using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) { 					ctx.LineWidth = 1; 					ctx.Rectangle (alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1); 					ctx.Color = new Cairo.Color (1'0'0); 					ctx.Stroke (); 				}*/}  else if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))) {  	Style.PaintShadow (entry.Style' GdkWindow' StateType.Normal' ShadowType.In' evnt.Area' entry' "entry"' alloc.X' alloc.Y' alloc.Width' alloc.Height);  	/*				using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) { 					ctx.LineWidth = 1; 					ctx.Rectangle (alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1); 					ctx.Color = new Cairo.Color (1'0'0); 					ctx.Stroke (); 				}*/}  else if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))) {  	Style.PaintShadow (entry.Style' GdkWindow' StateType.Normal' ShadowType.In' evnt.Area' entry' "entry"' alloc.X' alloc.Y' alloc.Width' alloc.Height);  	/*				using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) { 					ctx.LineWidth = 1; 					ctx.Rectangle (alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1); 					ctx.Color = new Cairo.Color (1'0'0); 					ctx.Stroke (); 				}*/}  else if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && (!roundedShape || (roundedShape && !customRoundedShapeDrawing))) {  	Style.PaintShadow (entry.Style' GdkWindow' StateType.Normal' ShadowType.In' evnt.Area' entry' "entry"' alloc.X' alloc.Y' alloc.Width' alloc.Height);  	/*				using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) { 					ctx.LineWidth = 1; 					ctx.Rectangle (alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1); 					ctx.Color = new Cairo.Color (1'0'0); 					ctx.Stroke (); 				}*/}  else if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (!roundedShape) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  else {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  	ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  	ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  	ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: CairoExtensions.RoundedRectangle (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1' 4);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  	ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  	ctx.SetSourceColor (entry.Style.Base (Gtk.StateType.Normal).ToCairoColor ());  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && roundedShape && customRoundedShapeDrawing) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (Styles.WidgetBorderColor);  		ctx.LineWidth = 1;  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: if (hasFrame && roundedShape && customRoundedShapeDrawing) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  		ctx.SetSourceColor (Styles.WidgetBorderColor);  		ctx.LineWidth = 1;  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  	ctx.SetSourceColor (Styles.WidgetBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  	ctx.SetSourceColor (Styles.WidgetBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,OnExposeEvent,The following statement contains a magic number: RoundBorder (ctx' alloc.X + 0.5' alloc.Y + 0.5' alloc.Width - 1' alloc.Height - 1);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + r' y + r' r' Math.PI / 2' Math.PI + Math.PI / 2);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + r' y + r' r' Math.PI / 2' Math.PI + Math.PI / 2);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + w - r' y + r' r' Math.PI + Math.PI / 2' Math.PI + Math.PI + Math.PI / 2);  
Magic Number,MonoDevelop.Components,SearchEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SearchEntry.cs,RoundBorder,The following statement contains a magic number: ctx.Arc (x + w - r' y + r' r' Math.PI + Math.PI / 2' Math.PI + Math.PI + Math.PI / 2);  
Magic Number,MonoDevelop.Components,HoverImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HoverImageButton.cs,LoadPixbufs,The following statement contains a magic number: for (int i = 0; i < icon_names.Length; i++) {  	try {  		normal_pixbuf = ImageService.GetPixbuf (icon_names [i]' icon_size);  		active_pixbuf = ColorShiftPixbuf (normal_pixbuf' 30);  		break;  	}  	catch {  	}  }  
Magic Number,MonoDevelop.Components,HoverImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HoverImageButton.cs,LoadPixbufs,The following statement contains a magic number: try {  	normal_pixbuf = ImageService.GetPixbuf (icon_names [i]' icon_size);  	active_pixbuf = ColorShiftPixbuf (normal_pixbuf' 30);  	break;  }  catch {  }  
Magic Number,MonoDevelop.Components,HoverImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HoverImageButton.cs,LoadPixbufs,The following statement contains a magic number: active_pixbuf = ColorShiftPixbuf (normal_pixbuf' 30);  
Magic Number,MonoDevelop.Components,HoverImageButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HoverImageButton.cs,PixelClamp,The following statement contains a magic number: return (byte)Math.Max (0' Math.Min (255' val));  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (var g = new Cairo.LinearGradient (0' 0' 0' Allocation.Height)) {  		g.AddColorStop (0' Styles.BreadcrumbBackgroundColor);  		g.AddColorStop (1' Styles.BreadcrumbGradientEndColor);  		ctx.SetSource (g);  	}  	ctx.Fill ();  	if (widths == null)  		return true;  	// Calculate the total required with' and the reduction to be applied in case it doesn't fit the available space  	int totalWidth = widths.Sum ();  	totalWidth += leftPadding + (arrowSize + arrowRightPadding) * leftPath.Length - 1;  	totalWidth += rightPadding + arrowSize * rightPath.Length - 1;  	int[] currentWidths = widths;  	bool widthReduced = false;  	int overflow = totalWidth - Allocation.Width;  	if (overflow > 0) {  		currentWidths = ReduceWidths (overflow);  		widthReduced = true;  	}  	// Render the paths  	int textTopPadding = topPadding + (height - textHeight) / 2;  	int xpos = leftPadding' ypos = topPadding;  	for (int i = 0; i < leftPath.Length; i++) {  		bool last = i == leftPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i];  		int x = xpos;  		xpos += itemWidth;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (leftPath [i].DarkIcon != null) {  			int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  			Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  			ctx.Paint ();  			textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (leftPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  		if (!last) {  			xpos += arrowLeftPadding;  			if (leftPath [i].IsPathEnd) {  				Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  			}  			else {  				int arrowH = Math.Min (height' arrowSize);  				int arrowY = ypos + (height - arrowH) / 2;  				DrawPathSeparator (ctx' xpos' arrowY' arrowH);  			}  			xpos += arrowSize + arrowRightPadding;  		}  	}  	int xposRight = Allocation.Width - rightPadding;  	for (int i = 0; i < rightPath.Length; i++) {  		//				bool last = i == rightPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i + leftPath.Length];  		xposRight -= itemWidth;  		xposRight -= arrowSize;  		int x = xposRight;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (rightPath [i].DarkIcon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (ctx' rightPath [i].DarkIcon' x' ypos);  			ctx.Paint ();  			textOffset += rightPath [i].DarkIcon.Width + padding;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (rightPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  	}  	ctx.MoveTo (0' Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceColor (Styles.BreadcrumbBottomBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (var g = new Cairo.LinearGradient (0' 0' 0' Allocation.Height)) {  		g.AddColorStop (0' Styles.BreadcrumbBackgroundColor);  		g.AddColorStop (1' Styles.BreadcrumbGradientEndColor);  		ctx.SetSource (g);  	}  	ctx.Fill ();  	if (widths == null)  		return true;  	// Calculate the total required with' and the reduction to be applied in case it doesn't fit the available space  	int totalWidth = widths.Sum ();  	totalWidth += leftPadding + (arrowSize + arrowRightPadding) * leftPath.Length - 1;  	totalWidth += rightPadding + arrowSize * rightPath.Length - 1;  	int[] currentWidths = widths;  	bool widthReduced = false;  	int overflow = totalWidth - Allocation.Width;  	if (overflow > 0) {  		currentWidths = ReduceWidths (overflow);  		widthReduced = true;  	}  	// Render the paths  	int textTopPadding = topPadding + (height - textHeight) / 2;  	int xpos = leftPadding' ypos = topPadding;  	for (int i = 0; i < leftPath.Length; i++) {  		bool last = i == leftPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i];  		int x = xpos;  		xpos += itemWidth;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (leftPath [i].DarkIcon != null) {  			int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  			Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  			ctx.Paint ();  			textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (leftPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  		if (!last) {  			xpos += arrowLeftPadding;  			if (leftPath [i].IsPathEnd) {  				Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  			}  			else {  				int arrowH = Math.Min (height' arrowSize);  				int arrowY = ypos + (height - arrowH) / 2;  				DrawPathSeparator (ctx' xpos' arrowY' arrowH);  			}  			xpos += arrowSize + arrowRightPadding;  		}  	}  	int xposRight = Allocation.Width - rightPadding;  	for (int i = 0; i < rightPath.Length; i++) {  		//				bool last = i == rightPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i + leftPath.Length];  		xposRight -= itemWidth;  		xposRight -= arrowSize;  		int x = xposRight;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (rightPath [i].DarkIcon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (ctx' rightPath [i].DarkIcon' x' ypos);  			ctx.Paint ();  			textOffset += rightPath [i].DarkIcon.Width + padding;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (rightPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  	}  	ctx.MoveTo (0' Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceColor (Styles.BreadcrumbBottomBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (var g = new Cairo.LinearGradient (0' 0' 0' Allocation.Height)) {  		g.AddColorStop (0' Styles.BreadcrumbBackgroundColor);  		g.AddColorStop (1' Styles.BreadcrumbGradientEndColor);  		ctx.SetSource (g);  	}  	ctx.Fill ();  	if (widths == null)  		return true;  	// Calculate the total required with' and the reduction to be applied in case it doesn't fit the available space  	int totalWidth = widths.Sum ();  	totalWidth += leftPadding + (arrowSize + arrowRightPadding) * leftPath.Length - 1;  	totalWidth += rightPadding + arrowSize * rightPath.Length - 1;  	int[] currentWidths = widths;  	bool widthReduced = false;  	int overflow = totalWidth - Allocation.Width;  	if (overflow > 0) {  		currentWidths = ReduceWidths (overflow);  		widthReduced = true;  	}  	// Render the paths  	int textTopPadding = topPadding + (height - textHeight) / 2;  	int xpos = leftPadding' ypos = topPadding;  	for (int i = 0; i < leftPath.Length; i++) {  		bool last = i == leftPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i];  		int x = xpos;  		xpos += itemWidth;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (leftPath [i].DarkIcon != null) {  			int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  			Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  			ctx.Paint ();  			textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (leftPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  		if (!last) {  			xpos += arrowLeftPadding;  			if (leftPath [i].IsPathEnd) {  				Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  			}  			else {  				int arrowH = Math.Min (height' arrowSize);  				int arrowY = ypos + (height - arrowH) / 2;  				DrawPathSeparator (ctx' xpos' arrowY' arrowH);  			}  			xpos += arrowSize + arrowRightPadding;  		}  	}  	int xposRight = Allocation.Width - rightPadding;  	for (int i = 0; i < rightPath.Length; i++) {  		//				bool last = i == rightPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i + leftPath.Length];  		xposRight -= itemWidth;  		xposRight -= arrowSize;  		int x = xposRight;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (rightPath [i].DarkIcon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (ctx' rightPath [i].DarkIcon' x' ypos);  			ctx.Paint ();  			textOffset += rightPath [i].DarkIcon.Width + padding;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (rightPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  	}  	ctx.MoveTo (0' Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceColor (Styles.BreadcrumbBottomBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (var g = new Cairo.LinearGradient (0' 0' 0' Allocation.Height)) {  		g.AddColorStop (0' Styles.BreadcrumbBackgroundColor);  		g.AddColorStop (1' Styles.BreadcrumbGradientEndColor);  		ctx.SetSource (g);  	}  	ctx.Fill ();  	if (widths == null)  		return true;  	// Calculate the total required with' and the reduction to be applied in case it doesn't fit the available space  	int totalWidth = widths.Sum ();  	totalWidth += leftPadding + (arrowSize + arrowRightPadding) * leftPath.Length - 1;  	totalWidth += rightPadding + arrowSize * rightPath.Length - 1;  	int[] currentWidths = widths;  	bool widthReduced = false;  	int overflow = totalWidth - Allocation.Width;  	if (overflow > 0) {  		currentWidths = ReduceWidths (overflow);  		widthReduced = true;  	}  	// Render the paths  	int textTopPadding = topPadding + (height - textHeight) / 2;  	int xpos = leftPadding' ypos = topPadding;  	for (int i = 0; i < leftPath.Length; i++) {  		bool last = i == leftPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i];  		int x = xpos;  		xpos += itemWidth;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (leftPath [i].DarkIcon != null) {  			int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  			Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  			ctx.Paint ();  			textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (leftPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  		if (!last) {  			xpos += arrowLeftPadding;  			if (leftPath [i].IsPathEnd) {  				Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  			}  			else {  				int arrowH = Math.Min (height' arrowSize);  				int arrowY = ypos + (height - arrowH) / 2;  				DrawPathSeparator (ctx' xpos' arrowY' arrowH);  			}  			xpos += arrowSize + arrowRightPadding;  		}  	}  	int xposRight = Allocation.Width - rightPadding;  	for (int i = 0; i < rightPath.Length; i++) {  		//				bool last = i == rightPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i + leftPath.Length];  		xposRight -= itemWidth;  		xposRight -= arrowSize;  		int x = xposRight;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (rightPath [i].DarkIcon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (ctx' rightPath [i].DarkIcon' x' ypos);  			ctx.Paint ();  			textOffset += rightPath [i].DarkIcon.Width + padding;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (rightPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  	}  	ctx.MoveTo (0' Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceColor (Styles.BreadcrumbBottomBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (var g = new Cairo.LinearGradient (0' 0' 0' Allocation.Height)) {  		g.AddColorStop (0' Styles.BreadcrumbBackgroundColor);  		g.AddColorStop (1' Styles.BreadcrumbGradientEndColor);  		ctx.SetSource (g);  	}  	ctx.Fill ();  	if (widths == null)  		return true;  	// Calculate the total required with' and the reduction to be applied in case it doesn't fit the available space  	int totalWidth = widths.Sum ();  	totalWidth += leftPadding + (arrowSize + arrowRightPadding) * leftPath.Length - 1;  	totalWidth += rightPadding + arrowSize * rightPath.Length - 1;  	int[] currentWidths = widths;  	bool widthReduced = false;  	int overflow = totalWidth - Allocation.Width;  	if (overflow > 0) {  		currentWidths = ReduceWidths (overflow);  		widthReduced = true;  	}  	// Render the paths  	int textTopPadding = topPadding + (height - textHeight) / 2;  	int xpos = leftPadding' ypos = topPadding;  	for (int i = 0; i < leftPath.Length; i++) {  		bool last = i == leftPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i];  		int x = xpos;  		xpos += itemWidth;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (leftPath [i].DarkIcon != null) {  			int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  			Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  			ctx.Paint ();  			textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (leftPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  		if (!last) {  			xpos += arrowLeftPadding;  			if (leftPath [i].IsPathEnd) {  				Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  			}  			else {  				int arrowH = Math.Min (height' arrowSize);  				int arrowY = ypos + (height - arrowH) / 2;  				DrawPathSeparator (ctx' xpos' arrowY' arrowH);  			}  			xpos += arrowSize + arrowRightPadding;  		}  	}  	int xposRight = Allocation.Width - rightPadding;  	for (int i = 0; i < rightPath.Length; i++) {  		//				bool last = i == rightPath.Length - 1;  		// Reduce the item size when required  		int itemWidth = currentWidths [i + leftPath.Length];  		xposRight -= itemWidth;  		xposRight -= arrowSize;  		int x = xposRight;  		if (hoverIndex >= 0 && hoverIndex < Path.Length && rightPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  			DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  		int textOffset = 0;  		if (rightPath [i].DarkIcon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (ctx' rightPath [i].DarkIcon' x' ypos);  			ctx.Paint ();  			textOffset += rightPath [i].DarkIcon.Width + padding;  		}  		layout.Attributes = (i == activeIndex) ? boldAtts : null;  		layout.SetMarkup (rightPath [i].Markup);  		ctx.Save ();  		// If size is being reduced' ellipsize it  		bool showText = true;  		if (widthReduced) {  			int w = itemWidth - textOffset;  			if (w > 0) {  				ctx.Rectangle (x + textOffset' textTopPadding' w' height);  				ctx.Clip ();  			}  			else  				showText = false;  		}  		else  			layout.Width = -1;  		if (showText) {  			// Text  			ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  			ctx.MoveTo (x + textOffset' textTopPadding);  			PangoCairoHelper.ShowLayout (ctx' layout);  		}  		ctx.Restore ();  	}  	ctx.MoveTo (0' Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceColor (Styles.BreadcrumbBottomBorderColor);  	ctx.LineWidth = 1;  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < leftPath.Length; i++) {  	bool last = i == leftPath.Length - 1;  	// Reduce the item size when required  	int itemWidth = currentWidths [i];  	int x = xpos;  	xpos += itemWidth;  	if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  		DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  	int textOffset = 0;  	if (leftPath [i].DarkIcon != null) {  		int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  		ctx.Paint ();  		textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  	}  	layout.Attributes = (i == activeIndex) ? boldAtts : null;  	layout.SetMarkup (leftPath [i].Markup);  	ctx.Save ();  	// If size is being reduced' ellipsize it  	bool showText = true;  	if (widthReduced) {  		int w = itemWidth - textOffset;  		if (w > 0) {  			ctx.Rectangle (x + textOffset' textTopPadding' w' height);  			ctx.Clip ();  		}  		else  			showText = false;  	}  	else  		layout.Width = -1;  	if (showText) {  		// Text  		ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  		ctx.MoveTo (x + textOffset' textTopPadding);  		PangoCairoHelper.ShowLayout (ctx' layout);  	}  	ctx.Restore ();  	if (!last) {  		xpos += arrowLeftPadding;  		if (leftPath [i].IsPathEnd) {  			Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  		}  		else {  			int arrowH = Math.Min (height' arrowSize);  			int arrowY = ypos + (height - arrowH) / 2;  			DrawPathSeparator (ctx' xpos' arrowY' arrowH);  		}  		xpos += arrowSize + arrowRightPadding;  	}  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < leftPath.Length; i++) {  	bool last = i == leftPath.Length - 1;  	// Reduce the item size when required  	int itemWidth = currentWidths [i];  	int x = xpos;  	xpos += itemWidth;  	if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  		DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  	int textOffset = 0;  	if (leftPath [i].DarkIcon != null) {  		int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  		ctx.Paint ();  		textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  	}  	layout.Attributes = (i == activeIndex) ? boldAtts : null;  	layout.SetMarkup (leftPath [i].Markup);  	ctx.Save ();  	// If size is being reduced' ellipsize it  	bool showText = true;  	if (widthReduced) {  		int w = itemWidth - textOffset;  		if (w > 0) {  			ctx.Rectangle (x + textOffset' textTopPadding' w' height);  			ctx.Clip ();  		}  		else  			showText = false;  	}  	else  		layout.Width = -1;  	if (showText) {  		// Text  		ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  		ctx.MoveTo (x + textOffset' textTopPadding);  		PangoCairoHelper.ShowLayout (ctx' layout);  	}  	ctx.Restore ();  	if (!last) {  		xpos += arrowLeftPadding;  		if (leftPath [i].IsPathEnd) {  			Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  		}  		else {  			int arrowH = Math.Min (height' arrowSize);  			int arrowY = ypos + (height - arrowH) / 2;  			DrawPathSeparator (ctx' xpos' arrowY' arrowH);  		}  		xpos += arrowSize + arrowRightPadding;  	}  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < leftPath.Length; i++) {  	bool last = i == leftPath.Length - 1;  	// Reduce the item size when required  	int itemWidth = currentWidths [i];  	int x = xpos;  	xpos += itemWidth;  	if (hoverIndex >= 0 && hoverIndex < Path.Length && leftPath [i] == Path [hoverIndex] && (menuVisible || pressed || hovering))  		DrawButtonBorder (ctx' x - padding' itemWidth + padding + padding);  	int textOffset = 0;  	if (leftPath [i].DarkIcon != null) {  		int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  		ctx.Paint ();  		textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  	}  	layout.Attributes = (i == activeIndex) ? boldAtts : null;  	layout.SetMarkup (leftPath [i].Markup);  	ctx.Save ();  	// If size is being reduced' ellipsize it  	bool showText = true;  	if (widthReduced) {  		int w = itemWidth - textOffset;  		if (w > 0) {  			ctx.Rectangle (x + textOffset' textTopPadding' w' height);  			ctx.Clip ();  		}  		else  			showText = false;  	}  	else  		layout.Width = -1;  	if (showText) {  		// Text  		ctx.SetSourceColor (Styles.BreadcrumbTextColor.ToCairoColor ());  		ctx.MoveTo (x + textOffset' textTopPadding);  		PangoCairoHelper.ShowLayout (ctx' layout);  	}  	ctx.Restore ();  	if (!last) {  		xpos += arrowLeftPadding;  		if (leftPath [i].IsPathEnd) {  			Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  		}  		else {  			int arrowH = Math.Min (height' arrowSize);  			int arrowY = ypos + (height - arrowH) / 2;  			DrawPathSeparator (ctx' xpos' arrowY' arrowH);  		}  		xpos += arrowSize + arrowRightPadding;  	}  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: if (leftPath [i].DarkIcon != null) {  	int iy = (height - leftPath [i].DarkIcon.Height) / 2 + topPadding;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' leftPath [i].DarkIcon' x' iy);  	ctx.Paint ();  	textOffset += leftPath [i].DarkIcon.Width + iconSpacing;  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: if (!last) {  	xpos += arrowLeftPadding;  	if (leftPath [i].IsPathEnd) {  		Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  	}  	else {  		int arrowH = Math.Min (height' arrowSize);  		int arrowY = ypos + (height - arrowH) / 2;  		DrawPathSeparator (ctx' xpos' arrowY' arrowH);  	}  	xpos += arrowSize + arrowRightPadding;  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: if (!last) {  	xpos += arrowLeftPadding;  	if (leftPath [i].IsPathEnd) {  		Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  	}  	else {  		int arrowH = Math.Min (height' arrowSize);  		int arrowY = ypos + (height - arrowH) / 2;  		DrawPathSeparator (ctx' xpos' arrowY' arrowH);  	}  	xpos += arrowSize + arrowRightPadding;  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: if (leftPath [i].IsPathEnd) {  	Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  }  else {  	int arrowH = Math.Min (height' arrowSize);  	int arrowY = ypos + (height - arrowH) / 2;  	DrawPathSeparator (ctx' xpos' arrowY' arrowH);  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: if (leftPath [i].IsPathEnd) {  	Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  }  else {  	int arrowH = Math.Min (height' arrowSize);  	int arrowY = ypos + (height - arrowH) / 2;  	DrawPathSeparator (ctx' xpos' arrowY' arrowH);  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: Style.PaintVline (Style' GdkWindow' State' evnt.Area' this' ""' ypos' ypos + height' xpos - arrowSize / 2);  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (0' Allocation.Height - 0.5);  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,DrawPathSeparator,The following statement contains a magic number: ctx.LineTo (x + arrowSize' y + size / 2);  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,DrawPathSeparator,The following statement contains a magic number: ctx.SetSourceColor (CairoExtensions.ColorShade (Style.Dark (State).ToCairoColor ()' 0.6));  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,DrawButtonBorder,The following statement contains a magic number: ctx.Rectangle (x + 0.5' y + 0.5' width - 1' height - 1);  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,DrawButtonBorder,The following statement contains a magic number: ctx.Rectangle (x + 0.5' y + 0.5' width - 1' height - 1);  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,ShowMenu,The following statement contains a magic number: menuWidget.Hidden += delegate {  	menuVisible = false;  	QueueDraw ();  	//FIXME: for some reason the menu's children don't get activated if we destroy   	//directly here' so use a timeout to delay it  	GLib.Timeout.Add (100' delegate {  		HideMenu ();  		return false;  	});  };  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,ShowMenu,The following statement contains a magic number: GLib.Timeout.Add (100' delegate {  	HideMenu ();  	return false;  });  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,PositionWidget,The following statement contains a magic number: if (width >= geometry.Width - spacing * 2) {  	width = geometry.Width - spacing * 2;  	dx = geometry.Left + spacing;  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,PositionWidget,The following statement contains a magic number: if (width >= geometry.Width - spacing * 2) {  	width = geometry.Width - spacing * 2;  	dx = geometry.Left + spacing;  }  
Magic Number,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,PositionWidget,The following statement contains a magic number: width = geometry.Width - spacing * 2;  
Magic Number,MonoDevelop.Components,RoundedFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\RoundedFrame.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width += ((int)BorderWidth + frame_width) * 2;  
Magic Number,MonoDevelop.Components,RoundedFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\RoundedFrame.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height += ((int)BorderWidth + frame_width) * 2;  
Magic Number,MonoDevelop.Components,RoundedFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\RoundedFrame.cs,OnSizeAllocated,The following statement contains a magic number: child_allocation = new Gdk.Rectangle (allocation.X + border' allocation.Y + border' (int)Math.Max (1' allocation.Width - border * 2)' (int)Math.Max (1' allocation.Height - border * 2));  
Magic Number,MonoDevelop.Components,RoundedFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\RoundedFrame.cs,OnSizeAllocated,The following statement contains a magic number: child_allocation = new Gdk.Rectangle (allocation.X + border' allocation.Y + border' (int)Math.Max (1' allocation.Width - border * 2)' (int)Math.Max (1' allocation.Height - border * 2));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CairoColorToGdkColor,The following statement contains a magic number: return new Gdk.Color ((byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CairoColorToGdkColor,The following statement contains a magic number: return new Gdk.Color ((byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,CairoColorToGdkColor,The following statement contains a magic number: return new Gdk.Color ((byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GdkColorToCairoColor,The following statement contains a magic number: return new Cairo.Color ((double)(color.Red >> 8) / 255.0' (double)(color.Green >> 8) / 255.0' (double)(color.Blue >> 8) / 255.0' alpha);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbToColor,The following statement contains a magic number: return RgbaToColor ((rgbColor << 8) | 0x000000ff);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RgbaToColor,The following statement contains a magic number: return new Cairo.Color ((byte)(rgbaColor >> 24) / 255.0' (byte)(rgbaColor >> 16) / 255.0' (byte)(rgbaColor >> 8) / 255.0' (byte)(rgbaColor & 0x000000ff) / 255.0);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorIsDark,The following statement contains a magic number: return b < 0.5;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: brightness = (max + min) / 2;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (Math.Abs (max - min) < 0.0001) {  	hue = 0;  	saturation = 0;  }  else {  	saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  	delta = max - min;  	if (red == max) {  		hue = (green - blue) / delta;  	}  	else if (green == max) {  		hue = 2 + (blue - red) / delta;  	}  	else if (blue == max) {  		hue = 4 + (red - green) / delta;  	}  	hue *= 60;  	if (hue < 0) {  		hue += 360;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: saturation = brightness <= 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (red == max) {  	hue = (green - blue) / delta;  }  else if (green == max) {  	hue = 2 + (blue - red) / delta;  }  else if (blue == max) {  	hue = 4 + (red - green) / delta;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (red == max) {  	hue = (green - blue) / delta;  }  else if (green == max) {  	hue = 2 + (blue - red) / delta;  }  else if (blue == max) {  	hue = 4 + (red - green) / delta;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (green == max) {  	hue = 2 + (blue - red) / delta;  }  else if (blue == max) {  	hue = 4 + (red - green) / delta;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (green == max) {  	hue = 2 + (blue - red) / delta;  }  else if (blue == max) {  	hue = 4 + (red - green) / delta;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: hue = 2 + (blue - red) / delta;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (blue == max) {  	hue = 4 + (red - green) / delta;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: hue = 4 + (red - green) / delta;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: hue *= 60;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: if (hue < 0) {  	hue += 360;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,HsbFromColor,The following statement contains a magic number: hue += 360;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m2 = brightness <= 0.5 ? brightness * (1 + saturation) : brightness + saturation - brightness * saturation;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m1 = 2 * brightness - m2;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: hue_shift [0] = hue + 120;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: hue_shift [2] = hue - 120;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: hue_shift [2] = hue - 120;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: color_shift [0] = color_shift [1] = color_shift [2] = brightness;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: i = saturation == 0 ? 3 : 0;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: for (; i < 3; i++) {  	m3 = hue_shift [i];  	if (m3 > 360) {  		m3 = Modula (m3' 360);  	}  	else if (m3 < 0) {  		m3 = 360 - Modula (Math.Abs (m3)' 360);  	}  	if (m3 < 60) {  		color_shift [i] = m1 + (m2 - m1) * m3 / 60;  	}  	else if (m3 < 180) {  		color_shift [i] = m2;  	}  	else if (m3 < 240) {  		color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  	}  	else {  		color_shift [i] = m1;  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 > 360) {  	m3 = Modula (m3' 360);  }  else if (m3 < 0) {  	m3 = 360 - Modula (Math.Abs (m3)' 360);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 > 360) {  	m3 = Modula (m3' 360);  }  else if (m3 < 0) {  	m3 = 360 - Modula (Math.Abs (m3)' 360);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 > 360) {  	m3 = Modula (m3' 360);  }  else if (m3 < 0) {  	m3 = 360 - Modula (Math.Abs (m3)' 360);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 > 360) {  	m3 = Modula (m3' 360);  }  else if (m3 < 0) {  	m3 = 360 - Modula (Math.Abs (m3)' 360);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m3 = Modula (m3' 360);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 0) {  	m3 = 360 - Modula (Math.Abs (m3)' 360);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 0) {  	m3 = 360 - Modula (Math.Abs (m3)' 360);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m3 = 360 - Modula (Math.Abs (m3)' 360);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: m3 = 360 - Modula (Math.Abs (m3)' 360);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 60) {  	color_shift [i] = m1 + (m2 - m1) * m3 / 60;  }  else if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 60) {  	color_shift [i] = m1 + (m2 - m1) * m3 / 60;  }  else if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 60) {  	color_shift [i] = m1 + (m2 - m1) * m3 / 60;  }  else if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 60) {  	color_shift [i] = m1 + (m2 - m1) * m3 / 60;  }  else if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 60) {  	color_shift [i] = m1 + (m2 - m1) * m3 / 60;  }  else if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 60) {  	color_shift [i] = m1 + (m2 - m1) * m3 / 60;  }  else if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: color_shift [i] = m1 + (m2 - m1) * m3 / 60;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 180) {  	color_shift [i] = m2;  }  else if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: if (m3 < 240) {  	color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  }  else {  	color_shift [i] = m1;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: color_shift [i] = m1 + (m2 - m1) * (240 - m3) / 60;  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorFromHsb,The following statement contains a magic number: return new Cairo.Color (color_shift [0]' color_shift [1]' color_shift [2]);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: if (withAlpha) {  	return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  }  else {  	return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}{3:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255)' (byte)(color.A * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ColorGetHex,The following statement contains a magic number: return String.Format ("#{0:x2}{1:x2}{2:x2}"' (byte)(color.R * 255)' (byte)(color.G * 255)' (byte)(color.B * 255));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if (topBottomFallsThrough && corners == CairoCorners.None) {  	cr.MoveTo (x' y - r);  	cr.LineTo (x' y + h + r);  	cr.MoveTo (x + w' y - r);  	cr.LineTo (x + w' y + h + r);  	return;  }  else if (r < 0.0001 || corners == CairoCorners.None) {  	cr.Rectangle (x' y' w' h);  	return;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if (r < 0.0001 || corners == CairoCorners.None) {  	cr.Rectangle (x' y' w' h);  	return;  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & (CairoCorners.TopLeft | CairoCorners.TopRight)) == 0 && topBottomFallsThrough) {  	y -= r;  	h += r;  	cr.MoveTo (x + w' y);  }  else {  	if ((corners & CairoCorners.TopLeft) != 0) {  		cr.MoveTo (x + r' y);  	}  	else {  		cr.MoveTo (x' y);  	}  	if ((corners & CairoCorners.TopRight) != 0) {  		cr.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	}  	else {  		cr.LineTo (x + w' y);  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & (CairoCorners.TopLeft | CairoCorners.TopRight)) == 0 && topBottomFallsThrough) {  	y -= r;  	h += r;  	cr.MoveTo (x + w' y);  }  else {  	if ((corners & CairoCorners.TopLeft) != 0) {  		cr.MoveTo (x + r' y);  	}  	else {  		cr.MoveTo (x' y);  	}  	if ((corners & CairoCorners.TopRight) != 0) {  		cr.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	}  	else {  		cr.LineTo (x + w' y);  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & CairoCorners.TopRight) != 0) {  	cr.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  }  else {  	cr.LineTo (x + w' y);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & CairoCorners.TopRight) != 0) {  	cr.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  }  else {  	cr.LineTo (x + w' y);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {  	h += r;  	cr.LineTo (x + w' y + h);  	cr.MoveTo (x' y + h);  	cr.LineTo (x' y + r);  	cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	if ((corners & CairoCorners.BottomRight) != 0) {  		cr.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	}  	else {  		cr.LineTo (x + w' y + h);  	}  	if ((corners & CairoCorners.BottomLeft) != 0) {  		cr.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	}  	else {  		cr.LineTo (x' y + h);  	}  	if ((corners & CairoCorners.TopLeft) != 0) {  		cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  	}  	else {  		cr.LineTo (x' y);  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {  	h += r;  	cr.LineTo (x + w' y + h);  	cr.MoveTo (x' y + h);  	cr.LineTo (x' y + r);  	cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	if ((corners & CairoCorners.BottomRight) != 0) {  		cr.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	}  	else {  		cr.LineTo (x + w' y + h);  	}  	if ((corners & CairoCorners.BottomLeft) != 0) {  		cr.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	}  	else {  		cr.LineTo (x' y + h);  	}  	if ((corners & CairoCorners.TopLeft) != 0) {  		cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  	}  	else {  		cr.LineTo (x' y);  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {  	h += r;  	cr.LineTo (x + w' y + h);  	cr.MoveTo (x' y + h);  	cr.LineTo (x' y + r);  	cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	if ((corners & CairoCorners.BottomRight) != 0) {  		cr.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	}  	else {  		cr.LineTo (x + w' y + h);  	}  	if ((corners & CairoCorners.BottomLeft) != 0) {  		cr.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	}  	else {  		cr.LineTo (x' y + h);  	}  	if ((corners & CairoCorners.TopLeft) != 0) {  		cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  	}  	else {  		cr.LineTo (x' y);  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & (CairoCorners.BottomLeft | CairoCorners.BottomRight)) == 0 && topBottomFallsThrough) {  	h += r;  	cr.LineTo (x + w' y + h);  	cr.MoveTo (x' y + h);  	cr.LineTo (x' y + r);  	cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	if ((corners & CairoCorners.BottomRight) != 0) {  		cr.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	}  	else {  		cr.LineTo (x + w' y + h);  	}  	if ((corners & CairoCorners.BottomLeft) != 0) {  		cr.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	}  	else {  		cr.LineTo (x' y + h);  	}  	if ((corners & CairoCorners.TopLeft) != 0) {  		cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  	}  	else {  		cr.LineTo (x' y);  	}  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & CairoCorners.BottomRight) != 0) {  	cr.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  }  else {  	cr.LineTo (x + w' y + h);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & CairoCorners.BottomLeft) != 0) {  	cr.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  }  else {  	cr.LineTo (x' y + h);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: if ((corners & CairoCorners.TopLeft) != 0) {  	cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	cr.LineTo (x' y);  }  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,RoundedRectangle,The following statement contains a magic number: cr.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (1.0 / 6.0' new Cairo.Color (0' 0' 0' .85 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (1.0 / 6.0' new Cairo.Color (0' 0' 0' .85 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (2.0 / 6.0' new Cairo.Color (0' 0' 0' .54 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (2.0 / 6.0' new Cairo.Color (0' 0' 0' .54 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (2.0 / 6.0' new Cairo.Color (0' 0' 0' .54 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (3.0 / 6.0' new Cairo.Color (0' 0' 0' .24 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (3.0 / 6.0' new Cairo.Color (0' 0' 0' .24 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (3.0 / 6.0' new Cairo.Color (0' 0' 0' .24 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (4.0 / 6.0' new Cairo.Color (0' 0' 0' .07 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (4.0 / 6.0' new Cairo.Color (0' 0' 0' .07 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (4.0 / 6.0' new Cairo.Color (0' 0' 0' .07 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (5.0 / 6.0' new Cairo.Color (0' 0' 0' .01 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (5.0 / 6.0' new Cairo.Color (0' 0' 0' .01 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ShadowGradient,The following statement contains a magic number: lg.AddColorStop (5.0 / 6.0' new Cairo.Color (0' 0' 0' .01 * strength));  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ParseColor,The following statement contains a magic number: if (s.Length == 3)  	s = "" + s [0] + s [0] + s [1] + s [1] + s [2] + s [2];  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ParseColor,The following statement contains a magic number: if (s.Length == 3)  	s = "" + s [0] + s [0] + s [1] + s [1] + s [2] + s [2];  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ParseColor,The following statement contains a magic number: if (s.Length == 3)  	s = "" + s [0] + s [0] + s [1] + s [1] + s [2] + s [2];  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ParseColor,The following statement contains a magic number: s = "" + s [0] + s [0] + s [1] + s [1] + s [2] + s [2];  
Magic Number,MonoDevelop.Components,CairoExtensions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,ParseColor,The following statement contains a magic number: s = "" + s [0] + s [0] + s [1] + s [1] + s [2] + s [2];  
Magic Number,MonoDevelop.Components,QuartzSurface,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CairoExtensions.cs,GetRetinaScale,The following statement contains a magic number: if (IntPtr.Size == 8)  	return CGContextConvertRectToDeviceSpace64 (cgContext' CGRect64.Unit).X;  
Magic Number,MonoDevelop.Components,PangoCairoHelper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PangoCairoHelper.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);  
Magic Number,MonoDevelop.Components,PangoCairoHelper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PangoCairoHelper.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);  
Magic Number,MonoDevelop.Components,PangoCairoHelper,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PangoCairoHelper.cs,GetColorString,The following statement contains a magic number: return string.Format ("#{0:X02}{1:X02}{2:X02}"' color.Red / 256' color.Green / 256' color.Blue / 256);  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,MenuButtonEntry,The following statement contains a magic number: if (button.Parent == null)  	PackStart (button' false' false' 2);  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,MenuButtonEntry,The following statement contains a magic number: PackStart (button' false' false' 2);  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,AddOptions,The following statement contains a magic number: if (options.GetLength (1) != 2)  	throw new ArgumentException ("The second dimension must be of size 2"' "options");  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,AddOptions,The following statement contains a magic number: foreach (string[] optionPair in options) {  	if (optionPair.Length != 2)  		throw new ArgumentException ("One of the string arrays contains <> 2 items"' "options");  	AddOption (optionPair [0]' optionPair [1]);  }  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,AddOptions,The following statement contains a magic number: if (optionPair.Length != 2)  	throw new ArgumentException ("One of the string arrays contains <> 2 items"' "options");  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,ShowQuickInsertMenu,The following statement contains a magic number: menu.Hidden += delegate {  	button.Relief = oldRelief;  	isOpen = false;  	button.State = Gtk.StateType.Normal;  	//FIXME: for some reason the menu's children don't get activated if we destroy   	//directly here' so use a timeout to delay it  	GLib.Timeout.Add (100' delegate {  		menu.Destroy ();  		return false;  	});  };  
Magic Number,MonoDevelop.Components,MenuButtonEntry,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\MenuButtonEntry.cs,ShowQuickInsertMenu,The following statement contains a magic number: GLib.Timeout.Add (100' delegate {  	menu.Destroy ();  	return false;  });  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeRequested,The following statement contains a magic number: if (showBorderLine) {  	requisition.Height += HScrollbar.Visible ? 1 : 2;  	requisition.Width += VScrollbar.Visible ? 1 : 2;  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeRequested,The following statement contains a magic number: if (showBorderLine) {  	requisition.Height += HScrollbar.Visible ? 1 : 2;  	requisition.Width += VScrollbar.Visible ? 1 : 2;  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height += HScrollbar.Visible ? 1 : 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width += VScrollbar.Visible ? 1 : 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  	allocation.X += 1;  	allocation.Y += 1;  	allocation.Height -= HScrollbar.Visible ? 1 : 2;  	allocation.Width -= VScrollbar.Visible ? 1 : 2;  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  	allocation.X += 1;  	allocation.Y += 1;  	allocation.Height -= HScrollbar.Visible ? 1 : 2;  	allocation.Width -= VScrollbar.Visible ? 1 : 2;  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: allocation.Height -= HScrollbar.Visible ? 1 : 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: allocation.Width -= VScrollbar.Visible ? 1 : 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  	bool hasHScroll = HScrollbar.Visible;  	bool hasVScroll = VScrollbar.Visible;  	if (hasHScroll) {  		var alloc = HScrollbar.Allocation;  		alloc.X -= 1;  		alloc.Width += hasVScroll ? 1 : 2;  		HScrollbar.SizeAllocate (alloc);  	}  	if (hasVScroll) {  		var alloc = VScrollbar.Allocation;  		alloc.Y -= 1;  		alloc.Height += hasHScroll ? 1 : 2;  		VScrollbar.SizeAllocate (alloc);  	}  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (showBorderLine) {  	bool hasHScroll = HScrollbar.Visible;  	bool hasVScroll = VScrollbar.Visible;  	if (hasHScroll) {  		var alloc = HScrollbar.Allocation;  		alloc.X -= 1;  		alloc.Width += hasVScroll ? 1 : 2;  		HScrollbar.SizeAllocate (alloc);  	}  	if (hasVScroll) {  		var alloc = VScrollbar.Allocation;  		alloc.Y -= 1;  		alloc.Height += hasHScroll ? 1 : 2;  		VScrollbar.SizeAllocate (alloc);  	}  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (hasHScroll) {  	var alloc = HScrollbar.Allocation;  	alloc.X -= 1;  	alloc.Width += hasVScroll ? 1 : 2;  	HScrollbar.SizeAllocate (alloc);  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: alloc.Width += hasVScroll ? 1 : 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (hasVScroll) {  	var alloc = VScrollbar.Allocation;  	alloc.Y -= 1;  	alloc.Height += hasHScroll ? 1 : 2;  	VScrollbar.SizeAllocate (alloc);  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnSizeAllocated,The following statement contains a magic number: alloc.Height += hasHScroll ? 1 : 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: rect.Width -= borderWidth + borderWidth - 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: rect.Height -= borderWidth + borderWidth - 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: if (hasHScroll) {  	rect.Height -= HScrollbar.Allocation.Height / 2;  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: rect.Height -= HScrollbar.Allocation.Height / 2;  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: if (hasVScroll) {  	rect.Width -= VScrollbar.Allocation.Width / 2;  }  
Magic Number,MonoDevelop.Components,CompactScrolledWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\CompactScrolledWindow.cs,OnExposeEvent,The following statement contains a magic number: rect.Width -= VScrollbar.Allocation.Width / 2;  
Magic Number,MonoDevelop.Components,DropDownBoxListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBoxListWindow.cs,SelectItem,The following statement contains a magic number: for (int i = 0; i < DataProvider.IconCount; i++) {  	if (DataProvider.GetTag (i) == item) {  		list.Selection = i;  		vScrollbar.Vadjustment.Value = Math.Max (0' i * list.RowHeight - vScrollbar.Vadjustment.PageSize / 2);  		break;  	}  }  
Magic Number,MonoDevelop.Components,DropDownBoxListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBoxListWindow.cs,SelectItem,The following statement contains a magic number: if (DataProvider.GetTag (i) == item) {  	list.Selection = i;  	vScrollbar.Vadjustment.Value = Math.Max (0' i * list.RowHeight - vScrollbar.Vadjustment.PageSize / 2);  	break;  }  
Magic Number,MonoDevelop.Components,DropDownBoxListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBoxListWindow.cs,SelectItem,The following statement contains a magic number: vScrollbar.Vadjustment.Value = Math.Max (0' i * list.RowHeight - vScrollbar.Vadjustment.PageSize / 2);  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnSizeRequested,The following statement contains a magic number: if (Pixbuf != null) {  	width += Pixbuf.Width + pixbufSpacing * 2;  	height = System.Math.Max (height' Pixbuf.Height);  }  else {  	height = System.Math.Max (height' defaultIconHeight);  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnSizeRequested,The following statement contains a magic number: width += Pixbuf.Width + pixbufSpacing * 2;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnSizeRequested,The following statement contains a magic number: if (DrawRightBorder)  	width += 2;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnSizeRequested,The following statement contains a magic number: width += 2;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height = FixedHeight > 0 ? FixedHeight : height + ySpacing * 2;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (DrawButtonShape) {  	arrowXPos -= 4;  }  else if (DrawRightBorder) {  	arrowXPos -= 2;  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (DrawButtonShape) {  	arrowXPos -= 4;  }  else if (DrawRightBorder) {  	arrowXPos -= 2;  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: arrowXPos -= 4;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (DrawRightBorder) {  	arrowXPos -= 2;  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: arrowXPos -= 2;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (DrawButtonShape) {  	Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  }  else {  	Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X - padding' Allocation.Y - padding' Allocation.Width + padding * 2' Allocation.Height + padding * 2);  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (DrawButtonShape) {  	Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  }  else {  	Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X - padding' Allocation.Y - padding' Allocation.Width + padding * 2' Allocation.Height + padding * 2);  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X - padding' Allocation.Y - padding' Allocation.Width + padding * 2' Allocation.Height + padding * 2);  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: Style.PaintBox (Style' args.Window' state' ShadowType.None' args.Area' this' "button"' Allocation.X - padding' Allocation.Y - padding' Allocation.Width + padding * 2' Allocation.Height + padding * 2);  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (Pixbuf != null) {  	win.DrawPixbuf (this.Style.BaseGC (StateType.Normal)' Pixbuf' 0' 0' xPos + pixbufSpacing' Allocation.Y + (Allocation.Height - Pixbuf.Height) / 2' Pixbuf.Width' Pixbuf.Height' Gdk.RgbDither.None' 0' 0);  	xPos += Pixbuf.Width + pixbufSpacing * 2;  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (Pixbuf != null) {  	win.DrawPixbuf (this.Style.BaseGC (StateType.Normal)' Pixbuf' 0' 0' xPos + pixbufSpacing' Allocation.Y + (Allocation.Height - Pixbuf.Height) / 2' Pixbuf.Width' Pixbuf.Height' Gdk.RgbDither.None' 0' 0);  	xPos += Pixbuf.Width + pixbufSpacing * 2;  }  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: win.DrawPixbuf (this.Style.BaseGC (StateType.Normal)' Pixbuf' 0' 0' xPos + pixbufSpacing' Allocation.Y + (Allocation.Height - Pixbuf.Height) / 2' Pixbuf.Width' Pixbuf.Height' Gdk.RgbDither.None' 0' 0);  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: xPos += Pixbuf.Width + pixbufSpacing * 2;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: if (DrawButtonShape)  	xPos += 4;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: xPos += 4;  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: Style.PaintLayout (Style' win' state' true' textArea' this' ""' textArea.X' textArea.Y + Math.Max (0' (textArea.Height - height) / 2)' layout);  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintArrow (this.Style' win' state' ShadowType.None' args.Area' this' ""' ArrowType.Up' true' arrowXPos' Allocation.Y + (Allocation.Height) / 2 - arrowHeight' arrowWidth' arrowHeight);  
Magic Number,MonoDevelop.Components,DropDownBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\DropDownBox.cs,OnExposeEvent,The following statement contains a magic number: Gtk.Style.PaintArrow (this.Style' win' state' ShadowType.None' args.Area' this' ""' ArrowType.Down' true' arrowXPos' Allocation.Y + (Allocation.Height) / 2' arrowWidth' arrowHeight);  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = Gdk.CairoHelper.Create (evnt.Window)) {  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (LinearGradient gr = new LinearGradient (0' 0' 0' Allocation.Height)) {  		gr.AddColorStop (0' BackgroundGradientStart);  		gr.AddColorStop (1' BackgroundGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.MoveTo (0.5' 0.5);  	cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  	cr.SetSourceRGB (1' 1' 1);  	cr.LineWidth = 1;  	cr.Stroke ();  	for (int i = tabs.Count; i-- > 0;) {  		if (i == ActiveTab)  			continue;  		var tab = tabs [i];  		var bounds = GetBounds (tab);  		tab.HoverPosition = tab == hoverTab ? new Cairo.PointD (mx - bounds.X' my) : new Cairo.PointD (-1' -1);  		tab.Draw (cr' bounds);  	}  	tabs [ActiveTab].Draw (cr' GetBounds (tabs [ActiveTab]));  }  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = Gdk.CairoHelper.Create (evnt.Window)) {  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (LinearGradient gr = new LinearGradient (0' 0' 0' Allocation.Height)) {  		gr.AddColorStop (0' BackgroundGradientStart);  		gr.AddColorStop (1' BackgroundGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.MoveTo (0.5' 0.5);  	cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  	cr.SetSourceRGB (1' 1' 1);  	cr.LineWidth = 1;  	cr.Stroke ();  	for (int i = tabs.Count; i-- > 0;) {  		if (i == ActiveTab)  			continue;  		var tab = tabs [i];  		var bounds = GetBounds (tab);  		tab.HoverPosition = tab == hoverTab ? new Cairo.PointD (mx - bounds.X' my) : new Cairo.PointD (-1' -1);  		tab.Draw (cr' bounds);  	}  	tabs [ActiveTab].Draw (cr' GetBounds (tabs [ActiveTab]));  }  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = Gdk.CairoHelper.Create (evnt.Window)) {  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (LinearGradient gr = new LinearGradient (0' 0' 0' Allocation.Height)) {  		gr.AddColorStop (0' BackgroundGradientStart);  		gr.AddColorStop (1' BackgroundGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.MoveTo (0.5' 0.5);  	cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  	cr.SetSourceRGB (1' 1' 1);  	cr.LineWidth = 1;  	cr.Stroke ();  	for (int i = tabs.Count; i-- > 0;) {  		if (i == ActiveTab)  			continue;  		var tab = tabs [i];  		var bounds = GetBounds (tab);  		tab.HoverPosition = tab == hoverTab ? new Cairo.PointD (mx - bounds.X' my) : new Cairo.PointD (-1' -1);  		tab.Draw (cr' bounds);  	}  	tabs [ActiveTab].Draw (cr' GetBounds (tabs [ActiveTab]));  }  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = Gdk.CairoHelper.Create (evnt.Window)) {  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (LinearGradient gr = new LinearGradient (0' 0' 0' Allocation.Height)) {  		gr.AddColorStop (0' BackgroundGradientStart);  		gr.AddColorStop (1' BackgroundGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.MoveTo (0.5' 0.5);  	cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  	cr.SetSourceRGB (1' 1' 1);  	cr.LineWidth = 1;  	cr.Stroke ();  	for (int i = tabs.Count; i-- > 0;) {  		if (i == ActiveTab)  			continue;  		var tab = tabs [i];  		var bounds = GetBounds (tab);  		tab.HoverPosition = tab == hoverTab ? new Cairo.PointD (mx - bounds.X' my) : new Cairo.PointD (-1' -1);  		tab.Draw (cr' bounds);  	}  	tabs [ActiveTab].Draw (cr' GetBounds (tabs [ActiveTab]));  }  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = Gdk.CairoHelper.Create (evnt.Window)) {  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	using (LinearGradient gr = new LinearGradient (0' 0' 0' Allocation.Height)) {  		gr.AddColorStop (0' BackgroundGradientStart);  		gr.AddColorStop (1' BackgroundGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.MoveTo (0.5' 0.5);  	cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  	cr.SetSourceRGB (1' 1' 1);  	cr.LineWidth = 1;  	cr.Stroke ();  	for (int i = tabs.Count; i-- > 0;) {  		if (i == ActiveTab)  			continue;  		var tab = tabs [i];  		var bounds = GetBounds (tab);  		tab.HoverPosition = tab == hoverTab ? new Cairo.PointD (mx - bounds.X' my) : new Cairo.PointD (-1' -1);  		tab.Draw (cr' bounds);  	}  	tabs [ActiveTab].Draw (cr' GetBounds (tabs [ActiveTab]));  }  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (0.5' 0.5);  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: cr.MoveTo (0.5' 0.5);  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  
Magic Number,MonoDevelop.Components,Tabstrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,OnExposeEvent,The following statement contains a magic number: cr.Line (0.5' 0.5' Allocation.Width - 1' 0.5);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Tab,The following statement contains a magic number: if (IsSeparator)  	w = SpacerWidth * 2;  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Tab,The following statement contains a magic number: w = SpacerWidth * 2;  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (IsSeparator) {  	cr.NewPath ();  	double x = Math.Ceiling (rectangle.X + rectangle.Width / 2) + 0.5;  	cr.MoveTo (x' rectangle.Y + 0.5 + 2);  	cr.RelLineTo (0' rectangle.Height - 1 - 4);  	cr.ClosePath ();  	cr.SetSourceColor ((HslColor)parent.Style.Dark (StateType.Normal));  	cr.LineWidth = 1;  	cr.Stroke ();  	return;  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (IsSeparator) {  	cr.NewPath ();  	double x = Math.Ceiling (rectangle.X + rectangle.Width / 2) + 0.5;  	cr.MoveTo (x' rectangle.Y + 0.5 + 2);  	cr.RelLineTo (0' rectangle.Height - 1 - 4);  	cr.ClosePath ();  	cr.SetSourceColor ((HslColor)parent.Style.Dark (StateType.Normal));  	cr.LineWidth = 1;  	cr.Stroke ();  	return;  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (IsSeparator) {  	cr.NewPath ();  	double x = Math.Ceiling (rectangle.X + rectangle.Width / 2) + 0.5;  	cr.MoveTo (x' rectangle.Y + 0.5 + 2);  	cr.RelLineTo (0' rectangle.Height - 1 - 4);  	cr.ClosePath ();  	cr.SetSourceColor ((HslColor)parent.Style.Dark (StateType.Normal));  	cr.LineWidth = 1;  	cr.Stroke ();  	return;  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (IsSeparator) {  	cr.NewPath ();  	double x = Math.Ceiling (rectangle.X + rectangle.Width / 2) + 0.5;  	cr.MoveTo (x' rectangle.Y + 0.5 + 2);  	cr.RelLineTo (0' rectangle.Height - 1 - 4);  	cr.ClosePath ();  	cr.SetSourceColor ((HslColor)parent.Style.Dark (StateType.Normal));  	cr.LineWidth = 1;  	cr.Stroke ();  	return;  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (IsSeparator) {  	cr.NewPath ();  	double x = Math.Ceiling (rectangle.X + rectangle.Width / 2) + 0.5;  	cr.MoveTo (x' rectangle.Y + 0.5 + 2);  	cr.RelLineTo (0' rectangle.Height - 1 - 4);  	cr.ClosePath ();  	cr.SetSourceColor ((HslColor)parent.Style.Dark (StateType.Normal));  	cr.LineWidth = 1;  	cr.Stroke ();  	return;  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.MoveTo (x' rectangle.Y + 0.5 + 2);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.MoveTo (x' rectangle.Y + 0.5 + 2);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.RelLineTo (0' rectangle.Height - 1 - 4);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active || HoverPosition.X >= 0) {  	if (Active) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  			gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  			cr.SetSource (gr);  		}  		cr.Fill ();  		cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  		cr.SetSourceRGBA (1' 1' 1' 0.05);  		cr.LineWidth = 1;  		cr.Stroke ();  	}  	else if (HoverPosition.X >= 0) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			var c1 = Tabstrip.ActiveGradientStart;  			var c2 = Tabstrip.ActiveGradientEnd;  			c1.A = 0.2;  			c2.A = 0.2;  			gr.AddColorStop (0' c1);  			gr.AddColorStop (1' c2);  			cr.SetSource (gr);  		}  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active || HoverPosition.X >= 0) {  	if (Active) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  			gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  			cr.SetSource (gr);  		}  		cr.Fill ();  		cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  		cr.SetSourceRGBA (1' 1' 1' 0.05);  		cr.LineWidth = 1;  		cr.Stroke ();  	}  	else if (HoverPosition.X >= 0) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			var c1 = Tabstrip.ActiveGradientStart;  			var c2 = Tabstrip.ActiveGradientEnd;  			c1.A = 0.2;  			c2.A = 0.2;  			gr.AddColorStop (0' c1);  			gr.AddColorStop (1' c2);  			cr.SetSource (gr);  		}  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active || HoverPosition.X >= 0) {  	if (Active) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  			gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  			cr.SetSource (gr);  		}  		cr.Fill ();  		cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  		cr.SetSourceRGBA (1' 1' 1' 0.05);  		cr.LineWidth = 1;  		cr.Stroke ();  	}  	else if (HoverPosition.X >= 0) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			var c1 = Tabstrip.ActiveGradientStart;  			var c2 = Tabstrip.ActiveGradientEnd;  			c1.A = 0.2;  			c2.A = 0.2;  			gr.AddColorStop (0' c1);  			gr.AddColorStop (1' c2);  			cr.SetSource (gr);  		}  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active || HoverPosition.X >= 0) {  	if (Active) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  			gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  			cr.SetSource (gr);  		}  		cr.Fill ();  		cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  		cr.SetSourceRGBA (1' 1' 1' 0.05);  		cr.LineWidth = 1;  		cr.Stroke ();  	}  	else if (HoverPosition.X >= 0) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			var c1 = Tabstrip.ActiveGradientStart;  			var c2 = Tabstrip.ActiveGradientEnd;  			c1.A = 0.2;  			c2.A = 0.2;  			gr.AddColorStop (0' c1);  			gr.AddColorStop (1' c2);  			cr.SetSource (gr);  		}  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active || HoverPosition.X >= 0) {  	if (Active) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  			gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  			cr.SetSource (gr);  		}  		cr.Fill ();  		cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  		cr.SetSourceRGBA (1' 1' 1' 0.05);  		cr.LineWidth = 1;  		cr.Stroke ();  	}  	else if (HoverPosition.X >= 0) {  		cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  		using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  			var c1 = Tabstrip.ActiveGradientStart;  			var c2 = Tabstrip.ActiveGradientEnd;  			c1.A = 0.2;  			c2.A = 0.2;  			gr.AddColorStop (0' c1);  			gr.AddColorStop (1' c2);  			cr.SetSource (gr);  		}  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  		gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  	cr.SetSourceRGBA (1' 1' 1' 0.05);  	cr.LineWidth = 1;  	cr.Stroke ();  }  else if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  		gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  	cr.SetSourceRGBA (1' 1' 1' 0.05);  	cr.LineWidth = 1;  	cr.Stroke ();  }  else if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  		gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  	cr.SetSourceRGBA (1' 1' 1' 0.05);  	cr.LineWidth = 1;  	cr.Stroke ();  }  else if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  		gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  	cr.SetSourceRGBA (1' 1' 1' 0.05);  	cr.LineWidth = 1;  	cr.Stroke ();  }  else if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (Active) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		gr.AddColorStop (0' Tabstrip.ActiveGradientStart);  		gr.AddColorStop (1' Tabstrip.ActiveGradientEnd);  		cr.SetSource (gr);  	}  	cr.Fill ();  	cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  	cr.SetSourceRGBA (1' 1' 1' 0.05);  	cr.LineWidth = 1;  	cr.Stroke ();  }  else if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.Rectangle (rectangle.X + 0.5' rectangle.Y + 0.5' rectangle.Width - 1' rectangle.Height - 1);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.SetSourceRGBA (1' 1' 1' 0.05);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: if (HoverPosition.X >= 0) {  	cr.Rectangle (rectangle.X' rectangle.Y' rectangle.Width' rectangle.Height);  	using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  		var c1 = Tabstrip.ActiveGradientStart;  		var c2 = Tabstrip.ActiveGradientEnd;  		c1.A = 0.2;  		c2.A = 0.2;  		gr.AddColorStop (0' c1);  		gr.AddColorStop (1' c2);  		cr.SetSource (gr);  	}  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  	var c1 = Tabstrip.ActiveGradientStart;  	var c2 = Tabstrip.ActiveGradientEnd;  	c1.A = 0.2;  	c2.A = 0.2;  	gr.AddColorStop (0' c1);  	gr.AddColorStop (1' c2);  	cr.SetSource (gr);  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: using (var gr = new LinearGradient (rectangle.X' rectangle.Y' rectangle.X' rectangle.Y + rectangle.Height)) {  	var c1 = Tabstrip.ActiveGradientStart;  	var c2 = Tabstrip.ActiveGradientEnd;  	c1.A = 0.2;  	c2.A = 0.2;  	gr.AddColorStop (0' c1);  	gr.AddColorStop (1' c2);  	cr.SetSource (gr);  }  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: c1.A = 0.2;  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: c2.A = 0.2;  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.MoveTo (rectangle.X + (rectangle.Width - w) / 2' (rectangle.Height - h) / 2);  
Magic Number,MonoDevelop.Components,Tab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\Tabstrip.cs,Draw,The following statement contains a magic number: cr.MoveTo (rectangle.X + (rectangle.Width - w) / 2' (rectangle.Height - h) / 2);  
Magic Number,MonoDevelop.Components,HeaderBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HeaderBox.cs,OnExposeEvent,The following statement contains a magic number: if (GradientBackround) {  	rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	HslColor gcol = Style.Background (Gtk.StateType.Normal);  	using (Cairo.Context cr = Gdk.CairoHelper.Create (GdkWindow)) {  		cr.NewPath ();  		cr.MoveTo (rect.X' rect.Y);  		cr.RelLineTo (rect.Width' 0);  		cr.RelLineTo (0' rect.Height);  		cr.RelLineTo (-rect.Width' 0);  		cr.RelLineTo (0' -rect.Height);  		cr.ClosePath ();  		using (Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Bottom)) {  			Cairo.Color color1 = gcol;  			pat.AddColorStop (0' color1);  			gcol.L -= 0.1;  			if (gcol.L < 0)  				gcol.L = 0;  			pat.AddColorStop (1' gcol);  			cr.SetSource (pat);  			cr.FillPreserve ();  		}  	}  }  else if (BackgroundColor != null) {  	using (Cairo.Context cr = Gdk.CairoHelper.Create (GdkWindow)) {  		cr.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		cr.SetSourceColor (BackgroundColor.Value.ToCairoColor ());  		cr.Fill ();  	}  }  else if (useChildBackgroundColor && Child != null) {  	using (Cairo.Context cr = Gdk.CairoHelper.Create (GdkWindow)) {  		cr.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		cr.SetSourceColor (Child.Style.Base (StateType.Normal).ToCairoColor ());  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components,HeaderBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HeaderBox.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (GdkWindow)) {  	cr.NewPath ();  	cr.MoveTo (rect.X' rect.Y);  	cr.RelLineTo (rect.Width' 0);  	cr.RelLineTo (0' rect.Height);  	cr.RelLineTo (-rect.Width' 0);  	cr.RelLineTo (0' -rect.Height);  	cr.ClosePath ();  	using (Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Bottom)) {  		Cairo.Color color1 = gcol;  		pat.AddColorStop (0' color1);  		gcol.L -= 0.1;  		if (gcol.L < 0)  			gcol.L = 0;  		pat.AddColorStop (1' gcol);  		cr.SetSource (pat);  		cr.FillPreserve ();  	}  }  
Magic Number,MonoDevelop.Components,HeaderBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HeaderBox.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' rect.Bottom)) {  	Cairo.Color color1 = gcol;  	pat.AddColorStop (0' color1);  	gcol.L -= 0.1;  	if (gcol.L < 0)  		gcol.L = 0;  	pat.AddColorStop (1' gcol);  	cr.SetSource (pat);  	cr.FillPreserve ();  }  
Magic Number,MonoDevelop.Components,HeaderBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HeaderBox.cs,OnExposeEvent,The following statement contains a magic number: gcol.L -= 0.1;  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,SectionList,The following statement contains a magic number: WidthRequest = 100;  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,EnsureLayout,The following statement contains a magic number: headerHeight = Math.Max (20' h + headerPadding + headerPadding);  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	CairoHelper.Region (cr' evnt.Region);  	cr.Clip ();  	cr.Translate (alloc.X + bw' alloc.Y + bw);  	var borderCol = Convert (Style.Dark (StateType.Normal));  	cr.SetSourceColor (borderCol);  	cr.Rectangle (halfLineWidth' halfLineWidth' w - borderLineWidth' h - borderLineWidth);  	cr.LineWidth = borderLineWidth;  	cr.Stroke ();  	cr.Translate (borderLineWidth' borderLineWidth);  	w = w - (2 * borderLineWidth);  	using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  		var unselectedCol = Convert (Style.Mid (StateType.Normal));  		var unselectedTextCol = Convert (Style.Text (StateType.Normal));  		unselectedCol.A = 0.6;  		unselectedGrad.AddColorStop (0' unselectedCol);  		unselectedCol.A = 1;  		unselectedGrad.AddColorStop (1' unselectedCol);  		var hoverCol = Convert (Style.Mid (StateType.Prelight));  		var hoverTextCol = Convert (Style.Text (StateType.Prelight));  		hoverCol.A = 0.6;  		hoverGrad.AddColorStop (0' unselectedCol);  		hoverCol.A = 1;  		hoverGrad.AddColorStop (1' unselectedCol);  		var selectedCol = Convert (Style.Mid (StateType.Normal));  		var selectedTextCol = Convert (Style.Text (StateType.Normal));  		selectedCol.A = 0.6;  		selectedGrad.AddColorStop (0' selectedCol);  		selectedCol.A = 1;  		selectedGrad.AddColorStop (1' selectedCol);  		for (int i = 0; i < sections.Count; i++) {  			var section = sections [i];  			bool isActive = activeIndex == i;  			bool isHover = hoverIndex == i;  			cr.Rectangle (0' 0' w' headerHeight);  			cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  			cr.Fill ();  			cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  			layout.SetText (section.Title);  			layout.Ellipsize = Pango.EllipsizeMode.End;  			layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  			cr.MoveTo (headerPadding' headerPadding);  			PangoCairoHelper.ShowLayout (cr' layout);  			cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  			cr.RelLineTo (w + borderLineWidth' 0.0);  			cr.SetSourceColor (borderCol);  			cr.Stroke ();  			cr.Translate (0' headerHeight + borderLineWidth);  			if (isActive)  				cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  		}  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	CairoHelper.Region (cr' evnt.Region);  	cr.Clip ();  	cr.Translate (alloc.X + bw' alloc.Y + bw);  	var borderCol = Convert (Style.Dark (StateType.Normal));  	cr.SetSourceColor (borderCol);  	cr.Rectangle (halfLineWidth' halfLineWidth' w - borderLineWidth' h - borderLineWidth);  	cr.LineWidth = borderLineWidth;  	cr.Stroke ();  	cr.Translate (borderLineWidth' borderLineWidth);  	w = w - (2 * borderLineWidth);  	using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  		var unselectedCol = Convert (Style.Mid (StateType.Normal));  		var unselectedTextCol = Convert (Style.Text (StateType.Normal));  		unselectedCol.A = 0.6;  		unselectedGrad.AddColorStop (0' unselectedCol);  		unselectedCol.A = 1;  		unselectedGrad.AddColorStop (1' unselectedCol);  		var hoverCol = Convert (Style.Mid (StateType.Prelight));  		var hoverTextCol = Convert (Style.Text (StateType.Prelight));  		hoverCol.A = 0.6;  		hoverGrad.AddColorStop (0' unselectedCol);  		hoverCol.A = 1;  		hoverGrad.AddColorStop (1' unselectedCol);  		var selectedCol = Convert (Style.Mid (StateType.Normal));  		var selectedTextCol = Convert (Style.Text (StateType.Normal));  		selectedCol.A = 0.6;  		selectedGrad.AddColorStop (0' selectedCol);  		selectedCol.A = 1;  		selectedGrad.AddColorStop (1' selectedCol);  		for (int i = 0; i < sections.Count; i++) {  			var section = sections [i];  			bool isActive = activeIndex == i;  			bool isHover = hoverIndex == i;  			cr.Rectangle (0' 0' w' headerHeight);  			cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  			cr.Fill ();  			cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  			layout.SetText (section.Title);  			layout.Ellipsize = Pango.EllipsizeMode.End;  			layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  			cr.MoveTo (headerPadding' headerPadding);  			PangoCairoHelper.ShowLayout (cr' layout);  			cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  			cr.RelLineTo (w + borderLineWidth' 0.0);  			cr.SetSourceColor (borderCol);  			cr.Stroke ();  			cr.Translate (0' headerHeight + borderLineWidth);  			if (isActive)  				cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  		}  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	CairoHelper.Region (cr' evnt.Region);  	cr.Clip ();  	cr.Translate (alloc.X + bw' alloc.Y + bw);  	var borderCol = Convert (Style.Dark (StateType.Normal));  	cr.SetSourceColor (borderCol);  	cr.Rectangle (halfLineWidth' halfLineWidth' w - borderLineWidth' h - borderLineWidth);  	cr.LineWidth = borderLineWidth;  	cr.Stroke ();  	cr.Translate (borderLineWidth' borderLineWidth);  	w = w - (2 * borderLineWidth);  	using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  		var unselectedCol = Convert (Style.Mid (StateType.Normal));  		var unselectedTextCol = Convert (Style.Text (StateType.Normal));  		unselectedCol.A = 0.6;  		unselectedGrad.AddColorStop (0' unselectedCol);  		unselectedCol.A = 1;  		unselectedGrad.AddColorStop (1' unselectedCol);  		var hoverCol = Convert (Style.Mid (StateType.Prelight));  		var hoverTextCol = Convert (Style.Text (StateType.Prelight));  		hoverCol.A = 0.6;  		hoverGrad.AddColorStop (0' unselectedCol);  		hoverCol.A = 1;  		hoverGrad.AddColorStop (1' unselectedCol);  		var selectedCol = Convert (Style.Mid (StateType.Normal));  		var selectedTextCol = Convert (Style.Text (StateType.Normal));  		selectedCol.A = 0.6;  		selectedGrad.AddColorStop (0' selectedCol);  		selectedCol.A = 1;  		selectedGrad.AddColorStop (1' selectedCol);  		for (int i = 0; i < sections.Count; i++) {  			var section = sections [i];  			bool isActive = activeIndex == i;  			bool isHover = hoverIndex == i;  			cr.Rectangle (0' 0' w' headerHeight);  			cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  			cr.Fill ();  			cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  			layout.SetText (section.Title);  			layout.Ellipsize = Pango.EllipsizeMode.End;  			layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  			cr.MoveTo (headerPadding' headerPadding);  			PangoCairoHelper.ShowLayout (cr' layout);  			cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  			cr.RelLineTo (w + borderLineWidth' 0.0);  			cr.SetSourceColor (borderCol);  			cr.Stroke ();  			cr.Translate (0' headerHeight + borderLineWidth);  			if (isActive)  				cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  		}  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	CairoHelper.Region (cr' evnt.Region);  	cr.Clip ();  	cr.Translate (alloc.X + bw' alloc.Y + bw);  	var borderCol = Convert (Style.Dark (StateType.Normal));  	cr.SetSourceColor (borderCol);  	cr.Rectangle (halfLineWidth' halfLineWidth' w - borderLineWidth' h - borderLineWidth);  	cr.LineWidth = borderLineWidth;  	cr.Stroke ();  	cr.Translate (borderLineWidth' borderLineWidth);  	w = w - (2 * borderLineWidth);  	using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  		var unselectedCol = Convert (Style.Mid (StateType.Normal));  		var unselectedTextCol = Convert (Style.Text (StateType.Normal));  		unselectedCol.A = 0.6;  		unselectedGrad.AddColorStop (0' unselectedCol);  		unselectedCol.A = 1;  		unselectedGrad.AddColorStop (1' unselectedCol);  		var hoverCol = Convert (Style.Mid (StateType.Prelight));  		var hoverTextCol = Convert (Style.Text (StateType.Prelight));  		hoverCol.A = 0.6;  		hoverGrad.AddColorStop (0' unselectedCol);  		hoverCol.A = 1;  		hoverGrad.AddColorStop (1' unselectedCol);  		var selectedCol = Convert (Style.Mid (StateType.Normal));  		var selectedTextCol = Convert (Style.Text (StateType.Normal));  		selectedCol.A = 0.6;  		selectedGrad.AddColorStop (0' selectedCol);  		selectedCol.A = 1;  		selectedGrad.AddColorStop (1' selectedCol);  		for (int i = 0; i < sections.Count; i++) {  			var section = sections [i];  			bool isActive = activeIndex == i;  			bool isHover = hoverIndex == i;  			cr.Rectangle (0' 0' w' headerHeight);  			cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  			cr.Fill ();  			cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  			layout.SetText (section.Title);  			layout.Ellipsize = Pango.EllipsizeMode.End;  			layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  			cr.MoveTo (headerPadding' headerPadding);  			PangoCairoHelper.ShowLayout (cr' layout);  			cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  			cr.RelLineTo (w + borderLineWidth' 0.0);  			cr.SetSourceColor (borderCol);  			cr.Stroke ();  			cr.Translate (0' headerHeight + borderLineWidth);  			if (isActive)  				cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  		}  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: w = w - (2 * borderLineWidth);  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  	var unselectedCol = Convert (Style.Mid (StateType.Normal));  	var unselectedTextCol = Convert (Style.Text (StateType.Normal));  	unselectedCol.A = 0.6;  	unselectedGrad.AddColorStop (0' unselectedCol);  	unselectedCol.A = 1;  	unselectedGrad.AddColorStop (1' unselectedCol);  	var hoverCol = Convert (Style.Mid (StateType.Prelight));  	var hoverTextCol = Convert (Style.Text (StateType.Prelight));  	hoverCol.A = 0.6;  	hoverGrad.AddColorStop (0' unselectedCol);  	hoverCol.A = 1;  	hoverGrad.AddColorStop (1' unselectedCol);  	var selectedCol = Convert (Style.Mid (StateType.Normal));  	var selectedTextCol = Convert (Style.Text (StateType.Normal));  	selectedCol.A = 0.6;  	selectedGrad.AddColorStop (0' selectedCol);  	selectedCol.A = 1;  	selectedGrad.AddColorStop (1' selectedCol);  	for (int i = 0; i < sections.Count; i++) {  		var section = sections [i];  		bool isActive = activeIndex == i;  		bool isHover = hoverIndex == i;  		cr.Rectangle (0' 0' w' headerHeight);  		cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  		cr.Fill ();  		cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  		layout.SetText (section.Title);  		layout.Ellipsize = Pango.EllipsizeMode.End;  		layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  		cr.MoveTo (headerPadding' headerPadding);  		PangoCairoHelper.ShowLayout (cr' layout);  		cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  		cr.RelLineTo (w + borderLineWidth' 0.0);  		cr.SetSourceColor (borderCol);  		cr.Stroke ();  		cr.Translate (0' headerHeight + borderLineWidth);  		if (isActive)  			cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  	var unselectedCol = Convert (Style.Mid (StateType.Normal));  	var unselectedTextCol = Convert (Style.Text (StateType.Normal));  	unselectedCol.A = 0.6;  	unselectedGrad.AddColorStop (0' unselectedCol);  	unselectedCol.A = 1;  	unselectedGrad.AddColorStop (1' unselectedCol);  	var hoverCol = Convert (Style.Mid (StateType.Prelight));  	var hoverTextCol = Convert (Style.Text (StateType.Prelight));  	hoverCol.A = 0.6;  	hoverGrad.AddColorStop (0' unselectedCol);  	hoverCol.A = 1;  	hoverGrad.AddColorStop (1' unselectedCol);  	var selectedCol = Convert (Style.Mid (StateType.Normal));  	var selectedTextCol = Convert (Style.Text (StateType.Normal));  	selectedCol.A = 0.6;  	selectedGrad.AddColorStop (0' selectedCol);  	selectedCol.A = 1;  	selectedGrad.AddColorStop (1' selectedCol);  	for (int i = 0; i < sections.Count; i++) {  		var section = sections [i];  		bool isActive = activeIndex == i;  		bool isHover = hoverIndex == i;  		cr.Rectangle (0' 0' w' headerHeight);  		cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  		cr.Fill ();  		cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  		layout.SetText (section.Title);  		layout.Ellipsize = Pango.EllipsizeMode.End;  		layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  		cr.MoveTo (headerPadding' headerPadding);  		PangoCairoHelper.ShowLayout (cr' layout);  		cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  		cr.RelLineTo (w + borderLineWidth' 0.0);  		cr.SetSourceColor (borderCol);  		cr.Stroke ();  		cr.Translate (0' headerHeight + borderLineWidth);  		if (isActive)  			cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: using (LinearGradient unselectedGrad = new LinearGradient (0' 0' 0' headerHeight)' hoverGrad = new LinearGradient (0' 0' 0' headerHeight)' selectedGrad = new LinearGradient (0' 0' 0' headerHeight)) {  	var unselectedCol = Convert (Style.Mid (StateType.Normal));  	var unselectedTextCol = Convert (Style.Text (StateType.Normal));  	unselectedCol.A = 0.6;  	unselectedGrad.AddColorStop (0' unselectedCol);  	unselectedCol.A = 1;  	unselectedGrad.AddColorStop (1' unselectedCol);  	var hoverCol = Convert (Style.Mid (StateType.Prelight));  	var hoverTextCol = Convert (Style.Text (StateType.Prelight));  	hoverCol.A = 0.6;  	hoverGrad.AddColorStop (0' unselectedCol);  	hoverCol.A = 1;  	hoverGrad.AddColorStop (1' unselectedCol);  	var selectedCol = Convert (Style.Mid (StateType.Normal));  	var selectedTextCol = Convert (Style.Text (StateType.Normal));  	selectedCol.A = 0.6;  	selectedGrad.AddColorStop (0' selectedCol);  	selectedCol.A = 1;  	selectedGrad.AddColorStop (1' selectedCol);  	for (int i = 0; i < sections.Count; i++) {  		var section = sections [i];  		bool isActive = activeIndex == i;  		bool isHover = hoverIndex == i;  		cr.Rectangle (0' 0' w' headerHeight);  		cr.SetSource (isActive ? selectedGrad : (isHover ? hoverGrad : unselectedGrad));  		cr.Fill ();  		cr.SetSourceColor (isActive ? selectedTextCol : (isHover ? hoverTextCol : unselectedTextCol));  		layout.SetText (section.Title);  		layout.Ellipsize = Pango.EllipsizeMode.End;  		layout.Width = (int)((w - headerPadding - headerPadding) * Pango.Scale.PangoScale);  		cr.MoveTo (headerPadding' headerPadding);  		PangoCairoHelper.ShowLayout (cr' layout);  		cr.MoveTo (-halfLineWidth' i > activeIndex ? -halfLineWidth : headerHeight + halfLineWidth);  		cr.RelLineTo (w + borderLineWidth' 0.0);  		cr.SetSourceColor (borderCol);  		cr.Stroke ();  		cr.Translate (0' headerHeight + borderLineWidth);  		if (isActive)  			cr.Translate (0' section.Child.Allocation.Height + borderLineWidth);  	}  }  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: unselectedCol.A = 0.6;  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: hoverCol.A = 0.6;  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,OnExposeEvent,The following statement contains a magic number: selectedCol.A = 0.6;  
Magic Number,MonoDevelop.Components,SectionList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\SectionList.cs,GetSectionHeaderArea,The following statement contains a magic number: rect.Width -= borderWidth * 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,AnimatedResize,The following statement contains a magic number: if (paintSize.Width <= 15 || paintSize.Height <= 15)  	paintSize = size;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,AnimatedResize,The following statement contains a magic number: if (paintSize.Width <= 15 || paintSize.Height <= 15)  	paintSize = size;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,AnimatedResize,The following statement contains a magic number: this.Animate ("Resize"' transform' s => paintSize = s' length: 150' easing: Easing.SinInOut' finished: (x' aborted) =>  {  	if (!aborted)  		MaybeReanimate ();  });  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0) {  	if (((int)position & 0x10) != 0)  		x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		x = caret.X + (caret.Width - request.Width) / 2;  	if (x < geometry.Left)  		x = geometry.Left;  	else if (x + request.Width > geometry.Right)  		x = geometry.Right - request.Width;  	offset = caret.X + caret.Width / 2 - x;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  }  else {  	if (((int)position & 0x10) != 0)  		y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  	else if (((int)position & 0x20) != 0)  		y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  	else  		y = caret.Y + (caret.Height - request.Height) / 2;  	if (y < geometry.Top)  		y = geometry.Top;  	else if (y + request.Height > geometry.Bottom)  		y = geometry.Bottom - request.Height;  	if (MaximumYTopBound > 0)  		y = Math.Max (MaximumYTopBound' y);  	offset = caret.Y + caret.Height / 2 - y;  	if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  		offset = MinArrowSpacing + Theme.ArrowWidth / 2;  	if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  		offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  }  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x10) != 0)  	x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  else if (((int)position & 0x20) != 0)  	x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	x = caret.X + (caret.Width - request.Width) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x10) != 0)  	x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  else if (((int)position & 0x20) != 0)  	x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	x = caret.X + (caret.Width - request.Width) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x10) != 0)  	x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  else if (((int)position & 0x20) != 0)  	x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	x = caret.X + (caret.Width - request.Width) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: x = caret.X - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x20) != 0)  	x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	x = caret.X + (caret.Width - request.Width) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x20) != 0)  	x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	x = caret.X + (caret.Width - request.Width) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: x = caret.Right - request.Width + MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: x = caret.X + (caret.Width - request.Width) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: offset = caret.X + caret.Width / 2 - x;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  	offset = MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  	offset = MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: offset = MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  	offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset > request.Width - MinArrowSpacing - Theme.ArrowWidth / 2)  	offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: offset = request.Width - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x10) != 0)  	y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  else if (((int)position & 0x20) != 0)  	y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	y = caret.Y + (caret.Height - request.Height) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x10) != 0)  	y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  else if (((int)position & 0x20) != 0)  	y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	y = caret.Y + (caret.Height - request.Height) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x10) != 0)  	y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  else if (((int)position & 0x20) != 0)  	y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	y = caret.Y + (caret.Height - request.Height) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: y = caret.Y - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x20) != 0)  	y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	y = caret.Y + (caret.Height - request.Height) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (((int)position & 0x20) != 0)  	y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  else  	y = caret.Y + (caret.Height - request.Height) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: y = caret.Bottom - request.Height + MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: y = caret.Y + (caret.Height - request.Height) / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: offset = caret.Y + caret.Height / 2 - y;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  	offset = MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset - Theme.ArrowWidth / 2 < MinArrowSpacing)  	offset = MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: offset = MinArrowSpacing + Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  	offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: if (offset > request.Height - MinArrowSpacing - Theme.ArrowWidth / 2)  	offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following statement contains a magic number: offset = request.Height - MinArrowSpacing - Theme.ArrowWidth / 2;  
Magic Number,MonoDevelop.Components,ProgressControl,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ProgressControl.cs,StartAutoPulse,The following statement contains a magic number: autoPulseTimer = GLib.Timeout.Add (82' delegate {  	Pulse ();  	return true;  });  
Magic Number,MonoDevelop.Components,ProgressControl,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ProgressControl.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	int alpha = blossom.Count + tick;  	for (int i = 0; i < blossom.Count; i++) {  		var petal = blossom [i];  		context.SetSourceRGBA (0' 0' 0' 0.1 + (alpha % blossom.Count) / (double)blossom.Count);  		context.MoveTo (petal.Start);  		context.LineTo (petal.End);  		context.Stroke ();  		alpha--;  	}  }  
Magic Number,MonoDevelop.Components,ProgressControl,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ProgressControl.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < blossom.Count; i++) {  	var petal = blossom [i];  	context.SetSourceRGBA (0' 0' 0' 0.1 + (alpha % blossom.Count) / (double)blossom.Count);  	context.MoveTo (petal.Start);  	context.LineTo (petal.End);  	context.Stroke ();  	alpha--;  }  
Magic Number,MonoDevelop.Components,ProgressControl,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ProgressControl.cs,OnExposeEvent,The following statement contains a magic number: context.SetSourceRGBA (0' 0' 0' 0.1 + (alpha % blossom.Count) / (double)blossom.Count);  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: if (label == null) {  	Gtk.Alignment al = new Gtk.Alignment (0.5f' 0.5f' 1f' 1f);  	al.SetPadding (6' 6' 6' 6);  	label = new Gtk.Label ();  	al.Add (label);  	ContentBox.Add (al);  	al.ShowAll ();  }  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: if (label == null) {  	Gtk.Alignment al = new Gtk.Alignment (0.5f' 0.5f' 1f' 1f);  	al.SetPadding (6' 6' 6' 6);  	label = new Gtk.Label ();  	al.Add (label);  	ContentBox.Add (al);  	al.ShowAll ();  }  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: if (label == null) {  	Gtk.Alignment al = new Gtk.Alignment (0.5f' 0.5f' 1f' 1f);  	al.SetPadding (6' 6' 6' 6);  	label = new Gtk.Label ();  	al.Add (label);  	ContentBox.Add (al);  	al.ShowAll ();  }  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: if (label == null) {  	Gtk.Alignment al = new Gtk.Alignment (0.5f' 0.5f' 1f' 1f);  	al.SetPadding (6' 6' 6' 6);  	label = new Gtk.Label ();  	al.Add (label);  	ContentBox.Add (al);  	al.ShowAll ();  }  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AddLabel,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AdjustSize,The following statement contains a magic number: if (label.SizeRequest ().Width > 300) {  	label.Wrap = true;  	label.WidthRequest = 300;  }  else {  	label.Wrap = false;  	label.WidthRequest = -1;  }  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AdjustSize,The following statement contains a magic number: if (label.SizeRequest ().Width > 300) {  	label.Wrap = true;  	label.WidthRequest = 300;  }  else {  	label.Wrap = false;  	label.WidthRequest = -1;  }  
Magic Number,MonoDevelop.Components,TooltipPopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\TooltipPopoverWindow.cs,AdjustSize,The following statement contains a magic number: label.WidthRequest = 300;  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,HandleSizeAllocated,The following statement contains a magic number: if (parent.Child1 != null && parent.Child1.Visible && parent.Child2 != null && parent.Child2.Visible) {  	Show ();  	int centerSize = Child == null ? GrabAreaSize / 2 : 0;  	if (horizontal)  		SizeAllocate (new Gdk.Rectangle (parent.Child1.Allocation.X + parent.Child1.Allocation.Width - centerSize' args.Allocation.Y' GrabAreaSize' args.Allocation.Height));  	else  		SizeAllocate (new Gdk.Rectangle (args.Allocation.X' parent.Child1.Allocation.Y + parent.Child1.Allocation.Height - centerSize' args.Allocation.Width' GrabAreaSize));  }  else  	Hide ();  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  	if (horizontal) {  		int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  	else {  		int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  	if (horizontal) {  		int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  	else {  		int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  	if (horizontal) {  		int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  	else {  		int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (dragging) {  	if (horizontal) {  		int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  	else {  		int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  		parent.Position = newpos >= 10 ? newpos : 10;  	}  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (horizontal) {  	int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  else {  	int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (horizontal) {  	int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  else {  	int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (horizontal) {  	int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  else {  	int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (horizontal) {  	int newpos = initialPanedPos + ((int)evnt.XRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  else {  	int newpos = initialPanedPos + ((int)evnt.YRoot - initialPos);  	parent.Position = newpos >= 10 ? newpos : 10;  }  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: parent.Position = newpos >= 10 ? newpos : 10;  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: parent.Position = newpos >= 10 ? newpos : 10;  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: parent.Position = newpos >= 10 ? newpos : 10;  
Magic Number,MonoDevelop.Components,CustomPanedHandle,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\HPanedThin.cs,OnMotionNotifyEvent,The following statement contains a magic number: parent.Position = newpos >= 10 ? newpos : 10;  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: CornerRadius = 4;  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: Padding = 6;  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: ArrowWidth = 10;  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: ArrowLength = 5;  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: BorderColor = new Cairo.Color (0.7' 0.7' 0.7);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: BorderColor = new Cairo.Color (0.7' 0.7' 0.7);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,PopoverWindowTheme,The following statement contains a magic number: BorderColor = new Cairo.Color (0.7' 0.7' 0.7);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetSchemeColors,The following statement contains a magic number: TopColor = scheme.TooltipText.Background.AddLight (0.03);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if (ShowArrow) {  	double apos = ArrowOffset;  	double x = region.X + 0.5' y = region.Y + 0.5' w = region.Width - 1' h = region.Height - 1;  	context.MoveTo (x + r' y);  	if ((arrowPosition & PopupPosition.Top) != 0) {  		context.LineTo (x + apos - ArrowWidth / 2' y);  		context.RelLineTo (ArrowWidth / 2' -ArrowLength);  		context.RelLineTo (ArrowWidth / 2' ArrowLength);  	}  	context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  	if ((arrowPosition & PopupPosition.Right) != 0) {  		context.LineTo (x + w' y + apos - ArrowWidth / 2);  		context.RelLineTo (ArrowLength' ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' ArrowWidth / 2);  	}  	context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  	if ((arrowPosition & PopupPosition.Bottom) != 0) {  		context.LineTo (x + apos + ArrowWidth / 2' y + h);  		context.RelLineTo (-ArrowWidth / 2' ArrowLength);  		context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  	}  	context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  	if ((arrowPosition & PopupPosition.Left) != 0) {  		context.LineTo (x' y + apos + ArrowWidth / 2);  		context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  		context.RelLineTo (ArrowLength' -ArrowWidth / 2);  	}  	context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  }  else {  	CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Top) != 0) {  	context.LineTo (x + apos - ArrowWidth / 2' y);  	context.RelLineTo (ArrowWidth / 2' -ArrowLength);  	context.RelLineTo (ArrowWidth / 2' ArrowLength);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Top) != 0) {  	context.LineTo (x + apos - ArrowWidth / 2' y);  	context.RelLineTo (ArrowWidth / 2' -ArrowLength);  	context.RelLineTo (ArrowWidth / 2' ArrowLength);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Top) != 0) {  	context.LineTo (x + apos - ArrowWidth / 2' y);  	context.RelLineTo (ArrowWidth / 2' -ArrowLength);  	context.RelLineTo (ArrowWidth / 2' ArrowLength);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.LineTo (x + apos - ArrowWidth / 2' y);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (ArrowWidth / 2' -ArrowLength);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (ArrowWidth / 2' ArrowLength);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.Arc (x + w - r' y + r' r' Math.PI * 1.5' Math.PI * 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Right) != 0) {  	context.LineTo (x + w' y + apos - ArrowWidth / 2);  	context.RelLineTo (ArrowLength' ArrowWidth / 2);  	context.RelLineTo (-ArrowLength' ArrowWidth / 2);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Right) != 0) {  	context.LineTo (x + w' y + apos - ArrowWidth / 2);  	context.RelLineTo (ArrowLength' ArrowWidth / 2);  	context.RelLineTo (-ArrowLength' ArrowWidth / 2);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Right) != 0) {  	context.LineTo (x + w' y + apos - ArrowWidth / 2);  	context.RelLineTo (ArrowLength' ArrowWidth / 2);  	context.RelLineTo (-ArrowLength' ArrowWidth / 2);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.LineTo (x + w' y + apos - ArrowWidth / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (ArrowLength' ArrowWidth / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (-ArrowLength' ArrowWidth / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.Arc (x + w - r' y + h - r' r' 0' Math.PI * 0.5);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Bottom) != 0) {  	context.LineTo (x + apos + ArrowWidth / 2' y + h);  	context.RelLineTo (-ArrowWidth / 2' ArrowLength);  	context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Bottom) != 0) {  	context.LineTo (x + apos + ArrowWidth / 2' y + h);  	context.RelLineTo (-ArrowWidth / 2' ArrowLength);  	context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Bottom) != 0) {  	context.LineTo (x + apos + ArrowWidth / 2' y + h);  	context.RelLineTo (-ArrowWidth / 2' ArrowLength);  	context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.LineTo (x + apos + ArrowWidth / 2' y + h);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (-ArrowWidth / 2' ArrowLength);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (-ArrowWidth / 2' -ArrowLength);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.Arc (x + r' y + h - r' r' Math.PI * 0.5' Math.PI);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Left) != 0) {  	context.LineTo (x' y + apos + ArrowWidth / 2);  	context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  	context.RelLineTo (ArrowLength' -ArrowWidth / 2);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Left) != 0) {  	context.LineTo (x' y + apos + ArrowWidth / 2);  	context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  	context.RelLineTo (ArrowLength' -ArrowWidth / 2);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: if ((arrowPosition & PopupPosition.Left) != 0) {  	context.LineTo (x' y + apos + ArrowWidth / 2);  	context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  	context.RelLineTo (ArrowLength' -ArrowWidth / 2);  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.LineTo (x' y + apos + ArrowWidth / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (-ArrowLength' -ArrowWidth / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.RelLineTo (ArrowLength' -ArrowWidth / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: context.Arc (x + r' y + r' r' Math.PI' Math.PI * 1.5);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetBorderPath,The following statement contains a magic number: CairoExtensions.RoundedRectangle (context' region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' r);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,SetupPagerText,The following statement contains a magic number: pl.FontDescription.AbsoluteSize = Pango.Units.FromPixels (Styles.PopoverWindow.PagerHeight - 5);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerText,The following statement contains a magic number: context.MoveTo (bounds.X + (bounds.Width - w) / 2' bounds.Y + (bounds.Height - h) / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerText,The following statement contains a magic number: context.MoveTo (bounds.X + (bounds.Width - w) / 2' bounds.Y + (bounds.Height - h) / 2);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerBackground,The following statement contains a magic number: CairoExtensions.RoundedRectangle (context' bounds.X + .5' bounds.Y + .5' bounds.Width - 1' bounds.Height - 1' CornerRadius' CairoCorners.BottomLeft);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerBackground,The following statement contains a magic number: CairoExtensions.RoundedRectangle (context' bounds.X + .5' bounds.Y + .5' bounds.Width - 1' bounds.Height - 1' CornerRadius' CairoCorners.BottomLeft);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: switch (direction) {  case ArrowType.Up:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Down:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y + bounds.Height);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.ClosePath ();  	break;  case ArrowType.Left:  	context.MoveTo (bounds.X' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Right:  	context.MoveTo (bounds.X + bounds.Width' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  default:  	return;  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: switch (direction) {  case ArrowType.Up:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Down:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y + bounds.Height);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.ClosePath ();  	break;  case ArrowType.Left:  	context.MoveTo (bounds.X' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Right:  	context.MoveTo (bounds.X + bounds.Width' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  default:  	return;  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: switch (direction) {  case ArrowType.Up:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Down:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y + bounds.Height);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.ClosePath ();  	break;  case ArrowType.Left:  	context.MoveTo (bounds.X' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Right:  	context.MoveTo (bounds.X + bounds.Width' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  default:  	return;  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: switch (direction) {  case ArrowType.Up:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Down:  	context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y + bounds.Height);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.ClosePath ();  	break;  case ArrowType.Left:  	context.MoveTo (bounds.X' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X + bounds.Width' bounds.Y);  	context.LineTo (bounds.X + bounds.Width' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  case ArrowType.Right:  	context.MoveTo (bounds.X + bounds.Width' bounds.Y + bounds.Height / 2.0);  	context.LineTo (bounds.X' bounds.Y);  	context.LineTo (bounds.X' bounds.Y + bounds.Height);  	context.ClosePath ();  	break;  default:  	return;  }  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: context.MoveTo (bounds.X + bounds.Width / 2.0' bounds.Y + bounds.Height);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: context.MoveTo (bounds.X' bounds.Y + bounds.Height / 2.0);  
Magic Number,MonoDevelop.Components,PopoverWindowTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindowTheme.cs,RenderPagerArrow,The following statement contains a magic number: context.MoveTo (bounds.X + bounds.Width' bounds.Y + bounds.Height / 2.0);  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,AnimatedResize,The following statement contains a magic number: if (paintSize.Width <= 15 || paintSize.Height <= 15)  	paintSize = size;  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,AnimatedResize,The following statement contains a magic number: if (paintSize.Width <= 15 || paintSize.Height <= 15)  	paintSize = size;  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,AnimatedResize,The following statement contains a magic number: this.Animate ("Resize"' transform' s => paintSize = s' length: 150' easing: Easing.SinInOut' finished: (x' aborted) =>  {  	if (!aborted)  		MaybeReanimate ();  });  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,OnExposeEvent,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0)  	theme.ArrowOffset = Allocation.Width / 2;  else  	theme.ArrowOffset = Allocation.Height / 2;  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,OnExposeEvent,The following statement contains a magic number: if ((position & PopupPosition.Top) != 0 || (position & PopupPosition.Bottom) != 0)  	theme.ArrowOffset = Allocation.Width / 2;  else  	theme.ArrowOffset = Allocation.Height / 2;  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,OnExposeEvent,The following statement contains a magic number: theme.ArrowOffset = Allocation.Width / 2;  
Magic Number,MonoDevelop.Components,PopoverWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWidget.cs,OnExposeEvent,The following statement contains a magic number: theme.ArrowOffset = Allocation.Height / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (yrangeChanged) {  	FixOrigins ();  	int right = rwidth - 2 - AreaBorderWidth;  	left = AreaBorderWidth;  	left += MeasureAxisSize (AxisPosition.Left) + 1;  	right -= MeasureAxisSize (AxisPosition.Right) + 1;  	yrangeChanged = false;  	width = right - left + 1;  	if (width <= 0)  		width = 1;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (xrangeChanged) {  	FixOrigins ();  	int bottom = rheight - 2 - AreaBorderWidth;  	top = AreaBorderWidth;  	bottom -= MeasureAxisSize (AxisPosition.Bottom);  	top += MeasureAxisSize (AxisPosition.Top);  	// Make room for cursor handles  	foreach (ChartCursor cursor in cursors) {  		if (cursor.Dimension == AxisDimension.X && top - AreaBorderWidth < cursor.HandleSize)  			top = cursor.HandleSize + AreaBorderWidth;  	}  	xrangeChanged = false;  	height = bottom - top + 1;  	if (height <= 0)  		height = 1;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (backgroundDisplay == BackgroundDisplay.Gradient) {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	using (var pat = new Cairo.LinearGradient (left - 1' top - 1' left - 1' height + 2)) {  		pat.AddColorStop (0' backroundColor);  		Cairo.Color endc = new Cairo.Color (1' 1' 1);  		pat.AddColorStop (1' endc);  		ctx.SetSource (pat);  		ctx.Fill ();  	}  }  else {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	ctx.SetSourceColor (backroundColor);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (backgroundDisplay == BackgroundDisplay.Gradient) {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	using (var pat = new Cairo.LinearGradient (left - 1' top - 1' left - 1' height + 2)) {  		pat.AddColorStop (0' backroundColor);  		Cairo.Color endc = new Cairo.Color (1' 1' 1);  		pat.AddColorStop (1' endc);  		ctx.SetSource (pat);  		ctx.Fill ();  	}  }  else {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	ctx.SetSourceColor (backroundColor);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (backgroundDisplay == BackgroundDisplay.Gradient) {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	using (var pat = new Cairo.LinearGradient (left - 1' top - 1' left - 1' height + 2)) {  		pat.AddColorStop (0' backroundColor);  		Cairo.Color endc = new Cairo.Color (1' 1' 1);  		pat.AddColorStop (1' endc);  		ctx.SetSource (pat);  		ctx.Fill ();  	}  }  else {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	ctx.SetSourceColor (backroundColor);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (backgroundDisplay == BackgroundDisplay.Gradient) {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	using (var pat = new Cairo.LinearGradient (left - 1' top - 1' left - 1' height + 2)) {  		pat.AddColorStop (0' backroundColor);  		Cairo.Color endc = new Cairo.Color (1' 1' 1);  		pat.AddColorStop (1' endc);  		ctx.SetSource (pat);  		ctx.Fill ();  	}  }  else {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	ctx.SetSourceColor (backroundColor);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (backgroundDisplay == BackgroundDisplay.Gradient) {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	using (var pat = new Cairo.LinearGradient (left - 1' top - 1' left - 1' height + 2)) {  		pat.AddColorStop (0' backroundColor);  		Cairo.Color endc = new Cairo.Color (1' 1' 1);  		pat.AddColorStop (1' endc);  		ctx.SetSource (pat);  		ctx.Fill ();  	}  }  else {  	ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  	ctx.SetSourceColor (backroundColor);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: using (var pat = new Cairo.LinearGradient (left - 1' top - 1' left - 1' height + 2)) {  	pat.AddColorStop (0' backroundColor);  	Cairo.Color endc = new Cairo.Color (1' 1' 1);  	pat.AddColorStop (1' endc);  	ctx.SetSource (pat);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: ctx.Rectangle (left - 1' top - 1' width + 2' height + 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: win.DrawRectangle (Style.BlackGC' false' left - AreaBorderWidth' top - AreaBorderWidth' width + AreaBorderWidth * 2' height + AreaBorderWidth * 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: win.DrawRectangle (Style.BlackGC' false' left - AreaBorderWidth' top - AreaBorderWidth' width + AreaBorderWidth * 2' height + AreaBorderWidth * 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (enableSelection) {  	int sx' sy' ex' ey;  	GetPoint (selectionStart.Value' selectionStart.Value' out sx' out sy);  	GetPoint (selectionEnd.Value' selectionEnd.Value' out ex' out ey);  	if (sx > ex) {  		int tmp = sx;  		sx = ex;  		ex = tmp;  	}  	Gdk.GC sgc = new Gdk.GC (GdkWindow);  	sgc.RgbFgColor = new Color (225' 225' 225);  	win.DrawRectangle (sgc' true' sx' top' ex - sx' height + 1);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (enableSelection) {  	int sx' sy' ex' ey;  	GetPoint (selectionStart.Value' selectionStart.Value' out sx' out sy);  	GetPoint (selectionEnd.Value' selectionEnd.Value' out ex' out ey);  	if (sx > ex) {  		int tmp = sx;  		sx = ex;  		ex = tmp;  	}  	Gdk.GC sgc = new Gdk.GC (GdkWindow);  	sgc.RgbFgColor = new Color (225' 225' 225);  	win.DrawRectangle (sgc' true' sx' top' ex - sx' height + 1);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: if (enableSelection) {  	int sx' sy' ex' ey;  	GetPoint (selectionStart.Value' selectionStart.Value' out sx' out sy);  	GetPoint (selectionEnd.Value' selectionEnd.Value' out ex' out ey);  	if (sx > ex) {  		int tmp = sx;  		sx = ex;  		ex = tmp;  	}  	Gdk.GC sgc = new Gdk.GC (GdkWindow);  	sgc.RgbFgColor = new Color (225' 225' 225);  	win.DrawRectangle (sgc' true' sx' top' ex - sx' height + 1);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: sgc.RgbFgColor = new Color (225' 225' 225);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: sgc.RgbFgColor = new Color (225' 225' 225);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnExposeEvent,The following statement contains a magic number: sgc.RgbFgColor = new Color (225' 225' 225);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawAxis,The following statement contains a magic number: if (enumBig == null) {  	DrawTicks (win' gc' enumSmall' ax.Position' ax.Dimension' ax.TickSize' ax.ShowLabels);  }  else {  	DrawTicks (win' gc' enumSmall' ax.Position' ax.Dimension' ax.TickSize / 2' false);  	DrawTicks (win' gc' enumBig' ax.Position' ax.Dimension' ax.TickSize' ax.ShowLabels);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawAxis,The following statement contains a magic number: DrawTicks (win' gc' enumSmall' ax.Position' ax.Dimension' ax.TickSize / 2' false);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	lastPosLabel = reverseXAxis ? left + width + MinLabelGapX : left - MinLabelGapX;  	lastPos = left - minTickStep * 2;  }  else {  	lastPosLabel = reverseYAxis ? top - MinLabelGapY : rheight + MinLabelGapY;  	lastPos = top + height + minTickStep * 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	lastPosLabel = reverseXAxis ? left + width + MinLabelGapX : left - MinLabelGapX;  	lastPos = left - minTickStep * 2;  }  else {  	lastPosLabel = reverseYAxis ? top - MinLabelGapY : rheight + MinLabelGapY;  	lastPos = top + height + minTickStep * 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: lastPos = left - minTickStep * 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: lastPos = top + height + minTickStep * 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: for (; e.CurrentValue <= end; e.MoveNext ()) {  	int px' py;  	int tw = 0' th = 0;  	int tick = tickSize;  	GetPoint (e.CurrentValue' e.CurrentValue' out px' out py);  	if (showLabels) {  		layout.SetMarkup (e.CurrentLabel);  		layout.GetPixelSize (out tw' out th);  	}  	if (isX) {  		if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  			continue;  		lastPos = px;  		bool labelFits = false;  		if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  			lastPosLabel = px;  			lastTw = tw;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top' px' top + tick);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' px' top + height' px' top + height - tick);  		}  	}  	else {  		if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  			continue;  		lastPos = py;  		bool labelFits = false;  		if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  			lastPosLabel = py;  			lastTw = th;  			labelFits = true;  		}  		if (isTop) {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left + width' py' left + width - tick' py);  		}  		else {  			if (showLabels) {  				if (labelFits)  					win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  				else  					tick = tick / 2;  			}  			win.DrawLine (gc' left' py' left + tick' py);  		}  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isX) {  	if (Math.Abs ((long)px - (long)lastPos) < minTickStep || px < left || px > left + width)  		continue;  	lastPos = px;  	bool labelFits = false;  	if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  		lastPosLabel = px;  		lastTw = tw;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top' px' top + tick);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' px' top + height' px' top + height - tick);  	}  }  else {  	if (Math.Abs ((long)lastPos - (long)py) < minTickStep || py < top || py > top + height)  		continue;  	lastPos = py;  	bool labelFits = false;  	if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  		lastPosLabel = py;  		lastTw = th;  		labelFits = true;  	}  	if (isTop) {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left + width' py' left + width - tick' py);  	}  	else {  		if (showLabels) {  			if (labelFits)  				win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  			else  				tick = tick / 2;  		}  		win.DrawLine (gc' left' py' left + tick' py);  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  	lastPosLabel = px;  	lastTw = tw;  	labelFits = true;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if ((Math.Abs (px - lastPosLabel) - (tw / 2) - (lastTw / 2)) >= MinLabelGapX) {  	lastPosLabel = px;  	lastTw = tw;  	labelFits = true;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top' px' top + tick);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top + height' px' top + height - tick);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top' px' top + tick);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top + height' px' top + height - tick);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top' px' top + tick);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top + height' px' top + height - tick);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top' px' top + tick);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' px' top + height' px' top + height - tick);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: win.DrawLayout (gc' px - (tw / 2)' top - AreaBorderWidth - th' layout);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: win.DrawLayout (gc' px - (tw / 2)' top + height + AreaBorderWidth' layout);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  	lastPosLabel = py;  	lastTw = th;  	labelFits = true;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if ((Math.Abs (py - lastPosLabel) - (th / 2) - (lastTw / 2)) >= MinLabelGapY) {  	lastPosLabel = py;  	lastTw = th;  	labelFits = true;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left + width' py' left + width - tick' py);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left' py' left + tick' py);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left + width' py' left + width - tick' py);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left' py' left + tick' py);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left + width' py' left + width - tick' py);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left' py' left + tick' py);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (isTop) {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left + width' py' left + width - tick' py);  }  else {  	if (showLabels) {  		if (labelFits)  			win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  		else  			tick = tick / 2;  	}  	win.DrawLine (gc' left' py' left + tick' py);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: win.DrawLayout (gc' left + width + AreaBorderWidth + 1' py - (th / 2)' layout);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (showLabels) {  	if (labelFits)  		win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  	else  		tick = tick / 2;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: if (labelFits)  	win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  else  	tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: win.DrawLayout (gc' left - AreaBorderWidth - tw - 1' py - (th / 2)' layout);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawTicks,The following statement contains a magic number: tick = tick / 2;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	int cy = top - AreaBorderWidth - 1;  	Point[] ps = new Point[4];  	ps [0] = new Point (x' cy);  	ps [1] = new Point (x + (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [3] = ps [0];  	GdkWindow.DrawPolygon (gc' false' ps);  	if (activeCursor == cursor)  		GdkWindow.DrawPolygon (gc' true' ps);  	GdkWindow.DrawLine (gc' x' top' x' top + height);  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	int cy = top - AreaBorderWidth - 1;  	Point[] ps = new Point[4];  	ps [0] = new Point (x' cy);  	ps [1] = new Point (x + (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [3] = ps [0];  	GdkWindow.DrawPolygon (gc' false' ps);  	if (activeCursor == cursor)  		GdkWindow.DrawPolygon (gc' true' ps);  	GdkWindow.DrawLine (gc' x' top' x' top + height);  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	int cy = top - AreaBorderWidth - 1;  	Point[] ps = new Point[4];  	ps [0] = new Point (x' cy);  	ps [1] = new Point (x + (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [3] = ps [0];  	GdkWindow.DrawPolygon (gc' false' ps);  	if (activeCursor == cursor)  		GdkWindow.DrawPolygon (gc' true' ps);  	GdkWindow.DrawLine (gc' x' top' x' top + height);  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	int cy = top - AreaBorderWidth - 1;  	Point[] ps = new Point[4];  	ps [0] = new Point (x' cy);  	ps [1] = new Point (x + (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [3] = ps [0];  	GdkWindow.DrawPolygon (gc' false' ps);  	if (activeCursor == cursor)  		GdkWindow.DrawPolygon (gc' true' ps);  	GdkWindow.DrawLine (gc' x' top' x' top + height);  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	int cy = top - AreaBorderWidth - 1;  	Point[] ps = new Point[4];  	ps [0] = new Point (x' cy);  	ps [1] = new Point (x + (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  	ps [3] = ps [0];  	GdkWindow.DrawPolygon (gc' false' ps);  	if (activeCursor == cursor)  		GdkWindow.DrawPolygon (gc' true' ps);  	GdkWindow.DrawLine (gc' x' top' x' top + height);  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: ps [1] = new Point (x + (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: ps [2] = new Point (x - (cursor.HandleSize / 2)' cy - cursor.HandleSize + 1);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursor,The following statement contains a magic number: ps [3] = ps [0];  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	string text;  	if (cursor.LabelAxis != null) {  		double minStep = GetMinTickStep (cursor.Dimension);  		TickEnumerator tenum = cursor.LabelAxis.GetTickEnumerator (minStep);  		tenum.Init (cursor.Value);  		text = tenum.CurrentLabel;  	}  	else {  		text = GetValueLabel (cursor.Dimension' cursor.Value);  	}  	if (text != null && text.Length > 0) {  		Pango.Layout layout = new Pango.Layout (this.PangoContext);  		layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  		layout.SetMarkup (text);  		int tw' th;  		layout.GetPixelSize (out tw' out th);  		int tl = x - tw / 2;  		int tt = top + 4;  		if (tl + tw + 2 >= left + width)  			tl = left + width - tw - 1;  		if (tl < left + 1)  			tl = left + 1;  		GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  		GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  		GdkWindow.DrawLayout (gc' tl' tt' layout);  	}  }  else {  	throw new NotSupportedException ();  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (text != null && text.Length > 0) {  	Pango.Layout layout = new Pango.Layout (this.PangoContext);  	layout.FontDescription = Pango.FontDescription.FromString ("Tahoma 8");  	layout.SetMarkup (text);  	int tw' th;  	layout.GetPixelSize (out tw' out th);  	int tl = x - tw / 2;  	int tt = top + 4;  	if (tl + tw + 2 >= left + width)  		tl = left + width - tw - 1;  	if (tl < left + 1)  		tl = left + 1;  	GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  	GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  	GdkWindow.DrawLayout (gc' tl' tt' layout);  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: if (tl + tw + 2 >= left + width)  	tl = left + width - tw - 1;  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: GdkWindow.DrawRectangle (Style.WhiteGC' true' tl - 1' tt - 1' tw + 2' th + 2);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,DrawCursorLabel,The following statement contains a magic number: GdkWindow.DrawRectangle (Style.BlackGC' false' tl - 2' tt - 2' tw + 3' th + 3);  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: if (!ev.TriggersContextMenu () && ev.Button == 1) {  	foreach (ChartCursor cursor in cursors) {  		int cx' cy;  		GetPoint (cursor.Value' cursor.Value' out cx' out cy);  		if (cursor.Dimension == AxisDimension.X) {  			if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  				activeCursor = cursor;  				draggingCursor = true;  				activeCursor.ShowValueLabel = true;  				QueueDraw ();  				break;  			}  		}  		else {  			// Implement  		}  	}  	if (enableSelection && !draggingCursor) {  		selectionStart.Visible = true;  		selectionEnd.Visible = true;  		double x' y;  		GetValue ((int)ev.X' (int)ev.Y' out x' out y);  		// avoid cursor swaping  		ChartCursor c1 = selectionStart;  		ChartCursor c2 = selectionEnd;  		c1.Value = x;  		c2.Value = x;  		activeCursor = selectionEnd;  		activeCursor.ShowValueLabel = true;  		draggingCursor = true;  		QueueDraw ();  	}  	if (draggingCursor)  		return true;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: if (!ev.TriggersContextMenu () && ev.Button == 1) {  	foreach (ChartCursor cursor in cursors) {  		int cx' cy;  		GetPoint (cursor.Value' cursor.Value' out cx' out cy);  		if (cursor.Dimension == AxisDimension.X) {  			if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  				activeCursor = cursor;  				draggingCursor = true;  				activeCursor.ShowValueLabel = true;  				QueueDraw ();  				break;  			}  		}  		else {  			// Implement  		}  	}  	if (enableSelection && !draggingCursor) {  		selectionStart.Visible = true;  		selectionEnd.Visible = true;  		double x' y;  		GetValue ((int)ev.X' (int)ev.Y' out x' out y);  		// avoid cursor swaping  		ChartCursor c1 = selectionStart;  		ChartCursor c2 = selectionEnd;  		c1.Value = x;  		c2.Value = x;  		activeCursor = selectionEnd;  		activeCursor.ShowValueLabel = true;  		draggingCursor = true;  		QueueDraw ();  	}  	if (draggingCursor)  		return true;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: foreach (ChartCursor cursor in cursors) {  	int cx' cy;  	GetPoint (cursor.Value' cursor.Value' out cx' out cy);  	if (cursor.Dimension == AxisDimension.X) {  		if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  			activeCursor = cursor;  			draggingCursor = true;  			activeCursor.ShowValueLabel = true;  			QueueDraw ();  			break;  		}  	}  	else {  		// Implement  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: foreach (ChartCursor cursor in cursors) {  	int cx' cy;  	GetPoint (cursor.Value' cursor.Value' out cx' out cy);  	if (cursor.Dimension == AxisDimension.X) {  		if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  			activeCursor = cursor;  			draggingCursor = true;  			activeCursor.ShowValueLabel = true;  			QueueDraw ();  			break;  		}  	}  	else {  		// Implement  	}  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  		activeCursor = cursor;  		draggingCursor = true;  		activeCursor.ShowValueLabel = true;  		QueueDraw ();  		break;  	}  }  else {  	// Implement  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: if (cursor.Dimension == AxisDimension.X) {  	if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  		activeCursor = cursor;  		draggingCursor = true;  		activeCursor.ShowValueLabel = true;  		QueueDraw ();  		break;  	}  }  else {  	// Implement  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  	activeCursor = cursor;  	draggingCursor = true;  	activeCursor.ShowValueLabel = true;  	QueueDraw ();  	break;  }  
Magic Number,MonoDevelop.Components.Chart,BasicChart,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\BasicChart.cs,OnButtonPressEvent,The following statement contains a magic number: if (Math.Abs (ev.X - cx) <= 2 || (ev.Y < top && (Math.Abs (ev.X - cx) <= cursor.HandleSize / 2))) {  	activeCursor = cursor;  	draggingCursor = true;  	activeCursor.ShowValueLabel = true;  	QueueDraw ();  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30 * 365)  	return null;  else if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay * 30)  	scale = 7;  else if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = 7;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerDay)  	scale = 6;  else if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = 6;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerHour)  	scale = 5;  else if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = 5;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute * 15)  	scale = 4;  else if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = 4;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerMinute)  	scale = 3;  else if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = 3;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > TimeSpan.TicksPerSecond * 15)  	scale = 2;  else if (val > TimeSpan.TicksPerSecond)  	scale = 1;  else  	scale = 0;  
Magic Number,MonoDevelop.Components.Chart,DateTimeAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = 2;  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: switch (scale) {  case 0:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' t.Second);  	break;  case 1:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  	break;  case 2:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' 0);  	break;  case 3:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  	break;  case 4:  	nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' 0' 0);  	break;  case 5:  	nt = new DateTime (t.Year' t.Month' t.Day);  	break;  case 6:  	nt = new DateTime (t.Year' t.Month' 1);  	break;  default:  	nt = new DateTime (t.Year' 1' 1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' t.Minute' (t.Second / 15) * 15);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,Init,The following statement contains a magic number: nt = new DateTime (t.Year' t.Month' t.Day' t.Hour' (t.Minute / 15) * 15' 0);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: current = current.AddSeconds (15);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following statement contains a magic number: current = current.AddMinutes (15);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: current = current.AddSeconds (-15);  
Magic Number,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following statement contains a magic number: current = current.AddMinutes (-15);  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: unchecked {  	val = (long)minTickStep;  	long red = 10;  	while (val > red)  		red = red * 10;  	long scale;  	if (val <= 1)  		scale = 1;  	else if (val > red / 2)  		scale = red;  	else if (val > red / 4)  		scale = red / 2;  	else  		scale = red / 4;  	return new IntegerTickEnumerator (scale);  }  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: unchecked {  	val = (long)minTickStep;  	long red = 10;  	while (val > red)  		red = red * 10;  	long scale;  	if (val <= 1)  		scale = 1;  	else if (val > red / 2)  		scale = red;  	else if (val > red / 4)  		scale = red / 2;  	else  		scale = red / 4;  	return new IntegerTickEnumerator (scale);  }  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: unchecked {  	val = (long)minTickStep;  	long red = 10;  	while (val > red)  		red = red * 10;  	long scale;  	if (val <= 1)  		scale = 1;  	else if (val > red / 2)  		scale = red;  	else if (val > red / 4)  		scale = red / 2;  	else  		scale = red / 4;  	return new IntegerTickEnumerator (scale);  }  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: unchecked {  	val = (long)minTickStep;  	long red = 10;  	while (val > red)  		red = red * 10;  	long scale;  	if (val <= 1)  		scale = 1;  	else if (val > red / 2)  		scale = red;  	else if (val > red / 4)  		scale = red / 2;  	else  		scale = red / 4;  	return new IntegerTickEnumerator (scale);  }  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: unchecked {  	val = (long)minTickStep;  	long red = 10;  	while (val > red)  		red = red * 10;  	long scale;  	if (val <= 1)  		scale = 1;  	else if (val > red / 2)  		scale = red;  	else if (val > red / 4)  		scale = red / 2;  	else  		scale = red / 4;  	return new IntegerTickEnumerator (scale);  }  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: unchecked {  	val = (long)minTickStep;  	long red = 10;  	while (val > red)  		red = red * 10;  	long scale;  	if (val <= 1)  		scale = 1;  	else if (val > red / 2)  		scale = red;  	else if (val > red / 4)  		scale = red / 2;  	else  		scale = red / 4;  	return new IntegerTickEnumerator (scale);  }  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: while (val > red)  	red = red * 10;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: red = red * 10;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val <= 1)  	scale = 1;  else if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val <= 1)  	scale = 1;  else if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val <= 1)  	scale = 1;  else if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val <= 1)  	scale = 1;  else if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 2)  	scale = red;  else if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: if (val > red / 4)  	scale = red / 2;  else  	scale = red / 4;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = red / 2;  
Magic Number,MonoDevelop.Components.Chart,IntegerAxis,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\IntegerAxis.cs,CreateTickEnumerator,The following statement contains a magic number: scale = red / 4;  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: if (secs < 10)  	newWait = 500;  else if (secs < 30)  	newWait = 700;  else {  	// The application seems to be idle. Stop the status updater and  	// start a pasive wait for user interaction  	StartWaitingForUserInteraction ();  	return false;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: if (secs < 10)  	newWait = 500;  else if (secs < 30)  	newWait = 700;  else {  	// The application seems to be idle. Stop the status updater and  	// start a pasive wait for user interaction  	StartWaitingForUserInteraction ();  	return false;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: if (secs < 10)  	newWait = 500;  else if (secs < 30)  	newWait = 700;  else {  	// The application seems to be idle. Stop the status updater and  	// start a pasive wait for user interaction  	StartWaitingForUserInteraction ();  	return false;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: if (secs < 10)  	newWait = 500;  else if (secs < 30)  	newWait = 700;  else {  	// The application seems to be idle. Stop the status updater and  	// start a pasive wait for user interaction  	StartWaitingForUserInteraction ();  	return false;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: newWait = 500;  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: if (secs < 30)  	newWait = 700;  else {  	// The application seems to be idle. Stop the status updater and  	// start a pasive wait for user interaction  	StartWaitingForUserInteraction ();  	return false;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: if (secs < 30)  	newWait = 700;  else {  	// The application seems to be idle. Stop the status updater and  	// start a pasive wait for user interaction  	StartWaitingForUserInteraction ();  	return false;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateStatus,The following statement contains a magic number: newWait = 700;  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateAppFocusStatus,The following statement contains a magic number: if (hasFocus != appHasFocus) {  	// The last focused window has been destroyed. Wait a few ms since another app's window  	// may gain focus again  	DateTime now = DateTime.Now;  	if (focusCheckDelayTimeout == DateTime.MinValue) {  		focusCheckDelayTimeout = now.AddMilliseconds (100);  		return;  	}  	if (now < focusCheckDelayTimeout)  		return;  	focusCheckDelayTimeout = DateTime.MinValue;  	appHasFocus = hasFocus;  	if (appHasFocus) {  		if (ApplicationFocusIn != null)  			ApplicationFocusIn (this' EventArgs.Empty);  	}  	else {  		if (ApplicationFocusOut != null)  			ApplicationFocusOut (this' EventArgs.Empty);  	}  }  else  	focusCheckDelayTimeout = DateTime.MinValue;  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateAppFocusStatus,The following statement contains a magic number: if (focusCheckDelayTimeout == DateTime.MinValue) {  	focusCheckDelayTimeout = now.AddMilliseconds (100);  	return;  }  
Magic Number,MonoDevelop.Components.Commands,CommandManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\CommandManager.cs,UpdateAppFocusStatus,The following statement contains a magic number: focusCheckDelayTimeout = now.AddMilliseconds (100);  
Magic Number,MonoDevelop.Components.Commands,MenuToolButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\MenuToolButton.cs,OnButtonPress,The following statement contains a magic number: menu.Popup (null' null' new Gtk.MenuPositionFunc (OnPosition)' 3' Gtk.Global.CurrentEventTime);  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,The following statement contains a magic number: while (i < accel.Length) {  	for (j = i + 1; j < accel.Length; j++) {  		if (accel [j] == '+' || accel [j] == '|')  			break;  	}  	str = accel.Substring (i' j - i);  	if ((mod = ModifierMask (str)) == Gdk.ModifierType.None) {  		if (str == "Space")  			k = (uint)Gdk.Key.space;  		else if (str.Length > 1)  			k = Gdk.Keyval.FromName (str);  		else if (str [0] >= 'A' && str [0] <= 'Z')  			k = (uint)str [0] + 32;  		else  			k = (uint)str [0];  		break;  	}  	mask |= mod;  	i = j + 1;  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,The following statement contains a magic number: if ((mod = ModifierMask (str)) == Gdk.ModifierType.None) {  	if (str == "Space")  		k = (uint)Gdk.Key.space;  	else if (str.Length > 1)  		k = Gdk.Keyval.FromName (str);  	else if (str [0] >= 'A' && str [0] <= 'Z')  		k = (uint)str [0] + 32;  	else  		k = (uint)str [0];  	break;  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,The following statement contains a magic number: if (str == "Space")  	k = (uint)Gdk.Key.space;  else if (str.Length > 1)  	k = Gdk.Keyval.FromName (str);  else if (str [0] >= 'A' && str [0] <= 'Z')  	k = (uint)str [0] + 32;  else  	k = (uint)str [0];  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,The following statement contains a magic number: if (str.Length > 1)  	k = Gdk.Keyval.FromName (str);  else if (str [0] >= 'A' && str [0] <= 'Z')  	k = (uint)str [0] + 32;  else  	k = (uint)str [0];  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,The following statement contains a magic number: if (str [0] >= 'A' && str [0] <= 'Z')  	k = (uint)str [0] + 32;  else  	k = (uint)str [0];  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AccelToKeyPartial,The following statement contains a magic number: k = (uint)str [0] + 32;  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,ShortcutToBinding,The following statement contains a magic number: while (i < shortcut.Length) {  	if ((j = shortcut.IndexOf ('|'' i + 1)) == -1) {  		// we are at the last part of the shortcut' the Gdk.Key  		j = shortcut.Length;  	}  	str = shortcut.Substring (i' j - i);  	if ((mod = ModifierMask (str)) == Gdk.ModifierType.None) {  		if (str.Length > 1)  			key = (Gdk.Key)Gdk.Key.Parse (typeof(Gdk.Key)' str);  		else if (str [0] >= 'a' && str [0] <= 'z')  			key = (Gdk.Key)str [0] - 32;  		else  			key = (Gdk.Key)str [0];  		if (j < shortcut.Length)  			Console.WriteLine ("WARNING: trailing data after Gdk.Key portion of shortcut {0}"' shortcut);  		return AccelLabelFromKey (key' mask);  	}  	mask |= mod;  	i = j + 1;  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,ShortcutToBinding,The following statement contains a magic number: if ((mod = ModifierMask (str)) == Gdk.ModifierType.None) {  	if (str.Length > 1)  		key = (Gdk.Key)Gdk.Key.Parse (typeof(Gdk.Key)' str);  	else if (str [0] >= 'a' && str [0] <= 'z')  		key = (Gdk.Key)str [0] - 32;  	else  		key = (Gdk.Key)str [0];  	if (j < shortcut.Length)  		Console.WriteLine ("WARNING: trailing data after Gdk.Key portion of shortcut {0}"' shortcut);  	return AccelLabelFromKey (key' mask);  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,ShortcutToBinding,The following statement contains a magic number: if (str.Length > 1)  	key = (Gdk.Key)Gdk.Key.Parse (typeof(Gdk.Key)' str);  else if (str [0] >= 'a' && str [0] <= 'z')  	key = (Gdk.Key)str [0] - 32;  else  	key = (Gdk.Key)str [0];  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,ShortcutToBinding,The following statement contains a magic number: if (str [0] >= 'a' && str [0] <= 'z')  	key = (Gdk.Key)str [0] - 32;  else  	key = (Gdk.Key)str [0];  
Magic Number,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,ShortcutToBinding,The following statement contains a magic number: key = (Gdk.Key)str [0] - 32;  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,The following statement contains a magic number: foreach (Command cmd in commands) {  	string key = GetBinding (cmd);  	if (key.Length == 0)  		continue;  	List<Command> clist;  	if (!bindings.TryGetValue (key' out clist)) {  		clist = new List<Command> ();  		bindings.Add (key' clist);  	}  	clist.Add (cmd);  	if (clist.Count == 2)  		// We have a conflict  		conflicts.Add (new KeyBindingConflict (key' clist));  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,The following statement contains a magic number: if (clist.Count == 2)  	// We have a conflict  	conflicts.Add (new KeyBindingConflict (key' clist));  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,The following statement contains a magic number: foreach (Command cmd in commands) {  	string key = GetBinding (cmd);  	int i = key.IndexOf ('|');  	if (i != -1) {  		key = key.Substring (0' i);  		List<Command> clist;  		if (bindings.TryGetValue (key' out clist)) {  			clist.Add (cmd);  			if (clist.Count == 2)  				// We have a conflict  				conflicts.Add (new KeyBindingConflict (key' clist));  		}  	}  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,The following statement contains a magic number: if (i != -1) {  	key = key.Substring (0' i);  	List<Command> clist;  	if (bindings.TryGetValue (key' out clist)) {  		clist.Add (cmd);  		if (clist.Count == 2)  			// We have a conflict  			conflicts.Add (new KeyBindingConflict (key' clist));  	}  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,The following statement contains a magic number: if (bindings.TryGetValue (key' out clist)) {  	clist.Add (cmd);  	if (clist.Count == 2)  		// We have a conflict  		conflicts.Add (new KeyBindingConflict (key' clist));  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,CheckKeyBindingConflicts,The following statement contains a magic number: if (clist.Count == 2)  	// We have a conflict  	conflicts.Add (new KeyBindingConflict (key' clist));  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,Save,The following statement contains a magic number: try {  	stream = new FileStream (fileName + '~'' FileMode.Create);  	writer = new XmlTextWriter (stream' Encoding.UTF8);  	writer.Formatting = Formatting.Indented;  	writer.IndentChar = ' ';  	writer.Indentation = 2;  	writer.WriteStartElement ("schemes");  	writer.WriteAttributeString ("version"' version);  	Save (writer' id);  	writer.WriteEndElement ();  	success = true;  }  catch (Exception e) {  	LoggingService.LogError (e.ToString ());  }  finally {  	if (writer != null)  		writer.Close ();  	if (stream != null)  		stream.Close ();  }  
Magic Number,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,Save,The following statement contains a magic number: writer.Indentation = 2;  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,ArrowWindow,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,ArrowWindow,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,ArrowWindow,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,ArrowWindow,The following statement contains a magic number: redgc.RgbFgColor = new Gdk.Color (255' 0' 0);  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [0] = GetPoint (0' (PointerWidth / 2) - (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [0] = GetPoint (0' (PointerWidth / 2) - (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [1] = GetPoint (LineLength' (PointerWidth / 2) - (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [1] = GetPoint (LineLength' (PointerWidth / 2) - (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [2] = GetPoint (LineLength' 0);  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [3] = GetPoint (PointerLength + LineLength' (PointerWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [3] = GetPoint (PointerLength + LineLength' (PointerWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [4] = GetPoint (LineLength' PointerWidth - 1);  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [5] = GetPoint (LineLength' (PointerWidth / 2) + (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [5] = GetPoint (LineLength' (PointerWidth / 2) + (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [5] = GetPoint (LineLength' (PointerWidth / 2) + (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [6] = GetPoint (0' (PointerWidth / 2) + (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [6] = GetPoint (0' (PointerWidth / 2) + (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [6] = GetPoint (0' (PointerWidth / 2) + (LineWidth / 2));  
Magic Number,MonoDevelop.Components.DockToolbars,ArrowWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\ArrowWindow.cs,CreateArrow,The following statement contains a magic number: ps [7] = ps [0];  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbar.cs,OnButtonPressEvent,The following statement contains a magic number: if (parentFrame != null && e.Button == 1 && !e.TriggersContextMenu ()) {  	if (Orientation == Orientation.Horizontal && e.X <= 10) {  		dragging = true;  		parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  		return true;  	}  	else if (Orientation == Orientation.Vertical && e.Y <= 10) {  		dragging = true;  		parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  		return true;  	}  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbar.cs,OnButtonPressEvent,The following statement contains a magic number: if (parentFrame != null && e.Button == 1 && !e.TriggersContextMenu ()) {  	if (Orientation == Orientation.Horizontal && e.X <= 10) {  		dragging = true;  		parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  		return true;  	}  	else if (Orientation == Orientation.Vertical && e.Y <= 10) {  		dragging = true;  		parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  		return true;  	}  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbar.cs,OnButtonPressEvent,The following statement contains a magic number: if (Orientation == Orientation.Horizontal && e.X <= 10) {  	dragging = true;  	parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  	return true;  }  else if (Orientation == Orientation.Vertical && e.Y <= 10) {  	dragging = true;  	parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  	return true;  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbar.cs,OnButtonPressEvent,The following statement contains a magic number: if (Orientation == Orientation.Horizontal && e.X <= 10) {  	dragging = true;  	parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  	return true;  }  else if (Orientation == Orientation.Vertical && e.Y <= 10) {  	dragging = true;  	parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  	return true;  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbar.cs,OnButtonPressEvent,The following statement contains a magic number: if (Orientation == Orientation.Vertical && e.Y <= 10) {  	dragging = true;  	parentFrame.StartDragBar (this' (int)e.X' (int)e.Y' e.Time);  	return true;  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarFrame.cs,DockToolbarFrame,The following statement contains a magic number: panels = new DockToolbarPanel[4];  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarFrame.cs,SetStatus,The following statement contains a magic number: if (status != null && status.Status != null) {  	foreach (DockToolbarFrameLayout c in status.Status) {  		if (status.Version < 2) {  			// Convert from old to new toolbar id  			foreach (DockToolbarStatus ts in c.Bars)  				ts.BarId = ConvertToolbarId (ts.BarId);  		}  		layouts [c.Id] = c.Bars;  	}  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarFrame.cs,SetStatus,The following statement contains a magic number: foreach (DockToolbarFrameLayout c in status.Status) {  	if (status.Version < 2) {  		// Convert from old to new toolbar id  		foreach (DockToolbarStatus ts in c.Bars)  			ts.BarId = ConvertToolbarId (ts.BarId);  	}  	layouts [c.Id] = c.Bars;  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarFrame.cs,SetStatus,The following statement contains a magic number: if (status.Version < 2) {  	// Convert from old to new toolbar id  	foreach (DockToolbarStatus ts in c.Bars)  		ts.BarId = ConvertToolbarId (ts.BarId);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: placeholder.Resize (w + mg * 2' h + mg * 2);  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: placeholder.Resize (w + mg * 2' h + mg * 2);  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: if (horz) {  	placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  	placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  }  else {  	int px = sx + w / 2 - placeholderArrow1.Width / 2;  	if (px < 0)  		px = 0;  	placeholderArrow1.Move (px' sy - placeholderArrow1.Height);  	placeholderArrow2.Move (px' sy + h);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: if (horz) {  	placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  	placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  }  else {  	int px = sx + w / 2 - placeholderArrow1.Width / 2;  	if (px < 0)  		px = 0;  	placeholderArrow1.Move (px' sy - placeholderArrow1.Height);  	placeholderArrow2.Move (px' sy + h);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: if (horz) {  	placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  	placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  }  else {  	int px = sx + w / 2 - placeholderArrow1.Width / 2;  	if (px < 0)  		px = 0;  	placeholderArrow1.Move (px' sy - placeholderArrow1.Height);  	placeholderArrow2.Move (px' sy + h);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: if (horz) {  	placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  	placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  }  else {  	int px = sx + w / 2 - placeholderArrow1.Width / 2;  	if (px < 0)  		px = 0;  	placeholderArrow1.Move (px' sy - placeholderArrow1.Height);  	placeholderArrow2.Move (px' sy + h);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: if (horz) {  	placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  	placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  }  else {  	int px = sx + w / 2 - placeholderArrow1.Width / 2;  	if (px < 0)  		px = 0;  	placeholderArrow1.Move (px' sy - placeholderArrow1.Height);  	placeholderArrow2.Move (px' sy + h);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: if (horz) {  	placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  	placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  }  else {  	int px = sx + w / 2 - placeholderArrow1.Width / 2;  	if (px < 0)  		px = 0;  	placeholderArrow1.Move (px' sy - placeholderArrow1.Height);  	placeholderArrow2.Move (px' sy + h);  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: placeholderArrow1.Move (sx - placeholderArrow1.Width' sy + (h / 2) - placeholderArrow1.Height / 2);  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,ShowPlaceholder,The following statement contains a magic number: placeholderArrow2.Move (sx + w' sy + (h / 2) - placeholderArrow1.Height / 2);  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,RepositionInternal,The following statement contains a magic number: ycursor = y + bar.DefaultHeight / 2;  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The following statement contains a magic number: for (int n = children.Length - 1; n >= 1; n--) {  	if (!children [n].Visible)  		continue;  	int x;  	if (bar.Orientation == Orientation.Horizontal)  		x = children [n].Allocation.X - bar.Allocation.X;  	else  		x = children [n].Allocation.Y - bar.Allocation.Y;  	int rightSize = w - x - 1;  	if (rightSize > currentReduction) {  		int prevRequest = Orientation == Orientation.Horizontal ? children [n - 1].SizeRequest ().Width : children [n - 1].SizeRequest ().Height;  		if (prevRequest > arrowSize * 2)  			continue;  		int newReduction = rightSize - currentReduction;  		if (newReduction > sizeToReduce)  			newReduction = sizeToReduce;  		int minSize = Orientation == Orientation.Horizontal ? children [0].SizeRequest ().Width : children [0].SizeRequest ().Height;  		minSize += arrowSize + 6;  		if (bar.DefaultSize - (currentReduction + newReduction) < minSize)  			newReduction = (bar.DefaultSize - minSize) - currentReduction;  		return newReduction;  	}  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The following statement contains a magic number: for (int n = children.Length - 1; n >= 1; n--) {  	if (!children [n].Visible)  		continue;  	int x;  	if (bar.Orientation == Orientation.Horizontal)  		x = children [n].Allocation.X - bar.Allocation.X;  	else  		x = children [n].Allocation.Y - bar.Allocation.Y;  	int rightSize = w - x - 1;  	if (rightSize > currentReduction) {  		int prevRequest = Orientation == Orientation.Horizontal ? children [n - 1].SizeRequest ().Width : children [n - 1].SizeRequest ().Height;  		if (prevRequest > arrowSize * 2)  			continue;  		int newReduction = rightSize - currentReduction;  		if (newReduction > sizeToReduce)  			newReduction = sizeToReduce;  		int minSize = Orientation == Orientation.Horizontal ? children [0].SizeRequest ().Width : children [0].SizeRequest ().Height;  		minSize += arrowSize + 6;  		if (bar.DefaultSize - (currentReduction + newReduction) < minSize)  			newReduction = (bar.DefaultSize - minSize) - currentReduction;  		return newReduction;  	}  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The following statement contains a magic number: if (rightSize > currentReduction) {  	int prevRequest = Orientation == Orientation.Horizontal ? children [n - 1].SizeRequest ().Width : children [n - 1].SizeRequest ().Height;  	if (prevRequest > arrowSize * 2)  		continue;  	int newReduction = rightSize - currentReduction;  	if (newReduction > sizeToReduce)  		newReduction = sizeToReduce;  	int minSize = Orientation == Orientation.Horizontal ? children [0].SizeRequest ().Width : children [0].SizeRequest ().Height;  	minSize += arrowSize + 6;  	if (bar.DefaultSize - (currentReduction + newReduction) < minSize)  		newReduction = (bar.DefaultSize - minSize) - currentReduction;  	return newReduction;  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The following statement contains a magic number: if (rightSize > currentReduction) {  	int prevRequest = Orientation == Orientation.Horizontal ? children [n - 1].SizeRequest ().Width : children [n - 1].SizeRequest ().Height;  	if (prevRequest > arrowSize * 2)  		continue;  	int newReduction = rightSize - currentReduction;  	if (newReduction > sizeToReduce)  		newReduction = sizeToReduce;  	int minSize = Orientation == Orientation.Horizontal ? children [0].SizeRequest ().Width : children [0].SizeRequest ().Height;  	minSize += arrowSize + 6;  	if (bar.DefaultSize - (currentReduction + newReduction) < minSize)  		newReduction = (bar.DefaultSize - minSize) - currentReduction;  	return newReduction;  }  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The following statement contains a magic number: if (prevRequest > arrowSize * 2)  	continue;  
Magic Number,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,GetBarReduction,The following statement contains a magic number: minSize += arrowSize + 6;  
Magic Number,MonoDevelop.Components.DockToolbars,AnimationManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Animate,The following statement contains a magic number: if (anims.Count == 0)  	GLib.Timeout.Add (10' new GLib.TimeoutHandler (Animate));  
Magic Number,MonoDevelop.Components.DockToolbars,AnimationManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Animate,The following statement contains a magic number: GLib.Timeout.Add (10' new GLib.TimeoutHandler (Animate));  
Magic Number,MonoDevelop.Components.DockToolbars,MoveAnimation,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Run,The following statement contains a magic number: dx = dx / 4;  
Magic Number,MonoDevelop.Components.DockToolbars,MoveAnimation,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Run,The following statement contains a magic number: dy = dy / 4;  
Magic Number,MonoDevelop.Components.DockToolbars,MoveAnimation,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Run,The following statement contains a magic number: if (Math.Abs (dx) < 0.1 && Math.Abs (dy) < 0.1) {  	panel.Move (widget' (int)destx' (int)desty);  	return false;  }  else  	return true;  
Magic Number,MonoDevelop.Components.DockToolbars,MoveAnimation,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,Run,The following statement contains a magic number: if (Math.Abs (dx) < 0.1 && Math.Abs (dy) < 0.1) {  	panel.Move (widget' (int)destx' (int)desty);  	return false;  }  else  	return true;  
Magic Number,MonoDevelop.Components.DockToolbars,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\PlaceholderWindow.cs,PlaceholderWindow,The following statement contains a magic number: redgc.RgbFgColor = new Gdk.Color (255' 0' 0);  
Magic Number,MonoDevelop.Components.Extensions,TextQuestionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\TextQuestionDialog.cs,RunDefault,The following statement contains a magic number: try {  	md = new Dialog (Caption' TransientFor' DialogFlags.Modal | DialogFlags.DestroyWithParent) {  		HasSeparator = false'  		BorderWidth = 6'  	};  	var questionLabel = new Label (Question) {  		UseMarkup = true'  		Xalign = 0.0F'  	};  	md.VBox.PackStart (questionLabel' true' false' 6);  	var responseEntry = new Entry (Value ?? "") {  		Visibility = !IsPassword'  	};  	responseEntry.Activated += (sender' e) =>  {  		md.Respond (ResponseType.Ok);  	};  	md.VBox.PackStart (responseEntry' false' true' 6);  	md.AddActionWidget (new Button (Gtk.Stock.Cancel)' ResponseType.Cancel);  	md.AddActionWidget (new Button (Gtk.Stock.Ok)' ResponseType.Ok);  	md.DefaultResponse = ResponseType.Cancel;  	md.Child.ShowAll ();  	var response = (ResponseType)MonoDevelop.Ide.MessageService.RunCustomDialog (md' TransientFor);  	if (response == ResponseType.Ok) {  		Value = responseEntry.Text;  		return true;  	}  	return false;  }  finally {  	if (md != null)  		md.Destroy ();  }  
Magic Number,MonoDevelop.Components.Extensions,TextQuestionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\TextQuestionDialog.cs,RunDefault,The following statement contains a magic number: try {  	md = new Dialog (Caption' TransientFor' DialogFlags.Modal | DialogFlags.DestroyWithParent) {  		HasSeparator = false'  		BorderWidth = 6'  	};  	var questionLabel = new Label (Question) {  		UseMarkup = true'  		Xalign = 0.0F'  	};  	md.VBox.PackStart (questionLabel' true' false' 6);  	var responseEntry = new Entry (Value ?? "") {  		Visibility = !IsPassword'  	};  	responseEntry.Activated += (sender' e) =>  {  		md.Respond (ResponseType.Ok);  	};  	md.VBox.PackStart (responseEntry' false' true' 6);  	md.AddActionWidget (new Button (Gtk.Stock.Cancel)' ResponseType.Cancel);  	md.AddActionWidget (new Button (Gtk.Stock.Ok)' ResponseType.Ok);  	md.DefaultResponse = ResponseType.Cancel;  	md.Child.ShowAll ();  	var response = (ResponseType)MonoDevelop.Ide.MessageService.RunCustomDialog (md' TransientFor);  	if (response == ResponseType.Ok) {  		Value = responseEntry.Text;  		return true;  	}  	return false;  }  finally {  	if (md != null)  		md.Destroy ();  }  
Magic Number,MonoDevelop.Components.Extensions,TextQuestionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\TextQuestionDialog.cs,RunDefault,The following statement contains a magic number: try {  	md = new Dialog (Caption' TransientFor' DialogFlags.Modal | DialogFlags.DestroyWithParent) {  		HasSeparator = false'  		BorderWidth = 6'  	};  	var questionLabel = new Label (Question) {  		UseMarkup = true'  		Xalign = 0.0F'  	};  	md.VBox.PackStart (questionLabel' true' false' 6);  	var responseEntry = new Entry (Value ?? "") {  		Visibility = !IsPassword'  	};  	responseEntry.Activated += (sender' e) =>  {  		md.Respond (ResponseType.Ok);  	};  	md.VBox.PackStart (responseEntry' false' true' 6);  	md.AddActionWidget (new Button (Gtk.Stock.Cancel)' ResponseType.Cancel);  	md.AddActionWidget (new Button (Gtk.Stock.Ok)' ResponseType.Ok);  	md.DefaultResponse = ResponseType.Cancel;  	md.Child.ShowAll ();  	var response = (ResponseType)MonoDevelop.Ide.MessageService.RunCustomDialog (md' TransientFor);  	if (response == ResponseType.Ok) {  		Value = responseEntry.Text;  		return true;  	}  	return false;  }  finally {  	if (md != null)  		md.Destroy ();  }  
Magic Number,MonoDevelop.Components.Extensions,TextQuestionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\TextQuestionDialog.cs,RunDefault,The following statement contains a magic number: md = new Dialog (Caption' TransientFor' DialogFlags.Modal | DialogFlags.DestroyWithParent) {  	HasSeparator = false'  	BorderWidth = 6'  };  
Magic Number,MonoDevelop.Components.Extensions,TextQuestionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\TextQuestionDialog.cs,RunDefault,The following statement contains a magic number: md.VBox.PackStart (questionLabel' true' false' 6);  
Magic Number,MonoDevelop.Components.Extensions,TextQuestionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Extensions\TextQuestionDialog.cs,RunDefault,The following statement contains a magic number: md.VBox.PackStart (responseEntry' false' true' 6);  
Magic Number,MonoDevelop.Components.PropertyGrid,CellRendererWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyEditorCell.cs,OnExposeEvent,The following statement contains a magic number: rect.Inflate (-3' 0);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyDialogueEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyEditorCell.cs,PropertyDialogueEditor,The following statement contains a magic number: Spacing = 3;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTitleLabel.SetPadding (5' 2);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTitleLabel.SetPadding (5' 2);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTextView.HeightRequest = 70;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTextView.LeftMargin = 5;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: descTextView.RightMargin = 5;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: font.Size = (font.Size * 8) / 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGrid,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGrid.cs,AddHelpPane,The following statement contains a magic number: font.Size = (font.Size * 8) / 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 20;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: foreach (var r in rowList) {  	layout.SetText (r.Label);  	int w' h;  	layout.GetPixelSize (out w' out h);  	if (r.IsCategory) {  		r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  		y += h + CategoryTopBottomPadding * 2;  	}  	else {  		int eh;  		int dividerX = (int)((double)Allocation.Width * dividerPosition);  		var cell = GetCell (r);  		cell.GetSize (Allocation.Width - dividerX' out w' out eh);  		eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  		r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh);  		y += eh;  	}  	if (r.ChildRows != null && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		MeasureHeight (r.ChildRows' ref y);  		r.ChildrenHeight = y - py;  		if (r.AnimatingExpand)  			y = py + r.AnimationHeight;  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: foreach (var r in rowList) {  	layout.SetText (r.Label);  	int w' h;  	layout.GetPixelSize (out w' out h);  	if (r.IsCategory) {  		r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  		y += h + CategoryTopBottomPadding * 2;  	}  	else {  		int eh;  		int dividerX = (int)((double)Allocation.Width * dividerPosition);  		var cell = GetCell (r);  		cell.GetSize (Allocation.Width - dividerX' out w' out eh);  		eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  		r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh);  		y += eh;  	}  	if (r.ChildRows != null && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		MeasureHeight (r.ChildRows' ref y);  		r.ChildrenHeight = y - py;  		if (r.AnimatingExpand)  			y = py + r.AnimationHeight;  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: foreach (var r in rowList) {  	layout.SetText (r.Label);  	int w' h;  	layout.GetPixelSize (out w' out h);  	if (r.IsCategory) {  		r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  		y += h + CategoryTopBottomPadding * 2;  	}  	else {  		int eh;  		int dividerX = (int)((double)Allocation.Width * dividerPosition);  		var cell = GetCell (r);  		cell.GetSize (Allocation.Width - dividerX' out w' out eh);  		eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  		r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh);  		y += eh;  	}  	if (r.ChildRows != null && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		MeasureHeight (r.ChildRows' ref y);  		r.ChildrenHeight = y - py;  		if (r.AnimatingExpand)  			y = py + r.AnimationHeight;  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: if (r.IsCategory) {  	r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  	y += h + CategoryTopBottomPadding * 2;  }  else {  	int eh;  	int dividerX = (int)((double)Allocation.Width * dividerPosition);  	var cell = GetCell (r);  	cell.GetSize (Allocation.Width - dividerX' out w' out eh);  	eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  	r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh);  	y += eh;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: if (r.IsCategory) {  	r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  	y += h + CategoryTopBottomPadding * 2;  }  else {  	int eh;  	int dividerX = (int)((double)Allocation.Width * dividerPosition);  	var cell = GetCell (r);  	cell.GetSize (Allocation.Width - dividerX' out w' out eh);  	eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  	r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh);  	y += eh;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: if (r.IsCategory) {  	r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  	y += h + CategoryTopBottomPadding * 2;  }  else {  	int eh;  	int dividerX = (int)((double)Allocation.Width * dividerPosition);  	var cell = GetCell (r);  	cell.GetSize (Allocation.Width - dividerX' out w' out eh);  	eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  	r.EditorBounds = new Gdk.Rectangle (dividerX + PropertyContentLeftPadding' y' Allocation.Width - dividerX - PropertyContentLeftPadding' eh);  	y += eh;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: r.EditorBounds = new Gdk.Rectangle (0' y' Allocation.Width' h + CategoryTopBottomPadding * 2);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: y += h + CategoryTopBottomPadding * 2;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,MeasureHeight,The following statement contains a magic number: eh = Math.Max (h + PropertyTopBottomPadding * 2' eh);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context ctx = CairoHelper.Create (evnt.Window)) {  	int dx = (int)((double)Allocation.Width * dividerPosition);  	ctx.LineWidth = 1;  	ctx.Rectangle (0' 0' dx' Allocation.Height);  	ctx.SetSourceColor (LabelBackgroundColor);  	ctx.Fill ();  	ctx.Rectangle (dx' 0' Allocation.Width - dx' Allocation.Height);  	ctx.SetSourceRGB (1' 1' 1);  	ctx.Fill ();  	ctx.MoveTo (dx + 0.5' 0);  	ctx.RelLineTo (0' Allocation.Height);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	int y = 0;  	Draw (ctx' rows' dx' PropertyLeftPadding' ref y);  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (dx + 0.5' 0);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: foreach (var r in rowList) {  	int w' h;  	layout.SetText (r.Label);  	layout.GetPixelSize (out w' out h);  	int indent = 0;  	if (r.IsCategory) {  		var rh = h + CategoryTopBottomPadding * 2;  		ctx.Rectangle (0' y' Allocation.Width' rh);  		using (var gr = new LinearGradient (0' y' 0' rh)) {  			gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  			gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  			ctx.SetSource (gr);  			ctx.Fill ();  		}  		if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  			ctx.MoveTo (0' y + 0.5);  			ctx.LineTo (Allocation.Width' y + 0.5);  		}  		ctx.MoveTo (0' y + rh - 0.5);  		ctx.LineTo (Allocation.Width' y + rh - 0.5);  		ctx.SetSourceColor (DividerColor);  		ctx.Stroke ();  		ctx.MoveTo (x' y + CategoryTopBottomPadding);  		ctx.SetSourceColor (CategoryLabelColor);  		Pango.CairoHelper.ShowLayout (ctx' layout);  		var img = r.Expanded ? discloseUp : discloseDown;  		CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  		ctx.Paint ();  		y += rh;  		lastCategory = r;  	}  	else {  		var cell = GetCell (r);  		r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  		var state = r.Enabled ? State : Gtk.StateType.Insensitive;  		ctx.Save ();  		ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  		ctx.Clip ();  		ctx.MoveTo (x' y + PropertyTopBottomPadding);  		ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  		Pango.CairoHelper.ShowLayout (ctx' layout);  		ctx.Restore ();  		if (r != currentEditorRow)  			cell.Render (GdkWindow' ctx' r.EditorBounds' state);  		y += r.EditorBounds.Height;  		indent = PropertyIndent;  	}  	if (r.ChildRows != null && r.ChildRows.Count > 0 && (r.Expanded || r.AnimatingExpand)) {  		int py = y;  		ctx.Save ();  		if (r.AnimatingExpand)  			ctx.Rectangle (0' y' Allocation.Width' r.AnimationHeight);  		else  			ctx.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		ctx.Clip ();  		Draw (ctx' r.ChildRows' dividerX' x + indent' ref y);  		ctx.Restore ();  		if (r.AnimatingExpand) {  			y = py + r.AnimationHeight;  			// Repaing the background because the cairo clip doesn't work for gdk primitives  			int dx = (int)((double)Allocation.Width * dividerPosition);  			ctx.Rectangle (0' y' dx' Allocation.Height - y);  			ctx.SetSourceColor (LabelBackgroundColor);  			ctx.Fill ();  			ctx.Rectangle (dx + 1' y' Allocation.Width - dx - 1' Allocation.Height - y);  			ctx.SetSourceRGB (1' 1' 1);  			ctx.Fill ();  		}  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (r.IsCategory) {  	var rh = h + CategoryTopBottomPadding * 2;  	ctx.Rectangle (0' y' Allocation.Width' rh);  	using (var gr = new LinearGradient (0' y' 0' rh)) {  		gr.AddColorStop (0' new Cairo.Color (248d / 255d' 248d / 255d' 248d / 255d));  		gr.AddColorStop (1' new Cairo.Color (240d / 255d' 240d / 255d' 240d / 255d));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  	if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  		ctx.MoveTo (0' y + 0.5);  		ctx.LineTo (Allocation.Width' y + 0.5);  	}  	ctx.MoveTo (0' y + rh - 0.5);  	ctx.LineTo (Allocation.Width' y + rh - 0.5);  	ctx.SetSourceColor (DividerColor);  	ctx.Stroke ();  	ctx.MoveTo (x' y + CategoryTopBottomPadding);  	ctx.SetSourceColor (CategoryLabelColor);  	Pango.CairoHelper.ShowLayout (ctx' layout);  	var img = r.Expanded ? discloseUp : discloseDown;  	CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  	ctx.Paint ();  	y += rh;  	lastCategory = r;  }  else {  	var cell = GetCell (r);  	r.Enabled = !r.Property.IsReadOnly || cell.EditsReadOnlyObject;  	var state = r.Enabled ? State : Gtk.StateType.Insensitive;  	ctx.Save ();  	ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  	ctx.Clip ();  	ctx.MoveTo (x' y + PropertyTopBottomPadding);  	ctx.SetSourceColor (Style.Text (state).ToCairoColor ());  	Pango.CairoHelper.ShowLayout (ctx' layout);  	ctx.Restore ();  	if (r != currentEditorRow)  		cell.Render (GdkWindow' ctx' r.EditorBounds' state);  	y += r.EditorBounds.Height;  	indent = PropertyIndent;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  	ctx.MoveTo (0' y + 0.5);  	ctx.LineTo (Allocation.Width' y + 0.5);  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: if (lastCategory == null || lastCategory.Expanded || lastCategory.AnimatingExpand) {  	ctx.MoveTo (0' y + 0.5);  	ctx.LineTo (Allocation.Width' y + 0.5);  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: ctx.MoveTo (0' y + 0.5);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: ctx.LineTo (Allocation.Width' y + 0.5);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: ctx.MoveTo (0' y + rh - 0.5);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: ctx.LineTo (Allocation.Width' y + rh - 0.5);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: CairoHelper.SetSourcePixbuf (ctx' img' Allocation.Width - img.Width - CategoryTopBottomPadding' y + (rh - img.Height) / 2);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,Draw,The following statement contains a magic number: ctx.Rectangle (0' y' dividerX' h + PropertyTopBottomPadding * 2);  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnButtonPressEvent,The following statement contains a magic number: if (Math.Abs (dx - evnt.X) < 4) {  	draggingDivider = true;  	GdkWindow.Cursor = resizeCursor;  	return true;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (draggingDivider) {  	var px = evnt.X;  	if (px < 10)  		px = 10;  	else if (px > Allocation.Width - 10)  		px = Allocation.Width - 10;  	dividerPosition = px / (double)Allocation.Width;  	QueueResize ();  	return true;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (draggingDivider) {  	var px = evnt.X;  	if (px < 10)  		px = 10;  	else if (px > Allocation.Width - 10)  		px = Allocation.Width - 10;  	dividerPosition = px / (double)Allocation.Width;  	QueueResize ();  	return true;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (draggingDivider) {  	var px = evnt.X;  	if (px < 10)  		px = 10;  	else if (px > Allocation.Width - 10)  		px = Allocation.Width - 10;  	dividerPosition = px / (double)Allocation.Width;  	QueueResize ();  	return true;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (draggingDivider) {  	var px = evnt.X;  	if (px < 10)  		px = 10;  	else if (px > Allocation.Width - 10)  		px = Allocation.Width - 10;  	dividerPosition = px / (double)Allocation.Width;  	QueueResize ();  	return true;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (px < 10)  	px = 10;  else if (px > Allocation.Width - 10)  	px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (px < 10)  	px = 10;  else if (px > Allocation.Width - 10)  	px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (px < 10)  	px = 10;  else if (px > Allocation.Width - 10)  	px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (px < 10)  	px = 10;  else if (px > Allocation.Width - 10)  	px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: px = 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (px > Allocation.Width - 10)  	px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (px > Allocation.Width - 10)  	px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: px = Allocation.Width - 10;  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (Math.Abs (dx - evnt.X) < 4) {  	GdkWindow.Cursor = resizeCursor;  	return true;  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,ShowTooltip,The following statement contains a magic number: tooltipTimeout = GLib.Timeout.Add (500' delegate {  	ShowTooltipWindow ((int)evnt.X' (int)evnt.Y);  	return false;  });  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,ShowTooltipWindow,The following statement contains a magic number: if (row != null) {  	tooltipWindow = new TooltipPopoverWindow ();  	tooltipWindow.ShowArrow = true;  	var s = new System.Text.StringBuilder ("<b>" + row.Property.DisplayName + "</b>");  	s.AppendLine ();  	s.AppendLine ();  	s.Append (GLib.Markup.EscapeText (row.Property.Description));  	if (row.Property.Converter.CanConvertTo (typeof(string))) {  		var value = Convert.ToString (row.Property.GetValue (row.Instace));  		if (!string.IsNullOrEmpty (value)) {  			const int chunkLength = 200;  			var multiLineValue = string.Join (Environment.NewLine' Enumerable.Range (0' (int)Math.Ceiling ((double)value.Length / chunkLength)).Select (n => string.Concat (value.Skip (n * chunkLength).Take (chunkLength))));  			s.AppendLine ();  			s.AppendLine ();  			s.Append ("Value: " + multiLineValue);  		}  	}  	tooltipWindow.Markup = s.ToString ();  	tooltipWindow.ShowPopup (this' new Gdk.Rectangle (0' row.EditorBounds.Y' Allocation.Width' row.EditorBounds.Height)' PopupPosition.Right);  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,ShowTooltipWindow,The following statement contains a magic number: if (row.Property.Converter.CanConvertTo (typeof(string))) {  	var value = Convert.ToString (row.Property.GetValue (row.Instace));  	if (!string.IsNullOrEmpty (value)) {  		const int chunkLength = 200;  		var multiLineValue = string.Join (Environment.NewLine' Enumerable.Range (0' (int)Math.Ceiling ((double)value.Length / chunkLength)).Select (n => string.Concat (value.Skip (n * chunkLength).Take (chunkLength))));  		s.AppendLine ();  		s.AppendLine ();  		s.Append ("Value: " + multiLineValue);  	}  }  
Magic Number,MonoDevelop.Components.PropertyGrid,PropertyGridTable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid\PropertyGridTable.cs,ShowTooltipWindow,The following statement contains a magic number: if (!string.IsNullOrEmpty (value)) {  	const int chunkLength = 200;  	var multiLineValue = string.Join (Environment.NewLine' Enumerable.Range (0' (int)Math.Ceiling ((double)value.Length / chunkLength)).Select (n => string.Concat (value.Skip (n * chunkLength).Take (chunkLength))));  	s.AppendLine ();  	s.AppendLine ();  	s.Append ("Value: " + multiLineValue);  }  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: dialog.VBox.PackStart (hBox' true' true' 5);  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: grid = new PropertyGrid (base.EditorManager) {  	CurrentObject = null'  	WidthRequest = 200'  	ShowHelp = false  };  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: hBox.PackEnd (grid' true' true' 5);  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: buttonBox.Spacing = 6;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: hBox.PackEnd (buttonBox' false' false' 5);  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: listScroll.WidthRequest = 200;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: listScroll.HeightRequest = 320;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: hBox.PackStart (listScroll' false' false' 5);  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,LaunchDialogue,The following statement contains a magic number: itemTree.AppendColumn (new TreeViewColumn ("Object"' rdr' "text"' 2));  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,CollectionEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\CollectionEditor.cs,UpdateName,The following statement contains a magic number: itemStore.SetValue (iter' 2' name);  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,EventEditorCell,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\EventEditor.cs,CreateEditor,The following statement contains a magic number: combo.WidthRequest = 30;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FlagsEditorCell.cs,Initialize,The following statement contains a magic number: Spacing = 3;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FlagsEditorCell.cs,Initialize,The following statement contains a magic number: if (values.Length < 6) {  	Gtk.VBox vbox = new Gtk.VBox (true' 3);  	flags = new Hashtable ();  	foreach (object value in values) {  		Gtk.CheckButton check = new Gtk.CheckButton (value.ToString ());  		check.TooltipText = value.ToString ();  		ulong uintVal = Convert.ToUInt64 (value);  		flags [check] = uintVal;  		flags [uintVal] = check;  		check.Toggled += FlagToggled;  		vbox.PackStart (check' false' false' 0);  	}  	Gtk.Frame frame = new Gtk.Frame ();  	frame.Add (vbox);  	frame.ShowAll ();  	PackStart (frame' true' true' 0);  }  else {  	flagsLabel = new Gtk.Entry ();  	flagsLabel.IsEditable = false;  	flagsLabel.HasFrame = false;  	flagsLabel.ShowAll ();  	PackStart (flagsLabel' true' true' 0);  	Gtk.Button but = new Gtk.Button ("...");  	but.Clicked += OnSelectFlags;  	but.ShowAll ();  	PackStart (but' false' false' 0);  }  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FlagsEditorCell.cs,Initialize,The following statement contains a magic number: if (values.Length < 6) {  	Gtk.VBox vbox = new Gtk.VBox (true' 3);  	flags = new Hashtable ();  	foreach (object value in values) {  		Gtk.CheckButton check = new Gtk.CheckButton (value.ToString ());  		check.TooltipText = value.ToString ();  		ulong uintVal = Convert.ToUInt64 (value);  		flags [check] = uintVal;  		flags [uintVal] = check;  		check.Toggled += FlagToggled;  		vbox.PackStart (check' false' false' 0);  	}  	Gtk.Frame frame = new Gtk.Frame ();  	frame.Add (vbox);  	frame.ShowAll ();  	PackStart (frame' true' true' 0);  }  else {  	flagsLabel = new Gtk.Entry ();  	flagsLabel.IsEditable = false;  	flagsLabel.HasFrame = false;  	flagsLabel.ShowAll ();  	PackStart (flagsLabel' true' true' 0);  	Gtk.Button but = new Gtk.Button ("...");  	but.Clicked += OnSelectFlags;  	but.ShowAll ();  	PackStart (but' false' false' 0);  }  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FlagsSelectorDialog.cs,FlagsSelectorDialog,The following statement contains a magic number: sc.BorderWidth = 6;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FlagsSelectorDialog.cs,Run,The following statement contains a magic number: dialog.DefaultWidth = 500;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FlagsSelectorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FlagsSelectorDialog.cs,Run,The following statement contains a magic number: dialog.DefaultHeight = 400;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,FloatRange,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\FloatRange.cs,Initialize,The following statement contains a magic number: Digits = 2;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditor.cs,Initialize,The following statement contains a magic number: Spacing = 3;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditor.cs,TextChanged,The following statement contains a magic number: if (valid)  	entry.ModifyFg (Gtk.StateType.Normal);  else  	entry.ModifyFg (Gtk.StateType.Normal' new Gdk.Color (255' 0' 0));  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditor.cs,TextChanged,The following statement contains a magic number: entry.ModifyFg (Gtk.StateType.Normal' new Gdk.Color (255' 0' 0));  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditorDialog.cs,TextEditorDialog,The following statement contains a magic number: sc.BorderWidth = 6;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditorDialog.cs,Run,The following statement contains a magic number: dialog.DefaultWidth = 500;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,TextEditorDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\TextEditorDialog.cs,Run,The following statement contains a magic number: dialog.DefaultHeight = 400;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\BooleanEditorCell.cs,GetSize,The following statement contains a magic number: width = 20;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\BooleanEditorCell.cs,GetSize,The following statement contains a magic number: height = 20;  
Magic Number,MonoDevelop.Components.PropertyGrid.PropertyEditors,BooleanEditorCell,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.PropertyGrid.Editors\BooleanEditorCell.cs,Render,The following statement contains a magic number: Gtk.Style.PaintCheck (Container.Style' window' state' sh' bounds' Container' "checkbutton"' bounds.X + indicatorSpacing - 1' bounds.Y + (bounds.Height - s) / 2' s' s);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,GetCairoTextMidColor,The following statement contains a magic number: return CairoExtensions.AlphaBlend (text_color' background_color' 0.5);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,OnColorsRefreshed,The following statement contains a magic number: rule_color = CairoExtensions.ColorShade (ViewFill' 0.95);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: using (RadialGradient fill = new RadialGradient (Context.X' Context.Y' 0' Context.X' Context.Y' 2.0 * Context.Radius)) {  	fill.AddColorStop (0' color_a);  	fill.AddColorStop (1' color_b);  	Context.Cairo.SetSource (fill);  	Context.Cairo.FillPreserve ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawPie,The following statement contains a magic number: Context.Cairo.SetSourceColor (CairoExtensions.ColorShade (color_a' 0.8));  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: cr.Translate (0.5' 0.5);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: cr.Translate (0.5' 0.5);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: cr.Translate (-0.5' -0.5);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawArrow,The following statement contains a magic number: cr.Translate (-0.5' -0.5);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawFrameBorderFocused,The following statement contains a magic number: cr.LineWidth = BorderWidth * 1.5;  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawFrameBorderFocused,The following statement contains a magic number: cr.SetSourceColor (CairoExtensions.ColorShade (border_color' 0.8));  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: using (var grad = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Bottom - 1)) {  	grad.AddColorStop (0' light_color);  	grad.AddColorStop (1' dark_color);  	cr.SetSource (grad);  	cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: using (var grad = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Bottom - 1)) {  	grad.AddColorStop (0' light_color);  	grad.AddColorStop (1' dark_color);  	cr.SetSource (grad);  	cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: using (var grad = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Bottom - 1)) {  	grad.AddColorStop (0' light_color);  	grad.AddColorStop (1' dark_color);  	cr.SetSource (grad);  	cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: using (var grad = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Bottom - 1)) {  	grad.AddColorStop (0' light_color);  	grad.AddColorStop (1' dark_color);  	cr.SetSource (grad);  	cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHighlight,The following statement contains a magic number: cr.Rectangle (alloc.X + 1.5' alloc.Y + 1.5' alloc.Width - 3' alloc.Height - 2);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawHeaderBackground,The following statement contains a magic number: using (LinearGradient grad = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Bottom)) {  	grad.AddColorStop (0' light_color);  	grad.AddColorStop (0.75' dark_color);  	grad.AddColorStop (0' light_color);  	cr.SetSource (grad);  	CairoExtensions.RoundedRectangle (cr' alloc.X' alloc.Y' alloc.Width' alloc.Height' Context.Radius' corners);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawHeaderBackground,The following statement contains a magic number: grad.AddColorStop (0.75' dark_color);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: stroke_color.A = 0.1;  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (margin + line_width) * 2.0 - right_offset' alloc.Height - (margin + line_width) * 2.0 - top_offset' Context.Radius / 2.0' CairoCorners.None);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (margin + line_width) * 2.0 - right_offset' alloc.Height - (margin + line_width) * 2.0 - top_offset' Context.Radius / 2.0' CairoCorners.None);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (margin + line_width) * 2.0 - right_offset' alloc.Height - (margin + line_width) * 2.0 - top_offset' Context.Radius / 2.0' CairoCorners.None);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (line_width + margin) * 2.0 - right_offset' alloc.Height - (line_width + margin) * 2.0 - right_offset' Context.Radius / 2.0' CairoCorners.All);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (line_width + margin) * 2.0 - right_offset' alloc.Height - (line_width + margin) * 2.0 - right_offset' Context.Radius / 2.0' CairoCorners.All);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawColumnHeaderFocus,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' alloc.X + margin + line_width + right_offset' alloc.Y + margin + line_width + top_offset' alloc.Width - (line_width + margin) * 2.0 - right_offset' alloc.Height - (line_width + margin) * 2.0 - right_offset' Context.Radius / 2.0' CairoCorners.All);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowCursor,The following statement contains a magic number: cr.LineWidth = 1.25;  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowCursor,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + cr.LineWidth / 2.0' y + cr.LineWidth / 2.0' width - cr.LineWidth' height - cr.LineWidth' Context.Radius' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowCursor,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + cr.LineWidth / 2.0' y + cr.LineWidth / 2.0' width - cr.LineWidth' height - cr.LineWidth' Context.Radius' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: selection_highlight.A = 0.5;  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled) {  	Color selection_fill_light = CairoExtensions.ColorShade (selection_color' 1.12);  	Color selection_fill_dark = selection_color;  	selection_fill_light.A = color.A;  	selection_fill_dark.A = color.A;  	using (LinearGradient grad = new LinearGradient (x' y' x' y + height)) {  		grad.AddColorStop (0' selection_fill_light);  		grad.AddColorStop (0.4' selection_fill_dark);  		grad.AddColorStop (1' selection_fill_light);  		cr.SetSource (grad);  		CairoExtensions.RoundedRectangle (cr' x' y' width' height' Context.Radius' corners' true);  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled) {  	Color selection_fill_light = CairoExtensions.ColorShade (selection_color' 1.12);  	Color selection_fill_dark = selection_color;  	selection_fill_light.A = color.A;  	selection_fill_dark.A = color.A;  	using (LinearGradient grad = new LinearGradient (x' y' x' y + height)) {  		grad.AddColorStop (0' selection_fill_light);  		grad.AddColorStop (0.4' selection_fill_dark);  		grad.AddColorStop (1' selection_fill_light);  		cr.SetSource (grad);  		CairoExtensions.RoundedRectangle (cr' x' y' width' height' Context.Radius' corners' true);  		cr.Fill ();  	}  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: using (LinearGradient grad = new LinearGradient (x' y' x' y + height)) {  	grad.AddColorStop (0' selection_fill_light);  	grad.AddColorStop (0.4' selection_fill_dark);  	grad.AddColorStop (1' selection_fill_light);  	cr.SetSource (grad);  	CairoExtensions.RoundedRectangle (cr' x' y' width' height' Context.Radius' corners' true);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: grad.AddColorStop (0.4' selection_fill_dark);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {  	cr.LineWidth = 1.0;  	cr.SetSourceColor (selection_highlight);  	CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {  	cr.LineWidth = 1.0;  	cr.SetSourceColor (selection_highlight);  	CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {  	cr.LineWidth = 1.0;  	cr.SetSourceColor (selection_highlight);  	CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (filled && stroked) {  	cr.LineWidth = 1.0;  	cr.SetSourceColor (selection_highlight);  	CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + 1.5' y + 1.5' width - 3' height - 3' Context.Radius - 1' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (stroked) {  	cr.LineWidth = 1.0;  	cr.SetSourceColor (selection_stroke);  	CairoExtensions.RoundedRectangle (cr' x + 0.5' y + 0.5' width - 1' height - 1' Context.Radius' corners' true);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: if (stroked) {  	cr.LineWidth = 1.0;  	cr.SetSourceColor (selection_stroke);  	CairoExtensions.RoundedRectangle (cr' x + 0.5' y + 0.5' width - 1' height - 1' Context.Radius' corners' true);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + 0.5' y + 0.5' width - 1' height - 1' Context.Radius' corners' true);  
Magic Number,MonoDevelop.Components.Theming,GtkTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkTheme.cs,DrawRowSelection,The following statement contains a magic number: CairoExtensions.RoundedRectangle (cr' x + 0.5' y + 0.5' width - 1' height - 1' Context.Radius' corners' true);  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  case PositionType.Left:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Right:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	X = targetPos - WidthRequest;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Top:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	if (HeightRequest < targetSize)  		return true;  	break;  case PositionType.Bottom:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	Y = targetPos - HeightRequest;  	if (HeightRequest < targetSize)  		return true;  	break;  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  case PositionType.Left:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Right:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	X = targetPos - WidthRequest;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Top:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	if (HeightRequest < targetSize)  		return true;  	break;  case PositionType.Bottom:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	Y = targetPos - HeightRequest;  	if (HeightRequest < targetSize)  		return true;  	break;  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  case PositionType.Left:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Right:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	X = targetPos - WidthRequest;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Top:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	if (HeightRequest < targetSize)  		return true;  	break;  case PositionType.Bottom:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	Y = targetPos - HeightRequest;  	if (HeightRequest < targetSize)  		return true;  	break;  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: switch (position) {  case PositionType.Left:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Right:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	X = targetPos - WidthRequest;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Top:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	if (HeightRequest < targetSize)  		return true;  	break;  case PositionType.Bottom:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	Y = targetPos - HeightRequest;  	if (HeightRequest < targetSize)  		return true;  	break;  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: WidthRequest += 1 + (targetSize - WidthRequest) / 3;  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: WidthRequest += 1 + (targetSize - WidthRequest) / 3;  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: HeightRequest += 1 + (targetSize - HeightRequest) / 3;  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following statement contains a magic number: HeightRequest += 1 + (targetSize - HeightRequest) / 3;  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  case PositionType.Left: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		return true;  	}  	break;  }  case PositionType.Right: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		X = targetPos - ns;  		return true;  	}  	break;  }  case PositionType.Top: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		return true;  	}  	break;  }  case PositionType.Bottom: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		Y = targetPos - ns;  		return true;  	}  	break;  }  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  case PositionType.Left: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		return true;  	}  	break;  }  case PositionType.Right: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		X = targetPos - ns;  		return true;  	}  	break;  }  case PositionType.Top: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		return true;  	}  	break;  }  case PositionType.Bottom: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		Y = targetPos - ns;  		return true;  	}  	break;  }  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  case PositionType.Left: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		return true;  	}  	break;  }  case PositionType.Right: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		X = targetPos - ns;  		return true;  	}  	break;  }  case PositionType.Top: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		return true;  	}  	break;  }  case PositionType.Bottom: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		Y = targetPos - ns;  		return true;  	}  	break;  }  }  
Magic Number,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateHide,The following statement contains a magic number: switch (position) {  case PositionType.Left: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		return true;  	}  	break;  }  case PositionType.Right: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		X = targetPos - ns;  		return true;  	}  	break;  }  case PositionType.Top: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		return true;  	}  	break;  }  case PositionType.Bottom: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		Y = targetPos - ns;  		return true;  	}  	break;  }  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,DockBar,The following statement contains a magic number: filler.WidthRequest = 4;  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,DockBar,The following statement contains a magic number: filler.HeightRequest = 4;  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,DisableHoverActivation,The following statement contains a magic number: hoverActivationDelay = DateTime.Now + TimeSpan.FromSeconds (1.5);  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,UpdateVisibility,The following statement contains a magic number: filler.Visible = (Frame.CompactGuiLevel < 3);  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (alloc.X' alloc.Y' alloc.X + alloc.Width' alloc.Y + alloc.Height);  	Cairo.LinearGradient gr;  	if (Orientation == Gtk.Orientation.Vertical)  		gr = new Cairo.LinearGradient (alloc.X' alloc.Y' alloc.X + alloc.Width' alloc.Y);  	else  		gr = new Cairo.LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Y + alloc.Height);  	using (gr) {  		gr.AddColorStop (0' Styles.DockBarBackground1);  		gr.AddColorStop (1' Styles.DockBarBackground2);  		ctx.SetSource (gr);  	}  	ctx.Fill ();  	// Light shadow  	double offs = ShowBorder ? 1.5 : 0.5;  	switch (Position) {  	case PositionType.Left:  		ctx.MoveTo (alloc.X + alloc.Width - offs' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Right:  		ctx.MoveTo (alloc.X + offs' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Top:  		ctx.MoveTo (alloc.X' alloc.Y + alloc.Height - offs);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	case PositionType.Bottom:  		ctx.MoveTo (alloc.X' alloc.Y + offs);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (Styles.DockBarSeparatorColorLight);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.Rectangle (alloc.X' alloc.Y' alloc.X + alloc.Width' alloc.Y + alloc.Height);  	Cairo.LinearGradient gr;  	if (Orientation == Gtk.Orientation.Vertical)  		gr = new Cairo.LinearGradient (alloc.X' alloc.Y' alloc.X + alloc.Width' alloc.Y);  	else  		gr = new Cairo.LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Y + alloc.Height);  	using (gr) {  		gr.AddColorStop (0' Styles.DockBarBackground1);  		gr.AddColorStop (1' Styles.DockBarBackground2);  		ctx.SetSource (gr);  	}  	ctx.Fill ();  	// Light shadow  	double offs = ShowBorder ? 1.5 : 0.5;  	switch (Position) {  	case PositionType.Left:  		ctx.MoveTo (alloc.X + alloc.Width - offs' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Right:  		ctx.MoveTo (alloc.X + offs' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Top:  		ctx.MoveTo (alloc.X' alloc.Y + alloc.Height - offs);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	case PositionType.Bottom:  		ctx.MoveTo (alloc.X' alloc.Y + offs);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (Styles.DockBarSeparatorColorLight);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: if (ShowBorder) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		ctx.LineWidth = 1;  		// Dark separator  		switch (Position) {  		case PositionType.Left:  			ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Right:  			ctx.MoveTo (alloc.X + 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Top:  			ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		case PositionType.Bottom:  			ctx.MoveTo (alloc.X' alloc.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		}  		ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: if (ShowBorder) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		ctx.LineWidth = 1;  		// Dark separator  		switch (Position) {  		case PositionType.Left:  			ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Right:  			ctx.MoveTo (alloc.X + 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Top:  			ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		case PositionType.Bottom:  			ctx.MoveTo (alloc.X' alloc.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		}  		ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: if (ShowBorder) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		ctx.LineWidth = 1;  		// Dark separator  		switch (Position) {  		case PositionType.Left:  			ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Right:  			ctx.MoveTo (alloc.X + 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Top:  			ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		case PositionType.Bottom:  			ctx.MoveTo (alloc.X' alloc.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		}  		ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: if (ShowBorder) {  	using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  		ctx.LineWidth = 1;  		// Dark separator  		switch (Position) {  		case PositionType.Left:  			ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Right:  			ctx.MoveTo (alloc.X + 0.5' alloc.Y);  			ctx.RelLineTo (0' Allocation.Height);  			break;  		case PositionType.Top:  			ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		case PositionType.Bottom:  			ctx.MoveTo (alloc.X' alloc.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			break;  		}  		ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.LineWidth = 1;  	// Dark separator  	switch (Position) {  	case PositionType.Left:  		ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Right:  		ctx.MoveTo (alloc.X + 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Top:  		ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	case PositionType.Bottom:  		ctx.MoveTo (alloc.X' alloc.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	}  	ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.LineWidth = 1;  	// Dark separator  	switch (Position) {  	case PositionType.Left:  		ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Right:  		ctx.MoveTo (alloc.X + 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Top:  		ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	case PositionType.Bottom:  		ctx.MoveTo (alloc.X' alloc.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	}  	ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.LineWidth = 1;  	// Dark separator  	switch (Position) {  	case PositionType.Left:  		ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Right:  		ctx.MoveTo (alloc.X + 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Top:  		ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	case PositionType.Bottom:  		ctx.MoveTo (alloc.X' alloc.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	}  	ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	ctx.LineWidth = 1;  	// Dark separator  	switch (Position) {  	case PositionType.Left:  		ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Right:  		ctx.MoveTo (alloc.X + 0.5' alloc.Y);  		ctx.RelLineTo (0' Allocation.Height);  		break;  	case PositionType.Top:  		ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	case PositionType.Bottom:  		ctx.MoveTo (alloc.X' alloc.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		break;  	}  	ctx.SetSourceColor (Styles.DockSeparatorColor.ToCairoColor ());  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: switch (Position) {  case PositionType.Left:  	ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Right:  	ctx.MoveTo (alloc.X + 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Top:  	ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  case PositionType.Bottom:  	ctx.MoveTo (alloc.X' alloc.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: switch (Position) {  case PositionType.Left:  	ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Right:  	ctx.MoveTo (alloc.X + 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Top:  	ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  case PositionType.Bottom:  	ctx.MoveTo (alloc.X' alloc.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: switch (Position) {  case PositionType.Left:  	ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Right:  	ctx.MoveTo (alloc.X + 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Top:  	ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  case PositionType.Bottom:  	ctx.MoveTo (alloc.X' alloc.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: switch (Position) {  case PositionType.Left:  	ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Right:  	ctx.MoveTo (alloc.X + 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Top:  	ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  case PositionType.Bottom:  	ctx.MoveTo (alloc.X' alloc.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  }  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (alloc.X + 0.5' alloc.Y);  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  
Magic Number,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (alloc.X' alloc.Y + 0.5);  
Magic Number,MonoDevelop.Components.Docking,CrossfadeIcon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,RenderIcon,The following statement contains a magic number: context.SetSourceSurface (surface.Surface' Allocation.X + (Allocation.Width - surface.Width) / 2' Allocation.Y + (Allocation.Height - surface.Height) / 2);  
Magic Number,MonoDevelop.Components.Docking,CrossfadeIcon,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,RenderIcon,The following statement contains a magic number: context.SetSourceSurface (surface.Surface' Allocation.X + (Allocation.Width - surface.Width) / 2' Allocation.Y + (Allocation.Height - surface.Height) / 2);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,AnimateHover,The following statement contains a magic number: this.Animate ("Hover"' x => hoverProgress = x' hoverProgress' hovered ? 1.0f : 0.0f' length: 100);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Horizontal) {  	box = new HBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (3' 3' 11' 9);  	else  		mainBox.SetPadding (3' 3' 9' 11);  }  else {  	box = new VBox ();  	if (bar.AlignToEnd)  		mainBox.SetPadding (11' 9' 3' 3);  	else  		mainBox.SetPadding (9' 11' 3' 3);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (3' 3' 11' 9);  else  	mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 11' 9);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 11' 9);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 11' 9);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 11' 9);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (3' 3' 9' 11);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.AlignToEnd)  	mainBox.SetPadding (11' 9' 3' 3);  else  	mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (11' 9' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (11' 9' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (11' 9' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (11' 9' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: mainBox.SetPadding (9' 11' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (customLabel != null) {  	customLabel.ShowAll ();  	box.PackStart (customLabel' true' true' 0);  }  else {  	if (it.Icon != null) {  		Gdk.Pixbuf desat = it.Icon.Copy ();  		desat.SaturateAndPixelate (desat' 0.5f' false);  		crossfade = new CrossfadeIcon (desat' it.Icon);  		box.PackStart (crossfade' false' false' 0);  		desat.Dispose ();  	}  	if (!string.IsNullOrEmpty (it.Label)) {  		label = new Gtk.Label (it.Label);  		label.UseMarkup = true;  		if (bar.Orientation == Gtk.Orientation.Vertical)  			label.Angle = 270;  		box.PackStart (label' true' true' 0);  	}  	else  		label = null;  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (!string.IsNullOrEmpty (it.Label)) {  	label = new Gtk.Label (it.Label);  	label.UseMarkup = true;  	if (bar.Orientation == Gtk.Orientation.Vertical)  		label.Angle = 270;  	box.PackStart (label' true' true' 0);  }  else  	label = null;  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: if (bar.Orientation == Gtk.Orientation.Vertical)  	label.Angle = 270;  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: label.Angle = 270;  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,UpdateTab,The following statement contains a magic number: box.Spacing = 2;  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,Present,The following statement contains a magic number: if (giveFocus) {  	GLib.Timeout.Add (200' delegate {  		// Using a small delay because AutoShow uses an animation and setting focus may  		// not work until the item is visible  		it.SetFocus ();  		ScheduleAutoHide (false);  		return false;  	});  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,Present,The following statement contains a magic number: GLib.Timeout.Add (200' delegate {  	// Using a small delay because AutoShow uses an animation and setting focus may  	// not work until the item is visible  	it.SetFocus ();  	ScheduleAutoHide (false);  	return false;  });  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	var alloc = Allocation;  	Cairo.LinearGradient lg;  	if (bar.Orientation == Orientation.Horizontal) {  		lg = new Cairo.LinearGradient (alloc.X' 0' alloc.X + alloc.Width' 0);  	}  	else {  		lg = new Cairo.LinearGradient (0' alloc.Y' 0' alloc.Y + alloc.Height);  	}  	using (lg) {  		Cairo.Color primaryColor = Styles.DockBarPrelightColor;  		primaryColor.A = hoverProgress;  		Cairo.Color transparent = primaryColor;  		transparent.A = 0;  		lg.AddColorStop (0.0' transparent);  		lg.AddColorStop (0.35' primaryColor);  		lg.AddColorStop (0.65' primaryColor);  		lg.AddColorStop (1.0' transparent);  		context.Rectangle (alloc.ToCairoRect ());  		context.SetSource (lg);  	}  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	var alloc = Allocation;  	Cairo.LinearGradient lg;  	if (bar.Orientation == Orientation.Horizontal) {  		lg = new Cairo.LinearGradient (alloc.X' 0' alloc.X + alloc.Width' 0);  	}  	else {  		lg = new Cairo.LinearGradient (0' alloc.Y' 0' alloc.Y + alloc.Height);  	}  	using (lg) {  		Cairo.Color primaryColor = Styles.DockBarPrelightColor;  		primaryColor.A = hoverProgress;  		Cairo.Color transparent = primaryColor;  		transparent.A = 0;  		lg.AddColorStop (0.0' transparent);  		lg.AddColorStop (0.35' primaryColor);  		lg.AddColorStop (0.65' primaryColor);  		lg.AddColorStop (1.0' transparent);  		context.Rectangle (alloc.ToCairoRect ());  		context.SetSource (lg);  	}  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: using (lg) {  	Cairo.Color primaryColor = Styles.DockBarPrelightColor;  	primaryColor.A = hoverProgress;  	Cairo.Color transparent = primaryColor;  	transparent.A = 0;  	lg.AddColorStop (0.0' transparent);  	lg.AddColorStop (0.35' primaryColor);  	lg.AddColorStop (0.65' primaryColor);  	lg.AddColorStop (1.0' transparent);  	context.Rectangle (alloc.ToCairoRect ());  	context.SetSource (lg);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: using (lg) {  	Cairo.Color primaryColor = Styles.DockBarPrelightColor;  	primaryColor.A = hoverProgress;  	Cairo.Color transparent = primaryColor;  	transparent.A = 0;  	lg.AddColorStop (0.0' transparent);  	lg.AddColorStop (0.35' primaryColor);  	lg.AddColorStop (0.65' primaryColor);  	lg.AddColorStop (1.0' transparent);  	context.Rectangle (alloc.ToCairoRect ());  	context.SetSource (lg);  }  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: lg.AddColorStop (0.35' primaryColor);  
Magic Number,MonoDevelop.Components.Docking,DockBarItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBarItem.cs,OnExposeEvent,The following statement contains a magic number: lg.AddColorStop (0.65' primaryColor);  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: if (a.Height > a.Width) {  	a.Width = 5;  	a.X -= 2;  }  else {  	a.Height = 5;  	a.Y -= 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: if (a.Height > a.Width) {  	a.Width = 5;  	a.X -= 2;  }  else {  	a.Height = 5;  	a.Y -= 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: if (a.Height > a.Width) {  	a.Width = 5;  	a.X -= 2;  }  else {  	a.Height = 5;  	a.Y -= 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: if (a.Height > a.Width) {  	a.Width = 5;  	a.X -= 2;  }  else {  	a.Height = 5;  	a.Y -= 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: a.Width = 5;  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: a.X -= 2;  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: a.Height = 5;  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,AllocateSplitter,The following statement contains a magic number: a.Y -= 2;  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: padTitleWindow.Move (ox + px - tw / 2' oy + py - th / 2);  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: padTitleWindow.Move (ox + px - tw / 2' oy + py - th / 2);  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: if (allowDocking && layout.GetDockTarget (item' px' py' out dockDelegate' out rect)) {  	placeholderWindow.Relocate (ox + rect.X' oy + rect.Y' rect.Width' rect.Height' true);  	placeholderWindow.Show ();  	placeholderWindow.SetDockInfo (dockDelegate' rect);  	return true;  }  else {  	int w' h;  	var gi = layout.FindDockGroupItem (item.Id);  	if (gi != null) {  		w = gi.Allocation.Width;  		h = gi.Allocation.Height;  	}  	else {  		w = item.DefaultWidth;  		h = item.DefaultHeight;  	}  	placeholderWindow.Relocate (ox + px - w / 2' oy + py - h / 2' w' h' false);  	placeholderWindow.Show ();  	placeholderWindow.AllowDocking = false;  }  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: if (allowDocking && layout.GetDockTarget (item' px' py' out dockDelegate' out rect)) {  	placeholderWindow.Relocate (ox + rect.X' oy + rect.Y' rect.Width' rect.Height' true);  	placeholderWindow.Show ();  	placeholderWindow.SetDockInfo (dockDelegate' rect);  	return true;  }  else {  	int w' h;  	var gi = layout.FindDockGroupItem (item.Id);  	if (gi != null) {  		w = gi.Allocation.Width;  		h = gi.Allocation.Height;  	}  	else {  		w = item.DefaultWidth;  		h = item.DefaultHeight;  	}  	placeholderWindow.Relocate (ox + px - w / 2' oy + py - h / 2' w' h' false);  	placeholderWindow.Show ();  	placeholderWindow.AllowDocking = false;  }  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: placeholderWindow.Relocate (ox + px - w / 2' oy + py - h / 2' w' h' false);  
Magic Number,MonoDevelop.Components.Docking,DockContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockContainer.cs,UpdatePlaceholder,The following statement contains a magic number: placeholderWindow.Relocate (ox + px - w / 2' oy + py - h / 2' w' h' false);  
Magic Number,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,DockFrame,The following statement contains a magic number: CompactGuiLevel = 2;  
Magic Number,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,OnRealized,The following statement contains a magic number: cLight.L *= 0.9;  
Magic Number,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,OnRealized,The following statement contains a magic number: cDark.L *= 0.8;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,UpdateNotebook,The following statement contains a magic number: if (Frame.CompactGuiLevel == 3 && IsNextToMargin (PositionType.Bottom' true))  	boundTabStrip.BottomPadding = 3;  else  	boundTabStrip.BottomPadding = 0;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,UpdateNotebook,The following statement contains a magic number: if (Frame.CompactGuiLevel == 3 && IsNextToMargin (PositionType.Bottom' true))  	boundTabStrip.BottomPadding = 3;  else  	boundTabStrip.BottomPadding = 0;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,UpdateNotebook,The following statement contains a magic number: boundTabStrip.BottomPadding = 3;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  	// Tabs can only contain DockGroupItems  	var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1];  	return ((DockGroupItem)sel).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  }  else if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  	// Tabs can only contain DockGroupItems  	var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1];  	return ((DockGroupItem)sel).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  }  else if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  	// Tabs can only contain DockGroupItems  	var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1];  	return ((DockGroupItem)sel).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  }  else if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  	// Tabs can only contain DockGroupItems  	var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1];  	return ((DockGroupItem)sel).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  }  else if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  	// Tabs can only contain DockGroupItems  	var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1];  	return ((DockGroupItem)sel).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  }  else if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Tabbed) {  	// Tabs can only contain DockGroupItems  	var sel = boundTabStrip != null ? VisibleObjects [boundTabStrip.CurrentTab] : VisibleObjects [VisibleObjects.Count - 1];  	return ((DockGroupItem)sel).GetDockTarget (item' px' py' Allocation' out dockDelegate' out rect);  }  else if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Horizontal) {  	if (px >= Allocation.Right - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the right of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.Right - DockFrame.GroupDockSeparatorSize' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (px <= Allocation.Left + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleColumnMode.Value)  			return false;  		// Dock to the left of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.Left' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleColumnMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  else if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: for (int n = 0; n < VisibleObjects.Count; n++) {  	DockObject ob = VisibleObjects [n];  	if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  		// Check if the item is allowed to be docked here  		int dn = dockObjects.IndexOf (ob) + 1;  		var s = Frame.GetRegionStyleForPosition (this' dn' true);  		if (s.SingleColumnMode.Value)  			return false;  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dn);  		};  		rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  		return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: for (int n = 0; n < VisibleObjects.Count; n++) {  	DockObject ob = VisibleObjects [n];  	if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  		// Check if the item is allowed to be docked here  		int dn = dockObjects.IndexOf (ob) + 1;  		var s = Frame.GetRegionStyleForPosition (this' dn' true);  		if (s.SingleColumnMode.Value)  			return false;  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dn);  		};  		rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  		return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: for (int n = 0; n < VisibleObjects.Count; n++) {  	DockObject ob = VisibleObjects [n];  	if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  		// Check if the item is allowed to be docked here  		int dn = dockObjects.IndexOf (ob) + 1;  		var s = Frame.GetRegionStyleForPosition (this' dn' true);  		if (s.SingleColumnMode.Value)  			return false;  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dn);  		};  		rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  		return true;  	}  	else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  		return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  	// Check if the item is allowed to be docked here  	int dn = dockObjects.IndexOf (ob) + 1;  	var s = Frame.GetRegionStyleForPosition (this' dn' true);  	if (s.SingleColumnMode.Value)  		return false;  	dockDelegate = delegate (DockItem it) {  		DockTarget (it' dn);  	};  	rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  	return true;  }  else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  	return true;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  	// Check if the item is allowed to be docked here  	int dn = dockObjects.IndexOf (ob) + 1;  	var s = Frame.GetRegionStyleForPosition (this' dn' true);  	if (s.SingleColumnMode.Value)  		return false;  	dockDelegate = delegate (DockItem it) {  		DockTarget (it' dn);  	};  	rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  	return true;  }  else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  	return true;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (n < VisibleObjects.Count - 1 && px >= ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2 && px <= ob.Allocation.Right + DockFrame.GroupDockSeparatorSize / 2) {  	// Check if the item is allowed to be docked here  	int dn = dockObjects.IndexOf (ob) + 1;  	var s = Frame.GetRegionStyleForPosition (this' dn' true);  	if (s.SingleColumnMode.Value)  		return false;  	dockDelegate = delegate (DockItem it) {  		DockTarget (it' dn);  	};  	rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  	return true;  }  else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  	return true;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: rect = new Gdk.Rectangle (ob.Allocation.Right - DockFrame.GroupDockSeparatorSize / 2' Allocation.Y' DockFrame.GroupDockSeparatorSize' Allocation.Height);  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (type == DockGroupType.Vertical) {  	if (py >= Allocation.Bottom - DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [VisibleObjects.Count - 1]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the bottom of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dockObjects.Count);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Bottom - DockFrame.GroupDockSeparatorSize' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (py <= Allocation.Top + DockFrame.GroupDockSeparatorSize) {  		// Check if the item is allowed to be docked here  		var s = Frame.GetRegionStyleForObject (VisibleObjects [0]);  		if (s.SingleRowMode.Value)  			return false;  		// Dock to the top of the group  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' 0);  		};  		rect = new Gdk.Rectangle (Allocation.X' Allocation.Top' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	// Dock in a separator  	for (int n = 0; n < VisibleObjects.Count; n++) {  		DockObject ob = VisibleObjects [n];  		if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  			// Check if the item is allowed to be docked here  			int dn = dockObjects.IndexOf (ob) + 1;  			var s = Frame.GetRegionStyleForPosition (this' dn' true);  			if (s.SingleRowMode.Value)  				return false;  			dockDelegate = delegate (DockItem it) {  				DockTarget (it' dn);  			};  			rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  			return true;  		}  		else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  			return true;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: for (int n = 0; n < VisibleObjects.Count; n++) {  	DockObject ob = VisibleObjects [n];  	if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  		// Check if the item is allowed to be docked here  		int dn = dockObjects.IndexOf (ob) + 1;  		var s = Frame.GetRegionStyleForPosition (this' dn' true);  		if (s.SingleRowMode.Value)  			return false;  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dn);  		};  		rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  		return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: for (int n = 0; n < VisibleObjects.Count; n++) {  	DockObject ob = VisibleObjects [n];  	if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  		// Check if the item is allowed to be docked here  		int dn = dockObjects.IndexOf (ob) + 1;  		var s = Frame.GetRegionStyleForPosition (this' dn' true);  		if (s.SingleRowMode.Value)  			return false;  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dn);  		};  		rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  		return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: for (int n = 0; n < VisibleObjects.Count; n++) {  	DockObject ob = VisibleObjects [n];  	if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  		// Check if the item is allowed to be docked here  		int dn = dockObjects.IndexOf (ob) + 1;  		var s = Frame.GetRegionStyleForPosition (this' dn' true);  		if (s.SingleRowMode.Value)  			return false;  		dockDelegate = delegate (DockItem it) {  			DockTarget (it' dn);  		};  		rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  		return true;  	}  	else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  		return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  	// Check if the item is allowed to be docked here  	int dn = dockObjects.IndexOf (ob) + 1;  	var s = Frame.GetRegionStyleForPosition (this' dn' true);  	if (s.SingleRowMode.Value)  		return false;  	dockDelegate = delegate (DockItem it) {  		DockTarget (it' dn);  	};  	rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  	return true;  }  else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  	return true;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  	// Check if the item is allowed to be docked here  	int dn = dockObjects.IndexOf (ob) + 1;  	var s = Frame.GetRegionStyleForPosition (this' dn' true);  	if (s.SingleRowMode.Value)  		return false;  	dockDelegate = delegate (DockItem it) {  		DockTarget (it' dn);  	};  	rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  	return true;  }  else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  	return true;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: if (n < VisibleObjects.Count - 1 && py >= ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2 && py <= ob.Allocation.Bottom + DockFrame.GroupDockSeparatorSize / 2) {  	// Check if the item is allowed to be docked here  	int dn = dockObjects.IndexOf (ob) + 1;  	var s = Frame.GetRegionStyleForPosition (this' dn' true);  	if (s.SingleRowMode.Value)  		return false;  	dockDelegate = delegate (DockItem it) {  		DockTarget (it' dn);  	};  	rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  	return true;  }  else if (ob.GetDockTarget (item' px' py' out dockDelegate' out rect))  	return true;  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,GetDockTarget,The following statement contains a magic number: rect = new Gdk.Rectangle (Allocation.X' ob.Allocation.Bottom - DockFrame.GroupDockSeparatorSize / 2' Allocation.Width' DockFrame.GroupDockSeparatorSize);  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,Dump,The following statement contains a magic number: foreach (DockObject ob in dockObjects) {  	ob.Dump (ind + 2);  }  
Magic Number,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,Dump,The following statement contains a magic number: ob.Dump (ind + 2);  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  	// Check if the item is allowed to be docked here  	var s = Frame.GetRegionStyleForObject (this);  	int xdockMargin = (int)((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	int ydockMargin = (int)((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	DockPosition pos;  	/*				if (ParentGroup.Type == DockGroupType.Tabbed) { 					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2); 					pos = DockPosition.CenterAfter; 				}*/if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Left;  	}  	else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Right;  	}  	else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  		pos = DockPosition.Top;  	}  	else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  		pos = DockPosition.Bottom;  	}  	else {  		outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  		pos = DockPosition.Center;  	}  	dockDelegate = delegate (DockItem dit) {  		DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  		it.SetVisible (true);  		ParentGroup.FocusItem (it);  	};  	return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  	// Check if the item is allowed to be docked here  	var s = Frame.GetRegionStyleForObject (this);  	int xdockMargin = (int)((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	int ydockMargin = (int)((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	DockPosition pos;  	/*				if (ParentGroup.Type == DockGroupType.Tabbed) { 					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2); 					pos = DockPosition.CenterAfter; 				}*/if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Left;  	}  	else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Right;  	}  	else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  		pos = DockPosition.Top;  	}  	else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  		pos = DockPosition.Bottom;  	}  	else {  		outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  		pos = DockPosition.Center;  	}  	dockDelegate = delegate (DockItem dit) {  		DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  		it.SetVisible (true);  		ParentGroup.FocusItem (it);  	};  	return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  	// Check if the item is allowed to be docked here  	var s = Frame.GetRegionStyleForObject (this);  	int xdockMargin = (int)((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	int ydockMargin = (int)((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	DockPosition pos;  	/*				if (ParentGroup.Type == DockGroupType.Tabbed) { 					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2); 					pos = DockPosition.CenterAfter; 				}*/if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Left;  	}  	else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Right;  	}  	else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  		pos = DockPosition.Top;  	}  	else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  		pos = DockPosition.Bottom;  	}  	else {  		outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  		pos = DockPosition.Center;  	}  	dockDelegate = delegate (DockItem dit) {  		DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  		it.SetVisible (true);  		ParentGroup.FocusItem (it);  	};  	return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (item != this.item && this.item.Visible && rect.Contains (px' py)) {  	// Check if the item is allowed to be docked here  	var s = Frame.GetRegionStyleForObject (this);  	int xdockMargin = (int)((double)rect.Width * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	int ydockMargin = (int)((double)rect.Height * (1.0 - DockFrame.ItemDockCenterArea)) / 2;  	DockPosition pos;  	/*				if (ParentGroup.Type == DockGroupType.Tabbed) { 					rect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin*2' rect.Height - ydockMargin*2); 					pos = DockPosition.CenterAfter; 				}*/if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Left;  	}  	else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  		if (s.SingleColumnMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  		pos = DockPosition.Right;  	}  	else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  		pos = DockPosition.Top;  	}  	else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  		if (s.SingleRowMode.Value)  			return false;  		outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  		pos = DockPosition.Bottom;  	}  	else {  		outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  		pos = DockPosition.Center;  	}  	dockDelegate = delegate (DockItem dit) {  		DockGroupItem it = ParentGroup.AddObject (dit' pos' Id);  		it.SetVisible (true);  		ParentGroup.FocusItem (it);  	};  	return true;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  	if (s.SingleColumnMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  	pos = DockPosition.Left;  }  else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  	if (s.SingleColumnMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  	pos = DockPosition.Right;  }  else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  	pos = DockPosition.Top;  }  else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (px <= rect.X + xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  	if (s.SingleColumnMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' xdockMargin' rect.Height);  	pos = DockPosition.Left;  }  else if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  	if (s.SingleColumnMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  	pos = DockPosition.Right;  }  else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  	pos = DockPosition.Top;  }  else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  	if (s.SingleColumnMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  	pos = DockPosition.Right;  }  else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  	pos = DockPosition.Top;  }  else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (px >= rect.Right - xdockMargin && ParentGroup.Type != DockGroupType.Horizontal) {  	if (s.SingleColumnMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.Right - xdockMargin' rect.Y' xdockMargin' rect.Height);  	pos = DockPosition.Right;  }  else if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  	pos = DockPosition.Top;  }  else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  	pos = DockPosition.Top;  }  else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (py <= rect.Y + ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Y' rect.Width' ydockMargin);  	pos = DockPosition.Top;  }  else if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: if (py >= rect.Bottom - ydockMargin && ParentGroup.Type != DockGroupType.Vertical) {  	if (s.SingleRowMode.Value)  		return false;  	outrect = new Gdk.Rectangle (rect.X' rect.Bottom - ydockMargin' rect.Width' ydockMargin);  	pos = DockPosition.Bottom;  }  else {  	outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  	pos = DockPosition.Center;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,GetDockTarget,The following statement contains a magic number: outrect = new Gdk.Rectangle (rect.X + xdockMargin' rect.Y + ydockMargin' rect.Width - xdockMargin * 2' rect.Height - ydockMargin * 2);  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  	int uniqueTrue = -1;  	int uniqueFalse = -1;  	for (int n = 0; n < 4; n++) {  		bool inMargin = IsNextToMargin ((PositionType)n' false);  		if (inMargin) {  			if (uniqueTrue == -1)  				uniqueTrue = n;  			else  				uniqueTrue = -2;  		}  		else {  			if (uniqueFalse == -1)  				uniqueFalse = n;  			else  				uniqueFalse = -2;  		}  	}  	if (uniqueTrue >= 0) {  		barDocPosition = (PositionType)uniqueTrue;  		autoHideSize = 200;  		return;  	}  	else if (uniqueFalse >= 0) {  		barDocPosition = (PositionType)uniqueFalse;  		switch (barDocPosition) {  		case PositionType.Left:  			barDocPosition = PositionType.Right;  			break;  		case PositionType.Right:  			barDocPosition = PositionType.Left;  			break;  		case PositionType.Top:  			barDocPosition = PositionType.Bottom;  			break;  		case PositionType.Bottom:  			barDocPosition = PositionType.Top;  			break;  		}  		autoHideSize = 200;  		return;  	}  	// If the item is in a group' use the dock location of other items  	DockObject current = this;  	do {  		if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  			return;  		current = current.ParentGroup;  	}  	while (current.ParentGroup != null);  	// Can't find a good location. Just guess.  	barDocPosition = PositionType.Bottom;  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  	int uniqueTrue = -1;  	int uniqueFalse = -1;  	for (int n = 0; n < 4; n++) {  		bool inMargin = IsNextToMargin ((PositionType)n' false);  		if (inMargin) {  			if (uniqueTrue == -1)  				uniqueTrue = n;  			else  				uniqueTrue = -2;  		}  		else {  			if (uniqueFalse == -1)  				uniqueFalse = n;  			else  				uniqueFalse = -2;  		}  	}  	if (uniqueTrue >= 0) {  		barDocPosition = (PositionType)uniqueTrue;  		autoHideSize = 200;  		return;  	}  	else if (uniqueFalse >= 0) {  		barDocPosition = (PositionType)uniqueFalse;  		switch (barDocPosition) {  		case PositionType.Left:  			barDocPosition = PositionType.Right;  			break;  		case PositionType.Right:  			barDocPosition = PositionType.Left;  			break;  		case PositionType.Top:  			barDocPosition = PositionType.Bottom;  			break;  		case PositionType.Bottom:  			barDocPosition = PositionType.Top;  			break;  		}  		autoHideSize = 200;  		return;  	}  	// If the item is in a group' use the dock location of other items  	DockObject current = this;  	do {  		if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  			return;  		current = current.ParentGroup;  	}  	while (current.ParentGroup != null);  	// Can't find a good location. Just guess.  	barDocPosition = PositionType.Bottom;  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  	int uniqueTrue = -1;  	int uniqueFalse = -1;  	for (int n = 0; n < 4; n++) {  		bool inMargin = IsNextToMargin ((PositionType)n' false);  		if (inMargin) {  			if (uniqueTrue == -1)  				uniqueTrue = n;  			else  				uniqueTrue = -2;  		}  		else {  			if (uniqueFalse == -1)  				uniqueFalse = n;  			else  				uniqueFalse = -2;  		}  	}  	if (uniqueTrue >= 0) {  		barDocPosition = (PositionType)uniqueTrue;  		autoHideSize = 200;  		return;  	}  	else if (uniqueFalse >= 0) {  		barDocPosition = (PositionType)uniqueFalse;  		switch (barDocPosition) {  		case PositionType.Left:  			barDocPosition = PositionType.Right;  			break;  		case PositionType.Right:  			barDocPosition = PositionType.Left;  			break;  		case PositionType.Top:  			barDocPosition = PositionType.Bottom;  			break;  		case PositionType.Bottom:  			barDocPosition = PositionType.Top;  			break;  		}  		autoHideSize = 200;  		return;  	}  	// If the item is in a group' use the dock location of other items  	DockObject current = this;  	do {  		if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  			return;  		current = current.ParentGroup;  	}  	while (current.ParentGroup != null);  	// Can't find a good location. Just guess.  	barDocPosition = PositionType.Bottom;  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  	int uniqueTrue = -1;  	int uniqueFalse = -1;  	for (int n = 0; n < 4; n++) {  		bool inMargin = IsNextToMargin ((PositionType)n' false);  		if (inMargin) {  			if (uniqueTrue == -1)  				uniqueTrue = n;  			else  				uniqueTrue = -2;  		}  		else {  			if (uniqueFalse == -1)  				uniqueFalse = n;  			else  				uniqueFalse = -2;  		}  	}  	if (uniqueTrue >= 0) {  		barDocPosition = (PositionType)uniqueTrue;  		autoHideSize = 200;  		return;  	}  	else if (uniqueFalse >= 0) {  		barDocPosition = (PositionType)uniqueFalse;  		switch (barDocPosition) {  		case PositionType.Left:  			barDocPosition = PositionType.Right;  			break;  		case PositionType.Right:  			barDocPosition = PositionType.Left;  			break;  		case PositionType.Top:  			barDocPosition = PositionType.Bottom;  			break;  		case PositionType.Bottom:  			barDocPosition = PositionType.Top;  			break;  		}  		autoHideSize = 200;  		return;  	}  	// If the item is in a group' use the dock location of other items  	DockObject current = this;  	do {  		if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  			return;  		current = current.ParentGroup;  	}  	while (current.ParentGroup != null);  	// Can't find a good location. Just guess.  	barDocPosition = PositionType.Bottom;  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  	int uniqueTrue = -1;  	int uniqueFalse = -1;  	for (int n = 0; n < 4; n++) {  		bool inMargin = IsNextToMargin ((PositionType)n' false);  		if (inMargin) {  			if (uniqueTrue == -1)  				uniqueTrue = n;  			else  				uniqueTrue = -2;  		}  		else {  			if (uniqueFalse == -1)  				uniqueFalse = n;  			else  				uniqueFalse = -2;  		}  	}  	if (uniqueTrue >= 0) {  		barDocPosition = (PositionType)uniqueTrue;  		autoHideSize = 200;  		return;  	}  	else if (uniqueFalse >= 0) {  		barDocPosition = (PositionType)uniqueFalse;  		switch (barDocPosition) {  		case PositionType.Left:  			barDocPosition = PositionType.Right;  			break;  		case PositionType.Right:  			barDocPosition = PositionType.Left;  			break;  		case PositionType.Top:  			barDocPosition = PositionType.Bottom;  			break;  		case PositionType.Bottom:  			barDocPosition = PositionType.Top;  			break;  		}  		autoHideSize = 200;  		return;  	}  	// If the item is in a group' use the dock location of other items  	DockObject current = this;  	do {  		if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  			return;  		current = current.ParentGroup;  	}  	while (current.ParentGroup != null);  	// Can't find a good location. Just guess.  	barDocPosition = PositionType.Bottom;  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (Allocation.IsEmpty) {  	int uniqueTrue = -1;  	int uniqueFalse = -1;  	for (int n = 0; n < 4; n++) {  		bool inMargin = IsNextToMargin ((PositionType)n' false);  		if (inMargin) {  			if (uniqueTrue == -1)  				uniqueTrue = n;  			else  				uniqueTrue = -2;  		}  		else {  			if (uniqueFalse == -1)  				uniqueFalse = n;  			else  				uniqueFalse = -2;  		}  	}  	if (uniqueTrue >= 0) {  		barDocPosition = (PositionType)uniqueTrue;  		autoHideSize = 200;  		return;  	}  	else if (uniqueFalse >= 0) {  		barDocPosition = (PositionType)uniqueFalse;  		switch (barDocPosition) {  		case PositionType.Left:  			barDocPosition = PositionType.Right;  			break;  		case PositionType.Right:  			barDocPosition = PositionType.Left;  			break;  		case PositionType.Top:  			barDocPosition = PositionType.Bottom;  			break;  		case PositionType.Bottom:  			barDocPosition = PositionType.Top;  			break;  		}  		autoHideSize = 200;  		return;  	}  	// If the item is in a group' use the dock location of other items  	DockObject current = this;  	do {  		if (EstimateBarDocPosition (current.ParentGroup' current' out barDocPosition' out autoHideSize))  			return;  		current = current.ParentGroup;  	}  	while (current.ParentGroup != null);  	// Can't find a good location. Just guess.  	barDocPosition = PositionType.Bottom;  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: for (int n = 0; n < 4; n++) {  	bool inMargin = IsNextToMargin ((PositionType)n' false);  	if (inMargin) {  		if (uniqueTrue == -1)  			uniqueTrue = n;  		else  			uniqueTrue = -2;  	}  	else {  		if (uniqueFalse == -1)  			uniqueFalse = n;  		else  			uniqueFalse = -2;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: for (int n = 0; n < 4; n++) {  	bool inMargin = IsNextToMargin ((PositionType)n' false);  	if (inMargin) {  		if (uniqueTrue == -1)  			uniqueTrue = n;  		else  			uniqueTrue = -2;  	}  	else {  		if (uniqueFalse == -1)  			uniqueFalse = n;  		else  			uniqueFalse = -2;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: for (int n = 0; n < 4; n++) {  	bool inMargin = IsNextToMargin ((PositionType)n' false);  	if (inMargin) {  		if (uniqueTrue == -1)  			uniqueTrue = n;  		else  			uniqueTrue = -2;  	}  	else {  		if (uniqueFalse == -1)  			uniqueFalse = n;  		else  			uniqueFalse = -2;  	}  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (inMargin) {  	if (uniqueTrue == -1)  		uniqueTrue = n;  	else  		uniqueTrue = -2;  }  else {  	if (uniqueFalse == -1)  		uniqueFalse = n;  	else  		uniqueFalse = -2;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (inMargin) {  	if (uniqueTrue == -1)  		uniqueTrue = n;  	else  		uniqueTrue = -2;  }  else {  	if (uniqueFalse == -1)  		uniqueFalse = n;  	else  		uniqueFalse = -2;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (uniqueTrue == -1)  	uniqueTrue = n;  else  	uniqueTrue = -2;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: uniqueTrue = -2;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (uniqueFalse == -1)  	uniqueFalse = n;  else  	uniqueFalse = -2;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: uniqueFalse = -2;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (uniqueTrue >= 0) {  	barDocPosition = (PositionType)uniqueTrue;  	autoHideSize = 200;  	return;  }  else if (uniqueFalse >= 0) {  	barDocPosition = (PositionType)uniqueFalse;  	switch (barDocPosition) {  	case PositionType.Left:  		barDocPosition = PositionType.Right;  		break;  	case PositionType.Right:  		barDocPosition = PositionType.Left;  		break;  	case PositionType.Top:  		barDocPosition = PositionType.Bottom;  		break;  	case PositionType.Bottom:  		barDocPosition = PositionType.Top;  		break;  	}  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (uniqueTrue >= 0) {  	barDocPosition = (PositionType)uniqueTrue;  	autoHideSize = 200;  	return;  }  else if (uniqueFalse >= 0) {  	barDocPosition = (PositionType)uniqueFalse;  	switch (barDocPosition) {  	case PositionType.Left:  		barDocPosition = PositionType.Right;  		break;  	case PositionType.Right:  		barDocPosition = PositionType.Left;  		break;  	case PositionType.Top:  		barDocPosition = PositionType.Bottom;  		break;  	case PositionType.Bottom:  		barDocPosition = PositionType.Top;  		break;  	}  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: autoHideSize = 200;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: if (uniqueFalse >= 0) {  	barDocPosition = (PositionType)uniqueFalse;  	switch (barDocPosition) {  	case PositionType.Left:  		barDocPosition = PositionType.Right;  		break;  	case PositionType.Right:  		barDocPosition = PositionType.Left;  		break;  	case PositionType.Top:  		barDocPosition = PositionType.Bottom;  		break;  	case PositionType.Bottom:  		barDocPosition = PositionType.Top;  		break;  	}  	autoHideSize = 200;  	return;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: autoHideSize = 200;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following statement contains a magic number: autoHideSize = 200;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  	int mid = Allocation.Left + Allocation.Width / 2;  	if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  		return PositionType.Right;  	else  		return PositionType.Left;  }  else {  	int mid = Allocation.Top + Allocation.Height / 2;  	if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  		return PositionType.Bottom;  	else  		return PositionType.Top;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  	int mid = Allocation.Left + Allocation.Width / 2;  	if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  		return PositionType.Right;  	else  		return PositionType.Left;  }  else {  	int mid = Allocation.Top + Allocation.Height / 2;  	if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  		return PositionType.Bottom;  	else  		return PositionType.Top;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  	int mid = Allocation.Left + Allocation.Width / 2;  	if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  		return PositionType.Right;  	else  		return PositionType.Left;  }  else {  	int mid = Allocation.Top + Allocation.Height / 2;  	if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  		return PositionType.Bottom;  	else  		return PositionType.Top;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (Allocation.Width < Allocation.Height) {  	int mid = Allocation.Left + Allocation.Width / 2;  	if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  		return PositionType.Right;  	else  		return PositionType.Left;  }  else {  	int mid = Allocation.Top + Allocation.Height / 2;  	if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  		return PositionType.Bottom;  	else  		return PositionType.Top;  }  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (mid > Frame.Allocation.Left + Frame.Allocation.Width / 2)  	return PositionType.Right;  else  	return PositionType.Left;  
Magic Number,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,CalcBarDocPosition,The following statement contains a magic number: if (mid > Frame.Allocation.Top + Frame.Allocation.Height / 2)  	return PositionType.Bottom;  else  	return PositionType.Top;  
Magic Number,MonoDevelop.Components.Docking,DockItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItem.cs,ShowDockPopupMenu,The following statement contains a magic number: menu.Popup (null' null' null' 3' time);  
Magic Number,MonoDevelop.Components.Docking,CustomFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemContainer.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (evnt.Window)) {  	if (GradientBackround) {  		cr.NewPath ();  		cr.MoveTo (rect.X' rect.Y);  		cr.RelLineTo (rect.Width' 0);  		cr.RelLineTo (0' rect.Height);  		cr.RelLineTo (-rect.Width' 0);  		cr.RelLineTo (0' -rect.Height);  		cr.ClosePath ();  		using (Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' bottom)) {  			pat.AddColorStop (0' bcolor.ToCairoColor ());  			HslColor gcol = bcolor;  			gcol.L -= 0.1;  			if (gcol.L < 0)  				gcol.L = 0;  			pat.AddColorStop (1' gcol);  			cr.SetSource (pat);  			cr.Fill ();  		}  	}  	else {  		if (backgroundColorSet) {  			Gdk.GC gc = new Gdk.GC (GdkWindow);  			gc.RgbFgColor = bcolor;  			evnt.Window.DrawRectangle (gc' true' rect.X' rect.Y' rect.Width' rect.Height);  			gc.Dispose ();  		}  	}  }  
Magic Number,MonoDevelop.Components.Docking,CustomFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemContainer.cs,OnExposeEvent,The following statement contains a magic number: if (GradientBackround) {  	cr.NewPath ();  	cr.MoveTo (rect.X' rect.Y);  	cr.RelLineTo (rect.Width' 0);  	cr.RelLineTo (0' rect.Height);  	cr.RelLineTo (-rect.Width' 0);  	cr.RelLineTo (0' -rect.Height);  	cr.ClosePath ();  	using (Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' bottom)) {  		pat.AddColorStop (0' bcolor.ToCairoColor ());  		HslColor gcol = bcolor;  		gcol.L -= 0.1;  		if (gcol.L < 0)  			gcol.L = 0;  		pat.AddColorStop (1' gcol);  		cr.SetSource (pat);  		cr.Fill ();  	}  }  else {  	if (backgroundColorSet) {  		Gdk.GC gc = new Gdk.GC (GdkWindow);  		gc.RgbFgColor = bcolor;  		evnt.Window.DrawRectangle (gc' true' rect.X' rect.Y' rect.Width' rect.Height);  		gc.Dispose ();  	}  }  
Magic Number,MonoDevelop.Components.Docking,CustomFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemContainer.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Gradient pat = new Cairo.LinearGradient (rect.X' rect.Y' rect.X' bottom)) {  	pat.AddColorStop (0' bcolor.ToCairoColor ());  	HslColor gcol = bcolor;  	gcol.L -= 0.1;  	if (gcol.L < 0)  		gcol.L = 0;  	pat.AddColorStop (1' gcol);  	cr.SetSource (pat);  	cr.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,CustomFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemContainer.cs,OnExposeEvent,The following statement contains a magic number: gcol.L -= 0.1;  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: topFrame.SetPadding (3' 3' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: topFrame.SetPadding (3' 3' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: topFrame.SetPadding (3' 3' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: topFrame.SetPadding (3' 3' 3' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: if (position == PositionType.Top || position == PositionType.Bottom)  	box = new HBox (false' 3);  else  	box = new VBox (false' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: if (position == PositionType.Top || position == PositionType.Bottom)  	box = new HBox (false' 3);  else  	box = new VBox (false' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: box = new HBox (false' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,DockItemToolbar,The following statement contains a magic number: box = new VBox (false' 3);  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,Add,The following statement contains a magic number: if (widget is Button) {  	((Button)widget).Relief = ReliefStyle.None;  	((Button)widget).FocusOnClick = false;  	defaultPadding = 0;  }  else if (widget is Entry) {  	((Entry)widget).HasFrame = false;  }  else if (widget is ComboBox) {  	((ComboBox)widget).HasFrame = false;  }  else if (widget is VSeparator)  	((VSeparator)widget).HeightRequest = 10;  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,Add,The following statement contains a magic number: if (widget is Entry) {  	((Entry)widget).HasFrame = false;  }  else if (widget is ComboBox) {  	((ComboBox)widget).HasFrame = false;  }  else if (widget is VSeparator)  	((VSeparator)widget).HeightRequest = 10;  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,Add,The following statement contains a magic number: if (widget is ComboBox) {  	((ComboBox)widget).HasFrame = false;  }  else if (widget is VSeparator)  	((VSeparator)widget).HeightRequest = 10;  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,Add,The following statement contains a magic number: if (widget is VSeparator)  	((VSeparator)widget).HeightRequest = 10;  
Magic Number,MonoDevelop.Components.Docking,DockItemToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemToolbar.cs,Add,The following statement contains a magic number: ((VSeparator)widget).HeightRequest = 10;  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,OnRealized,The following statement contains a magic number: GdkWindow.Opacity = 0.6;  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: white = new Gdk.Color (255' 255' 255);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: pm.DrawRectangle (gc' false' 1' 1' width - 3' height - 3);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,CreateShape,The following statement contains a magic number: pm.DrawRectangle (gc' false' 1' 1' width - 3' height - 3);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,OnExposeEvent,The following statement contains a magic number: this.GdkWindow.DrawRectangle (redgc' false' 1' 1' w - 3' h - 3);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,OnExposeEvent,The following statement contains a magic number: this.GdkWindow.DrawRectangle (redgc' false' 1' 1' w - 3' h - 3);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  	Resize (w' h);  	Move (x' y);  	rx = x;  	ry = y;  	rw = w;  	rh = h;  	if (anim != 0) {  		GLib.Source.Remove (anim);  		anim = 0;  	}  	if (animate && w < 150 && h < 150) {  		int sa = 7;  		Move (rx - sa' ry - sa);  		Resize (rw + sa * 2' rh + sa * 2);  		anim = GLib.Timeout.Add (10' RunAnimation);  	}  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  	Resize (w' h);  	Move (x' y);  	rx = x;  	ry = y;  	rw = w;  	rh = h;  	if (anim != 0) {  		GLib.Source.Remove (anim);  		anim = 0;  	}  	if (animate && w < 150 && h < 150) {  		int sa = 7;  		Move (rx - sa' ry - sa);  		Resize (rw + sa * 2' rh + sa * 2);  		anim = GLib.Timeout.Add (10' RunAnimation);  	}  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  	Resize (w' h);  	Move (x' y);  	rx = x;  	ry = y;  	rw = w;  	rh = h;  	if (anim != 0) {  		GLib.Source.Remove (anim);  		anim = 0;  	}  	if (animate && w < 150 && h < 150) {  		int sa = 7;  		Move (rx - sa' ry - sa);  		Resize (rw + sa * 2' rh + sa * 2);  		anim = GLib.Timeout.Add (10' RunAnimation);  	}  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  	Resize (w' h);  	Move (x' y);  	rx = x;  	ry = y;  	rw = w;  	rh = h;  	if (anim != 0) {  		GLib.Source.Remove (anim);  		anim = 0;  	}  	if (animate && w < 150 && h < 150) {  		int sa = 7;  		Move (rx - sa' ry - sa);  		Resize (rw + sa * 2' rh + sa * 2);  		anim = GLib.Timeout.Add (10' RunAnimation);  	}  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  	Resize (w' h);  	Move (x' y);  	rx = x;  	ry = y;  	rw = w;  	rh = h;  	if (anim != 0) {  		GLib.Source.Remove (anim);  		anim = 0;  	}  	if (animate && w < 150 && h < 150) {  		int sa = 7;  		Move (rx - sa' ry - sa);  		Resize (rw + sa * 2' rh + sa * 2);  		anim = GLib.Timeout.Add (10' RunAnimation);  	}  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (x != rx || y != ry || w != rw || h != rh) {  	Resize (w' h);  	Move (x' y);  	rx = x;  	ry = y;  	rw = w;  	rh = h;  	if (anim != 0) {  		GLib.Source.Remove (anim);  		anim = 0;  	}  	if (animate && w < 150 && h < 150) {  		int sa = 7;  		Move (rx - sa' ry - sa);  		Resize (rw + sa * 2' rh + sa * 2);  		anim = GLib.Timeout.Add (10' RunAnimation);  	}  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (animate && w < 150 && h < 150) {  	int sa = 7;  	Move (rx - sa' ry - sa);  	Resize (rw + sa * 2' rh + sa * 2);  	anim = GLib.Timeout.Add (10' RunAnimation);  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (animate && w < 150 && h < 150) {  	int sa = 7;  	Move (rx - sa' ry - sa);  	Resize (rw + sa * 2' rh + sa * 2);  	anim = GLib.Timeout.Add (10' RunAnimation);  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (animate && w < 150 && h < 150) {  	int sa = 7;  	Move (rx - sa' ry - sa);  	Resize (rw + sa * 2' rh + sa * 2);  	anim = GLib.Timeout.Add (10' RunAnimation);  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (animate && w < 150 && h < 150) {  	int sa = 7;  	Move (rx - sa' ry - sa);  	Resize (rw + sa * 2' rh + sa * 2);  	anim = GLib.Timeout.Add (10' RunAnimation);  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (animate && w < 150 && h < 150) {  	int sa = 7;  	Move (rx - sa' ry - sa);  	Resize (rw + sa * 2' rh + sa * 2);  	anim = GLib.Timeout.Add (10' RunAnimation);  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: if (animate && w < 150 && h < 150) {  	int sa = 7;  	Move (rx - sa' ry - sa);  	Resize (rw + sa * 2' rh + sa * 2);  	anim = GLib.Timeout.Add (10' RunAnimation);  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: Resize (rw + sa * 2' rh + sa * 2);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: Resize (rw + sa * 2' rh + sa * 2);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,Relocate,The following statement contains a magic number: anim = GLib.Timeout.Add (10' RunAnimation);  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,RunAnimation,The following statement contains a magic number: if (cx != rx) {  	cx++;  	cy++;  	ch -= 2;  	cw -= 2;  	Move (cx' cy);  	Resize (cw' ch);  	return true;  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,RunAnimation,The following statement contains a magic number: if (cx != rx) {  	cx++;  	cy++;  	ch -= 2;  	cw -= 2;  	Move (cx' cy);  	Resize (cw' ch);  	return true;  }  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,RunAnimation,The following statement contains a magic number: ch -= 2;  
Magic Number,MonoDevelop.Components.Docking,PlaceholderWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,RunAnimation,The following statement contains a magic number: cw -= 2;  
Magic Number,MonoDevelop.Components.Docking,PadTitleWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,PadTitleWindow,The following statement contains a magic number: f.SetPadding (12' 12' 12' 12);  
Magic Number,MonoDevelop.Components.Docking,PadTitleWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,PadTitleWindow,The following statement contains a magic number: f.SetPadding (12' 12' 12' 12);  
Magic Number,MonoDevelop.Components.Docking,PadTitleWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,PadTitleWindow,The following statement contains a magic number: f.SetPadding (12' 12' 12' 12);  
Magic Number,MonoDevelop.Components.Docking,PadTitleWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\PlaceholderWindow.cs,PadTitleWindow,The following statement contains a magic number: f.SetPadding (12' 12' 12' 12);  
Magic Number,MonoDevelop.Components.Docking,TabStrip,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\TabStrip.cs,TabStrip,The following statement contains a magic number: BottomPadding = 3;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,SetLabel,The following statement contains a magic number: box.Spacing = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,SetLabel,The following statement contains a magic number: al.LeftPadding = 3;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (tabPressed && !item.Behavior.HasFlag (DockItemBehavior.NoGrip) && Math.Abs (evnt.X - pressX) > 3 && Math.Abs (evnt.Y - pressY) > 3) {  	frame.ShowPlaceholder (item);  	GdkWindow.Cursor = fleurCursor;  	frame.Toplevel.KeyPressEvent += HeaderKeyPress;  	frame.Toplevel.KeyReleaseEvent += HeaderKeyRelease;  	allowPlaceholderDocking = true;  	tabPressed = false;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (tabPressed && !item.Behavior.HasFlag (DockItemBehavior.NoGrip) && Math.Abs (evnt.X - pressX) > 3 && Math.Abs (evnt.Y - pressY) > 3) {  	frame.ShowPlaceholder (item);  	GdkWindow.Cursor = fleurCursor;  	frame.Toplevel.KeyPressEvent += HeaderKeyPress;  	frame.Toplevel.KeyReleaseEvent += HeaderKeyRelease;  	allowPlaceholderDocking = true;  	tabPressed = false;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rect.Width < labelWidth) {  	int red = (labelWidth - rect.Width) / 2;  	leftPadding -= red;  	rightPadding -= red;  	if (leftPadding < 2)  		leftPadding = 2;  	if (rightPadding < 2)  		rightPadding = 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rect.Width < labelWidth) {  	int red = (labelWidth - rect.Width) / 2;  	leftPadding -= red;  	rightPadding -= red;  	if (leftPadding < 2)  		leftPadding = 2;  	if (rightPadding < 2)  		rightPadding = 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rect.Width < labelWidth) {  	int red = (labelWidth - rect.Width) / 2;  	leftPadding -= red;  	rightPadding -= red;  	if (leftPadding < 2)  		leftPadding = 2;  	if (rightPadding < 2)  		rightPadding = 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rect.Width < labelWidth) {  	int red = (labelWidth - rect.Width) / 2;  	leftPadding -= red;  	rightPadding -= red;  	if (leftPadding < 2)  		leftPadding = 2;  	if (rightPadding < 2)  		rightPadding = 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rect.Width < labelWidth) {  	int red = (labelWidth - rect.Width) / 2;  	leftPadding -= red;  	rightPadding -= red;  	if (leftPadding < 2)  		leftPadding = 2;  	if (rightPadding < 2)  		rightPadding = 2;  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (leftPadding < 2)  	leftPadding = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (leftPadding < 2)  	leftPadding = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: leftPadding = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rightPadding < 2)  	rightPadding = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: if (rightPadding < 2)  	rightPadding = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,OnSizeAllocated,The following statement contains a magic number: rightPadding = 2;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawAsBrowser,The following statement contains a magic number: c.L *= 0.7;  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (GdkWindow)) {  	var x = Allocation.X;  	var y = Allocation.Y;  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' Styles.DockTabBarGradientStart);  		g.AddColorStop (1' Styles.DockTabBarGradientEnd);  		ctx.SetSource (g);  		ctx.Fill ();  	}  	ctx.MoveTo (x + 0.5' y + 0.5);  	ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  	ctx.SetSourceColor (Styles.DockTabBarGradientTop);  	ctx.Stroke ();  	if (active) {  		ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  		using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  			g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  			g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  			g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  			ctx.SetSource (g);  			ctx.Fill ();  		}  		/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: ctx.MoveTo (x + 0.5' y + 0.5);  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: ctx.MoveTo (x + 0.5' y + 0.5);  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: ctx.LineTo (x + Allocation.Width - 0.5d' y + 0.5);  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: if (active) {  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  		g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  		g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  		ctx.SetSource (g);  		ctx.Fill ();  	}  	/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: if (active) {  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  		g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  		g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  		ctx.SetSource (g);  		ctx.Fill ();  	}  	/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: if (active) {  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  		g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  		g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  		ctx.SetSource (g);  		ctx.Fill ();  	}  	/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: if (active) {  	ctx.Rectangle (x' y + 1' Allocation.Width' Allocation.Height - 1);  	using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  		g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  		g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  		g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  		ctx.SetSource (g);  		ctx.Fill ();  	}  	/*					double offset = Allocation.Height * 0.25; 					var rect = new Cairo.Rectangle (x - Allocation.Height + offset' y' Allocation.Height' Allocation.Height); 					var cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();  					rect = new Cairo.Rectangle (x + Allocation.Width - offset' y' Allocation.Height' Allocation.Height); 					cg = new Cairo.RadialGradient (rect.X + rect.Width / 2' rect.Y + rect.Height / 2' 0' rect.X' rect.Y + rect.Height / 2' rect.Height / 2); 					cg.AddColorStop (0' Styles.DockTabBarShadowGradientStart); 					cg.AddColorStop (1' Styles.DockTabBarShadowGradientEnd); 					ctx.Pattern = cg; 					ctx.Rectangle (rect); 					ctx.Fill ();*/}  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  	g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  	g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  	g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  	ctx.SetSource (g);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  	g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  	g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  	g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  	ctx.SetSource (g);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  	g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  	g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  	g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  	ctx.SetSource (g);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: using (var g = new Cairo.LinearGradient (x' y + 1' x' y + Allocation.Height - 1)) {  	g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  	g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  	g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  	ctx.SetSource (g);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: g.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.01));  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: g.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.08));  
Magic Number,MonoDevelop.Components.Docking,DockItemTitleTab,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockItemTitleTab.cs,DrawNormal,The following statement contains a magic number: g.AddColorStop (1' new Cairo.Color (0' 0' 0' 0.01));  
Magic Number,MonoDevelop.Ide.ProgressMonitoring,BaseProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ProgressMonitoring\BaseProgressMonitor.cs,WaitForCompleted,The following statement contains a magic number: if (DispatchService.IsGuiThread) {  	while (!IsCompleted) {  		DispatchService.RunPendingEvents ();  		Thread.Sleep (100);  	}  }  else {  	lock (progressTracker) {  		if (!progressTracker.InProgress)  			return;  		if (c.waitEvent == null)  			c.waitEvent = new ManualResetEvent (false);  	}  	c.waitEvent.WaitOne ();  }  
Magic Number,MonoDevelop.Ide.ProgressMonitoring,BaseProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ProgressMonitoring\BaseProgressMonitor.cs,WaitForCompleted,The following statement contains a magic number: while (!IsCompleted) {  	DispatchService.RunPendingEvents ();  	Thread.Sleep (100);  }  
Magic Number,MonoDevelop.Ide.ProgressMonitoring,BaseProgressMonitor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ProgressMonitoring\BaseProgressMonitor.cs,WaitForCompleted,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,UpdateDeclarationView,The following statement contains a magic number: declarationViewTimer = GLib.Timeout.Add (150' DelayedTooltipShow);  
Magic Number,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,OnCompletionDataChanging,The following statement contains a magic number: if (parsingMessage == null) {  	var box = new VBox ();  	box.PackStart (new HSeparator ()' false' false' 0);  	var hbox = new HBox ();  	hbox.BorderWidth = 3;  	hbox.PackStart (new Image ("md-parser"' IconSize.Menu)' false' false' 0);  	var lab = new Label (GettextCatalog.GetString ("Gathering class information..."));  	lab.Xalign = 0;  	hbox.PackStart (lab' true' true' 3);  	hbox.ShowAll ();  	parsingMessage = hbox;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,OnCompletionDataChanging,The following statement contains a magic number: if (parsingMessage == null) {  	var box = new VBox ();  	box.PackStart (new HSeparator ()' false' false' 0);  	var hbox = new HBox ();  	hbox.BorderWidth = 3;  	hbox.PackStart (new Image ("md-parser"' IconSize.Menu)' false' false' 0);  	var lab = new Label (GettextCatalog.GetString ("Gathering class information..."));  	lab.Xalign = 0;  	hbox.PackStart (lab' true' true' 3);  	hbox.ShowAll ();  	parsingMessage = hbox;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,OnCompletionDataChanging,The following statement contains a magic number: hbox.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.CodeCompletion,CompletionListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\CompletionListWindow.cs,OnCompletionDataChanging,The following statement contains a magic number: hbox.PackStart (lab' true' true' 3);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,ListWindow,The following statement contains a magic number: Theme.CornerRadius = 4;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: switch (key) {  case Gdk.Key.Home:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = 0;  	return KeyActions.Ignore;  case Gdk.Key.End:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = List.filteredItems.Count - 1;  	return KeyActions.Ignore;  case Gdk.Key.Up:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (-1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (-1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Tab:  	//tab always completes current item even if selection is disabled  	if (!AutoSelect)  		AutoSelect = true;  	goto case Gdk.Key.Return;  case Gdk.Key.Return:  case Gdk.Key.ISO_Enter:  case Gdk.Key.Key_3270_Enter:  case Gdk.Key.KP_Enter:  	lastCommitCharEndoffset = CompletionWidget.CaretOffset;  	WasShiftPressed = (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask;  	return KeyActions.Complete | KeyActions.Ignore | KeyActions.CloseWindow;  case Gdk.Key.Down:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Page_Up:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' scrollbar.Vadjustment.Value - scrollbar.Vadjustment.PageSize);  	list.MoveCursor (-8);  	return KeyActions.Ignore;  case Gdk.Key.Page_Down:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' Math.Min (scrollbar.Vadjustment.Upper - scrollbar.Vadjustment.PageSize' scrollbar.Vadjustment.Value + scrollbar.Vadjustment.PageSize));  	list.MoveCursor (8);  	return KeyActions.Ignore;  case Gdk.Key.Left:  	//if (curPos == 0) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos--;  	return KeyActions.Process;  case Gdk.Key.Right:  	//if (curPos == word.Length) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos++;  	return KeyActions.Process;  case Gdk.Key.Caps_Lock:  case Gdk.Key.Num_Lock:  case Gdk.Key.Scroll_Lock:  	return KeyActions.Ignore;  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  case Gdk.Key.Alt_L:  case Gdk.Key.Alt_R:  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.ISO_Level3_Shift:  	// AltGr  	return KeyActions.Process;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: switch (key) {  case Gdk.Key.Home:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = 0;  	return KeyActions.Ignore;  case Gdk.Key.End:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = List.filteredItems.Count - 1;  	return KeyActions.Ignore;  case Gdk.Key.Up:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (-1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (-1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Tab:  	//tab always completes current item even if selection is disabled  	if (!AutoSelect)  		AutoSelect = true;  	goto case Gdk.Key.Return;  case Gdk.Key.Return:  case Gdk.Key.ISO_Enter:  case Gdk.Key.Key_3270_Enter:  case Gdk.Key.KP_Enter:  	lastCommitCharEndoffset = CompletionWidget.CaretOffset;  	WasShiftPressed = (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask;  	return KeyActions.Complete | KeyActions.Ignore | KeyActions.CloseWindow;  case Gdk.Key.Down:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Page_Up:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' scrollbar.Vadjustment.Value - scrollbar.Vadjustment.PageSize);  	list.MoveCursor (-8);  	return KeyActions.Ignore;  case Gdk.Key.Page_Down:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' Math.Min (scrollbar.Vadjustment.Upper - scrollbar.Vadjustment.PageSize' scrollbar.Vadjustment.Value + scrollbar.Vadjustment.PageSize));  	list.MoveCursor (8);  	return KeyActions.Ignore;  case Gdk.Key.Left:  	//if (curPos == 0) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos--;  	return KeyActions.Process;  case Gdk.Key.Right:  	//if (curPos == word.Length) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos++;  	return KeyActions.Process;  case Gdk.Key.Caps_Lock:  case Gdk.Key.Num_Lock:  case Gdk.Key.Scroll_Lock:  	return KeyActions.Ignore;  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  case Gdk.Key.Alt_L:  case Gdk.Key.Alt_R:  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.ISO_Level3_Shift:  	// AltGr  	return KeyActions.Process;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: switch (key) {  case Gdk.Key.Home:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = 0;  	return KeyActions.Ignore;  case Gdk.Key.End:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = List.filteredItems.Count - 1;  	return KeyActions.Ignore;  case Gdk.Key.Up:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (-1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (-1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Tab:  	//tab always completes current item even if selection is disabled  	if (!AutoSelect)  		AutoSelect = true;  	goto case Gdk.Key.Return;  case Gdk.Key.Return:  case Gdk.Key.ISO_Enter:  case Gdk.Key.Key_3270_Enter:  case Gdk.Key.KP_Enter:  	lastCommitCharEndoffset = CompletionWidget.CaretOffset;  	WasShiftPressed = (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask;  	return KeyActions.Complete | KeyActions.Ignore | KeyActions.CloseWindow;  case Gdk.Key.Down:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Page_Up:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' scrollbar.Vadjustment.Value - scrollbar.Vadjustment.PageSize);  	list.MoveCursor (-8);  	return KeyActions.Ignore;  case Gdk.Key.Page_Down:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' Math.Min (scrollbar.Vadjustment.Upper - scrollbar.Vadjustment.PageSize' scrollbar.Vadjustment.Value + scrollbar.Vadjustment.PageSize));  	list.MoveCursor (8);  	return KeyActions.Ignore;  case Gdk.Key.Left:  	//if (curPos == 0) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos--;  	return KeyActions.Process;  case Gdk.Key.Right:  	//if (curPos == word.Length) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos++;  	return KeyActions.Process;  case Gdk.Key.Caps_Lock:  case Gdk.Key.Num_Lock:  case Gdk.Key.Scroll_Lock:  	return KeyActions.Ignore;  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  case Gdk.Key.Alt_L:  case Gdk.Key.Alt_R:  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.ISO_Level3_Shift:  	// AltGr  	return KeyActions.Process;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: switch (key) {  case Gdk.Key.Home:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = 0;  	return KeyActions.Ignore;  case Gdk.Key.End:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = List.filteredItems.Count - 1;  	return KeyActions.Ignore;  case Gdk.Key.Up:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (-1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (-1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Tab:  	//tab always completes current item even if selection is disabled  	if (!AutoSelect)  		AutoSelect = true;  	goto case Gdk.Key.Return;  case Gdk.Key.Return:  case Gdk.Key.ISO_Enter:  case Gdk.Key.Key_3270_Enter:  case Gdk.Key.KP_Enter:  	lastCommitCharEndoffset = CompletionWidget.CaretOffset;  	WasShiftPressed = (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask;  	return KeyActions.Complete | KeyActions.Ignore | KeyActions.CloseWindow;  case Gdk.Key.Down:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Page_Up:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' scrollbar.Vadjustment.Value - scrollbar.Vadjustment.PageSize);  	list.MoveCursor (-8);  	return KeyActions.Ignore;  case Gdk.Key.Page_Down:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' Math.Min (scrollbar.Vadjustment.Upper - scrollbar.Vadjustment.PageSize' scrollbar.Vadjustment.Value + scrollbar.Vadjustment.PageSize));  	list.MoveCursor (8);  	return KeyActions.Ignore;  case Gdk.Key.Left:  	//if (curPos == 0) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos--;  	return KeyActions.Process;  case Gdk.Key.Right:  	//if (curPos == word.Length) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos++;  	return KeyActions.Process;  case Gdk.Key.Caps_Lock:  case Gdk.Key.Num_Lock:  case Gdk.Key.Scroll_Lock:  	return KeyActions.Ignore;  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  case Gdk.Key.Alt_L:  case Gdk.Key.Alt_R:  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.ISO_Level3_Shift:  	// AltGr  	return KeyActions.Process;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: if (list.filteredItems.Count < 2)  	return KeyActions.CloseWindow | KeyActions.Process;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: list.MoveCursor (-8);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: if (list.filteredItems.Count < 2)  	return KeyActions.CloseWindow | KeyActions.Process;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following statement contains a magic number: list.MoveCursor (8);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,FindMatchedEntry,The following statement contains a magic number: if (string.IsNullOrEmpty (partialWord) || partialWord.Length <= 2) {  	// Search for history matches.  	string historyWord;  	if (wordHistory.TryGetValue (partialWord' out historyWord)) {  		for (int xIndex = 0; xIndex < list.filteredItems.Count; xIndex++) {  			string currentWord = DataProvider.GetCompletionText (list.filteredItems [xIndex]);  			if (currentWord == historyWord) {  				idx = xIndex;  				break;  			}  		}  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (CompletionWindowManager.IsVisible) {  	// place above  	Y = ctx.TriggerYCoord - ctx.TriggerTextHeight - allocation.Height - 10;  }  else {  	// place below  	Y = ctx.TriggerYCoord;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: Y = ctx.TriggerYCoord - ctx.TriggerTextHeight - allocation.Height - 10;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (wasAbove || Y + allocation.Height > geometry.Bottom) {  	Y = Y - ctx.TriggerTextHeight - allocation.Height - 4;  	wasAbove = true;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: Y = Y - ctx.TriggerTextHeight - allocation.Height - 4;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (CompletionWindowManager.IsVisible) {  	var completionWindow = new Rectangle (CompletionWindowManager.X' CompletionWindowManager.Y' CompletionWindowManager.Wnd.Allocation.Width' CompletionWindowManager.Wnd.Allocation.Height);  	if (completionWindow.IntersectsWith (new Rectangle (X' Y' allocation.Width' allocation.Height))) {  		X = completionWindow.X;  		Y = completionWindow.Y - allocation.Height - 6;  		if (Y < 0)  			Y = completionWindow.Bottom + 6;  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (CompletionWindowManager.IsVisible) {  	var completionWindow = new Rectangle (CompletionWindowManager.X' CompletionWindowManager.Y' CompletionWindowManager.Wnd.Allocation.Width' CompletionWindowManager.Wnd.Allocation.Height);  	if (completionWindow.IntersectsWith (new Rectangle (X' Y' allocation.Width' allocation.Height))) {  		X = completionWindow.X;  		Y = completionWindow.Y - allocation.Height - 6;  		if (Y < 0)  			Y = completionWindow.Bottom + 6;  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (completionWindow.IntersectsWith (new Rectangle (X' Y' allocation.Width' allocation.Height))) {  	X = completionWindow.X;  	Y = completionWindow.Y - allocation.Height - 6;  	if (Y < 0)  		Y = completionWindow.Bottom + 6;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (completionWindow.IntersectsWith (new Rectangle (X' Y' allocation.Width' allocation.Height))) {  	X = completionWindow.X;  	Y = completionWindow.Y - allocation.Height - 6;  	if (Y < 0)  		Y = completionWindow.Bottom + 6;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: Y = completionWindow.Y - allocation.Height - 6;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: if (Y < 0)  	Y = completionWindow.Bottom + 6;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindowManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindowManager.cs,PositionParameterInfoWindow,The following statement contains a magic number: Y = completionWindow.Bottom + 6;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ParameterInformationWindow,The following statement contains a magic number: headlabel.Indent = -20;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ParameterInformationWindow,The following statement contains a magic number: descriptionBox.Spacing = 4;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ParameterInformationWindow,The following statement contains a magic number: vb2.Spacing = 4;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,The following statement contains a magic number: if (Theme.DrawPager)  	headlabel.WidthRequest = headlabel.RealWidth + 70;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,The following statement contains a magic number: headlabel.WidthRequest = headlabel.RealWidth + 70;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,The following statement contains a magic number: foreach (var cat in o.Categories) {  	descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,The following statement contains a magic number: descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  	descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ShowParameterInfo,The following statement contains a magic number: descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,CreateCategory,The following statement contains a magic number: vbox.Spacing = 2;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,CreateCategory,The following statement contains a magic number: contentLabel.MaxWidth = Math.Max (440' this.Allocation.Width);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ParameterInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ParameterInformationWindow.cs,ChangeOverload,The following statement contains a magic number: lastParam = -2;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (args.Window)) {  	context.LineWidth = 1;  	var alloc = Allocation;  	int width = alloc.Width;  	int height = alloc.Height;  	context.Rectangle (args.Area.X' args.Area.Y' args.Area.Width' args.Area.Height);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	int xpos = iconTextSpacing;  	int yPos = (int)-vadj.Value;  	//when there are no matches' display a message to indicate that the completion list is still handling input  	if (filteredItems.Count == 0) {  		context.Rectangle (0' yPos' width' height - yPos);  		context.SetSourceColor (backgroundColor);  		context.Stroke ();  		noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  		int lWidth' lHeight;  		noMatchLayout.GetPixelSize (out lWidth' out lHeight);  		context.SetSourceColor (textColor);  		context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  		PangoCairoHelper.ShowLayout (context' noMatchLayout);  		return false;  	}  	var matcher = CompletionMatcher.CreateCompletionMatcher (CompletionString);  	Iterate (true' ref yPos' delegate (Category category' int ypos) {  		if (ypos >= height)  			return;  		if (ypos < -rowHeight)  			return;  		//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  		int x = 2;  		if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  			var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  			context.Paint ();  			x = icon.Width + 4;  		}  		context.Rectangle (0' ypos' Allocation.Width' rowHeight);  		context.SetSourceColor (backgroundColor);  		context.Fill ();  		//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  		//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  		categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  		int px' py;  		categoryLayout.GetPixelSize (out px' out py);  		context.MoveTo (x' ypos + (rowHeight - py) / 2);  		context.SetSourceColor (textColor);  		PangoCairoHelper.ShowLayout (context' categoryLayout);  	}' delegate (Category curCategory' int item' int itemidx' int ypos) {  		if (ypos >= height)  			return false;  		if (ypos < -rowHeight)  			return true;  		const int categoryModeItemIndenting = 0;  		if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  			xpos = iconTextSpacing + categoryModeItemIndenting;  		}  		else {  			xpos = iconTextSpacing;  		}  		string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  		string description = win.DataProvider.GetDescription (item' item == SelectedItem);  		if (string.IsNullOrEmpty (description)) {  			layout.SetMarkup (markup);  		}  		else {  			layout.SetMarkup (markup + " " + description);  		}  		string text = win.DataProvider.GetText (item);  		if (!string.IsNullOrEmpty (text)) {  			int[] matchIndices = matcher.GetMatch (text);  			if (matchIndices != null) {  				Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  				for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  					int idx = matchIndices [newSelection];  					var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  					fg.StartIndex = (uint)idx;  					fg.EndIndex = (uint)(idx + 1);  					attrList.Insert (fg);  				}  				layout.Attributes = attrList;  			}  		}  		Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  		int iconHeight' iconWidth;  		if (icon != null) {  			iconWidth = icon.Width;  			iconHeight = icon.Height;  		}  		else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  			iconHeight = iconWidth = 24;  		}  		int wi' he' typos' iypos;  		layout.GetPixelSize (out wi' out he);  		typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  		iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  		if (item == SelectedItem) {  			context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  			context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  			context.Fill ();  			context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  			if (!SelectionEnabled)  				context.SetDash (new double[] {  					4'  					4  				}' 0);  			context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  			context.Stroke ();  		}  		if (icon != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  			context.Paint ();  			xpos += iconTextSpacing;  		}  		context.SetSourceColor (textColor);  		var textXPos = xpos + iconWidth + 2;  		context.MoveTo (textXPos' typos);  		layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  		layout.Ellipsize = EllipsizeMode.End;  		PangoCairoHelper.ShowLayout (context' layout);  		layout.Width = -1;  		layout.Ellipsize = EllipsizeMode.None;  		layout.SetMarkup ("");  		if (layout.Attributes != null) {  			layout.Attributes.Dispose ();  			layout.Attributes = null;  		}  		string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  		if (!string.IsNullOrEmpty (rightText)) {  			layout.SetMarkup (rightText);  			int w' h;  			layout.GetPixelSize (out w' out h);  			wi += w;  			typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  			context.MoveTo (Allocation.Width - w' typos);  			PangoCairoHelper.ShowLayout (context' layout);  		}  		if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  			WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  			win.ResetSizes ();  		}  		else {  			//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  			if (Allocation.Width < listWidth) {  				if (listWidth - Allocation.Width < 30) {  					WidthRequest = listWidth + listWidth - Allocation.Width;  					win.ResetSizes ();  				}  			}  		}  		return true;  	});  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (filteredItems.Count == 0) {  	context.Rectangle (0' yPos' width' height - yPos);  	context.SetSourceColor (backgroundColor);  	context.Stroke ();  	noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  	int lWidth' lHeight;  	noMatchLayout.GetPixelSize (out lWidth' out lHeight);  	context.SetSourceColor (textColor);  	context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  	PangoCairoHelper.ShowLayout (context' noMatchLayout);  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (filteredItems.Count == 0) {  	context.Rectangle (0' yPos' width' height - yPos);  	context.SetSourceColor (backgroundColor);  	context.Stroke ();  	noMatchLayout.SetText (win.DataProvider.ItemCount == 0 ? NoSuggestionsMsg : NoMatchesMsg);  	int lWidth' lHeight;  	noMatchLayout.GetPixelSize (out lWidth' out lHeight);  	context.SetSourceColor (textColor);  	context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  	PangoCairoHelper.ShowLayout (context' noMatchLayout);  	return false;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.MoveTo ((width - lWidth) / 2' yPos + (height - lHeight - yPos) / 2 - lHeight);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: Iterate (true' ref yPos' delegate (Category category' int ypos) {  	if (ypos >= height)  		return;  	if (ypos < -rowHeight)  		return;  	//	window.DrawRectangle (this.Style.BackgroundGC (StateType.Insensitive)' true' 0' yPos' width' rowHeight);  	int x = 2;  	if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  		var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  		context.Paint ();  		x = icon.Width + 4;  	}  	context.Rectangle (0' ypos' Allocation.Width' rowHeight);  	context.SetSourceColor (backgroundColor);  	context.Fill ();  	//					layout.SetMarkup ("<span weight='bold' foreground='#AAAAAA'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	//					window.DrawLayout (textGCInsensitive' x - 1' ypos + 1 + (rowHeight - py) / 2' layout);  	//					layout.SetMarkup ("<span weight='bold'>" + (category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized") + "</span>");  	categoryLayout.SetMarkup ((category.CompletionCategory != null ? category.CompletionCategory.DisplayText : "Uncategorized"));  	int px' py;  	categoryLayout.GetPixelSize (out px' out py);  	context.MoveTo (x' ypos + (rowHeight - py) / 2);  	context.SetSourceColor (textColor);  	PangoCairoHelper.ShowLayout (context' categoryLayout);  }' delegate (Category curCategory' int item' int itemidx' int ypos) {  	if (ypos >= height)  		return false;  	if (ypos < -rowHeight)  		return true;  	const int categoryModeItemIndenting = 0;  	if (InCategoryMode && curCategory != null && curCategory.CompletionCategory != null) {  		xpos = iconTextSpacing + categoryModeItemIndenting;  	}  	else {  		xpos = iconTextSpacing;  	}  	string markup = win.DataProvider.HasMarkup (item) ? (win.DataProvider.GetMarkup (item) ?? "&lt;null&gt;") : GLib.Markup.EscapeText (win.DataProvider.GetText (item) ?? "<null>");  	string description = win.DataProvider.GetDescription (item' item == SelectedItem);  	if (string.IsNullOrEmpty (description)) {  		layout.SetMarkup (markup);  	}  	else {  		layout.SetMarkup (markup + " " + description);  	}  	string text = win.DataProvider.GetText (item);  	if (!string.IsNullOrEmpty (text)) {  		int[] matchIndices = matcher.GetMatch (text);  		if (matchIndices != null) {  			Pango.AttrList attrList = layout.Attributes ?? new Pango.AttrList ();  			for (int newSelection = 0; newSelection < matchIndices.Length; newSelection++) {  				int idx = matchIndices [newSelection];  				var fg = new AttrForeground ((ushort)(highlightColor.R * ushort.MaxValue)' (ushort)(highlightColor.G * ushort.MaxValue)' (ushort)(highlightColor.B * ushort.MaxValue));  				fg.StartIndex = (uint)idx;  				fg.EndIndex = (uint)(idx + 1);  				attrList.Insert (fg);  			}  			layout.Attributes = attrList;  		}  	}  	Gdk.Pixbuf icon = win.DataProvider.GetIcon (item);  	int iconHeight' iconWidth;  	if (icon != null) {  		iconWidth = icon.Width;  		iconHeight = icon.Height;  	}  	else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  		iconHeight = iconWidth = 24;  	}  	int wi' he' typos' iypos;  	layout.GetPixelSize (out wi' out he);  	typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  	iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  	if (item == SelectedItem) {  		context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  		context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  		context.Fill ();  		context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  		if (!SelectionEnabled)  			context.SetDash (new double[] {  				4'  				4  			}' 0);  		context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  		context.Stroke ();  	}  	if (icon != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' icon' xpos' iypos);  		context.Paint ();  		xpos += iconTextSpacing;  	}  	context.SetSourceColor (textColor);  	var textXPos = xpos + iconWidth + 2;  	context.MoveTo (textXPos' typos);  	layout.Width = (int)((Allocation.Width - textXPos) * Pango.Scale.PangoScale);  	layout.Ellipsize = EllipsizeMode.End;  	PangoCairoHelper.ShowLayout (context' layout);  	layout.Width = -1;  	layout.Ellipsize = EllipsizeMode.None;  	layout.SetMarkup ("");  	if (layout.Attributes != null) {  		layout.Attributes.Dispose ();  		layout.Attributes = null;  	}  	string rightText = win.DataProvider.GetRightSideDescription (item' item == SelectedItem);  	if (!string.IsNullOrEmpty (rightText)) {  		layout.SetMarkup (rightText);  		int w' h;  		layout.GetPixelSize (out w' out h);  		wi += w;  		typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  		context.MoveTo (Allocation.Width - w' typos);  		PangoCairoHelper.ShowLayout (context' layout);  	}  	if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  		WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  		win.ResetSizes ();  	}  	else {  		//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  		if (Allocation.Width < listWidth) {  			if (listWidth - Allocation.Width < 30) {  				WidthRequest = listWidth + listWidth - Allocation.Width;  				win.ResetSizes ();  			}  		}  	}  	return true;  });  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (category.CompletionCategory != null && !string.IsNullOrEmpty (category.CompletionCategory.Icon)) {  	var icon = ImageService.GetPixbuf (category.CompletionCategory.Icon' IconSize.Menu);  	Gdk.CairoHelper.SetSourcePixbuf (context' icon' 0' ypos);  	context.Paint ();  	x = icon.Width + 4;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: x = icon.Width + 4;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.MoveTo (x' ypos + (rowHeight - py) / 2);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (icon != null) {  	iconWidth = icon.Width;  	iconHeight = icon.Height;  }  else if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  	iconHeight = iconWidth = 24;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out iconWidth' out iconHeight)) {  	iconHeight = iconWidth = 24;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: iconHeight = iconWidth = 24;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: typos = he < rowHeight ? ypos + (rowHeight - he) / 2 : ypos;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: iypos = iconHeight < rowHeight ? ypos + (rowHeight - iconHeight) / 2 : ypos;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (item == SelectedItem) {  	context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Foreground : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  	context.SetSourceColor (SelectionEnabled ? selectedItemColor.Background : selectedItemInactiveColor.Background);  	context.Fill ();  	context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  	if (!SelectionEnabled)  		context.SetDash (new double[] {  			4'  			4  		}' 0);  	context.SetSourceColor (SelectionEnabled ? selectionBorderColor : selectionBorderInactiveColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.Rectangle (0' ypos' Allocation.Width' rowHeight / 2);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.Rectangle (0' ypos + rowHeight / 2' Allocation.Width' rowHeight / 2);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.Rectangle (0.5' ypos + 0.5' Allocation.Width - 1' rowHeight - 1);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (!SelectionEnabled)  	context.SetDash (new double[] {  		4'  		4  	}' 0);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (!SelectionEnabled)  	context.SetDash (new double[] {  		4'  		4  	}' 0);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.SetDash (new double[] {  	4'  	4  }' 0);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: context.SetDash (new double[] {  	4'  	4  }' 0);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (!string.IsNullOrEmpty (rightText)) {  	layout.SetMarkup (rightText);  	int w' h;  	layout.GetPixelSize (out w' out h);  	wi += w;  	typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  	context.MoveTo (Allocation.Width - w' typos);  	PangoCairoHelper.ShowLayout (context' layout);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: typos = h < rowHeight ? ypos + (rowHeight - h) / 2 : ypos;  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  	WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  	win.ResetSizes ();  }  else {  	//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  	if (Allocation.Width < listWidth) {  		if (listWidth - Allocation.Width < 30) {  			WidthRequest = listWidth + listWidth - Allocation.Width;  			win.ResetSizes ();  		}  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  	WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  	win.ResetSizes ();  }  else {  	//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  	if (Allocation.Width < listWidth) {  		if (listWidth - Allocation.Width < 30) {  			WidthRequest = listWidth + listWidth - Allocation.Width;  			win.ResetSizes ();  		}  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (Math.Min (maxListWidth' wi + xpos + iconWidth + 2) > listWidth) {  	WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  	win.ResetSizes ();  }  else {  	//workaround for the vscrollbar display - the calculated width needs to be the width ofthe render region.  	if (Allocation.Width < listWidth) {  		if (listWidth - Allocation.Width < 30) {  			WidthRequest = listWidth + listWidth - Allocation.Width;  			win.ResetSizes ();  		}  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: WidthRequest = listWidth = Math.Min (maxListWidth' wi + xpos + iconWidth + 2 + iconTextSpacing);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (Allocation.Width < listWidth) {  	if (listWidth - Allocation.Width < 30) {  		WidthRequest = listWidth + listWidth - Allocation.Width;  		win.ResetSizes ();  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,OnExposeEvent,The following statement contains a magic number: if (listWidth - Allocation.Width < 30) {  	WidthRequest = listWidth + listWidth - Allocation.Width;  	win.ResetSizes ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,CalcVisibleRows,The following statement contains a magic number: rowHeight = Math.Max (1' rowHeight * 3 / 2);  
Magic Number,MonoDevelop.Ide.CodeCompletion,ListWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWidget.cs,CalcVisibleRows,The following statement contains a magic number: rowHeight = Math.Max (1' rowHeight * 3 / 2);  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,AddOverload,The following statement contains a magic number: using (var layout = new Pango.Layout (PangoContext)) {  	var des = FontService.GetFontDescription ("Editor");  	layout.FontDescription = des;  	layout.SetMarkup (tooltipInformation.SignatureMarkup);  	int w' h;  	layout.GetPixelSize (out w' out h);  	if (w >= Allocation.Width - 10) {  		tooltipInformation = data.CreateTooltipInformation (true);  	}  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,AddOverload,The following statement contains a magic number: if (w >= Allocation.Width - 10) {  	tooltipInformation = data.CreateTooltipInformation (true);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (current_overload >= 0 && current_overload < overloads.Count) {  	var o = overloads [current_overload];  	headlabel.BreakOnCamelCasing = false;  	headlabel.BreakOnPunctuation = false;  	headlabel.Markup = o.SignatureMarkup;  	headlabel.Visible = true;  	if (Theme.DrawPager && overloads.Count > 1) {  		headlabel.WidthRequest = headlabel.RealWidth + 70;  	}  	else {  		headlabel.WidthRequest = -1;  	}  	foreach (var cat in o.Categories) {  		descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  		descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.FooterMarkup)) {  		var contentLabel = new FixedWidthWrapLabel ();  		contentLabel.Wrap = Pango.WrapMode.WordChar;  		contentLabel.BreakOnCamelCasing = false;  		contentLabel.BreakOnPunctuation = false;  		contentLabel.MaxWidth = 400;  		contentLabel.Markup = o.FooterMarkup.Trim ();  		contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  		descriptionBox.PackEnd (contentLabel' true' true' 4);  	}  	if (string.IsNullOrEmpty (o.SummaryMarkup) && string.IsNullOrEmpty (o.FooterMarkup) && !o.Categories.Any ()) {  		descriptionBox.Hide ();  	}  	else {  		descriptionBox.ShowAll ();  	}  	Theme.CurrentPage = current_overload;  	QueueResize ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (current_overload >= 0 && current_overload < overloads.Count) {  	var o = overloads [current_overload];  	headlabel.BreakOnCamelCasing = false;  	headlabel.BreakOnPunctuation = false;  	headlabel.Markup = o.SignatureMarkup;  	headlabel.Visible = true;  	if (Theme.DrawPager && overloads.Count > 1) {  		headlabel.WidthRequest = headlabel.RealWidth + 70;  	}  	else {  		headlabel.WidthRequest = -1;  	}  	foreach (var cat in o.Categories) {  		descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  		descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.FooterMarkup)) {  		var contentLabel = new FixedWidthWrapLabel ();  		contentLabel.Wrap = Pango.WrapMode.WordChar;  		contentLabel.BreakOnCamelCasing = false;  		contentLabel.BreakOnPunctuation = false;  		contentLabel.MaxWidth = 400;  		contentLabel.Markup = o.FooterMarkup.Trim ();  		contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  		descriptionBox.PackEnd (contentLabel' true' true' 4);  	}  	if (string.IsNullOrEmpty (o.SummaryMarkup) && string.IsNullOrEmpty (o.FooterMarkup) && !o.Categories.Any ()) {  		descriptionBox.Hide ();  	}  	else {  		descriptionBox.ShowAll ();  	}  	Theme.CurrentPage = current_overload;  	QueueResize ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (current_overload >= 0 && current_overload < overloads.Count) {  	var o = overloads [current_overload];  	headlabel.BreakOnCamelCasing = false;  	headlabel.BreakOnPunctuation = false;  	headlabel.Markup = o.SignatureMarkup;  	headlabel.Visible = true;  	if (Theme.DrawPager && overloads.Count > 1) {  		headlabel.WidthRequest = headlabel.RealWidth + 70;  	}  	else {  		headlabel.WidthRequest = -1;  	}  	foreach (var cat in o.Categories) {  		descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  		descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.FooterMarkup)) {  		var contentLabel = new FixedWidthWrapLabel ();  		contentLabel.Wrap = Pango.WrapMode.WordChar;  		contentLabel.BreakOnCamelCasing = false;  		contentLabel.BreakOnPunctuation = false;  		contentLabel.MaxWidth = 400;  		contentLabel.Markup = o.FooterMarkup.Trim ();  		contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  		descriptionBox.PackEnd (contentLabel' true' true' 4);  	}  	if (string.IsNullOrEmpty (o.SummaryMarkup) && string.IsNullOrEmpty (o.FooterMarkup) && !o.Categories.Any ()) {  		descriptionBox.Hide ();  	}  	else {  		descriptionBox.ShowAll ();  	}  	Theme.CurrentPage = current_overload;  	QueueResize ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (current_overload >= 0 && current_overload < overloads.Count) {  	var o = overloads [current_overload];  	headlabel.BreakOnCamelCasing = false;  	headlabel.BreakOnPunctuation = false;  	headlabel.Markup = o.SignatureMarkup;  	headlabel.Visible = true;  	if (Theme.DrawPager && overloads.Count > 1) {  		headlabel.WidthRequest = headlabel.RealWidth + 70;  	}  	else {  		headlabel.WidthRequest = -1;  	}  	foreach (var cat in o.Categories) {  		descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  		descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.FooterMarkup)) {  		var contentLabel = new FixedWidthWrapLabel ();  		contentLabel.Wrap = Pango.WrapMode.WordChar;  		contentLabel.BreakOnCamelCasing = false;  		contentLabel.BreakOnPunctuation = false;  		contentLabel.MaxWidth = 400;  		contentLabel.Markup = o.FooterMarkup.Trim ();  		contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  		descriptionBox.PackEnd (contentLabel' true' true' 4);  	}  	if (string.IsNullOrEmpty (o.SummaryMarkup) && string.IsNullOrEmpty (o.FooterMarkup) && !o.Categories.Any ()) {  		descriptionBox.Hide ();  	}  	else {  		descriptionBox.ShowAll ();  	}  	Theme.CurrentPage = current_overload;  	QueueResize ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (current_overload >= 0 && current_overload < overloads.Count) {  	var o = overloads [current_overload];  	headlabel.BreakOnCamelCasing = false;  	headlabel.BreakOnPunctuation = false;  	headlabel.Markup = o.SignatureMarkup;  	headlabel.Visible = true;  	if (Theme.DrawPager && overloads.Count > 1) {  		headlabel.WidthRequest = headlabel.RealWidth + 70;  	}  	else {  		headlabel.WidthRequest = -1;  	}  	foreach (var cat in o.Categories) {  		descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  		descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  	}  	if (!string.IsNullOrEmpty (o.FooterMarkup)) {  		var contentLabel = new FixedWidthWrapLabel ();  		contentLabel.Wrap = Pango.WrapMode.WordChar;  		contentLabel.BreakOnCamelCasing = false;  		contentLabel.BreakOnPunctuation = false;  		contentLabel.MaxWidth = 400;  		contentLabel.Markup = o.FooterMarkup.Trim ();  		contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  		descriptionBox.PackEnd (contentLabel' true' true' 4);  	}  	if (string.IsNullOrEmpty (o.SummaryMarkup) && string.IsNullOrEmpty (o.FooterMarkup) && !o.Categories.Any ()) {  		descriptionBox.Hide ();  	}  	else {  		descriptionBox.ShowAll ();  	}  	Theme.CurrentPage = current_overload;  	QueueResize ();  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (Theme.DrawPager && overloads.Count > 1) {  	headlabel.WidthRequest = headlabel.RealWidth + 70;  }  else {  	headlabel.WidthRequest = -1;  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: headlabel.WidthRequest = headlabel.RealWidth + 70;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: foreach (var cat in o.Categories) {  	descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: descriptionBox.PackStart (CreateCategory (cat.Item1' cat.Item2)' true' true' 4);  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (!string.IsNullOrEmpty (o.SummaryMarkup)) {  	descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: descriptionBox.PackStart (CreateCategory (GettextCatalog.GetString ("Summary")' o.SummaryMarkup)' true' true' 4);  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (!string.IsNullOrEmpty (o.FooterMarkup)) {  	var contentLabel = new FixedWidthWrapLabel ();  	contentLabel.Wrap = Pango.WrapMode.WordChar;  	contentLabel.BreakOnCamelCasing = false;  	contentLabel.BreakOnPunctuation = false;  	contentLabel.MaxWidth = 400;  	contentLabel.Markup = o.FooterMarkup.Trim ();  	contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  	descriptionBox.PackEnd (contentLabel' true' true' 4);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: if (!string.IsNullOrEmpty (o.FooterMarkup)) {  	var contentLabel = new FixedWidthWrapLabel ();  	contentLabel.Wrap = Pango.WrapMode.WordChar;  	contentLabel.BreakOnCamelCasing = false;  	contentLabel.BreakOnPunctuation = false;  	contentLabel.MaxWidth = 400;  	contentLabel.Markup = o.FooterMarkup.Trim ();  	contentLabel.ModifyFg (StateType.Normal' (HslColor)foreColor);  	descriptionBox.PackEnd (contentLabel' true' true' 4);  }  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: contentLabel.MaxWidth = 400;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,ShowOverload,The following statement contains a magic number: descriptionBox.PackEnd (contentLabel' true' true' 4);  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,CreateCategory,The following statement contains a magic number: vbox.Spacing = 2;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,CreateCategory,The following statement contains a magic number: contentLabel.MaxWidth = 400;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,TooltipInformationWindow,The following statement contains a magic number: headlabel.Indent = -20;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,TooltipInformationWindow,The following statement contains a magic number: des.Size = des.Size * 9 / 10;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,TooltipInformationWindow,The following statement contains a magic number: des.Size = des.Size * 9 / 10;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,TooltipInformationWindow,The following statement contains a magic number: descriptionBox.Spacing = 4;  
Magic Number,MonoDevelop.Ide.CodeCompletion,TooltipInformationWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\TooltipInformationWindow.cs,TooltipInformationWindow,The following statement contains a magic number: vb2.Spacing = 4;  
Magic Number,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,NewFileDialog,The following statement contains a magic number: BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,SelectTemplate,The following statement contains a magic number: do {  	foreach (TemplateItem item in (List<TemplateItem>)(catStore.GetValue (iter' 2))) {  		if (item.Template.Id == id) {  			catView.ExpandToPath (catStore.GetPath (iter));  			catView.Selection.SelectIter (iter);  			CategoryChange (null' null);  			iconView.CurrentlySelected = item;  			return true;  		}  	}  	TreeIter citer;  	if (catStore.IterChildren (out citer' iter)) {  		do {  			if (SelectTemplate (citer' id))  				return true;  		}  		while (catStore.IterNext (ref citer));  	}  }  while (catStore.IterNext (ref iter));  
Magic Number,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,SelectTemplate,The following statement contains a magic number: foreach (TemplateItem item in (List<TemplateItem>)(catStore.GetValue (iter' 2))) {  	if (item.Template.Id == id) {  		catView.ExpandToPath (catStore.GetPath (iter));  		catView.Selection.SelectIter (iter);  		CategoryChange (null' null);  		iconView.CurrentlySelected = item;  		return true;  	}  }  
Magic Number,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,AddTemplate,The following statement contains a magic number: if (project != null) {  	if ((templateLanguage != "") && (activeLangs.Count > 2)) {  		// The template requires a language' but the project does not have a single fixed  		// language type (plus empty match)' so create a language category  		cat = GetCategory (templateLanguage);  		cat = GetCategory (cat.Categories' titem.Template.Category);  	}  	else {  		cat = GetCategory (titem.Template.Category);  	}  }  else {  	if (templateLanguage != "") {  		// The template requires a language' but there is no current language set' so  		// create a category for it  		cat = GetCategory (templateLanguage);  		cat = GetCategory (cat.Categories' titem.Template.Category);  	}  	else {  		cat = GetCategory (titem.Template.Category);  	}  }  
Magic Number,MonoDevelop.Ide.Projects,NewFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewFileDialog.cs,AddTemplate,The following statement contains a magic number: if ((templateLanguage != "") && (activeLangs.Count > 2)) {  	// The template requires a language' but the project does not have a single fixed  	// language type (plus empty match)' so create a language category  	cat = GetCategory (templateLanguage);  	cat = GetCategory (cat.Categories' titem.Template.Category);  }  else {  	cat = GetCategory (titem.Template.Category);  }  
Magic Number,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The following statement contains a magic number: if (templateView.CurrentlySelected != null) {  	PropertyService.Set ("Dialogs.NewProjectDialog.LastSelectedCategory"' ((ProjectTemplate)templateView.CurrentlySelected).Category);  	recentIds.Remove (templateView.CurrentlySelected.Id);  	recentIds.Insert (0' templateView.CurrentlySelected.Id);  	if (recentIds.Count > 15)  		recentIds.RemoveAt (recentIds.Count - 1);  	string strRecent = string.Join ("'"' recentIds.ToArray ());  	PropertyService.Set ("Dialogs.NewProjectDialog.RecentTemplates"' strRecent);  	PropertyService.SaveProperties ();  	//PropertyService.Set("Dialogs.NewProjectDialog.LargeImages"' ((RadioButton)ControlDictionary["largeIconsRadioButton"]).Checked);  }  
Magic Number,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,CreateProject,The following statement contains a magic number: if (recentIds.Count > 15)  	recentIds.RemoveAt (recentIds.Count - 1);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectDialog.cs,InitializeComponents,The following statement contains a magic number: lst_template_types.WidthRequest = 160;  
Magic Number,MonoDevelop.Ide.Projects,AddFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AddFileDialog.cs,RunDefault,The following statement contains a magic number: box.PackStart (check' false' false' 4);  
Magic Number,MonoDevelop.Ide.Projects,AddFileDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AddFileDialog.cs,RunDefault,The following statement contains a magic number: box.PackStart (combo' false' false' 4);  
Magic Number,MonoDevelop.Ide.Projects,AssemblyReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AssemblyReferencePanel.cs,AssemblyReferencePanel,The following statement contains a magic number: chooser.BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Projects,AssemblyReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AssemblyReferencePanel.cs,AssemblyReferencePanel,The following statement contains a magic number: hbox.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,AssemblyReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AssemblyReferencePanel.cs,AssemblyReferencePanel,The following statement contains a magic number: hbox.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,AssemblyReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AssemblyReferencePanel.cs,AssemblyReferencePanel,The following statement contains a magic number: hbox.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,AssemblyReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AssemblyReferencePanel.cs,AssemblyReferencePanel,The following statement contains a magic number: hbox.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,AssemblyReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\AssemblyReferencePanel.cs,AssemblyReferencePanel,The following statement contains a magic number: Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,CombineEntryFeatureSelector,The following statement contains a magic number: box.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,CombineEntryFeatureSelector,The following statement contains a magic number: box.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: fl.WidthRequest = 630;  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: if (enabledByDefault) {  	Alignment al = new Alignment (0' 0' 0' 0);  	al.SetPadding (6' 6' 6' 6);  	al.Add (fl);  	cbox.PackStart (al' false' false' 0);  }  else {  	check = new CheckButton ();  	check.Image = fl;  	cbox.PackStart (check' false' false' 0);  	check.ModifyBg (StateType.Prelight' Style.MidColors [(int)StateType.Normal]);  	check.BorderWidth = 3;  }  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: if (enabledByDefault) {  	Alignment al = new Alignment (0' 0' 0' 0);  	al.SetPadding (6' 6' 6' 6);  	al.Add (fl);  	cbox.PackStart (al' false' false' 0);  }  else {  	check = new CheckButton ();  	check.Image = fl;  	cbox.PackStart (check' false' false' 0);  	check.ModifyBg (StateType.Prelight' Style.MidColors [(int)StateType.Normal]);  	check.BorderWidth = 3;  }  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: if (enabledByDefault) {  	Alignment al = new Alignment (0' 0' 0' 0);  	al.SetPadding (6' 6' 6' 6);  	al.Add (fl);  	cbox.PackStart (al' false' false' 0);  }  else {  	check = new CheckButton ();  	check.Image = fl;  	cbox.PackStart (check' false' false' 0);  	check.ModifyBg (StateType.Prelight' Style.MidColors [(int)StateType.Normal]);  	check.BorderWidth = 3;  }  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: if (enabledByDefault) {  	Alignment al = new Alignment (0' 0' 0' 0);  	al.SetPadding (6' 6' 6' 6);  	al.Add (fl);  	cbox.PackStart (al' false' false' 0);  }  else {  	check = new CheckButton ();  	check.Image = fl;  	cbox.PackStart (check' false' false' 0);  	check.ModifyBg (StateType.Prelight' Style.MidColors [(int)StateType.Normal]);  	check.BorderWidth = 3;  }  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: if (enabledByDefault) {  	Alignment al = new Alignment (0' 0' 0' 0);  	al.SetPadding (6' 6' 6' 6);  	al.Add (fl);  	cbox.PackStart (al' false' false' 0);  }  else {  	check = new CheckButton ();  	check.Image = fl;  	cbox.PackStart (check' false' false' 0);  	check.ModifyBg (StateType.Prelight' Style.MidColors [(int)StateType.Normal]);  	check.BorderWidth = 3;  }  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: al.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: check.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: if (editor != null) {  	Label sp = new Label ("");  	sp.WidthRequest = 24;  	sp.Show ();  	fbox.PackStart (sp' false' false' 0);  	editor.Show ();  	fbox.PackStart (editor' false' false' 0);  	box.PackStart (fbox' false' false' 0);  }  
Magic Number,MonoDevelop.Ide.Projects,CombineEntryFeatureSelector,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\CombineEntryFeatureSelector.cs,AddFeature,The following statement contains a magic number: sp.WidthRequest = 24;  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,ConfirmProjectDeleteDialog,The following statement contains a magic number: col.AddAttribute (cre' "text"' 2);  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,ConfirmProjectDeleteDialog,The following statement contains a magic number: col.AddAttribute (cre' "foreground"' 4);  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,ConfirmProjectDeleteDialog,The following statement contains a magic number: store.SetSortColumnId (2' SortType.Ascending);  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,GetFilesToDelete,The following statement contains a magic number: foreach (Gtk.TreeIter it in paths.Values) {  	if ((bool)store.GetValue (it' 0))  		files.Add ((string)store.GetValue (it' 3));  }  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,GetFilesToDelete,The following statement contains a magic number: if ((bool)store.GetValue (it' 0))  	files.Add ((string)store.GetValue (it' 3));  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,GetFilesToDelete,The following statement contains a magic number: files.Add ((string)store.GetValue (it' 3));  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: foreach (string file in Directory.GetFiles (dir)) {  	string path = System.IO.Path.GetFileName (file);  	Gdk.Pixbuf pix = DesktopService.GetPixbufForFile (file' IconSize.Menu);  	bool active = itemFiles.Contains (file);  	string color = null;  	if (!active) {  		pix = ImageService.MakeTransparent (pix' 0.5);  		color = "dimgrey";  	}  	else  		cinfo |= ChildInfo.HasProjectFiles;  	active = active || forceSet || knownPaths.Contains (file);  	if (!active)  		cinfo &= ~ChildInfo.AllSelected;  	else  		cinfo |= ChildInfo.SomeSelected;  	paths [file] = store.AppendValues (dit' active' pix' path' file' color);  	if (!hasChildren) {  		hasChildren = true;  		fileList.ExpandRow (store.GetPath (dit)' false);  	}  }  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: if (!active) {  	pix = ImageService.MakeTransparent (pix' 0.5);  	color = "dimgrey";  }  else  	cinfo |= ChildInfo.HasProjectFiles;  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: pix = ImageService.MakeTransparent (pix' 0.5);  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: if ((cinfo & ChildInfo.HasProjectFiles) == 0) {  	Gdk.Pixbuf pix = DesktopService.GetPixbufForFile (dir' IconSize.Menu);  	pix = ImageService.MakeTransparent (pix' 0.5);  	store.SetValue (dit' 1' pix);  	store.SetValue (dit' 4' "dimgrey");  }  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: if ((cinfo & ChildInfo.HasProjectFiles) == 0) {  	Gdk.Pixbuf pix = DesktopService.GetPixbufForFile (dir' IconSize.Menu);  	pix = ImageService.MakeTransparent (pix' 0.5);  	store.SetValue (dit' 1' pix);  	store.SetValue (dit' 4' "dimgrey");  }  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: pix = ImageService.MakeTransparent (pix' 0.5);  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,FillDirRec,The following statement contains a magic number: store.SetValue (dit' 4' "dimgrey");  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,SelectWholeDirectory,The following statement contains a magic number: foreach (Gtk.TreeIter it in paths.Values) {  	FilePath cpath = (string)store.GetValue (it' 3);  	if (cpath.IsChildPathOf (basePath))  		store.SetValue (it' 0' sel);  }  
Magic Number,MonoDevelop.Ide.Projects,ConfirmProjectDeleteDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ConfirmProjectDeleteDialog.cs,UpdateDirectoryToggle,The following statement contains a magic number: foreach (Gtk.TreeIter it in paths.Values) {  	FilePath cpath = (string)store.GetValue (it' 3);  	if (cpath == basePath)  		itDir = it;  	else if (cpath.IsChildPathOf (basePath) && !(bool)store.GetValue (it' 0))  		allChildrenSet = false;  }  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,DefaultPolicyOptionsDialog,The following statement contains a magic number: topBar.Spacing = 3;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,DefaultPolicyOptionsDialog,The following statement contains a magic number: align.LeftPadding = 9;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,DefaultPolicyOptionsDialog,The following statement contains a magic number: align.TopPadding = 9;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,DefaultPolicyOptionsDialog,The following statement contains a magic number: align.RightPadding = 9;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,DefaultPolicyOptionsDialog,The following statement contains a magic number: align.BottomPadding = 9;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,FillPolicySets,The following statement contains a magic number: if (policiesCombo.SizeRequest ().Width < 200)  	policiesCombo.WidthRequest = 200;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,FillPolicySets,The following statement contains a magic number: if (policiesCombo.SizeRequest ().Width < 200)  	policiesCombo.WidthRequest = 200;  
Magic Number,MonoDevelop.Ide.Projects,DefaultPolicyOptionsDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\DefaultPolicyOptionsDialog.cs,FillPolicySets,The following statement contains a magic number: policiesCombo.WidthRequest = 200;  
Magic Number,MonoDevelop.Ide.Projects,ProjectReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectReferencePanel.cs,ProjectReferencePanel,The following statement contains a magic number: BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Projects,ProjectReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectReferencePanel.cs,PopulateListView,The following statement contains a magic number: foreach (Project projectEntry in openSolution.GetAllSolutionItems<Project> ()) {  	if (projectEntry == configureProject)  		continue;  	string txt;  	int matchRank = 0;  	if (stringMatcher != null) {  		if (!stringMatcher.CalcMatchRank (projectEntry.Name' out matchRank))  			continue;  		int[] match = stringMatcher.GetMatch (projectEntry.Name);  		txt = PackageReferencePanel.GetMatchMarkup (treeView' projectEntry.Name' match' 0);  	}  	else {  		txt = GLib.Markup.EscapeText (projectEntry.Name);  	}  	bool selected = selection.Contains (projectEntry.Name);  	bool allowSelecting = true;  	DotNetProject netProject = projectEntry as DotNetProject;  	if (netProject != null) {  		string reason;  		if (ProjectReferencesProject (references' null' netProject' configureProject.Name)) {  			txt += " " + GLib.Markup.EscapeText (GettextCatalog.GetString ("(Cyclic dependencies not allowed)"));  			allowSelecting = false;  		}  		else if (!configureProject.CanReferenceProject (netProject' out reason)) {  			txt += " " + GLib.Markup.EscapeText ("(" + reason + ")");  			allowSelecting = false;  		}  	}  	Gdk.Pixbuf icon = ImageService.GetPixbuf (projectEntry.StockIcon' IconSize.Menu);  	if (!allowSelecting) {  		// Don't show unselectable projects if there is a filter  		if (stringMatcher != null)  			continue;  		icon = ImageService.MakeTransparent (icon' 0.5);  	}  	Gtk.TreeIter it = store.AppendValues (txt' projectEntry.BaseDirectory.ToString ()' projectEntry' selected' icon' allowSelecting);  	if (!allowSelecting)  		store.SetValue (it' ColColor' "dimgrey");  }  
Magic Number,MonoDevelop.Ide.Projects,ProjectReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectReferencePanel.cs,PopulateListView,The following statement contains a magic number: if (!allowSelecting) {  	// Don't show unselectable projects if there is a filter  	if (stringMatcher != null)  		continue;  	icon = ImageService.MakeTransparent (icon' 0.5);  }  
Magic Number,MonoDevelop.Ide.Projects,ProjectReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ProjectReferencePanel.cs,PopulateListView,The following statement contains a magic number: icon = ImageService.MakeTransparent (icon' 0.5);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,OnMainBookSwitchPage,The following statement contains a magic number: filterEntry.Sensitive = args.PageNum != 3;  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: boxRefs.WidthRequest = 200;  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab = new HBox (false' 3);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab = new HBox (false' 3);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab = new HBox (false' 3);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: tab.BorderWidth = 3;  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: header.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: header.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: header.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,SelectReferenceDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,SelectReferenceDialog,The following statement contains a magic number: header.SetPadding (6' 6' 6' 6);  
Magic Number,MonoDevelop.Ide.Projects,CombinedBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\SelectReferenceDialog.cs,CombinedBox,The following statement contains a magic number: filterEntry.WidthRequest = 180;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: infoBox.BorderWidth = 4;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: infoBox.Spacing = 4;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: infoBox.SizeAllocated += delegate {  	var w = infoBox.Allocation.Width - 10;  	if (infoHeaderLabel.WidthRequest != w) {  		infoHeaderLabel.WidthRequest = w;  		infoDecriptionLabel.WidthRequest = w;  	}  };  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: searchEntry.WidthRequest = 150;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: rightVbox.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: templateView.HeightRequest = 200;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: infoScrolledWindow.HeightRequest = 75;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: sectionList.WidthRequest = 150;  
Magic Number,MonoDevelop.Ide.Projects,TemplatePickerWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\TemplatePickerWidget.cs,TemplatePickerWidget,The following statement contains a magic number: rightVbox.WidthRequest = 300;  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (header' 0' 3' row' row + 1' expand' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (nameEntry' 1' 3' row' row + 1' expand' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (locationEntry' 1' 3' row' row + 1' expand' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (solutionNameEntry' 1' 2' row' row + 1' expand' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (createSolutionDirectoryCheck' 2' 3' row' row + 1' fill' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (createSolutionDirectoryCheck' 2' 3' row' row + 1' fill' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,NewProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\NewProjectOptionsWidget.cs,NewProjectOptionsWidget,The following statement contains a magic number: table.Attach (saveInLabel' 1' 3' row' row + 1' fill' shrink' 0' 0);  
Magic Number,MonoDevelop.Ide.Projects,PoliciesListSummaryTree,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ApplyPolicyDialog.cs,OnExposeEvent,The following statement contains a magic number: using (var layout = Mono.TextEditor.PangoUtil.CreateLayout (this)) {  	layout.SetMarkup ("<i>" + GLib.Markup.EscapeText (message) + "</i>");  	int w' h;  	layout.GetPixelSize (out w' out h);  	var a = Allocation;  	var x = (a.Width - w) / 2;  	var y = (a.Height - h) / 2;  	win.DrawLayout (Style.TextGC (Gtk.StateType.Normal)' x' y' layout);  }  
Magic Number,MonoDevelop.Ide.Projects,PoliciesListSummaryTree,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ApplyPolicyDialog.cs,OnExposeEvent,The following statement contains a magic number: using (var layout = Mono.TextEditor.PangoUtil.CreateLayout (this)) {  	layout.SetMarkup ("<i>" + GLib.Markup.EscapeText (message) + "</i>");  	int w' h;  	layout.GetPixelSize (out w' out h);  	var a = Allocation;  	var x = (a.Width - w) / 2;  	var y = (a.Height - h) / 2;  	win.DrawLayout (Style.TextGC (Gtk.StateType.Normal)' x' y' layout);  }  
Magic Number,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,PackageReferencePanel,The following statement contains a magic number: BorderWidth = 6;  
Magic Number,MonoDevelop.Ide.Projects,ExportSolutionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ExportSolutionDialog.cs,ExportSolutionDialog,The following statement contains a magic number: if (formats.Length < 2) {  	table.Remove (newFormatLabel);  	newFormatLabel.Destroy ();  	newFormatLabel = null;  	table.Remove (comboFormat);  	comboFormat.Destroy ();  	comboFormat = null;  }  
Magic Number,MonoDevelop.Ide.Projects,ExportSolutionDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\ExportSolutionDialog.cs,ExportSolutionDialog,The following statement contains a magic number: folderEntry.WidthRequest = 380;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,BaseDirectoryPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.BaseDirectoryPanelWidget.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,BaseDirectoryPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.BaseDirectoryPanelWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,BaseDirectoryPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.BaseDirectoryPanelWidget.cs,Build,The following statement contains a magic number: this.label2.WidthRequest = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,BaseDirectoryPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.BaseDirectoryPanelWidget.cs,Build,The following statement contains a magic number: w4.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CodeFormattingPanelWidget.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CodeFormattingPanelWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CodeFormattingPanelWidget.cs,Build,The following statement contains a magic number: this.boxButtons.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CodeFormattingPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CodeFormattingPanelWidget.cs,Build,The following statement contains a magic number: w6.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineBuildOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineBuildOptionsWidget.cs,Build,The following statement contains a magic number: this.vbox68.BorderWidth = ((uint)(12));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineBuildOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineBuildOptionsWidget.cs,Build,The following statement contains a magic number: this.hbox46.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineBuildOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineBuildOptionsWidget.cs,Build,The following statement contains a magic number: w4.Padding = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineConfigurationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineConfigurationPanelWidget.cs,Build,The following statement contains a magic number: this.vbox74.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineConfigurationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineConfigurationPanelWidget.cs,Build,The following statement contains a magic number: this.hbox60.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: this.table14 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: this.table14 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: this.table14.RowSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: this.table14.ColumnSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: w1.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: w1.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: this.scrolledwindow14.WidthRequest = 350;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: this.scrolledwindow14.HeightRequest = 100;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: w4.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineInformationWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineInformationWidget.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CommonAssemblySigningPreferences,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CommonAssemblySigningPreferences.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CommonAssemblySigningPreferences,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CommonAssemblySigningPreferences.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CommonAssemblySigningPreferences,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CommonAssemblySigningPreferences.cs,Build,The following statement contains a magic number: w5.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandPanelWidget.cs,Build,The following statement contains a magic number: this.Events = ((global::Gdk.EventMask)(256));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandPanelWidget.cs,Build,The following statement contains a magic number: this.vbox.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandPanelWidget.cs,Build,The following statement contains a magic number: this.label3.WidthRequest = 470;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandPanelWidget.cs,Build,The following statement contains a magic number: this.scrolledwindow1.HscrollbarPolicy = ((global::Gtk.PolicyType)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.Events = ((global::Gdk.EventMask)(16384));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.vbox1.Events = ((global::Gdk.EventMask)(28672));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.vbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.tableData = new global::Gtk.Table (((uint)(3))' ((uint)(3))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.tableData = new global::Gtk.Table (((uint)(3))' ((uint)(3))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.tableData.RowSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.tableData.ColumnSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w5.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w5.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w6.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w6.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.tagSelectorDirectory.Events = ((global::Gdk.EventMask)(256));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w8.TopAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w8.BottomAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w8.LeftAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w8.RightAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.hbox3.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.tagSelectorCommand.Events = ((global::Gdk.EventMask)(256));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w11.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w11.LeftAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w11.RightAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w11.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w11.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w12.TopAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w12.BottomAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w12.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w12.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w13.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w13.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w13.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w14.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w14.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w15.TopAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w15.BottomAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w15.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w15.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w16.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: this.boxData.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CustomCommandWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CustomCommandWidget.cs,Build,The following statement contains a magic number: w19.Position = 3;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.vbox40.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.vbox47.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.label55.WidthRequest = 18;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.vbox46.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.table11 = new global::Gtk.Table (((uint)(4))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.table11 = new global::Gtk.Table (((uint)(4))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.table11.RowSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.table11.ColumnSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w3.TopAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w3.BottomAttach = ((uint)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w3.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w4.TopAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w4.BottomAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w7.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w7.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w7.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w7.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w8.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w8.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w8.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w9.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w10.TopAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w10.BottomAttach = ((uint)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w10.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w11.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.scrolledwindow5.WidthRequest = 350;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.scrolledwindow5.HeightRequest = 100;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w13.TopAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w13.BottomAttach = ((uint)(3));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w13.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.vbox41.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.label49.WidthRequest = 18;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: this.label50.WidthRequest = 18;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,GeneralProjectOptionsWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.GeneralProjectOptionsWidget.cs,Build,The following statement contains a magic number: w24.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.alignment1.LeftPadding = ((uint)(24));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.namespaceAssociationBox.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.vbox4.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.previewFrame.WidthRequest = 400;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: this.previewFrame.ShadowType = ((global::Gtk.ShadowType)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: w9.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,NamespaceSynchronisationPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.NamespaceSynchronisationPanelWidget.cs,Build,The following statement contains a magic number: w13.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox66.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox67.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.label91.WidthRequest = 18;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox69.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.table10 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.table10 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.table10.RowSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.table10.ColumnSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w3.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w4.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w5.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w5.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w6.BottomAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w6.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w6.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,OutputOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.OutputOptionsPanelWidget.cs,Build,The following statement contains a magic number: w6.YOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox67.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox69.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.table10 = new global::Gtk.Table (((uint)(1))' ((uint)(2))' false);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.table10.ColumnSpacing = ((uint)(6));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: w1.XOptions = ((global::Gtk.AttachOptions)(4));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: w2.RightAttach = ((uint)(2));  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: w5.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: w6.Position = 3;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: w7.Position = 4;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RunOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RunOptionsPanelWidget.cs,Build,The following statement contains a magic number: w8.Position = 5;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RuntimeOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox81.Spacing = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,RuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.RuntimeOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.hbox68.Spacing = 7;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineEntryConfigurationsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineEntryConfigurationsPanelWidget.cs,Build,The following statement contains a magic number: this.hbox61.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineEntryConfigurationsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineEntryConfigurationsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox76.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineEntryConfigurationsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineEntryConfigurationsPanelWidget.cs,Build,The following statement contains a magic number: w5.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineEntryConfigurationsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.CombineEntryConfigurationsPanelWidget.cs,Build,The following statement contains a magic number: w6.Position = 3;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox2.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.hbox2.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.label1.WidthRequest = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: w5.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.hbox1.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.label2.WidthRequest = 12;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: this.vbox3.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: w11.Position = 2;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,StartupOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\gtk-gui\MonoDevelop.Ide.Projects.OptionPanels.StartupOptionsPanelWidget.cs,Build,The following statement contains a magic number: w12.Position = 3;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: NetFramework = new SupportedFramework (NetPortableProfile2' ".NETFramework"' ".NET Framework"' "*"' new Version (4' 0)' "4");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: Silverlight = new SupportedFramework (NetPortableProfile2' "Silverlight"' "Silverlight"' ""' new Version (4' 0)' "4");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: WindowsPhone = new SupportedFramework (NetPortableProfile2' "Silverlight"' "Windows Phone"' "WindowsPhone*"' new Version (4' 0)' "7");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: NetFramework = new SupportedFramework (NetPortableProfile3' ".NETFramework"' ".NET Framework"' "*"' new Version (4' 0)' "4");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: Silverlight = new SupportedFramework (NetPortableProfile3' "Silverlight"' "Silverlight"' ""' new Version (4' 0)' "4");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: Silverlight = new SupportedFramework (NetPortableProfile4' "Silverlight"' "Silverlight"' ""' new Version (4' 0)' "4");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,InitProfiles,The following statement contains a magic number: WindowsPhone = new SupportedFramework (NetPortableProfile4' "Silverlight"' "Windows Phone"' "WindowsPhone*"' new Version (4' 0)' "7");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,FormatTargetFramework,The following statement contains a magic number: if (fx == missingFramework)  	description = " - not installed";  else if (UseShortDescriptionInSelector) {  	var sb = new StringBuilder ();  	sb.Append (" (");  	foreach (var sfx in fx.SupportedFrameworks) {  		var label = GetShortName (sfx);  		if (sb.Length > 2)  			sb.Append ("' ");  		sb.Append (label);  	}  	sb.Append (")");  	description = sb.ToString ();  }  else  	description = string.Empty;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,FormatTargetFramework,The following statement contains a magic number: if (UseShortDescriptionInSelector) {  	var sb = new StringBuilder ();  	sb.Append (" (");  	foreach (var sfx in fx.SupportedFrameworks) {  		var label = GetShortName (sfx);  		if (sb.Length > 2)  			sb.Append ("' ");  		sb.Append (label);  	}  	sb.Append (")");  	description = sb.ToString ();  }  else  	description = string.Empty;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,FormatTargetFramework,The following statement contains a magic number: foreach (var sfx in fx.SupportedFrameworks) {  	var label = GetShortName (sfx);  	if (sb.Length > 2)  		sb.Append ("' ");  	sb.Append (label);  }  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,FormatTargetFramework,The following statement contains a magic number: if (sb.Length > 2)  	sb.Append ("' ");  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,CreateUI,The following statement contains a magic number: AddLabel ("Target Frameworks:"' 18);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,AddMultiOptionCombo,The following statement contains a magic number: if (option.Items.Count < 2)  	throw new InvalidOperationException ();  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,AddWarningLabel,The following statement contains a magic number: warningHBox = new HBox (false' 6);  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,PortableRuntimeOptionsPanelWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\PortableRuntimeOptionsPanel.cs,TargetFrameworkChanged_internal,The following statement contains a magic number: if (selectedOptions.Count < 2) {  	SetWarning ("Need to select at least two frameworks.");  	return;  }  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineMSBuildOptions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CombineMSBuildOptions.cs,CreatePanelWidget,The following statement contains a magic number: box.Spacing = 6;  
Magic Number,MonoDevelop.Ide.Projects.OptionPanels,CombineMSBuildOptions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects.OptionPanels\CombineMSBuildOptions.cs,CreatePanelWidget,The following statement contains a magic number: box.Margin = 12;  
Magic Number,MonoDevelop.Ide.Navigation,TextFileNavigationPoint,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Navigation\TextFileNavigationPoint.cs,ShouldReplace,The following statement contains a magic number: return base.Equals (tf) && Math.Abs (line - tf.line) < 5;  
Magic Number,MonoDevelop.Components.AutoTest,AutoTestSession,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.AutoTest\AutoTestSession.cs,Sync,The following statement contains a magic number: if (!syncEvent.WaitOne (20000))  	throw new Exception ("Timeout while executing synchronized call");  
Magic Number,MonoDevelop.Components.AutoTest,AutoTestSession,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.AutoTest\AutoTestSession.cs,SendKeyPress,The following statement contains a magic number: Thread.Sleep (15);  
Magic Number,MonoDevelop.Components.AutoTest,AutoTestSession,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.AutoTest\AutoTestSession.cs,SendKeyPress,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,MonoDevelop.Components.AutoTest,AutoTestClientSession,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.AutoTest\AutoTestClientSession.cs,StartApplication,The following statement contains a magic number: if (!waitEvent.WaitOne (15000)) {  	try {  		process.Kill ();  	}  	catch {  	}  	throw new Exception ("Could not connect to application");  }  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetTypeSortValue,The following statement contains a magic number: if (member is IProperty)  	return 2;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetTypeSortValue,The following statement contains a magic number: return 2;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetTypeSortValue,The following statement contains a magic number: if (member is IMethod)  	return 3;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetTypeSortValue,The following statement contains a magic number: return 3;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetTypeSortValue,The following statement contains a magic number: return 4;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetAccessSortValue,The following statement contains a magic number: if ((mods & Accessibility.Protected) != 0)  	return 2;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetAccessSortValue,The following statement contains a magic number: return 2;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetAccessSortValue,The following statement contains a magic number: if ((mods & Accessibility.Public) != 0)  	return 3;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetAccessSortValue,The following statement contains a magic number: return 3;  
Magic Number,MonoDevelop.Ide.Gui.Pads.ClassPad,MemberNodeBuilder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Pads.ClassPad\MemberNodeBuilder.cs,GetAccessSortValue,The following statement contains a magic number: return 4;  
Magic Number,MonoDevelop.Ide.Updater,AddinsUpdateHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Updater\AddinsUpdateHandler.cs,WarnAvailableUpdates,The following statement contains a magic number: for (int n = 0; n < updates.Length && n < 10; n++)  	s += "\n" + updates [n].Addin.Name;  
Magic Number,MonoDevelop.Ide.Updater,AddinsUpdateHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Updater\AddinsUpdateHandler.cs,WarnAvailableUpdates,The following statement contains a magic number: if (updates.Length > 10)  	s += "\n...";  
Magic Number,MonoDevelop.Ide.Updater,AddinsUpdateHandler,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Updater\AddinsUpdateHandler.cs,WarnAvailableUpdates,The following statement contains a magic number: updateIcon.SetAlertMode (20);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageWidget,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageWidget.cs,WelcomePageWidget,The following statement contains a magic number: LogoHeight = 90;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageLinkButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageLinkButton.cs,WelcomePageLinkButton,The following statement contains a magic number: box = new HBox (false' 6);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageLinkButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageLinkButton.cs,GetLinkTooltip,The following statement contains a magic number: if (link.IndexOf ("project://") != -1) {  	string message = link;  	message = message.Substring (10);  	string msg = GettextCatalog.GetString ("Open solution {0}"' message);  	if (IdeApp.Workspace.IsOpen)  		msg += " - " + GettextCatalog.GetString ("Hold Control key to open in current workspace.");  	return msg;  }  else {  	return GettextCatalog.GetString ("Open {0}"' link);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageLinkButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageLinkButton.cs,GetLinkTooltip,The following statement contains a magic number: message = message.Substring (10);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageNewsFeed,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageNewsFeed.cs,WelcomePageNewsFeed,The following statement contains a magic number: ContentAlignment.TopPadding += 10;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageNewsFeed,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageNewsFeed.cs,LoadNews,The following statement contains a magic number: try {  	var news = GetNewsXml ();  	if (news.FirstNode == null) {  		var label = new Label (GettextCatalog.GetString ("No news found.")) {  			Xalign = 0'  			Xpad = 6  		};  		box.PackStart (label' true' false' 0);  	}  	else {  		foreach (var child in OnLoadNews (news).Take (limit))  			box.PackStart (child' true' false' 0);  	}  }  catch (Exception ex) {  	LoggingService.LogWarning ("Error loading news feed."' ex);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageNewsFeed,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageNewsFeed.cs,LoadNews,The following statement contains a magic number: if (news.FirstNode == null) {  	var label = new Label (GettextCatalog.GetString ("No news found.")) {  		Xalign = 0'  		Xpad = 6  	};  	box.PackStart (label' true' false' 0);  }  else {  	foreach (var child in OnLoadNews (news).Take (limit))  		box.PackStart (child' true' false' 0);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: btn.WidthRequest = (int)(Styles.WelcomeScreen.Pad.Solutions.SolutionTile.Width / 2.3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: btn.BorderPadding = 6;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: btn.LeftTextPadding = 24;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: btn.WidthRequest = (int)(Styles.WelcomeScreen.Pad.Solutions.SolutionTile.Width / 2.3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: btn.BorderPadding = 6;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: btn.LeftTextPadding = 24;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: foreach (var recent in DesktopService.RecentFiles.GetProjects ().Take (itemCount)) {  	var filename = recent.FileName;  	if (!System.IO.File.Exists (filename))  		continue;  	var accessed = recent.TimeStamp;  	var pixbuf = ImageService.GetPixbuf (GetIcon (filename)' IconSize.Dnd);  	var button = new WelcomePageListButton (recent.DisplayName' System.IO.Path.GetDirectoryName (filename)' pixbuf' "project://" + filename);  	button.BorderPadding = 2;  	button.AllowPinning = true;  	button.Pinned = recent.IsFavorite;  	//FIXME: update times as needed. currently QueryTooltip causes crashes on Windows  	//button.QueryTooltip += delegate (object o' QueryTooltipArgs args) {  	//	args.Tooltip.Text = filename + "\n" + TimeSinceEdited (accessed);  	//	args.RetVal = true;  	//};  	//button.HasTooltip = true;  	button.TooltipText = filename + "\n" + TimeSinceEdited (accessed);  	box.PackStart (button' false' false' 0);  	button.PinClicked += delegate {  		DesktopService.RecentFiles.SetFavoriteFile (filename' button.Pinned);  	};  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageRecentProjectsList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageRecentProjectsList.cs,RecentFilesChanged,The following statement contains a magic number: button.BorderPadding = 2;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	var rect = new Gdk.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	var shadowColor = CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.ShadowColor);  	int inset = 2;  	var ss = Styles.WelcomeScreen.Pad.ShadowSize;  	var r = new Cairo.Rectangle (rect.X + ss + 0.5' rect.Y + ss + 0.5' rect.Width - ss * 2 - 1' rect.Height - ss * 2 - 1);  	var sr = new Cairo.Rectangle (r.X + inset' r.Y + inset + Styles.WelcomeScreen.Pad.ShadowVerticalOffset' r.Width - inset * 2' r.Height - inset * 2);  	int size = Styles.WelcomeScreen.Pad.ShadowSize;  	double alpha = 0.2;  	double alphaDec = 0.2 / (double)size;  	for (int n = 0; n < size; n++) {  		sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  		CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  		shadowColor.A = alpha;  		ctx.SetSourceColor (shadowColor);  		ctx.Stroke ();  		alpha -= alphaDec;  	}  	CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BackgroundColor));  	ctx.FillPreserve ();  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.BorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: for (int n = 0; n < size; n++) {  	sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  	CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  	shadowColor.A = alpha;  	ctx.SetSourceColor (shadowColor);  	ctx.Stroke ();  	alpha -= alphaDec;  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: for (int n = 0; n < size; n++) {  	sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  	CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  	shadowColor.A = alpha;  	ctx.SetSourceColor (shadowColor);  	ctx.Stroke ();  	alpha -= alphaDec;  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: for (int n = 0; n < size; n++) {  	sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  	CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  	shadowColor.A = alpha;  	ctx.SetSourceColor (shadowColor);  	ctx.Stroke ();  	alpha -= alphaDec;  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: sr = new Cairo.Rectangle (sr.X - 1' sr.Y - 1' sr.Width + 2' sr.Height + 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: CairoExtensions.RoundedRectangle (ctx' sr.X' sr.Y' sr.Width' sr.Height' 4);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageSection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageSection.cs,OnExposeEvent,The following statement contains a magic number: CairoExtensions.RoundedRectangle (ctx' r.X' r.Y' r.Width' r.Height' 4);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (string.IsNullOrEmpty (dateString)) {  	subtitle = "Today";  }  else {  	DateTime date;  	if (DateTime.TryParse (dateString' out date)) {  		// Round to begining of day. A change of day will be "yesterday"' even if it happened 5 minutes ago  		var today = DateTime.Today;  		date = date.Date;  		int days = (int)Math.Round ((today - date).TotalDays);  		var weeks = days / 7;  		if (days <= 0) {  			subtitle = GettextCatalog.GetString ("Today");  		}  		else if (days == 1) {  			subtitle = GettextCatalog.GetString ("Yesterday");  		}  		else if (days < 7) {  			subtitle = GettextCatalog.GetString ("{0} days ago"' days);  		}  		else if (weeks < 4) {  			subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  		}  		else  			subtitle = date.ToShortDateString ();  	}  	else {  		subtitle = "Today";  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (string.IsNullOrEmpty (dateString)) {  	subtitle = "Today";  }  else {  	DateTime date;  	if (DateTime.TryParse (dateString' out date)) {  		// Round to begining of day. A change of day will be "yesterday"' even if it happened 5 minutes ago  		var today = DateTime.Today;  		date = date.Date;  		int days = (int)Math.Round ((today - date).TotalDays);  		var weeks = days / 7;  		if (days <= 0) {  			subtitle = GettextCatalog.GetString ("Today");  		}  		else if (days == 1) {  			subtitle = GettextCatalog.GetString ("Yesterday");  		}  		else if (days < 7) {  			subtitle = GettextCatalog.GetString ("{0} days ago"' days);  		}  		else if (weeks < 4) {  			subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  		}  		else  			subtitle = date.ToShortDateString ();  	}  	else {  		subtitle = "Today";  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (string.IsNullOrEmpty (dateString)) {  	subtitle = "Today";  }  else {  	DateTime date;  	if (DateTime.TryParse (dateString' out date)) {  		// Round to begining of day. A change of day will be "yesterday"' even if it happened 5 minutes ago  		var today = DateTime.Today;  		date = date.Date;  		int days = (int)Math.Round ((today - date).TotalDays);  		var weeks = days / 7;  		if (days <= 0) {  			subtitle = GettextCatalog.GetString ("Today");  		}  		else if (days == 1) {  			subtitle = GettextCatalog.GetString ("Yesterday");  		}  		else if (days < 7) {  			subtitle = GettextCatalog.GetString ("{0} days ago"' days);  		}  		else if (weeks < 4) {  			subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  		}  		else  			subtitle = date.ToShortDateString ();  	}  	else {  		subtitle = "Today";  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (DateTime.TryParse (dateString' out date)) {  	// Round to begining of day. A change of day will be "yesterday"' even if it happened 5 minutes ago  	var today = DateTime.Today;  	date = date.Date;  	int days = (int)Math.Round ((today - date).TotalDays);  	var weeks = days / 7;  	if (days <= 0) {  		subtitle = GettextCatalog.GetString ("Today");  	}  	else if (days == 1) {  		subtitle = GettextCatalog.GetString ("Yesterday");  	}  	else if (days < 7) {  		subtitle = GettextCatalog.GetString ("{0} days ago"' days);  	}  	else if (weeks < 4) {  		subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  	}  	else  		subtitle = date.ToShortDateString ();  }  else {  	subtitle = "Today";  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (DateTime.TryParse (dateString' out date)) {  	// Round to begining of day. A change of day will be "yesterday"' even if it happened 5 minutes ago  	var today = DateTime.Today;  	date = date.Date;  	int days = (int)Math.Round ((today - date).TotalDays);  	var weeks = days / 7;  	if (days <= 0) {  		subtitle = GettextCatalog.GetString ("Today");  	}  	else if (days == 1) {  		subtitle = GettextCatalog.GetString ("Yesterday");  	}  	else if (days < 7) {  		subtitle = GettextCatalog.GetString ("{0} days ago"' days);  	}  	else if (weeks < 4) {  		subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  	}  	else  		subtitle = date.ToShortDateString ();  }  else {  	subtitle = "Today";  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (DateTime.TryParse (dateString' out date)) {  	// Round to begining of day. A change of day will be "yesterday"' even if it happened 5 minutes ago  	var today = DateTime.Today;  	date = date.Date;  	int days = (int)Math.Round ((today - date).TotalDays);  	var weeks = days / 7;  	if (days <= 0) {  		subtitle = GettextCatalog.GetString ("Today");  	}  	else if (days == 1) {  		subtitle = GettextCatalog.GetString ("Yesterday");  	}  	else if (days < 7) {  		subtitle = GettextCatalog.GetString ("{0} days ago"' days);  	}  	else if (weeks < 4) {  		subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  	}  	else  		subtitle = date.ToShortDateString ();  }  else {  	subtitle = "Today";  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (days <= 0) {  	subtitle = GettextCatalog.GetString ("Today");  }  else if (days == 1) {  	subtitle = GettextCatalog.GetString ("Yesterday");  }  else if (days < 7) {  	subtitle = GettextCatalog.GetString ("{0} days ago"' days);  }  else if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (days <= 0) {  	subtitle = GettextCatalog.GetString ("Today");  }  else if (days == 1) {  	subtitle = GettextCatalog.GetString ("Yesterday");  }  else if (days < 7) {  	subtitle = GettextCatalog.GetString ("{0} days ago"' days);  }  else if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (days == 1) {  	subtitle = GettextCatalog.GetString ("Yesterday");  }  else if (days < 7) {  	subtitle = GettextCatalog.GetString ("{0} days ago"' days);  }  else if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (days == 1) {  	subtitle = GettextCatalog.GetString ("Yesterday");  }  else if (days < 7) {  	subtitle = GettextCatalog.GetString ("{0} days ago"' days);  }  else if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (days < 7) {  	subtitle = GettextCatalog.GetString ("{0} days ago"' days);  }  else if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (days < 7) {  	subtitle = GettextCatalog.GetString ("{0} days ago"' days);  }  else if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,SetDate,The following statement contains a magic number: if (weeks < 4) {  	subtitle = GettextCatalog.GetPluralString ("{0} week ago"' "{0} weeks ago"' weeks' weeks);  }  else  	subtitle = date.ToShortDateString ();  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,GetLinkTooltip,The following statement contains a magic number: if (link.IndexOf ("project://") != -1) {  	string message = link;  	message = message.Substring (10);  	string msg = GettextCatalog.GetString ("Open solution {0}"' message);  	if (IdeApp.Workspace.IsOpen)  		msg += " - " + GettextCatalog.GetString ("Hold Control key to open in current workspace.");  	return msg;  }  else {  	return GettextCatalog.GetString ("Open {0}"' link);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFeedItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFeedItem.cs,GetLinkTooltip,The following statement contains a magic number: message = message.Substring (10);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,WelcomePageListButton,The following statement contains a magic number: HeightRequest = Styles.WelcomeScreen.Pad.Solutions.SolutionTile.Height + 2;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	if (mouseOver) {  		if (BorderPadding <= 0) {  			ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.Fill ();  			ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  			ctx.RelLineTo (Allocation.Width' 0);  			if (DrawRightBorder) {  				ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  			}  			if (DrawLeftBorder) {  				ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  				ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  			}  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  		else {  			Gdk.Rectangle region = Allocation;  			region.Inflate (-BorderPadding' -BorderPadding);  			ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  			ctx.FillPreserve ();  			ctx.LineWidth = 1;  			ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  			ctx.Stroke ();  		}  	}  	// Draw the icon  	int x = Allocation.X + InternalPadding;  	int y = Allocation.Y + (Allocation.Height - icon.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' icon' x' y);  	ctx.Paint ();  	if (AllowPinning && (mouseOver || pinned)) {  		Gdk.Pixbuf star;  		if (pinned) {  			if (mouseOverStar)  				star = starPinnedHover;  			else  				star = starPinned;  		}  		else {  			if (mouseOverStar)  				star = starNormalHover;  			else  				star = starNormal;  		}  		x = x + icon.Width - star.Width + 3;  		y = y + icon.Height - star.Height + 3;  		Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  		ctx.Paint ();  		starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  	}  	// Draw the text  	int textWidth = Allocation.Width - LeftTextPadding - InternalPadding * 2;  	var face = Platform.IsMac ? Styles.WelcomeScreen.Pad.TitleFontFamilyMac : Styles.WelcomeScreen.Pad.TitleFontFamilyWindows;  	Pango.Layout titleLayout = new Pango.Layout (PangoContext);  	titleLayout.Width = Pango.Units.FromPixels (textWidth);  	titleLayout.Ellipsize = Pango.EllipsizeMode.End;  	titleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleFontSize' false' Styles.WelcomeScreen.Pad.MediumTitleColor' title));  	Pango.Layout subtitleLayout = null;  	if (!string.IsNullOrEmpty (subtitle)) {  		subtitleLayout = new Pango.Layout (PangoContext);  		subtitleLayout.Width = Pango.Units.FromPixels (textWidth);  		subtitleLayout.Ellipsize = Pango.EllipsizeMode.Start;  		subtitleLayout.SetMarkup (WelcomePageSection.FormatText (face' Styles.WelcomeScreen.Pad.Solutions.SolutionTile.PathFontSize' false' Styles.WelcomeScreen.Pad.SmallTitleColor' subtitle));  	}  	int height = 0;  	int w' h1' h2;  	titleLayout.GetPixelSize (out w' out h1);  	height += h1;  	if (subtitleLayout != null) {  		height += Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		subtitleLayout.GetPixelSize (out w' out h2);  		height += h2;  	}  	int tx = Allocation.X + InternalPadding + LeftTextPadding;  	int ty = Allocation.Y + (Allocation.Height - height) / 2;  	ctx.MoveTo (tx' ty);  	Pango.CairoHelper.ShowLayout (ctx' titleLayout);  	if (subtitleLayout != null) {  		ty += h1 + Styles.WelcomeScreen.Pad.Solutions.SolutionTile.TitleBottomMargin;  		ctx.MoveTo (tx' ty);  		Pango.CairoHelper.ShowLayout (ctx' subtitleLayout);  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (mouseOver) {  	if (BorderPadding <= 0) {  		ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.Fill ();  		ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  		ctx.RelLineTo (Allocation.Width' 0);  		if (DrawRightBorder) {  			ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  		}  		if (DrawLeftBorder) {  			ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  			ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  		}  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  	else {  		Gdk.Rectangle region = Allocation;  		region.Inflate (-BorderPadding' -BorderPadding);  		ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  		ctx.FillPreserve ();  		ctx.LineWidth = 1;  		ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  		ctx.Stroke ();  	}  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (BorderPadding <= 0) {  	ctx.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.Fill ();  	ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	if (DrawRightBorder) {  		ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  	}  	if (DrawLeftBorder) {  		ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  		ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  	}  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  else {  	Gdk.Rectangle region = Allocation;  	region.Inflate (-BorderPadding' -BorderPadding);  	ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBackgroundColor));  	ctx.FillPreserve ();  	ctx.LineWidth = 1;  	ctx.SetSourceColor (CairoExtensions.ParseColor (Styles.WelcomeScreen.Pad.Solutions.SolutionTile.HoverBorderColor));  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.X' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.X' Allocation.Y + Allocation.Height - 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawRightBorder) {  	ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawRightBorder) {  	ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawRightBorder) {  	ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawRightBorder) {  	ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.Right + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.LineTo (Allocation.Right + 0.5' Allocation.Bottom - 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawLeftBorder) {  	ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawLeftBorder) {  	ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawLeftBorder) {  	ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (DrawLeftBorder) {  	ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  	ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.Left + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.LineTo (Allocation.Left + 0.5' Allocation.Bottom - 0.5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: ctx.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (AllowPinning && (mouseOver || pinned)) {  	Gdk.Pixbuf star;  	if (pinned) {  		if (mouseOverStar)  			star = starPinnedHover;  		else  			star = starPinned;  	}  	else {  		if (mouseOverStar)  			star = starNormalHover;  		else  			star = starNormal;  	}  	x = x + icon.Width - star.Width + 3;  	y = y + icon.Height - star.Height + 3;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  	ctx.Paint ();  	starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: if (AllowPinning && (mouseOver || pinned)) {  	Gdk.Pixbuf star;  	if (pinned) {  		if (mouseOverStar)  			star = starPinnedHover;  		else  			star = starPinned;  	}  	else {  		if (mouseOverStar)  			star = starNormalHover;  		else  			star = starNormal;  	}  	x = x + icon.Width - star.Width + 3;  	y = y + icon.Height - star.Height + 3;  	Gdk.CairoHelper.SetSourcePixbuf (ctx' star' x' y);  	ctx.Paint ();  	starRect = new Gdk.Rectangle (x' y' star.Width' star.Height);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: x = x + icon.Width - star.Width + 3;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageListButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageListButton.cs,OnExposeEvent,The following statement contains a magic number: y = y + icon.Height - star.Height + 3;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageBarButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageBarButton.cs,WelcomePageBarButton,The following statement contains a magic number: if (!string.IsNullOrEmpty (iconResource)) {  	imageHover = Gdk.Pixbuf.LoadFromResource (iconResource);  	imageNormal = ImageService.MakeTransparent (imageHover' 0.7);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageBarButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageBarButton.cs,WelcomePageBarButton,The following statement contains a magic number: imageNormal = ImageService.MakeTransparent (imageHover' 0.7);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageProjectBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFrame.cs,WelcomePageProjectBar,The following statement contains a magic number: SetPadding (3' 3' 12' 12);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageProjectBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFrame.cs,WelcomePageProjectBar,The following statement contains a magic number: SetPadding (3' 3' 12' 12);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageProjectBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFrame.cs,WelcomePageProjectBar,The following statement contains a magic number: SetPadding (3' 3' 12' 12);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageProjectBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFrame.cs,WelcomePageProjectBar,The following statement contains a magic number: SetPadding (3' 3' 12' 12);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageTipOfTheDaySection,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageTipOfTheDaySection.cs,WelcomePageTipOfTheDaySection,The following statement contains a magic number: label.WidthRequest = 200;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: TitleOffset = TextOffset = new Gdk.Point (0' 40);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: IconScale = 0.5;  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: GLib.Timeout.Add (750' () =>  {  	new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  	return false;  });  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: GLib.Timeout.Add (750' () =>  {  	new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  	return false;  });  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: GLib.Timeout.Add (750' () =>  {  	new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  	return false;  });  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: GLib.Timeout.Add (750' () =>  {  	new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  	return false;  });  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,OnMapped,The following statement contains a magic number: new Animation ().AddConcurrent (new Animation (f => TitleOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOffset.Y = (int)(40 * f)' start: 1' end: 0' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => TitleOpacity = f' easing: Easing.CubicInOut)' 0' 0.5f).AddConcurrent (new Animation (f => TextOpacity = f' easing: Easing.CubicInOut)' 0.1f' 0.6f).AddConcurrent (new Animation (f => ButtonOpacity = f' easing: Easing.CubicInOut)' 0.3f' 0.9f).AddConcurrent (new Animation (f => BackgroundOpacity = f' easing: Easing.CubicInOut)' 0' 0.2f).AddConcurrent (new Animation (f => IconOpacity = f' easing: Easing.CubicInOut)' 0.2f' 0.7f).AddConcurrent (new Animation (f => IconScale = f' start: 0.5f' end: 1' easing: Easing.SpringOut)' 0.2f' 0.7f).Commit (this' "Intro"' length: 1200);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RenderOuterShadow (new Gdk.Rectangle (region.X + 10' region.Y + 15' region.Width - 20' region.Height - 15)' Padding' 3' .25);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 5);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Y' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  	lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Y' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  	lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Y' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  	lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Y' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  	lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Y' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  	lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Y' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  	lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.36' .53' .73));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.21' .37' .54));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.Scale (0.75' 0.75);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.Scale (0.75' 0.75);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (context' starburst' -starburst.Width / 2' -starburst.Height / 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (context' starburst' -starburst.Width / 2' -starburst.Height / 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.SetSourceRGB (.29' .47' .67);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.SetSourceRGB (.29' .47' .67);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderBackground,The following statement contains a magic number: context.SetSourceRGB (.29' .47' .67);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderPreview,The following statement contains a magic number: if (brandedIcon != null) {  	if (previewSurface == null) {  		previewSurface = new SurfaceWrapper (context' brandedIcon);  	}  	double scale = PreviewSize / previewSurface.Width;  	context.Save ();  	context.Translate (position.X' position.Y);  	context.Scale (scale * IconScale' scale * IconScale);  	context.SetSourceSurface (previewSurface.Surface' -previewSurface.Width / 2' -previewSurface.Height / 2);  	context.PaintWithAlpha (opacity);  	context.Restore ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderPreview,The following statement contains a magic number: if (brandedIcon != null) {  	if (previewSurface == null) {  		previewSurface = new SurfaceWrapper (context' brandedIcon);  	}  	double scale = PreviewSize / previewSurface.Width;  	context.Save ();  	context.Translate (position.X' position.Y);  	context.Scale (scale * IconScale' scale * IconScale);  	context.SetSourceSurface (previewSurface.Surface' -previewSurface.Width / 2' -previewSurface.Height / 2);  	context.PaintWithAlpha (opacity);  	context.Restore ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderPreview,The following statement contains a magic number: context.SetSourceSurface (previewSurface.Surface' -previewSurface.Width / 2' -previewSurface.Height / 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderPreview,The following statement contains a magic number: context.SetSourceSurface (previewSurface.Surface' -previewSurface.Width / 2' -previewSurface.Height / 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderShadowedText,The following statement contains a magic number: context.MoveTo (position.X' position.Y + 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderShadowedText,The following statement contains a magic number: context.SetSourceRGBA (0' 0' 0' 0.3 * opacity);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 3);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	if (hovered) {  		lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  		lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  	}  	else {  		lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  		lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  	}  	context.SetSource (lg);  	context.FillPreserve ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: if (hovered) {  	lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  	lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  }  else {  	lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  	lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.15' .76' .09' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.41' .91' .46' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (.41' .91' .46' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (.15' .76' .09' opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.SetSourceRGBA (.29' .79' .28' opacity);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.SetSourceRGBA (.29' .79' .28' opacity);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.SetSourceRGBA (.29' .79' .28' opacity);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: context.RoundedRectangle (region.X + 0.5' region.Y + 0.5' region.Width - 1' region.Height - 1' 2);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (1' 1' 1' .74 * opacity));  	lg.AddColorStop (0.1' new Cairo.Color (1' 1' 1' 0));  	lg.AddColorStop (0.9' new Cairo.Color (0' 0' 0' 0));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' .34 * opacity));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (1' 1' 1' .74 * opacity));  	lg.AddColorStop (0.1' new Cairo.Color (1' 1' 1' 0));  	lg.AddColorStop (0.9' new Cairo.Color (0' 0' 0' 0));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' .34 * opacity));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (1' 1' 1' .74 * opacity));  	lg.AddColorStop (0.1' new Cairo.Color (1' 1' 1' 0));  	lg.AddColorStop (0.9' new Cairo.Color (0' 0' 0' 0));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' .34 * opacity));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var lg = new LinearGradient (0' region.Top' 0' region.Bottom)) {  	lg.AddColorStop (0' new Cairo.Color (1' 1' 1' .74 * opacity));  	lg.AddColorStop (0.1' new Cairo.Color (1' 1' 1' 0));  	lg.AddColorStop (0.9' new Cairo.Color (0' 0' 0' 0));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' .34 * opacity));  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (1' 1' 1' .74 * opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0.1' new Cairo.Color (1' 1' 1' 0));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (0.9' new Cairo.Color (0' 0' 0' 0));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: lg.AddColorStop (1' new Cairo.Color (0' 0' 0' .34 * opacity));  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var layout = ButtonLayout (PangoContext)) {  	int w' h;  	layout.GetPixelSize (out w' out h);  	RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var layout = ButtonLayout (PangoContext)) {  	int w' h;  	layout.GetPixelSize (out w' out h);  	RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var layout = ButtonLayout (PangoContext)) {  	int w' h;  	layout.GetPixelSize (out w' out h);  	RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: using (var layout = ButtonLayout (PangoContext)) {  	int w' h;  	layout.GetPixelSize (out w' out h);  	RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  }  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,RenderButton,The following statement contains a magic number: RenderShadowedText (context' new Gdk.Point (corner.X + ButtonSize.Width / 2 - w / 2' corner.Y + ButtonSize.Height / 2 - h / 2 - 1)' opacity' layout);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,ButtonLayout,The following statement contains a magic number: layout.FontDescription.AbsoluteSize = Pango.Units.FromPixels (16);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,TitleLayout,The following statement contains a magic number: layout.FontDescription.AbsoluteSize = Pango.Units.FromPixels (26);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,TextLayout,The following statement contains a magic number: layout.FontDescription.AbsoluteSize = Pango.Units.FromPixels (15);  
Magic Number,MonoDevelop.Ide.WelcomePage,WelcomePageFirstRun,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.WelcomePage\WelcomePageFirstRun.cs,TextLayout,The following statement contains a magic number: layout.Width = Pango.Units.FromPixels (420);  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemServiceExt,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,LookupType,The following statement contains a magic number: if (typeParameterCount < 0) {  	for (int i = 1; i < 50; i++) {  		result = LookupType (compilation' ns' name' i);  		if (result != null)  			return result;  	}  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemServiceExt,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,LookupType,The following statement contains a magic number: for (int i = 1; i < 50; i++) {  	result = LookupType (compilation' ns' name' i);  	if (result != null)  		return result;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetStableHashCode,The following statement contains a magic number: unchecked {  	int h = 0;  	foreach (char c in text) {  		h = (h << 5) - h + c;  	}  	return h;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetStableHashCode,The following statement contains a magic number: foreach (char c in text) {  	h = (h << 5) - h + c;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetStableHashCode,The following statement contains a magic number: h = (h << 5) - h + c;  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetPossibleCacheDirNames,The following statement contains a magic number: while (i < 4096) {  	yield return Path.Combine (baseName' i.ToString ());  	i++;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,DeserializeObject,The following statement contains a magic number: try {  	using (var fs = new FileStream (path' FileMode.Open' FileAccess.Read' FileShare.Read' 4096' FileOptions.SequentialScan)) {  		using (var reader = new BinaryReaderWith7BitEncodedInts (fs)) {  			lock (sharedSerializer) {  				return (T)sharedSerializer.Deserialize (reader);  			}  		}  	}  }  catch (Exception e) {  	LoggingService.LogError ("Error while trying to deserialize " + typeof(T).FullName + ". stack trace:" + Environment.StackTrace' e);  	return default(T);  }  finally {  	t.Dispose ();  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,DeserializeObject,The following statement contains a magic number: using (var fs = new FileStream (path' FileMode.Open' FileAccess.Read' FileShare.Read' 4096' FileOptions.SequentialScan)) {  	using (var reader = new BinaryReaderWith7BitEncodedInts (fs)) {  		lock (sharedSerializer) {  			return (T)sharedSerializer.Deserialize (reader);  		}  	}  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,CleanupCache,The following statement contains a magic number: foreach (var subDir in subDirs) {  	try {  		var days = Math.Abs ((DateTime.Now - Directory.GetLastWriteTime (subDir)).TotalDays);  		if (days > 30)  			Directory.Delete (subDir' true);  	}  	catch (Exception e) {  		LoggingService.LogError ("Error while removing outdated cache " + subDir' e);  	}  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,CleanupCache,The following statement contains a magic number: try {  	var days = Math.Abs ((DateTime.Now - Directory.GetLastWriteTime (subDir)).TotalDays);  	if (days > 30)  		Directory.Delete (subDir' true);  }  catch (Exception e) {  	LoggingService.LogError ("Error while removing outdated cache " + subDir' e);  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,CleanupCache,The following statement contains a magic number: if (days > 30)  	Directory.Delete (subDir' true);  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,GetProgramFilesX86,The following statement contains a magic number: return Environment.GetFolderPath (IntPtr.Size == 8 ? Environment.SpecialFolder.ProgramFilesX86 : Environment.SpecialFolder.ProgramFiles);  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,RecreateFrameworkLookup,The following statement contains a magic number: lock (frameworkLookup) {  	FrameworkTask result;  	var frameworkName = netProject.TargetFramework.Name;  	if (!frameworkLookup.TryGetValue (frameworkName' out result))  		return false;  	if (result.RetryCount > 5) {  		LoggingService.LogError ("Can't create framework lookup for:" + frameworkName);  		return false;  	}  	result.RetryCount++;  	LoggingService.LogInfo ("Trying to recreate framework lookup for {0}' try {1}."' frameworkName' result.RetryCount);  	result.Task = null;  	StartFrameworkLookup (netProject);  	return true;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,RecreateFrameworkLookup,The following statement contains a magic number: if (result.RetryCount > 5) {  	LoggingService.LogError ("Can't create framework lookup for:" + frameworkName);  	return false;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ForceUpdate,The following statement contains a magic number: while (!context.IsLoaded) {  	Thread.Sleep (10);  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ForceUpdate,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ConsumeParsingQueue,The following statement contains a magic number: try {  	do {  		if (pending > 5 && monitor == null) {  			monitor = GetParseProgressMonitor ();  			monitor.BeginTask (GettextCatalog.GetString ("Generating database")' 0);  		}  		var job = DequeueParseJob ();  		if (job != null) {  			try {  				job.Run (monitor' token);  			}  			catch (Exception ex) {  				if (monitor == null)  					monitor = GetParseProgressMonitor ();  				monitor.ReportError (null' ex);  			}  			finally {  				job.Context.EndLoadOperation ();  			}  		}  		if (token.IsCancellationRequested)  			break;  		pending = PendingJobCount;  	}  	while (pending > 0);  	queueEmptied.Set ();  }  finally {  	if (monitor != null)  		monitor.Dispose ();  }  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ConsumeParsingQueue,The following statement contains a magic number: do {  	if (pending > 5 && monitor == null) {  		monitor = GetParseProgressMonitor ();  		monitor.BeginTask (GettextCatalog.GetString ("Generating database")' 0);  	}  	var job = DequeueParseJob ();  	if (job != null) {  		try {  			job.Run (monitor' token);  		}  		catch (Exception ex) {  			if (monitor == null)  				monitor = GetParseProgressMonitor ();  			monitor.ReportError (null' ex);  		}  		finally {  			job.Context.EndLoadOperation ();  		}  	}  	if (token.IsCancellationRequested)  		break;  	pending = PendingJobCount;  }  while (pending > 0);  
Magic Number,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,ConsumeParsingQueue,The following statement contains a magic number: if (pending > 5 && monitor == null) {  	monitor = GetParseProgressMonitor ();  	monitor.BeginTask (GettextCatalog.GetString ("Generating database")' 0);  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Ambience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\Ambience.cs,GetString,The following statement contains a magic number: if (entity == null) {  	string[] trace = Environment.StackTrace.Split (new[] {  		Environment.NewLine  	}' StringSplitOptions.None);  	return "null entity: " + (trace != null && trace.Length > 2 ? trace [2] : "unknown location");  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Ambience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\Ambience.cs,GetString,The following statement contains a magic number: if (entity == null) {  	string[] trace = Environment.StackTrace.Split (new[] {  		Environment.NewLine  	}' StringSplitOptions.None);  	return "null entity: " + (trace != null && trace.Length > 2 ? trace [2] : "unknown location");  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Ambience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\Ambience.cs,GetString,The following statement contains a magic number: return "null entity: " + (trace != null && trace.Length > 2 ? trace [2] : "unknown location");  
Magic Number,MonoDevelop.Ide.TypeSystem,Ambience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\Ambience.cs,GetString,The following statement contains a magic number: return "null entity: " + (trace != null && trace.Length > 2 ? trace [2] : "unknown location");  
Magic Number,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetCref,The following statement contains a magic number: if (cref.Length < 2)  	return cref;  
Magic Number,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetCref,The following statement contains a magic number: if (cref.Substring (1' 1) == ":")  	return cref.Substring (2' cref.Length - 2);  
Magic Number,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetCref,The following statement contains a magic number: if (cref.Substring (1' 1) == ":")  	return cref.Substring (2' cref.Length - 2);  
Magic Number,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetCref,The following statement contains a magic number: return cref.Substring (2' cref.Length - 2);  
Magic Number,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetCref,The following statement contains a magic number: return cref.Substring (2' cref.Length - 2);  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: switch (def.Kind) {  case TypeKind.Class:  	return typeIconTable [0' (int)def.Accessibility];  case TypeKind.Enum:  	return typeIconTable [1' (int)def.Accessibility];  case TypeKind.Interface:  	return typeIconTable [2' (int)def.Accessibility];  case TypeKind.Struct:  	return typeIconTable [3' (int)def.Accessibility];  case TypeKind.Delegate:  	return typeIconTable [4' (int)def.Accessibility];  default:  	return typeIconTable [0' (int)def.Accessibility];  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: switch (def.Kind) {  case TypeKind.Class:  	return typeIconTable [0' (int)def.Accessibility];  case TypeKind.Enum:  	return typeIconTable [1' (int)def.Accessibility];  case TypeKind.Interface:  	return typeIconTable [2' (int)def.Accessibility];  case TypeKind.Struct:  	return typeIconTable [3' (int)def.Accessibility];  case TypeKind.Delegate:  	return typeIconTable [4' (int)def.Accessibility];  default:  	return typeIconTable [0' (int)def.Accessibility];  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: switch (def.Kind) {  case TypeKind.Class:  	return typeIconTable [0' (int)def.Accessibility];  case TypeKind.Enum:  	return typeIconTable [1' (int)def.Accessibility];  case TypeKind.Interface:  	return typeIconTable [2' (int)def.Accessibility];  case TypeKind.Struct:  	return typeIconTable [3' (int)def.Accessibility];  case TypeKind.Delegate:  	return typeIconTable [4' (int)def.Accessibility];  default:  	return typeIconTable [0' (int)def.Accessibility];  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: return typeIconTable [2' (int)def.Accessibility];  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: return typeIconTable [3' (int)def.Accessibility];  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: return typeIconTable [4' (int)def.Accessibility];  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: switch (def.Kind) {  case TypeKind.Class:  	return typeIconTable [0' (int)def.Accessibility];  case TypeKind.Enum:  	return typeIconTable [1' (int)def.Accessibility];  case TypeKind.Interface:  	return typeIconTable [2' (int)def.Accessibility];  case TypeKind.Struct:  	return typeIconTable [3' (int)def.Accessibility];  case TypeKind.Delegate:  	return typeIconTable [4' (int)def.Accessibility];  default:  	return typeIconTable [0' (int)def.Accessibility];  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: switch (def.Kind) {  case TypeKind.Class:  	return typeIconTable [0' (int)def.Accessibility];  case TypeKind.Enum:  	return typeIconTable [1' (int)def.Accessibility];  case TypeKind.Interface:  	return typeIconTable [2' (int)def.Accessibility];  case TypeKind.Struct:  	return typeIconTable [3' (int)def.Accessibility];  case TypeKind.Delegate:  	return typeIconTable [4' (int)def.Accessibility];  default:  	return typeIconTable [0' (int)def.Accessibility];  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: switch (def.Kind) {  case TypeKind.Class:  	return typeIconTable [0' (int)def.Accessibility];  case TypeKind.Enum:  	return typeIconTable [1' (int)def.Accessibility];  case TypeKind.Interface:  	return typeIconTable [2' (int)def.Accessibility];  case TypeKind.Struct:  	return typeIconTable [3' (int)def.Accessibility];  case TypeKind.Delegate:  	return typeIconTable [4' (int)def.Accessibility];  default:  	return typeIconTable [0' (int)def.Accessibility];  }  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: return typeIconTable [2' (int)def.Accessibility];  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: return typeIconTable [3' (int)def.Accessibility];  
Magic Number,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following statement contains a magic number: return typeIconTable [4' (int)def.Accessibility];  
Magic Number,MonoDevelop.Ide.TypeSystem,FoldingUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\ParsedDocument.cs,SubstrEllipsize,The following statement contains a magic number: if (!(start == 0 && length <= TRUNC_LEN)) {  	if (length > TRUNC_LEN) {  		length = TRUNC_LEN;  		int wordBoundaryLen = str.LastIndexOf (' '' length) - start;  		if (wordBoundaryLen > TRUNC_LEN - 20)  			length = wordBoundaryLen;  	}  }  
Magic Number,MonoDevelop.Ide.TypeSystem,FoldingUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\ParsedDocument.cs,SubstrEllipsize,The following statement contains a magic number: if (length > TRUNC_LEN) {  	length = TRUNC_LEN;  	int wordBoundaryLen = str.LastIndexOf (' '' length) - start;  	if (wordBoundaryLen > TRUNC_LEN - 20)  		length = wordBoundaryLen;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,FoldingUtilities,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\ParsedDocument.cs,SubstrEllipsize,The following statement contains a magic number: if (wordBoundaryLen > TRUNC_LEN - 20)  	length = wordBoundaryLen;  
Magic Number,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The following statement contains a magic number: if (result.Count > 1) {  	result.RemoveAt (result.Count - 1);  	NewLineInsertion insertLine;  	var lineBefore = data.GetLine (type.BodyRegion.EndLine - 1);  	if (lineBefore != null && lineBefore.Length == lineBefore.GetIndentation (data.Document).Length) {  		insertLine = NewLineInsertion.None;  	}  	else {  		insertLine = NewLineInsertion.Eol;  	}  	// search for line start  	int col = type.BodyRegion.EndColumn - 1;  	var line = data.GetLine (type.BodyRegion.EndLine);  	if (line != null) {  		var lineOffset = line.Offset;  		col = Math.Min (line.Length' col);  		while (lineOffset + col - 2 >= 0 && col > 1 && char.IsWhiteSpace (data.GetCharAt (lineOffset + col - 2)))  			col--;  	}  	result.Add (new InsertionPoint (new DocumentLocation (type.BodyRegion.EndLine' col)' insertLine' NewLineInsertion.Eol));  	CheckEndPoint (data.Document' result [result.Count - 1]' result.Count == 1);  }  
Magic Number,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The following statement contains a magic number: if (result.Count > 1) {  	result.RemoveAt (result.Count - 1);  	NewLineInsertion insertLine;  	var lineBefore = data.GetLine (type.BodyRegion.EndLine - 1);  	if (lineBefore != null && lineBefore.Length == lineBefore.GetIndentation (data.Document).Length) {  		insertLine = NewLineInsertion.None;  	}  	else {  		insertLine = NewLineInsertion.Eol;  	}  	// search for line start  	int col = type.BodyRegion.EndColumn - 1;  	var line = data.GetLine (type.BodyRegion.EndLine);  	if (line != null) {  		var lineOffset = line.Offset;  		col = Math.Min (line.Length' col);  		while (lineOffset + col - 2 >= 0 && col > 1 && char.IsWhiteSpace (data.GetCharAt (lineOffset + col - 2)))  			col--;  	}  	result.Add (new InsertionPoint (new DocumentLocation (type.BodyRegion.EndLine' col)' insertLine' NewLineInsertion.Eol));  	CheckEndPoint (data.Document' result [result.Count - 1]' result.Count == 1);  }  
Magic Number,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The following statement contains a magic number: if (line != null) {  	var lineOffset = line.Offset;  	col = Math.Min (line.Length' col);  	while (lineOffset + col - 2 >= 0 && col > 1 && char.IsWhiteSpace (data.GetCharAt (lineOffset + col - 2)))  		col--;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The following statement contains a magic number: if (line != null) {  	var lineOffset = line.Offset;  	col = Math.Min (line.Length' col);  	while (lineOffset + col - 2 >= 0 && col > 1 && char.IsWhiteSpace (data.GetCharAt (lineOffset + col - 2)))  		col--;  }  
Magic Number,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The following statement contains a magic number: while (lineOffset + col - 2 >= 0 && col > 1 && char.IsWhiteSpace (data.GetCharAt (lineOffset + col - 2)))  	col--;  
Magic Number,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetInsertionPoints,The following statement contains a magic number: while (lineOffset + col - 2 >= 0 && col > 1 && char.IsWhiteSpace (data.GetCharAt (lineOffset + col - 2)))  	col--;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,RuntimeRenderCell,The following statement contains a magic number: if (!runtimeCombo.PopupShown) {  	renderer.Text = target.FullName;  	renderer.Xpad = 3;  }  else {  	renderer.Xpad = indent ? (uint)18 : (uint)3;  	if (!runtimeStore.IterParent (out parent' iter))  		renderer.Text = target.FullName;  	else  		renderer.Text = target.Name;  }  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,RuntimeRenderCell,The following statement contains a magic number: if (!runtimeCombo.PopupShown) {  	renderer.Text = target.FullName;  	renderer.Xpad = 3;  }  else {  	renderer.Xpad = indent ? (uint)18 : (uint)3;  	if (!runtimeStore.IterParent (out parent' iter))  		renderer.Text = target.FullName;  	else  		renderer.Text = target.Name;  }  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,RuntimeRenderCell,The following statement contains a magic number: if (!runtimeCombo.PopupShown) {  	renderer.Text = target.FullName;  	renderer.Xpad = 3;  }  else {  	renderer.Xpad = indent ? (uint)18 : (uint)3;  	if (!runtimeStore.IterParent (out parent' iter))  		renderer.Text = target.FullName;  	else  		renderer.Text = target.Name;  }  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,RuntimeRenderCell,The following statement contains a magic number: renderer.Xpad = 3;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,RuntimeRenderCell,The following statement contains a magic number: renderer.Xpad = indent ? (uint)18 : (uint)3;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,RuntimeRenderCell,The following statement contains a magic number: renderer.Xpad = indent ? (uint)18 : (uint)3;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: AddSpace (8);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: configurationCombosBox = new HBox (false' 8);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: buttonBarBox.LeftPadding = (uint)7;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: AddSpace (24);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: AddSpace (24);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: statusAreaAlign.SizeAllocated += (object o' SizeAllocatedArgs args) =>  {  	Gtk.Widget toplevel = this.Toplevel;  	if (toplevel == null)  		return;  	int windowWidth = toplevel.Allocation.Width;  	int center = windowWidth / 2;  	int left = Math.Max (center - 300' args.Allocation.Left);  	int right = Math.Min (left + 600' args.Allocation.Right);  	uint left_padding = (uint)(left - args.Allocation.Left);  	uint right_padding = (uint)(args.Allocation.Right - right);  	if (left_padding != statusAreaAlign.LeftPadding || right_padding != statusAreaAlign.RightPadding)  		statusAreaAlign.SetPadding (0' 0' (uint)left_padding' (uint)right_padding);  };  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: statusAreaAlign.SizeAllocated += (object o' SizeAllocatedArgs args) =>  {  	Gtk.Widget toplevel = this.Toplevel;  	if (toplevel == null)  		return;  	int windowWidth = toplevel.Allocation.Width;  	int center = windowWidth / 2;  	int left = Math.Max (center - 300' args.Allocation.Left);  	int right = Math.Min (left + 600' args.Allocation.Right);  	uint left_padding = (uint)(left - args.Allocation.Left);  	uint right_padding = (uint)(args.Allocation.Right - right);  	if (left_padding != statusAreaAlign.LeftPadding || right_padding != statusAreaAlign.RightPadding)  		statusAreaAlign.SetPadding (0' 0' (uint)left_padding' (uint)right_padding);  };  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: statusAreaAlign.SizeAllocated += (object o' SizeAllocatedArgs args) =>  {  	Gtk.Widget toplevel = this.Toplevel;  	if (toplevel == null)  		return;  	int windowWidth = toplevel.Allocation.Width;  	int center = windowWidth / 2;  	int left = Math.Max (center - 300' args.Allocation.Left);  	int right = Math.Min (left + 600' args.Allocation.Right);  	uint left_padding = (uint)(left - args.Allocation.Left);  	uint right_padding = (uint)(args.Allocation.Right - right);  	if (left_padding != statusAreaAlign.LeftPadding || right_padding != statusAreaAlign.RightPadding)  		statusAreaAlign.SetPadding (0' 0' (uint)left_padding' (uint)right_padding);  };  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: matchEntry.WidthRequest = 240;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: align.TopPadding = (uint)5;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: align.LeftPadding = (uint)9;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: align.RightPadding = (uint)18;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: align.BottomPadding = (uint)10;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,MainToolbar,The following statement contains a magic number: SetDefaultSizes (-1' 21);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SetDefaultSizes,The following statement contains a magic number: configurationCombo.SetSizeRequest (150' comboHeight);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SetDefaultSizes,The following statement contains a magic number: runtimeCombo.SetSizeRequest (150' comboHeight);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SetDefaultSizes,The following statement contains a magic number: statusArea.SetSizeRequest (32' 32);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SetDefaultSizes,The following statement contains a magic number: statusArea.SetSizeRequest (32' 32);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SetDefaultSizes,The following statement contains a magic number: matchEntry.HeightRequest = height + 4;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,SetDefaultSizes,The following statement contains a magic number: buttonBar.HeightRequest = height + 2;  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	context.Rectangle (evnt.Area.X' evnt.Area.Y' evnt.Area.Width' evnt.Area.Height);  	context.Clip ();  	context.LineWidth = 1;  	if (Background != null && Background.Width > 0) {  		for (int x = 0; x < Allocation.Width; x += Background.Width) {  			Background.Show (context' x' -TitleBarHeight);  		}  	}  	else {  		context.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		using (var lg = new LinearGradient (0' 0' 0' Allocation.Height)) {  			lg.AddColorStop (0' (HslColor)Style.Light (StateType.Normal));  			lg.AddColorStop (1' (HslColor)Style.Mid (StateType.Normal));  			context.SetSource (lg);  		}  		context.Fill ();  	}  	context.MoveTo (0' Allocation.Height - 0.5);  	context.RelLineTo (Allocation.Width' 0);  	context.SetSourceColor (Styles.ToolbarBottomBorderColor);  	context.Stroke ();  	context.MoveTo (0' Allocation.Height - 1.5);  	context.RelLineTo (Allocation.Width' 0);  	context.SetSourceColor (Styles.ToolbarBottomGlowColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	context.Rectangle (evnt.Area.X' evnt.Area.Y' evnt.Area.Width' evnt.Area.Height);  	context.Clip ();  	context.LineWidth = 1;  	if (Background != null && Background.Width > 0) {  		for (int x = 0; x < Allocation.Width; x += Background.Width) {  			Background.Show (context' x' -TitleBarHeight);  		}  	}  	else {  		context.Rectangle (0' 0' Allocation.Width' Allocation.Height);  		using (var lg = new LinearGradient (0' 0' 0' Allocation.Height)) {  			lg.AddColorStop (0' (HslColor)Style.Light (StateType.Normal));  			lg.AddColorStop (1' (HslColor)Style.Mid (StateType.Normal));  			context.SetSource (lg);  		}  		context.Fill ();  	}  	context.MoveTo (0' Allocation.Height - 0.5);  	context.RelLineTo (Allocation.Width' 0);  	context.SetSourceColor (Styles.ToolbarBottomBorderColor);  	context.Stroke ();  	context.MoveTo (0' Allocation.Height - 1.5);  	context.RelLineTo (Allocation.Width' 0);  	context.SetSourceColor (Styles.ToolbarBottomGlowColor);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,OnExposeEvent,The following statement contains a magic number: context.MoveTo (0' Allocation.Height - 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,MainToolbar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\MainToolbar.cs,OnExposeEvent,The following statement contains a magic number: context.MoveTo (0' Allocation.Height - 1.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StatusArea,The following statement contains a magic number: statusIconBox.Spacing = 3;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StatusArea,The following statement contains a magic number: mainAlign.LeftPadding = 12;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StatusArea,The following statement contains a magic number: mainAlign.RightPadding = 8;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,StartBuildAnimation,The following statement contains a magic number: this.Animate ("Build"' val => renderArg.BuildAnimationProgress = val' length: 5000' repeat: () => true);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnSizeAllocated,The following statement contains a magic number: if (MaxWidth > 0 && allocation.Width > MaxWidth) {  	allocation = new Gdk.Rectangle (allocation.X + (allocation.Width - MaxWidth) / 2' allocation.Y' MaxWidth' allocation.Height);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnSizeAllocated,The following statement contains a magic number: allocation = new Gdk.Rectangle (allocation.X + (allocation.Width - MaxWidth) / 2' allocation.Y' MaxWidth' allocation.Height);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,TriggerErrorAnimation,The following statement contains a magic number: this.Animate ("statusAreaError"' val => renderArg.ErrorAnimationProgress = val' length: 900);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,CreateBuildResultsWidget,The following statement contains a magic number: box.Spacing = 3;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height = 32;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,ShowMessageInner,The following statement contains a magic number: this.Animate ("Text"' x => renderArg.TextAnimationProgress = x' easing: Easing.SinInOut' finished: (x' b) =>  {  	animPauseHandle = GLib.Timeout.Add (1000' () =>  {  		if (messageQueue.Count > 0) {  			Message m = messageQueue.Dequeue ();  			ShowMessageInner (m.Icon' m.Text' m.IsMarkup);  		}  		animPauseHandle = 0;  		return false;  	});  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusArea,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,ShowMessageInner,The following statement contains a magic number: animPauseHandle = GLib.Timeout.Add (1000' () =>  {  	if (messageQueue.Count > 0) {  		Message m = messageQueue.Dequeue ();  		ShowMessageInner (m.Icon' m.Text' m.IsMarkup);  	}  	animPauseHandle = 0;  	return false;  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaSeparator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (this.GdkWindow)) {  	var alloc = Allocation;  	//alloc.Inflate (0' -2);  	ctx.Rectangle (alloc.X' alloc.Y' 1' alloc.Height);  	using (Cairo.LinearGradient gr = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Y + alloc.Height)) {  		gr.AddColorStop (0' new Cairo.Color (0' 0' 0' 0));  		gr.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.2));  		gr.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaSeparator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (this.GdkWindow)) {  	var alloc = Allocation;  	//alloc.Inflate (0' -2);  	ctx.Rectangle (alloc.X' alloc.Y' 1' alloc.Height);  	using (Cairo.LinearGradient gr = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Y + alloc.Height)) {  		gr.AddColorStop (0' new Cairo.Color (0' 0' 0' 0));  		gr.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.2));  		gr.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		ctx.SetSource (gr);  		ctx.Fill ();  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaSeparator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.LinearGradient gr = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Y + alloc.Height)) {  	gr.AddColorStop (0' new Cairo.Color (0' 0' 0' 0));  	gr.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.2));  	gr.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	ctx.SetSource (gr);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaSeparator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.LinearGradient gr = new LinearGradient (alloc.X' alloc.Y' alloc.X' alloc.Y + alloc.Height)) {  	gr.AddColorStop (0' new Cairo.Color (0' 0' 0' 0));  	gr.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.2));  	gr.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	ctx.SetSource (gr);  	ctx.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaSeparator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnExposeEvent,The following statement contains a magic number: gr.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.2));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaSeparator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusArea.cs,OnExposeEvent,The following statement contains a magic number: gr.AddColorStop (0.5' new Cairo.Color (0' 0' 0' 0.2));  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,IsInside,The following statement contains a magic number: return Math.Sqrt (xr * xr + yr * yr) <= height / 2;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnSizeRequested,The following statement contains a magic number: requisition.Height = btnNormal.Img.Height + 2;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	DrawBackground (context' Allocation' 15' State);  	var icon = GetIcon ();  	icon.Show (context' Allocation.X + Math.Max (0' (Allocation.Width - icon.Width) / 2)' Allocation.Y + Math.Max (0' (Allocation.Height - icon.Height) / 2));  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	DrawBackground (context' Allocation' 15' State);  	var icon = GetIcon ();  	icon.Show (context' Allocation.X + Math.Max (0' (Allocation.Width - icon.Width) / 2)' Allocation.Y + Math.Max (0' (Allocation.Height - icon.Height) / 2));  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	DrawBackground (context' Allocation' 15' State);  	var icon = GetIcon ();  	icon.Show (context' Allocation.X + Math.Max (0' (Allocation.Width - icon.Width) / 2)' Allocation.Y + Math.Max (0' (Allocation.Height - icon.Height) / 2));  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The following statement contains a magic number: DrawBackground (context' Allocation' 15' State);  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The following statement contains a magic number: icon.Show (context' Allocation.X + Math.Max (0' (Allocation.Width - icon.Width) / 2)' Allocation.Y + Math.Max (0' (Allocation.Height - icon.Height) / 2));  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,OnExposeEvent,The following statement contains a magic number: icon.Show (context' Allocation.X + Math.Max (0' (Allocation.Width - icon.Width) / 2)' Allocation.Y + Math.Max (0' (Allocation.Height - icon.Height) / 2));  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: context.Arc (centerX' centerY' rad' 0' Math.PI * 2);  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: switch (state) {  case StateType.Selected:  	high = 0.85;  	low = 1.0;  	break;  case StateType.Prelight:  	high = 1.0;  	low = 0.9;  	break;  case StateType.Insensitive:  	high = 0.95;  	low = 0.83;  	break;  default:  	high = 1.0;  	low = 0.85;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: switch (state) {  case StateType.Selected:  	high = 0.85;  	low = 1.0;  	break;  case StateType.Prelight:  	high = 1.0;  	low = 0.9;  	break;  case StateType.Insensitive:  	high = 0.95;  	low = 0.83;  	break;  default:  	high = 1.0;  	low = 0.85;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: switch (state) {  case StateType.Selected:  	high = 0.85;  	low = 1.0;  	break;  case StateType.Prelight:  	high = 1.0;  	low = 0.9;  	break;  case StateType.Insensitive:  	high = 0.95;  	low = 0.83;  	break;  default:  	high = 1.0;  	low = 0.85;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: switch (state) {  case StateType.Selected:  	high = 0.85;  	low = 1.0;  	break;  case StateType.Prelight:  	high = 1.0;  	low = 0.9;  	break;  case StateType.Insensitive:  	high = 0.95;  	low = 0.83;  	break;  default:  	high = 1.0;  	low = 0.85;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: switch (state) {  case StateType.Selected:  	high = 0.85;  	low = 1.0;  	break;  case StateType.Prelight:  	high = 1.0;  	low = 0.9;  	break;  case StateType.Insensitive:  	high = 0.95;  	low = 0.83;  	break;  default:  	high = 1.0;  	low = 0.85;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: high = 0.85;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: low = 0.9;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: high = 0.95;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: low = 0.83;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: low = 0.85;  
Magic Number,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,DrawBackground,The following statement contains a magic number: context.SetSourceRGBA (0' 0' 0' 0.4);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	double x = Allocation.X' y = Allocation.Y;  	for (int i = 0; i < VisibleButtons.Length; i++) {  		bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  		bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  		ButtonBarButton button = VisibleButtons [i];  		if (button.IsSeparator) {  			if (!lastWasSeparator)  				x += SeparatorSpacing;  			continue;  		}  		Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  		Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  		Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  		context.Paint ();  		button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  		var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  		var iconCopy = icon;  		if (!Sensitive || !button.Enabled)  			iconCopy = ImageService.MakeTransparent (icon' 0.4);  		Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  		context.Paint ();  		if (iconCopy != icon)  			iconCopy.Dispose ();  		x += img.Width;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	double x = Allocation.X' y = Allocation.Y;  	for (int i = 0; i < VisibleButtons.Length; i++) {  		bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  		bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  		ButtonBarButton button = VisibleButtons [i];  		if (button.IsSeparator) {  			if (!lastWasSeparator)  				x += SeparatorSpacing;  			continue;  		}  		Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  		Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  		Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  		context.Paint ();  		button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  		var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  		var iconCopy = icon;  		if (!Sensitive || !button.Enabled)  			iconCopy = ImageService.MakeTransparent (icon' 0.4);  		Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  		context.Paint ();  		if (iconCopy != icon)  			iconCopy.Dispose ();  		x += img.Width;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	double x = Allocation.X' y = Allocation.Y;  	for (int i = 0; i < VisibleButtons.Length; i++) {  		bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  		bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  		ButtonBarButton button = VisibleButtons [i];  		if (button.IsSeparator) {  			if (!lastWasSeparator)  				x += SeparatorSpacing;  			continue;  		}  		Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  		Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  		Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  		context.Paint ();  		button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  		var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  		var iconCopy = icon;  		if (!Sensitive || !button.Enabled)  			iconCopy = ImageService.MakeTransparent (icon' 0.4);  		Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  		context.Paint ();  		if (iconCopy != icon)  			iconCopy.Dispose ();  		x += img.Width;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: using (var context = Gdk.CairoHelper.Create (evnt.Window)) {  	double x = Allocation.X' y = Allocation.Y;  	for (int i = 0; i < VisibleButtons.Length; i++) {  		bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  		bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  		ButtonBarButton button = VisibleButtons [i];  		if (button.IsSeparator) {  			if (!lastWasSeparator)  				x += SeparatorSpacing;  			continue;  		}  		Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  		Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  		Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  		context.Paint ();  		button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  		var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  		var iconCopy = icon;  		if (!Sensitive || !button.Enabled)  			iconCopy = ImageService.MakeTransparent (icon' 0.4);  		Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  		context.Paint ();  		if (iconCopy != icon)  			iconCopy.Dispose ();  		x += img.Width;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < VisibleButtons.Length; i++) {  	bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  	bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  	ButtonBarButton button = VisibleButtons [i];  	if (button.IsSeparator) {  		if (!lastWasSeparator)  			x += SeparatorSpacing;  		continue;  	}  	Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  	Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  	Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  	context.Paint ();  	button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  	var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  	var iconCopy = icon;  	if (!Sensitive || !button.Enabled)  		iconCopy = ImageService.MakeTransparent (icon' 0.4);  	Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  	context.Paint ();  	if (iconCopy != icon)  		iconCopy.Dispose ();  	x += img.Width;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < VisibleButtons.Length; i++) {  	bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  	bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  	ButtonBarButton button = VisibleButtons [i];  	if (button.IsSeparator) {  		if (!lastWasSeparator)  			x += SeparatorSpacing;  		continue;  	}  	Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  	Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  	Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  	context.Paint ();  	button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  	var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  	var iconCopy = icon;  	if (!Sensitive || !button.Enabled)  		iconCopy = ImageService.MakeTransparent (icon' 0.4);  	Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  	context.Paint ();  	if (iconCopy != icon)  		iconCopy.Dispose ();  	x += img.Width;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < VisibleButtons.Length; i++) {  	bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  	bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  	ButtonBarButton button = VisibleButtons [i];  	if (button.IsSeparator) {  		if (!lastWasSeparator)  			x += SeparatorSpacing;  		continue;  	}  	Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  	Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  	Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  	context.Paint ();  	button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  	var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  	var iconCopy = icon;  	if (!Sensitive || !button.Enabled)  		iconCopy = ImageService.MakeTransparent (icon' 0.4);  	Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  	context.Paint ();  	if (iconCopy != icon)  		iconCopy.Dispose ();  	x += img.Width;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: for (int i = 0; i < VisibleButtons.Length; i++) {  	bool nextIsSeparator = (i < VisibleButtons.Length - 1 && VisibleButtons [i + 1].IsSeparator) || i == visibleButtons.Length - 1;  	bool lastWasSeparator = (i > 0 && VisibleButtons [i - 1].IsSeparator) || i == 0;  	ButtonBarButton button = VisibleButtons [i];  	if (button.IsSeparator) {  		if (!lastWasSeparator)  			x += SeparatorSpacing;  		continue;  	}  	Gdk.Pixbuf[] images = State == StateType.Selected && pushedButton == button ? btnPressed : btnNormal;  	Gdk.Pixbuf img = images [lastWasSeparator ? 0 : nextIsSeparator ? 2 : 1];  	Gdk.CairoHelper.SetSourcePixbuf (context' img' x' y);  	context.Paint ();  	button.Allocation = new Gdk.Rectangle ((int)x' (int)y' img.Width' img.Height);  	var icon = ImageService.GetPixbuf (button.Image' IconSize.Menu);  	var iconCopy = icon;  	if (!Sensitive || !button.Enabled)  		iconCopy = ImageService.MakeTransparent (icon' 0.4);  	Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  	context.Paint ();  	if (iconCopy != icon)  		iconCopy.Dispose ();  	x += img.Width;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: if (!Sensitive || !button.Enabled)  	iconCopy = ImageService.MakeTransparent (icon' 0.4);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: iconCopy = ImageService.MakeTransparent (icon' 0.4);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,OnExposeEvent,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (context' iconCopy' x + (img.Width - icon.Width) / 2' y + (img.Height - icon.Height) / 2);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,ExpandImageVertically,The following statement contains a magic number: img.Composite (res' 0' h1' res.Width' newHeight - img.Height' 0' 0' 1' (double)newHeight / (double)img.Height' InterpType.Bilinear' 255);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,ExpandImageVertically,The following statement contains a magic number: img.Composite (res' 0' 0' img.Width' h1' 0' 0' 1' 1' InterpType.Bilinear' 255);  
Magic Number,MonoDevelop.Components.MainToolbar,ButtonBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ButtonBar.cs,ExpandImageVertically,The following statement contains a magic number: img.Composite (res' 0' newHeight - h2' img.Width' h2' 0' newHeight - img.Height' 1' 1' InterpType.Bilinear' 255);  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (newResult.IncludeTypes && (newResult.Tag == null || typeTags.Any (t => t == newResult.Tag))) {  	newResult.filteredTypes = new List<ITypeDefinition> ();  	bool startsWithLastFilter = lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern' StringComparison.Ordinal) && lastResult.filteredTypes != null;  	var allTypes = startsWithLastFilter ? lastResult.filteredTypes : types;  	foreach (var type in allTypes) {  		if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  			return;  		if (newResult.Tag != null) {  			if (newResult.Tag == "c" && type.Kind != TypeKind.Class)  				continue;  			if (newResult.Tag == "s" && type.Kind != TypeKind.Struct)  				continue;  			if (newResult.Tag == "i" && type.Kind != TypeKind.Interface)  				continue;  			if (newResult.Tag == "e" && type.Kind != TypeKind.Enum)  				continue;  			if (newResult.Tag == "d" && type.Kind != TypeKind.Delegate)  				continue;  		}  		SearchResult curResult = newResult.CheckType (type);  		if (curResult != null) {  			newResult.filteredTypes.Add (type);  			newResult.results.AddResult (curResult);  		}  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: foreach (var type in allTypes) {  	if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  		return;  	if (newResult.Tag != null) {  		if (newResult.Tag == "c" && type.Kind != TypeKind.Class)  			continue;  		if (newResult.Tag == "s" && type.Kind != TypeKind.Struct)  			continue;  		if (newResult.Tag == "i" && type.Kind != TypeKind.Interface)  			continue;  		if (newResult.Tag == "e" && type.Kind != TypeKind.Enum)  			continue;  		if (newResult.Tag == "d" && type.Kind != TypeKind.Delegate)  			continue;  	}  	SearchResult curResult = newResult.CheckType (type);  	if (curResult != null) {  		newResult.filteredTypes.Add (type);  		newResult.results.AddResult (curResult);  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  	return;  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (newResult.IncludeMembers && (newResult.Tag == null || memberTags.Any (t => t == newResult.Tag))) {  	newResult.filteredMembers = new List<Tuple<ITypeDefinition' IUnresolvedMember>> ();  	bool startsWithLastFilter = lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern' StringComparison.Ordinal) && lastResult.filteredMembers != null;  	if (startsWithLastFilter) {  		foreach (var t in lastResult.filteredMembers) {  			if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  				return;  			var member = t.Item2;  			if (newResult.Tag != null) {  				if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  					continue;  				if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  					continue;  				if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  					continue;  				if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  					continue;  			}  			SearchResult curResult = newResult.CheckMember (t.Item1' member);  			if (curResult != null) {  				newResult.filteredMembers.Add (t);  				newResult.results.AddResult (curResult);  			}  		}  	}  	else {  		Func<IUnresolvedMember' bool> mPred = member =>  {  			if (newResult.Tag != null) {  				if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  					return false;  				if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  					return false;  				if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  					return false;  				if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  					return false;  			}  			return newResult.IsMatchingMember (member);  		};  		getMembersTimer.BeginTiming ();  		try {  			foreach (var type in types) {  				if (type.Kind == TypeKind.Delegate)  					continue;  				foreach (var p in type.Parts) {  					foreach (var member in p.Members.Where (mPred)) {  						if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  							return;  						SearchResult curResult = newResult.CheckMember (type' member);  						if (curResult != null) {  							newResult.filteredMembers.Add (Tuple.Create (type' member));  							newResult.results.AddResult (curResult);  						}  					}  				}  			}  		}  		finally {  			getMembersTimer.EndTiming ();  		}  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (newResult.IncludeMembers && (newResult.Tag == null || memberTags.Any (t => t == newResult.Tag))) {  	newResult.filteredMembers = new List<Tuple<ITypeDefinition' IUnresolvedMember>> ();  	bool startsWithLastFilter = lastResult.pattern != null && newResult.pattern.StartsWith (lastResult.pattern' StringComparison.Ordinal) && lastResult.filteredMembers != null;  	if (startsWithLastFilter) {  		foreach (var t in lastResult.filteredMembers) {  			if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  				return;  			var member = t.Item2;  			if (newResult.Tag != null) {  				if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  					continue;  				if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  					continue;  				if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  					continue;  				if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  					continue;  			}  			SearchResult curResult = newResult.CheckMember (t.Item1' member);  			if (curResult != null) {  				newResult.filteredMembers.Add (t);  				newResult.results.AddResult (curResult);  			}  		}  	}  	else {  		Func<IUnresolvedMember' bool> mPred = member =>  {  			if (newResult.Tag != null) {  				if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  					return false;  				if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  					return false;  				if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  					return false;  				if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  					return false;  			}  			return newResult.IsMatchingMember (member);  		};  		getMembersTimer.BeginTiming ();  		try {  			foreach (var type in types) {  				if (type.Kind == TypeKind.Delegate)  					continue;  				foreach (var p in type.Parts) {  					foreach (var member in p.Members.Where (mPred)) {  						if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  							return;  						SearchResult curResult = newResult.CheckMember (type' member);  						if (curResult != null) {  							newResult.filteredMembers.Add (Tuple.Create (type' member));  							newResult.results.AddResult (curResult);  						}  					}  				}  			}  		}  		finally {  			getMembersTimer.EndTiming ();  		}  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (startsWithLastFilter) {  	foreach (var t in lastResult.filteredMembers) {  		if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  			return;  		var member = t.Item2;  		if (newResult.Tag != null) {  			if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  				continue;  			if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  				continue;  			if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  				continue;  			if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  				continue;  		}  		SearchResult curResult = newResult.CheckMember (t.Item1' member);  		if (curResult != null) {  			newResult.filteredMembers.Add (t);  			newResult.results.AddResult (curResult);  		}  	}  }  else {  	Func<IUnresolvedMember' bool> mPred = member =>  {  		if (newResult.Tag != null) {  			if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  				return false;  			if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  				return false;  			if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  				return false;  			if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  				return false;  		}  		return newResult.IsMatchingMember (member);  	};  	getMembersTimer.BeginTiming ();  	try {  		foreach (var type in types) {  			if (type.Kind == TypeKind.Delegate)  				continue;  			foreach (var p in type.Parts) {  				foreach (var member in p.Members.Where (mPred)) {  					if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  						return;  					SearchResult curResult = newResult.CheckMember (type' member);  					if (curResult != null) {  						newResult.filteredMembers.Add (Tuple.Create (type' member));  						newResult.results.AddResult (curResult);  					}  				}  			}  		}  	}  	finally {  		getMembersTimer.EndTiming ();  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (startsWithLastFilter) {  	foreach (var t in lastResult.filteredMembers) {  		if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  			return;  		var member = t.Item2;  		if (newResult.Tag != null) {  			if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  				continue;  			if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  				continue;  			if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  				continue;  			if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  				continue;  		}  		SearchResult curResult = newResult.CheckMember (t.Item1' member);  		if (curResult != null) {  			newResult.filteredMembers.Add (t);  			newResult.results.AddResult (curResult);  		}  	}  }  else {  	Func<IUnresolvedMember' bool> mPred = member =>  {  		if (newResult.Tag != null) {  			if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  				return false;  			if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  				return false;  			if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  				return false;  			if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  				return false;  		}  		return newResult.IsMatchingMember (member);  	};  	getMembersTimer.BeginTiming ();  	try {  		foreach (var type in types) {  			if (type.Kind == TypeKind.Delegate)  				continue;  			foreach (var p in type.Parts) {  				foreach (var member in p.Members.Where (mPred)) {  					if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  						return;  					SearchResult curResult = newResult.CheckMember (type' member);  					if (curResult != null) {  						newResult.filteredMembers.Add (Tuple.Create (type' member));  						newResult.results.AddResult (curResult);  					}  				}  			}  		}  	}  	finally {  		getMembersTimer.EndTiming ();  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: foreach (var t in lastResult.filteredMembers) {  	if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  		return;  	var member = t.Item2;  	if (newResult.Tag != null) {  		if (newResult.Tag == "m" && member.SymbolKind != SymbolKind.Method)  			continue;  		if (newResult.Tag == "p" && member.SymbolKind != SymbolKind.Property)  			continue;  		if (newResult.Tag == "f" && member.SymbolKind != SymbolKind.Field)  			continue;  		if (newResult.Tag == "evt" && member.SymbolKind != SymbolKind.Event)  			continue;  	}  	SearchResult curResult = newResult.CheckMember (t.Item1' member);  	if (curResult != null) {  		newResult.filteredMembers.Add (t);  		newResult.results.AddResult (curResult);  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  	return;  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: try {  	foreach (var type in types) {  		if (type.Kind == TypeKind.Delegate)  			continue;  		foreach (var p in type.Parts) {  			foreach (var member in p.Members.Where (mPred)) {  				if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  					return;  				SearchResult curResult = newResult.CheckMember (type' member);  				if (curResult != null) {  					newResult.filteredMembers.Add (Tuple.Create (type' member));  					newResult.results.AddResult (curResult);  				}  			}  		}  	}  }  finally {  	getMembersTimer.EndTiming ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: foreach (var type in types) {  	if (type.Kind == TypeKind.Delegate)  		continue;  	foreach (var p in type.Parts) {  		foreach (var member in p.Members.Where (mPred)) {  			if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  				return;  			SearchResult curResult = newResult.CheckMember (type' member);  			if (curResult != null) {  				newResult.filteredMembers.Add (Tuple.Create (type' member));  				newResult.results.AddResult (curResult);  			}  		}  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: foreach (var p in type.Parts) {  	foreach (var member in p.Members.Where (mPred)) {  		if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  			return;  		SearchResult curResult = newResult.CheckMember (type' member);  		if (curResult != null) {  			newResult.filteredMembers.Add (Tuple.Create (type' member));  			newResult.results.AddResult (curResult);  		}  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: foreach (var member in p.Members.Where (mPred)) {  	if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  		return;  	SearchResult curResult = newResult.CheckMember (type' member);  	if (curResult != null) {  		newResult.filteredMembers.Add (Tuple.Create (type' member));  		newResult.results.AddResult (curResult);  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ProjectSearchCategory,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ProjectSearchCategory.cs,AllResults,The following statement contains a magic number: if (unchecked(x++) % 100 == 0 && token.IsCancellationRequested)  	return;  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: using (var ctx = Gdk.CairoHelper.Create (evnt.Window)) {  	ctx.LineWidth = 1;  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	ctx.SetSourceRGB (0.8' 0.8' 0.8);  	ctx.Stroke ();  	ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  	ctx.RelLineTo ((double)Allocation.Width * fraction' 0);  	ctx.SetSourceRGB (0.1' 0.1' 0.1);  	ctx.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.SetSourceRGB (0.8' 0.8' 0.8);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.SetSourceRGB (0.8' 0.8' 0.8);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.SetSourceRGB (0.8' 0.8' 0.8);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.MoveTo (Allocation.X + 0.5' Allocation.Y + 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.SetSourceRGB (0.1' 0.1' 0.1);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.SetSourceRGB (0.1' 0.1' 0.1);  
Magic Number,MonoDevelop.Components.MainToolbar,StyledProgressBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StyledProgressBar.cs,OnExposeEvent,The following statement contains a magic number: ctx.SetSourceRGB (0.1' 0.1' 0.1);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,GetIdealSize,The following statement contains a magic number: retVal.Width = Math.Min (geometry.Width * 4 / 5' 480);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,GetIdealSize,The following statement contains a magic number: retVal.Width = Math.Min (geometry.Width * 4 / 5' 480);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,GetIdealSize,The following statement contains a magic number: retVal.Width = Math.Min (geometry.Width * 4 / 5' 480);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,GetIdealSize,The following statement contains a magic number: if (Math.Abs (y - startY) < 1) {  	layout.SetMarkup (GettextCatalog.GetString ("No matches"));  	int w' h;  	layout.GetPixelSize (out w' out h);  	var realHeight = h + itemSeparatorHeight + 4;  	y += realHeight;  }  else {  	y -= itemSeparatorHeight;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,ShowTooltip,The following statement contains a magic number: ThreadPool.QueueUserWorkItem (delegate {  	TooltipInformation tooltip;  	try {  		tooltip = currentSelectedItem.DataSource.GetTooltip (i);  	}  	catch (Exception e) {  		LoggingService.LogError ("Error while creating search popup window tooltip"' e);  		return;  	}  	if (tooltip == null || string.IsNullOrEmpty (tooltip.SignatureMarkup) || token.IsCancellationRequested)  		return;  	Application.Invoke (delegate {  		if (token.IsCancellationRequested)  			return;  		declarationviewwindow.Clear ();  		declarationviewwindow.AddOverload (tooltip);  		declarationviewwindow.CurrentOverload = 0;  		declarationViewTimer = GLib.Timeout.Add (250' DelayedTooltipShow);  	});  });  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,ShowTooltip,The following statement contains a magic number: Application.Invoke (delegate {  	if (token.IsCancellationRequested)  		return;  	declarationviewwindow.Clear ();  	declarationviewwindow.AddOverload (tooltip);  	declarationviewwindow.CurrentOverload = 0;  	declarationViewTimer = GLib.Timeout.Add (250' DelayedTooltipShow);  });  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,ShowTooltip,The following statement contains a magic number: declarationViewTimer = GLib.Timeout.Add (250' DelayedTooltipShow);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,DelayedTooltipShow,The following statement contains a magic number: declarationViewWindowOpacityTimer = GLib.Timeout.Add (50' new OpacityTimer (this).Timer);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (i > 0) {  	selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 0);  	if (selectedItem.Equals (topItem)) {  		if (topItem.DataSource.ItemCount > 1) {  			selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 1);  		}  		else if (i > 1) {  			selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  		}  	}  }  else {  	selectedItem = topItem;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (i > 0) {  	selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 0);  	if (selectedItem.Equals (topItem)) {  		if (topItem.DataSource.ItemCount > 1) {  			selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 1);  		}  		else if (i > 1) {  			selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  		}  	}  }  else {  	selectedItem = topItem;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (selectedItem.Equals (topItem)) {  	if (topItem.DataSource.ItemCount > 1) {  		selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 1);  	}  	else if (i > 1) {  		selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (selectedItem.Equals (topItem)) {  	if (topItem.DataSource.ItemCount > 1) {  		selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 1);  	}  	else if (i > 1) {  		selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (topItem.DataSource.ItemCount > 1) {  	selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 1);  }  else if (i > 1) {  	selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (topItem.DataSource.ItemCount > 1) {  	selectedItem = new ItemIdentifier (results [i - 1].Item1' results [i - 1].Item2' 1);  }  else if (i > 1) {  	selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (i > 1) {  	selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: if (i > 1) {  	selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,SelectPrevCategory,The following statement contains a magic number: selectedItem = new ItemIdentifier (results [i - 2].Item1' results [i - 2].Item2' 0);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: if (r.Any ()) {  	context.SetSourceColor (lightSearchBackground);  	context.Rectangle (Allocation.X' Allocation.Y' adjustedMarginSize' Allocation.Height);  	context.Fill ();  	context.SetSourceColor (darkSearchBackground);  	context.Rectangle (Allocation.X + adjustedMarginSize' Allocation.Y' Allocation.Width - adjustedMarginSize' Allocation.Height);  	context.Fill ();  	context.MoveTo (0.5 + Allocation.X + adjustedMarginSize' 0);  	context.LineTo (0.5 + Allocation.X + adjustedMarginSize' Allocation.Height);  	context.SetSourceColor (separatorLine);  	context.Stroke ();  }  else {  	context.SetSourceRGB (1' 1' 1);  	context.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: if (r.Any ()) {  	context.SetSourceColor (lightSearchBackground);  	context.Rectangle (Allocation.X' Allocation.Y' adjustedMarginSize' Allocation.Height);  	context.Fill ();  	context.SetSourceColor (darkSearchBackground);  	context.Rectangle (Allocation.X + adjustedMarginSize' Allocation.Y' Allocation.Width - adjustedMarginSize' Allocation.Height);  	context.Fill ();  	context.MoveTo (0.5 + Allocation.X + adjustedMarginSize' 0);  	context.LineTo (0.5 + Allocation.X + adjustedMarginSize' Allocation.Height);  	context.SetSourceColor (separatorLine);  	context.Stroke ();  }  else {  	context.SetSourceRGB (1' 1' 1);  	context.Rectangle (Allocation.X' Allocation.Y' Allocation.Width' Allocation.Height);  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: context.MoveTo (0.5 + Allocation.X + adjustedMarginSize' 0);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: context.LineTo (0.5 + Allocation.X + adjustedMarginSize' Allocation.Height);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: if (topItem != null) {  	headerLayout.SetText (GettextCatalog.GetString ("Top Result"));  	headerLayout.GetPixelSize (out w' out h);  	context.MoveTo (alloc.Left + headerMarginSize - w - xMargin' y);  	context.SetSourceColor (headerColor);  	Pango.CairoHelper.ShowLayout (context' headerLayout);  	var category = topItem.Category;  	var dataSrc = topItem.DataSource;  	var i = topItem.Item;  	double x = alloc.X + xMargin + headerMarginSize;  	context.SetSourceRGB (0' 0' 0);  	layout.SetMarkup (GetRowMarkup (dataSrc' i));  	layout.GetPixelSize (out w' out h);  	if (selectedItem != null && selectedItem.Category == category && selectedItem.Item == i) {  		context.SetSourceColor (selectionBackgroundColor);  		context.Rectangle (alloc.X + headerMarginSize' y' Allocation.Width - adjustedMarginSize' h);  		context.Fill ();  		context.SetSourceRGB (1' 1' 1);  	}  	var px = dataSrc.GetIcon (i);  	if (px != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  		context.Paint ();  		x += px.Width + iconTextSpacing + marginIconSpacing;  	}  	context.MoveTo (x' y);  	context.SetSourceRGB (0' 0' 0);  	Pango.CairoHelper.ShowLayout (context' layout);  	y += h + itemSeparatorHeight;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: if (px != null) {  	Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  	context.Paint ();  	x += px.Width + iconTextSpacing + marginIconSpacing;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: foreach (var result in r) {  	var category = result.Item1;  	var dataSrc = result.Item2;  	if (dataSrc.ItemCount == 0)  		continue;  	if (dataSrc.ItemCount == 1 && topItem != null && topItem.DataSource == dataSrc)  		continue;  	headerLayout.SetText (category.Name);  	headerLayout.GetPixelSize (out w' out h);  	if (y + h > Allocation.Height)  		break;  	context.MoveTo (alloc.X + headerMarginSize - w - xMargin' y);  	context.SetSourceColor (headerColor);  	Pango.CairoHelper.ShowLayout (context' headerLayout);  	layout.Width = Pango.Units.FromPixels (Allocation.Width - adjustedMarginSize - 35);  	for (int i = 0; i < maxItems && i < dataSrc.ItemCount; i++) {  		if (topItem != null && topItem.Category == category && topItem.Item == i)  			continue;  		double x = alloc.X + xMargin + headerMarginSize;  		context.SetSourceRGB (0' 0' 0);  		layout.SetMarkup (GetRowMarkup (dataSrc' i));  		layout.GetPixelSize (out w' out h);  		if (y + h + itemSeparatorHeight > Allocation.Height)  			break;  		if (selectedItem != null && selectedItem.Category == category && selectedItem.Item == i) {  			context.SetSourceColor (selectionBackgroundColor);  			context.Rectangle (alloc.X + headerMarginSize' y' Allocation.Width - adjustedMarginSize' h);  			context.Fill ();  			context.SetSourceRGB (1' 1' 1);  		}  		var px = dataSrc.GetIcon (i);  		if (px != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  			context.Paint ();  			x += px.Width + iconTextSpacing + marginIconSpacing;  		}  		context.MoveTo (x' y);  		context.SetSourceRGB (0' 0' 0);  		Pango.CairoHelper.ShowLayout (context' layout);  		y += h + itemSeparatorHeight;  	}  	if (result != r.Last ()) {  		y += categorySeparatorHeight;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: foreach (var result in r) {  	var category = result.Item1;  	var dataSrc = result.Item2;  	if (dataSrc.ItemCount == 0)  		continue;  	if (dataSrc.ItemCount == 1 && topItem != null && topItem.DataSource == dataSrc)  		continue;  	headerLayout.SetText (category.Name);  	headerLayout.GetPixelSize (out w' out h);  	if (y + h > Allocation.Height)  		break;  	context.MoveTo (alloc.X + headerMarginSize - w - xMargin' y);  	context.SetSourceColor (headerColor);  	Pango.CairoHelper.ShowLayout (context' headerLayout);  	layout.Width = Pango.Units.FromPixels (Allocation.Width - adjustedMarginSize - 35);  	for (int i = 0; i < maxItems && i < dataSrc.ItemCount; i++) {  		if (topItem != null && topItem.Category == category && topItem.Item == i)  			continue;  		double x = alloc.X + xMargin + headerMarginSize;  		context.SetSourceRGB (0' 0' 0);  		layout.SetMarkup (GetRowMarkup (dataSrc' i));  		layout.GetPixelSize (out w' out h);  		if (y + h + itemSeparatorHeight > Allocation.Height)  			break;  		if (selectedItem != null && selectedItem.Category == category && selectedItem.Item == i) {  			context.SetSourceColor (selectionBackgroundColor);  			context.Rectangle (alloc.X + headerMarginSize' y' Allocation.Width - adjustedMarginSize' h);  			context.Fill ();  			context.SetSourceRGB (1' 1' 1);  		}  		var px = dataSrc.GetIcon (i);  		if (px != null) {  			Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  			context.Paint ();  			x += px.Width + iconTextSpacing + marginIconSpacing;  		}  		context.MoveTo (x' y);  		context.SetSourceRGB (0' 0' 0);  		Pango.CairoHelper.ShowLayout (context' layout);  		y += h + itemSeparatorHeight;  	}  	if (result != r.Last ()) {  		y += categorySeparatorHeight;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: layout.Width = Pango.Units.FromPixels (Allocation.Width - adjustedMarginSize - 35);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: for (int i = 0; i < maxItems && i < dataSrc.ItemCount; i++) {  	if (topItem != null && topItem.Category == category && topItem.Item == i)  		continue;  	double x = alloc.X + xMargin + headerMarginSize;  	context.SetSourceRGB (0' 0' 0);  	layout.SetMarkup (GetRowMarkup (dataSrc' i));  	layout.GetPixelSize (out w' out h);  	if (y + h + itemSeparatorHeight > Allocation.Height)  		break;  	if (selectedItem != null && selectedItem.Category == category && selectedItem.Item == i) {  		context.SetSourceColor (selectionBackgroundColor);  		context.Rectangle (alloc.X + headerMarginSize' y' Allocation.Width - adjustedMarginSize' h);  		context.Fill ();  		context.SetSourceRGB (1' 1' 1);  	}  	var px = dataSrc.GetIcon (i);  	if (px != null) {  		Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  		context.Paint ();  		x += px.Width + iconTextSpacing + marginIconSpacing;  	}  	context.MoveTo (x' y);  	context.SetSourceRGB (0' 0' 0);  	Pango.CairoHelper.ShowLayout (context' layout);  	y += h + itemSeparatorHeight;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: if (px != null) {  	Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  	context.Paint ();  	x += px.Width + iconTextSpacing + marginIconSpacing;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,OnDrawContent,The following statement contains a magic number: Gdk.CairoHelper.SetSourcePixbuf (context' px' (int)x + marginIconSpacing' (int)y + (h - px.Height) / 2);  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (IsNumber (parts [1]) && IsNumber (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  		lineNumber = 0;  }  else {  	tag = parts [0];  	pattern = parts [1] ?? "";  	if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (IsNumber (parts [1]) && IsNumber (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  		lineNumber = 0;  }  else {  	tag = parts [0];  	pattern = parts [1] ?? "";  	if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (IsNumber (parts [1]) && IsNumber (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  		lineNumber = 0;  }  else {  	tag = parts [0];  	pattern = parts [1] ?? "";  	if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (IsNumber (parts [1]) && IsNumber (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  		lineNumber = 0;  }  else {  	tag = parts [0];  	pattern = parts [1] ?? "";  	if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  	lineNumber = 0;  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  		lineNumber = 0;  }  else {  	tag = parts [0];  	pattern = parts [1] ?? "";  	if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  	if (!string.IsNullOrEmpty (parts [0]))  		pattern = parts [0];  	if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  		lineNumber = 0;  }  else {  	tag = parts [0];  	pattern = parts [1] ?? "";  	if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  		lineNumber = 0;  }  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  	lineNumber = 0;  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  	lineNumber = 0;  
Magic Number,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following statement contains a magic number: if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  	lineNumber = 0;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.ErrorAnimationProgress > 0.001 && arg.ErrorAnimationProgress < .999) {  	DrawErrorAnimation (context' arg);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.ErrorAnimationProgress > 0.001 && arg.ErrorAnimationProgress < .999) {  	DrawErrorAnimation (context' arg);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.HoverProgress > 0.001f) {  	context.Clip ();  	int x1 = arg.Allocation.X + arg.MousePosition.X - 200;  	int x2 = x1 + 400;  	using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  		Cairo.Color targetColor = Styles.StatusBarFill1Color;  		Cairo.Color transparentColor = targetColor;  		targetColor.A = .7;  		transparentColor.A = 0;  		targetColor.A = .7 * arg.HoverProgress;  		gradient.AddColorStop (0.0' transparentColor);  		gradient.AddColorStop (0.5' targetColor);  		gradient.AddColorStop (1.0' transparentColor);  		context.SetSource (gradient);  		context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  		context.Fill ();  	}  	context.ResetClip ();  }  else {  	context.NewPath ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.HoverProgress > 0.001f) {  	context.Clip ();  	int x1 = arg.Allocation.X + arg.MousePosition.X - 200;  	int x2 = x1 + 400;  	using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  		Cairo.Color targetColor = Styles.StatusBarFill1Color;  		Cairo.Color transparentColor = targetColor;  		targetColor.A = .7;  		transparentColor.A = 0;  		targetColor.A = .7 * arg.HoverProgress;  		gradient.AddColorStop (0.0' transparentColor);  		gradient.AddColorStop (0.5' targetColor);  		gradient.AddColorStop (1.0' transparentColor);  		context.SetSource (gradient);  		context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  		context.Fill ();  	}  	context.ResetClip ();  }  else {  	context.NewPath ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.HoverProgress > 0.001f) {  	context.Clip ();  	int x1 = arg.Allocation.X + arg.MousePosition.X - 200;  	int x2 = x1 + 400;  	using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  		Cairo.Color targetColor = Styles.StatusBarFill1Color;  		Cairo.Color transparentColor = targetColor;  		targetColor.A = .7;  		transparentColor.A = 0;  		targetColor.A = .7 * arg.HoverProgress;  		gradient.AddColorStop (0.0' transparentColor);  		gradient.AddColorStop (0.5' targetColor);  		gradient.AddColorStop (1.0' transparentColor);  		context.SetSource (gradient);  		context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  		context.Fill ();  	}  	context.ResetClip ();  }  else {  	context.NewPath ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.HoverProgress > 0.001f) {  	context.Clip ();  	int x1 = arg.Allocation.X + arg.MousePosition.X - 200;  	int x2 = x1 + 400;  	using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  		Cairo.Color targetColor = Styles.StatusBarFill1Color;  		Cairo.Color transparentColor = targetColor;  		targetColor.A = .7;  		transparentColor.A = 0;  		targetColor.A = .7 * arg.HoverProgress;  		gradient.AddColorStop (0.0' transparentColor);  		gradient.AddColorStop (0.5' targetColor);  		gradient.AddColorStop (1.0' transparentColor);  		context.SetSource (gradient);  		context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  		context.Fill ();  	}  	context.ResetClip ();  }  else {  	context.NewPath ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.HoverProgress > 0.001f) {  	context.Clip ();  	int x1 = arg.Allocation.X + arg.MousePosition.X - 200;  	int x2 = x1 + 400;  	using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  		Cairo.Color targetColor = Styles.StatusBarFill1Color;  		Cairo.Color transparentColor = targetColor;  		targetColor.A = .7;  		transparentColor.A = 0;  		targetColor.A = .7 * arg.HoverProgress;  		gradient.AddColorStop (0.0' transparentColor);  		gradient.AddColorStop (0.5' targetColor);  		gradient.AddColorStop (1.0' transparentColor);  		context.SetSource (gradient);  		context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  		context.Fill ();  	}  	context.ResetClip ();  }  else {  	context.NewPath ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  	Cairo.Color targetColor = Styles.StatusBarFill1Color;  	Cairo.Color transparentColor = targetColor;  	targetColor.A = .7;  	transparentColor.A = 0;  	targetColor.A = .7 * arg.HoverProgress;  	gradient.AddColorStop (0.0' transparentColor);  	gradient.AddColorStop (0.5' targetColor);  	gradient.AddColorStop (1.0' transparentColor);  	context.SetSource (gradient);  	context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  	Cairo.Color targetColor = Styles.StatusBarFill1Color;  	Cairo.Color transparentColor = targetColor;  	targetColor.A = .7;  	transparentColor.A = 0;  	targetColor.A = .7 * arg.HoverProgress;  	gradient.AddColorStop (0.0' transparentColor);  	gradient.AddColorStop (0.5' targetColor);  	gradient.AddColorStop (1.0' transparentColor);  	context.SetSource (gradient);  	context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: using (Cairo.LinearGradient gradient = new LinearGradient (x1' 0' x2' 0)) {  	Cairo.Color targetColor = Styles.StatusBarFill1Color;  	Cairo.Color transparentColor = targetColor;  	targetColor.A = .7;  	transparentColor.A = 0;  	targetColor.A = .7 * arg.HoverProgress;  	gradient.AddColorStop (0.0' transparentColor);  	gradient.AddColorStop (0.5' targetColor);  	gradient.AddColorStop (1.0' transparentColor);  	context.SetSource (gradient);  	context.Rectangle (x1' arg.Allocation.Y' x2 - x1' arg.Allocation.Height);  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: targetColor.A = .7;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: targetColor.A = .7 * arg.HoverProgress;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: gradient.AddColorStop (0.5' targetColor);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.CurrentPixbuf != null) {  	int y = arg.Allocation.Y + (arg.Allocation.Height - arg.CurrentPixbuf.Height) / 2;  	Gdk.CairoHelper.SetSourcePixbuf (context' arg.CurrentPixbuf' arg.ChildAllocation.X' y);  	context.Paint ();  	progress_bar_x += arg.CurrentPixbuf.Width + Styles.ProgressBarOuterPadding;  	progress_bar_width -= arg.CurrentPixbuf.Width + Styles.ProgressBarOuterPadding;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.LastText != null) {  	double opacity = Math.Max (0.0f' 1.0f - textTweenValue);  	DrawString (arg.LastText' arg.LastTextIsMarkup' context' text_x' center - (int)(textTweenValue * arg.Allocation.Height * 0.3)' text_width' opacity' arg.Pango' arg);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: DrawString (arg.LastText' arg.LastTextIsMarkup' context' text_x' center - (int)(textTweenValue * arg.Allocation.Height * 0.3)' text_width' opacity' arg.Pango' arg);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: if (arg.CurrentText != null) {  	DrawString (arg.CurrentText' arg.CurrentTextIsMarkup' context' text_x' center + (int)((1.0f - textTweenValue) * arg.Allocation.Height * 0.3)' text_width' Math.Min (textTweenValue' 1.0)' arg.Pango' arg);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,Render,The following statement contains a magic number: DrawString (arg.CurrentText' arg.CurrentTextIsMarkup' context' text_x' center + (int)((1.0f - textTweenValue) * arg.Allocation.Height * 0.3)' text_width' Math.Min (textTweenValue' 1.0)' arg.Pango' arg);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,LayoutRoundedRectangle,The following statement contains a magic number: CairoExtensions.RoundedRectangle (context' region.X + .5' region.Y + .5' region.Width - 1' region.Height - 1' rounding);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,LayoutRoundedRectangle,The following statement contains a magic number: CairoExtensions.RoundedRectangle (context' region.X + .5' region.Y + .5' region.Width - 1' region.Height - 1' rounding);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: foreach (var arc in circles) {  	double zoom = 1.0d;  	zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  	zoom = ((zoom + 1) / 6.0d) + .05d;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	zmod += (float)Math.PI / circles.Length;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: foreach (var arc in circles) {  	double zoom = 1.0d;  	zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  	zoom = ((zoom + 1) / 6.0d) + .05d;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	zmod += (float)Math.PI / circles.Length;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: foreach (var arc in circles) {  	double zoom = 1.0d;  	zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  	zoom = ((zoom + 1) / 6.0d) + .05d;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	zmod += (float)Math.PI / circles.Length;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: foreach (var arc in circles) {  	double zoom = 1.0d;  	zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  	zoom = ((zoom + 1) / 6.0d) + .05d;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	zmod += (float)Math.PI / circles.Length;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: foreach (var arc in circles) {  	double zoom = 1.0d;  	zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  	zoom = ((zoom + 1) / 6.0d) + .05d;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	zmod += (float)Math.PI / circles.Length;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: foreach (var arc in circles) {  	double zoom = 1.0d;  	zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  	zoom = ((zoom + 1) / 6.0d) + .05d;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	context.Rotate (Math.PI * 2 * progress * arc.Speed);  	context.MoveTo (arc.Radius * zoom' 0);  	context.Arc (0' 0' arc.Radius * zoom' 0' arc.ArcLength);  	context.LineWidth = arc.Thickness * zoom;  	context.Stroke ();  	context.Rotate (Math.PI * 2 * -progress * arc.Speed);  	progress = -progress;  	zmod += (float)Math.PI / circles.Length;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: zoom = (double)Math.Sin (zporg * Math.PI * 2 + zmod);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: context.Rotate (Math.PI * 2 * progress * arc.Speed);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: context.SetSourceColor (CairoExtensions.ParseColor ("B1DDED"' 0.35 * opacity));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: context.Rotate (Math.PI * 2 * -progress * arc.Speed);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: context.Rotate (Math.PI * 2 * progress * arc.Speed);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBuildEffect,The following statement contains a magic number: context.Rotate (Math.PI * 2 * -progress * arc.Speed);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: using (RadialGradient rg = new RadialGradient (0' 0' 0' 0' 0' region.Height * 1.2)) {  	rg.AddColorStop (0' Styles.StatusBarFill1Color);  	rg.AddColorStop (1' Styles.WithAlpha (Styles.StatusBarFill1Color' 0));  	context.Scale (region.Width / (double)region.Height' 1.0);  	context.SetSource (rg);  	context.Fill ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: using (LinearGradient lg = new LinearGradient (0' region.Y' 0' region.Y + region.Height)) {  	lg.AddColorStop (0' Styles.StatusBarShadowColor1);  	lg.AddColorStop (1' Styles.WithAlpha (Styles.StatusBarShadowColor1' Styles.StatusBarShadowColor1.A * 0.2));  	LayoutRoundedRectangle (context' region' 0' -1);  	context.LineWidth = 1;  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: lg.AddColorStop (1' Styles.WithAlpha (Styles.StatusBarShadowColor1' Styles.StatusBarShadowColor1.A * 0.2));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: using (LinearGradient lg = new LinearGradient (0' region.Y' 0' region.Y + region.Height)) {  	lg.AddColorStop (0' Styles.StatusBarShadowColor2);  	lg.AddColorStop (1' Styles.WithAlpha (Styles.StatusBarShadowColor2' Styles.StatusBarShadowColor2.A * 0.2));  	LayoutRoundedRectangle (context' region' 0' -2);  	context.LineWidth = 1;  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: using (LinearGradient lg = new LinearGradient (0' region.Y' 0' region.Y + region.Height)) {  	lg.AddColorStop (0' Styles.StatusBarShadowColor2);  	lg.AddColorStop (1' Styles.WithAlpha (Styles.StatusBarShadowColor2' Styles.StatusBarShadowColor2.A * 0.2));  	LayoutRoundedRectangle (context' region' 0' -2);  	context.LineWidth = 1;  	context.SetSource (lg);  	context.Stroke ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: lg.AddColorStop (1' Styles.WithAlpha (Styles.StatusBarShadowColor2' Styles.StatusBarShadowColor2.A * 0.2));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawBackground,The following statement contains a magic number: LayoutRoundedRectangle (context' region' 0' -2);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: if (arg.ErrorAnimationProgress < .5f) {  	progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  	opacity = 1.0d;  }  else {  	progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  	opacity = 1.0d - (arg.ErrorAnimationProgress - .5d) * 2;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: if (arg.ErrorAnimationProgress < .5f) {  	progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  	opacity = 1.0d;  }  else {  	progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  	opacity = 1.0d - (arg.ErrorAnimationProgress - .5d) * 2;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: if (arg.ErrorAnimationProgress < .5f) {  	progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  	opacity = 1.0d;  }  else {  	progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  	opacity = 1.0d - (arg.ErrorAnimationProgress - .5d) * 2;  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: progress = (int)(arg.ErrorAnimationProgress * arg.Allocation.Width * 2.4);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: opacity = 1.0d - (arg.ErrorAnimationProgress - .5d) * 2;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  {  	// The smaller the pixel range of our gradient the less error there will be in it.  	using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  		lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  		lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  		c.SetSource (lg);  		c.Paint ();  	}  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  {  	// The smaller the pixel range of our gradient the less error there will be in it.  	using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  		lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  		lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  		c.SetSource (lg);  		c.Paint ();  	}  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  {  	// The smaller the pixel range of our gradient the less error there will be in it.  	using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  		lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  		lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  		c.SetSource (lg);  		c.Paint ();  	}  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  {  	// The smaller the pixel range of our gradient the less error there will be in it.  	using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  		lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  		lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  		c.SetSource (lg);  		c.Paint ();  	}  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  {  	// The smaller the pixel range of our gradient the less error there will be in it.  	using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  		lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  		lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  		c.SetSource (lg);  		c.Paint ();  	}  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: context.CachedDraw (surface: ref errorSurface' position: new Gdk.Point (arg.Allocation.X - surfaceWidth + progress' arg.Allocation.Y)' size: new Gdk.Size (surfaceWidth' arg.Allocation.Height)' opacity: (float)opacity' draw: (c' o) =>  {  	// The smaller the pixel range of our gradient the less error there will be in it.  	using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  		lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  		lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  		lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  		c.SetSource (lg);  		c.Paint ();  	}  });  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  	lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  	lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  	c.SetSource (lg);  	c.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  	lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  	lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  	c.SetSource (lg);  	c.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  	lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  	lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  	c.SetSource (lg);  	c.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  	lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  	lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  	c.SetSource (lg);  	c.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  	lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  	lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  	c.SetSource (lg);  	c.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: using (var lg = new LinearGradient (surfaceWidth - 250' 0' surfaceWidth' 0)) {  	lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  	lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  	lg.AddColorStop (1.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.00 * o));  	c.SetSource (lg);  	c.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: lg.AddColorStop (0.00' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: lg.AddColorStop (0.10' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.15 * o));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawErrorAnimation,The following statement contains a magic number: lg.AddColorStop (0.88' Styles.WithAlpha (Styles.StatusBarErrorColor' 0.30 * o));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawString,The following statement contains a magic number: context.MoveTo (x' y - h / 2 - (h % 2));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaTheme.cs,DrawString,The following statement contains a magic number: context.MoveTo (x' y - h / 2 - (h % 2));  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.Translate (region.X + region.Width / 2.0' region.Y + region.Height);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: using (var rg = new RadialGradient (0' 0' 0' 0' 0' region.Height * 1.2)) {  	var color = CairoExtensions.ParseColor ("E5F0FF");  	rg.AddColorStop (0' color);  	color.A = 0;  	rg.AddColorStop (1' color);  	context.Scale (region.Width / (double)region.Height' 1.0);  	context.SetSource (rg);  	context.Paint ();  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: LayoutRoundedRectangle (context' region' -3' -3' 2);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: LayoutRoundedRectangle (context' region' -3' -3' 2);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: LayoutRoundedRectangle (context' region' -3' -3' 2);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.SetSourceRGBA (1' 1' 1' 0.4);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: for (; x < region.Right; x += boxSize) {  	context.MoveTo (x + 0.5' region.Top);  	context.LineTo (x + 0.5' region.Bottom);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: for (; x < region.Right; x += boxSize) {  	context.MoveTo (x + 0.5' region.Top);  	context.LineTo (x + 0.5' region.Bottom);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.MoveTo (x + 0.5' region.Top);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.LineTo (x + 0.5' region.Bottom);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: y += boxSize / 2;  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: for (; y < region.Bottom; y += boxSize) {  	context.MoveTo (region.Left' y + 0.5);  	context.LineTo (region.Right' y + 0.5);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: for (; y < region.Bottom; y += boxSize) {  	context.MoveTo (region.Left' y + 0.5);  	context.LineTo (region.Right' y + 0.5);  }  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.MoveTo (region.Left' y + 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.LineTo (region.Right' y + 0.5);  
Magic Number,MonoDevelop.Components.MainToolbar,StatusAreaBuildTheme,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\StatusAreaBuildTheme.cs,DrawBackground,The following statement contains a magic number: context.SetSourceRGBA (1' 1' 1' 0.2);  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: if (Count < n * 2) {  	this.Sort (comparison);  	return;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: for (int i = 0; i < Count; i++) {  	int index = i;  	var item = this [offset + i];  	// use next item  	// and move it on top' if greater than parent  	while (index > 0 && comparison.Compare (this [offset + (index - 1) / 2]' item) > 0) {  		int top = (index - 1) / 2;  		this [offset + index] = this [offset + top];  		index = top;  	}  	this [offset + index] = item;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: for (int i = 0; i < Count; i++) {  	int index = i;  	var item = this [offset + i];  	// use next item  	// and move it on top' if greater than parent  	while (index > 0 && comparison.Compare (this [offset + (index - 1) / 2]' item) > 0) {  		int top = (index - 1) / 2;  		this [offset + index] = this [offset + top];  		index = top;  	}  	this [offset + index] = item;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: while (index > 0 && comparison.Compare (this [offset + (index - 1) / 2]' item) > 0) {  	int top = (index - 1) / 2;  	this [offset + index] = this [offset + top];  	index = top;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: while (index > 0 && comparison.Compare (this [offset + (index - 1) / 2]' item) > 0) {  	int top = (index - 1) / 2;  	this [offset + index] = this [offset + top];  	index = top;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: for (int i = Count - 1; i > bound; i--) {  	// delete max and place it as last  	var last = this [offset + i];  	this [offset + i] = this [offset];  	int index = 0;  	// the last one positioned in the heap  	while (index * 2 + 1 < i) {  		int left = index * 2 + 1' right = left + 1;  		if (right < i && comparison.Compare (this [offset + left]' this [offset + right]) > 0) {  			if (comparison.Compare (last' this [offset + right]) < 0)  				break;  			this [offset + index] = this [offset + right];  			index = right;  		}  		else {  			if (comparison.Compare (last' this [offset + left]) < 0)  				break;  			this [offset + index] = this [offset + left];  			index = left;  		}  	}  	this [offset + index] = last;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: for (int i = Count - 1; i > bound; i--) {  	// delete max and place it as last  	var last = this [offset + i];  	this [offset + i] = this [offset];  	int index = 0;  	// the last one positioned in the heap  	while (index * 2 + 1 < i) {  		int left = index * 2 + 1' right = left + 1;  		if (right < i && comparison.Compare (this [offset + left]' this [offset + right]) > 0) {  			if (comparison.Compare (last' this [offset + right]) < 0)  				break;  			this [offset + index] = this [offset + right];  			index = right;  		}  		else {  			if (comparison.Compare (last' this [offset + left]) < 0)  				break;  			this [offset + index] = this [offset + left];  			index = left;  		}  	}  	this [offset + index] = last;  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: while (index * 2 + 1 < i) {  	int left = index * 2 + 1' right = left + 1;  	if (right < i && comparison.Compare (this [offset + left]' this [offset + right]) > 0) {  		if (comparison.Compare (last' this [offset + right]) < 0)  			break;  		this [offset + index] = this [offset + right];  		index = right;  	}  	else {  		if (comparison.Compare (last' this [offset + left]) < 0)  			break;  		this [offset + index] = this [offset + left];  		index = left;  	}  }  
Magic Number,MonoDevelop.Components.MainToolbar,ResultsDataSource,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\ResultsDataSource.cs,SortUpToN,The following statement contains a magic number: while (index * 2 + 1 < i) {  	int left = index * 2 + 1' right = left + 1;  	if (right < i && comparison.Compare (this [offset + left]' this [offset + right]) > 0) {  		if (comparison.Compare (last' this [offset + right]) < 0)  			break;  		this [offset + index] = this [offset + right];  		index = right;  	}  	else {  		if (comparison.Compare (last' this [offset + left]) < 0)  			break;  		this [offset + index] = this [offset + left];  		index = left;  	}  }  
Duplicate Code,MonoDevelop.Components,PathBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PathBar.cs,OnExposeEvent,The method contains a code clone-set at the following line numbers (starting from the method definition): ((43' 63)' (95' 115))
Missing Default,MonoDevelop.Ide.Commands,DefaultStringTagProvider,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Commands\CustomStringTagProvider.cs,GetTagValue,The following switch statement is missing a default case: switch (tag) {  case "FILEPATH":  	if (wb.ActiveDocument != null)  		return !wb.ActiveDocument.IsFile ? String.Empty : wb.ActiveDocument.Name;  	return null;  case "FILEDIR":  	if (wb.ActiveDocument != null)  		return !wb.ActiveDocument.IsFile ? FilePath.Empty : wb.ActiveDocument.FileName.ParentDirectory;  	return null;  case "FILENAME":  	if (wb.ActiveDocument != null)  		return !wb.ActiveDocument.IsFile ? String.Empty : wb.ActiveDocument.FileName.FileName;  	return null;  case "FILEEXT":  	if (wb.ActiveDocument != null)  		return !wb.ActiveDocument.IsFile ? String.Empty : wb.ActiveDocument.FileName.Extension;  	return null;  case "CURLINE":  	if (wb.ActiveDocument != null && wb.ActiveDocument.Editor != null)  		return wb.ActiveDocument.Editor.Caret.Line;  	return null;  case "CURCOLUMN":  	if (wb.ActiveDocument != null && wb.ActiveDocument.Editor != null)  		return wb.ActiveDocument.Editor.Caret.Column;  	return null;  case "CUROFFSET":  	if (wb.ActiveDocument != null && wb.ActiveDocument.Editor != null)  		return wb.ActiveDocument.Editor.Caret.Offset;  	return null;  case "CURTEXT":  	if (wb.ActiveDocument != null && wb.ActiveDocument.Editor != null)  		return wb.ActiveDocument.Editor.SelectedText;  	return null;  case "EDITORTEXT":  	if (wb.ActiveDocument != null && wb.ActiveDocument.Editor != null)  		return wb.ActiveDocument.Editor.Text;  	return null;  case "STARTUPPATH":  	return AppDomain.CurrentDomain.BaseDirectory;  case "CONFIGDIR":  	return UserProfile.Current.ConfigDir;  case "DATADIR":  	return UserProfile.Current.UserDataRoot;  case "LOGDIR":  	return UserProfile.Current.LogDir;  }  
Missing Default,MonoDevelop.Ide.Gui,DefaultWorkbench,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DefaultWorkbench.cs,OnKeyPressEvent,The following switch statement is missing a default case: switch (evnt.Key) {  case Gdk.Key.KP_1:  case Gdk.Key.Key_1:  	SwitchToDocument (0);  	return true;  case Gdk.Key.KP_2:  case Gdk.Key.Key_2:  	SwitchToDocument (1);  	return true;  case Gdk.Key.KP_3:  case Gdk.Key.Key_3:  	SwitchToDocument (2);  	return true;  case Gdk.Key.KP_4:  case Gdk.Key.Key_4:  	SwitchToDocument (3);  	return true;  case Gdk.Key.KP_5:  case Gdk.Key.Key_5:  	SwitchToDocument (4);  	return true;  case Gdk.Key.KP_6:  case Gdk.Key.Key_6:  	SwitchToDocument (5);  	return true;  case Gdk.Key.KP_7:  case Gdk.Key.Key_7:  	SwitchToDocument (6);  	return true;  case Gdk.Key.KP_8:  case Gdk.Key.Key_8:  	SwitchToDocument (7);  	return true;  case Gdk.Key.KP_9:  case Gdk.Key.Key_9:  	SwitchToDocument (8);  	return true;  case Gdk.Key.KP_0:  case Gdk.Key.Key_0:  	SwitchToDocument (9);  	return true;  }  
Missing Default,MonoDevelop.Ide.Gui,CommonTextEditorOptions,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\CommonTextEditorOptions.cs,PropertyServiceChanged,The following switch statement is missing a default case: switch (e.Key) {  case "ColorScheme": {  	string val = (string)e.NewValue;  	if (string.IsNullOrEmpty (val))  		val = "Default";  	base.ColorScheme = val;  	break;  }  case "UseAntiAliasing":  	base.UseAntiAliasing = (bool)e.NewValue;  	break;  }  
Missing Default,MonoDevelop.Ide.ExternalTools,ExternalToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.ExternalTools\ExternalToolService.cs,LoadTools,The following switch statement is missing a default case: switch (reader.LocalName) {  case Node:  	string fileVersion = reader.GetAttribute (VersionAttribute);  	if (fileVersion != Version)  		return null;  	break;  case ExternalTool.Node:  	result.Add (ExternalTool.Read (reader));  	break;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,Read,The following switch statement is missing a default case: switch (reader.LocalName) {  case HeaderNode:  	XmlReadHelper.ReadList (reader' HeaderNode' delegate () {  		switch (reader.LocalName) {  		case GroupNode:  			result.Group = reader.ReadElementContentAsString ();  			return true;  		case VersionNode:  			result.Version = reader.ReadElementContentAsString ();  			return true;  		case MimeNode:  			result.MimeType = reader.ReadElementContentAsString ();  			return true;  		case ContextNode:  			result.CodeTemplateContext = (CodeTemplateContext)Enum.Parse (typeof(CodeTemplateContext)' reader.ReadElementContentAsString ());  			return true;  		case ShortcutNode:  			result.Shortcut = reader.ReadElementContentAsString ();  			return true;  		case DescriptionNode:  			result.Description = reader.ReadElementContentAsString ();  			return true;  		case TemplateTypeNode:  			result.CodeTemplateType = (CodeTemplateType)Enum.Parse (typeof(CodeTemplateType)' reader.ReadElementContentAsString ());  			return true;  		}  		return false;  	});  	return true;  case VariablesNode:  	XmlReadHelper.ReadList (reader' VariablesNode' delegate () {  		//Console.WriteLine ("var:" + reader.LocalName);  		switch (reader.LocalName) {  		case CodeTemplateVariable.Node:  			var var = CodeTemplateVariable.Read (reader);  			result.variableDecarations [var.Name] = var;  			return true;  		}  		return false;  	});  	return true;  case CodeNode:  	result.Code = reader.ReadElementContentAsString ();  	return true;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,Read,The following switch statement is missing a default case: switch (reader.LocalName) {  case GroupNode:  	result.Group = reader.ReadElementContentAsString ();  	return true;  case VersionNode:  	result.Version = reader.ReadElementContentAsString ();  	return true;  case MimeNode:  	result.MimeType = reader.ReadElementContentAsString ();  	return true;  case ContextNode:  	result.CodeTemplateContext = (CodeTemplateContext)Enum.Parse (typeof(CodeTemplateContext)' reader.ReadElementContentAsString ());  	return true;  case ShortcutNode:  	result.Shortcut = reader.ReadElementContentAsString ();  	return true;  case DescriptionNode:  	result.Description = reader.ReadElementContentAsString ();  	return true;  case TemplateTypeNode:  	result.CodeTemplateType = (CodeTemplateType)Enum.Parse (typeof(CodeTemplateType)' reader.ReadElementContentAsString ());  	return true;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplate,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplate.cs,Read,The following switch statement is missing a default case: switch (reader.LocalName) {  case CodeTemplateVariable.Node:  	var var = CodeTemplateVariable.Read (reader);  	result.variableDecarations [var.Name] = var;  	return true;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateService.cs,CodeTemplateService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	using (XmlReader reader = codon.Open ()) {  		LoadTemplates (reader).ForEach (t => templates.Add (t));  	}  	break;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplateService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateService.cs,LoadTemplates,The following switch statement is missing a default case: switch (reader.LocalName) {  case Node:  	string fileVersion = reader.GetAttribute (VersionAttribute);  	if (fileVersion != Version)  		return null;  	break;  case CodeTemplate.Node:  	result.Add (CodeTemplate.Read (reader));  	break;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplateVariable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateVariable.cs,Read,The following switch statement is missing a default case: switch (reader.LocalName) {  case DefaultNode:  	result.Default = reader.ReadElementContentAsString ();  	return true;  case TooltipNode:  	result.ToolTip = reader.ReadElementContentAsString ();  	return true;  case ValuesNode:  	XmlReadHelper.ReadList (reader' ValuesNode' delegate () {  		switch (reader.LocalName) {  		case ValueNode:  			string icon = reader.GetAttribute (iconAttribute);  			string val = reader.ReadElementContentAsString ();  			result.Values.Add (new CodeTemplateVariableValue (val' icon));  			return true;  		}  		return false;  	});  	return true;  case FunctionNode:  	result.Function = reader.ReadElementContentAsString ();  	return true;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,CodeTemplateVariable,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\CodeTemplateVariable.cs,Read,The following switch statement is missing a default case: switch (reader.LocalName) {  case ValueNode:  	string icon = reader.GetAttribute (iconAttribute);  	string val = reader.ReadElementContentAsString ();  	result.Values.Add (new CodeTemplateVariableValue (val' icon));  	return true;  }  
Missing Default,MonoDevelop.Ide.CodeTemplates,ExpansionObject,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeTemplates\ExpansionObject.cs,RunFunction,The following switch statement is missing a default case: switch (name) {  case "GetCollections":  	return GetCollections ();  case "GetCurrentClassName":  	return new CodeTemplateListDataProvider (GetCurrentClassName ());  case "GetConstructorModifier":  	return new CodeTemplateListDataProvider (GetConstructorModifier ());  case "GetSimpleTypeName":  	return new CodeTemplateListDataProvider (GetSimpleTypeName (match.Groups [2].Value.Trim ('"')));  case "GetLengthProperty":  	return new CodeTemplateListDataProvider (GetLengthProperty (callback' match.Groups == null || match.Groups.Count < 3 ? null : match.Groups [2].Value.Trim ('"')));  case "GetComponentTypeOf":  	return new CodeTemplateListDataProvider (GetComponentTypeOf (callback' match.Groups [2].Value.Trim ('"')));  }  
Missing Default,MonoDevelop.Ide.Templates,SolutionDescriptor,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\SolutionDescriptor.cs,CreateSolutionDescriptor,The following switch statement is missing a default case: switch (xmlNodeElement.Name) {  case "Project":  	solutionDescriptor.entryDescriptors.Add (ProjectDescriptor.CreateProjectDescriptor (xmlNodeElement' baseDirectory));  	break;  case "CombineEntry":  case "SolutionItem":  	solutionDescriptor.entryDescriptors.Add (SolutionItemDescriptor.CreateDescriptor (addin' xmlNodeElement));  	break;  }  
Missing Default,MonoDevelop.Ide.Templates,ClrVersionFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\ClrVersionFileTemplateCondition.cs,ShouldEnableFor,The following switch statement is missing a default case: switch (condition) {  case ClrVersionCondition.Equal:  	return (pver == clrVersion);  case ClrVersionCondition.NotEqual:  	return (pver != clrVersion);  case ClrVersionCondition.GreaterThan:  	return (pver > clrVersion);  case ClrVersionCondition.GreaterThanOrEqual:  	return (pver >= clrVersion);  case ClrVersionCondition.LessThan:  	return (pver < clrVersion);  case ClrVersionCondition.LessThanOrEqual:  	return (pver <= clrVersion);  }  
Missing Default,MonoDevelop.Ide.Templates,PartialTypeFileTemplateCondition,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Templates\PartialTypeFileTemplateCondition.cs,ShouldEnableFor,The following switch statement is missing a default case: switch (filter) {  case PartialTypeRequirement.None:  	return true;  case PartialTypeRequirement.Unsupported:  	return (supported == false);  case PartialTypeRequirement.Supported:  	return (supported == true);  case PartialTypeRequirement.Disabled:  	return (enabled == false);  case PartialTypeRequirement.Enabled:  	return (enabled == true);  }  
Missing Default,MonoDevelop.Ide.Gui.Content,TextEditorResolverService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\ITextEditorResolver.cs,TextEditorResolverService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	providers.Add ((TextEditorResolverProviderCodon)args.ExtensionNode);  	break;  case ExtensionChange.Remove:  	providers.Remove ((TextEditorResolverProviderCodon)args.ExtensionNode);  	break;  }  
Missing Default,MonoDevelop.Ide.Gui.Content,TextStylePolicy,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Content\TextStylePolicy.cs,GetEolMarker,The following switch statement is missing a default case: switch (eolMarker) {  case EolMarker.Mac:  	return "\r";  case EolMarker.Unix:  	return "\n";  case EolMarker.Windows:  	return "\r\n";  }  
Missing Default,MonoDevelop.Ide,DocumentList,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui\DocumentSwitcher.cs,OnKeyPressEvent,The following switch statement is missing a default case: switch (accels [0].Key) {  case Gdk.Key.Left:  case Gdk.Key.KP_Left:  	LeftItem ();  	break;  case Gdk.Key.Right:  case Gdk.Key.KP_Right:  	RightItem ();  	break;  case Gdk.Key.Up:  case Gdk.Key.KP_Up:  	PrevItem (false);  	break;  case Gdk.Key.Down:  case Gdk.Key.KP_Down:  	NextItem (false);  	break;  case Gdk.Key.Tab:  	if ((accels [0].Modifier & ModifierType.ShiftMask) == 0)  		NextItem (true);  	else  		PrevItem (true);  	break;  case Gdk.Key.Return:  case Gdk.Key.KP_Enter:  case Gdk.Key.ISO_Enter:  	OnRequestClose (new RequestActionEventArgs (true));  	break;  case Gdk.Key.Escape:  	OnRequestClose (new RequestActionEventArgs (false));  	break;  }  
Missing Default,MonoDevelop.Ide,IdeApp,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\Ide.cs,Initialize,The following switch statement is missing a default case: switch (lastVersion) {  case "1.0":  	lastRevision = 1;  	break;  case "2.0":  	lastRevision = 2;  	break;  case "2.2":  	lastRevision = 3;  	break;  case "2.2.1":  	lastRevision = 4;  	break;  }  
Missing Default,MonoDevelop.Ide,RootWorkspace,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\RootWorkspace.cs,AllowReload,The following switch statement is missing a default case: switch (prc) {  case ProjectReloadCapability.None:  	if (hasNoFiles && hasUnsaved)  		msg = GettextCatalog.GetString ("WARNING: Some documents may need to be closed' and unsaved data will be lost. You will be asked to save the unsaved documents.");  	else if (hasNoFiles)  		msg = GettextCatalog.GetString ("WARNING: Some documents may need to be reloaded or closed' and unsaved data will be lost. You will be asked to save the unsaved documents.");  	else if (hasUnsaved)  		msg = GettextCatalog.GetString ("WARNING: Some files may need to be reloaded' and unsaved data will be lost. You will be asked to save the unsaved files.");  	else  		goto case ProjectReloadCapability.UnsavedData;  	break;  case ProjectReloadCapability.UnsavedData:  	msg = GettextCatalog.GetString ("Some files may need to be reloaded' and editing status for those files (such as the undo queue) will be lost.");  	break;  }  
Missing Default,MonoDevelop.Ide,ImageService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ImageService.cs,ImageService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	if (!iconStock.ContainsKey (iconCodon.StockId))  		iconStock [iconCodon.StockId] = new List<StockIconCodon> ();  	iconStock [iconCodon.StockId].Add (iconCodon);  	break;  }  
Missing Default,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,The following switch statement is missing a default case: switch (IdeApp.Preferences.ShowErrorPadAfterBuild) {  case BuildResultStates.Always:  	if (!errorsPad.Visible)  		errorsPad.IsOpenedAutomatically = true;  	errorsPad.Visible = true;  	errorsPad.BringToFront ();  	break;  case BuildResultStates.Never:  	break;  case BuildResultStates.OnErrors:  	if (TaskService.Errors.Any (task => task.Severity == TaskSeverity.Error))  		goto case BuildResultStates.Always;  	goto case BuildResultStates.Never;  case BuildResultStates.OnErrorsOrWarnings:  	if (TaskService.Errors.Any (task => task.Severity == TaskSeverity.Error || task.Severity == TaskSeverity.Warning))  		goto case BuildResultStates.Always;  	goto case BuildResultStates.Never;  }  
Missing Default,MonoDevelop.Ide,ProjectOperations,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide\ProjectOperations.cs,BuildDone,The following switch statement is missing a default case: switch (IdeApp.Preferences.JumpToFirstErrorOrWarning) {  case JumpToFirst.Error:  	jumpTask = tasks.FirstOrDefault (t => t.Severity == TaskSeverity.Error && TaskStore.IsProjectTaskFile (t));  	break;  case JumpToFirst.ErrorOrWarning:  	jumpTask = tasks.FirstOrDefault (t => (t.Severity == TaskSeverity.Error || t.Severity == TaskSeverity.Warning) && TaskStore.IsProjectTaskFile (t));  	break;  }  
Missing Default,MonoDevelop.Ide.Gui.Components,NodeState,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Gui.Components\NodeState.cs,ReadFrom,The following switch statement is missing a default case: switch (reader.LocalName) {  case "Option":  	if (result.Options == null)  		result.Options = new Dictionary<string' bool> ();  	result.Options [reader.GetAttribute ("id")] = bool.Parse (reader.GetAttribute ("value"));  	return true;  case "Node":  	if (result.ChildrenState == null)  		result.ChildrenState = new List<NodeState> ();  	result.ChildrenState.Add ((NodeState)ReadFrom (reader));  	return true;  }  
Missing Default,MonoDevelop.Ide.CodeFormatting,CodeFormatterService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeFormatting\CodeFormatterService.cs,FormatterExtHandler,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	nodes.Add ((CodeFormatterExtensionNode)args.ExtensionNode);  	break;  case ExtensionChange.Remove:  	nodes.Remove ((CodeFormatterExtensionNode)args.ExtensionNode);  	break;  }  
Missing Default,MonoDevelop.Ide.FindInFiles,FindInFilesDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\FindInFilesDialog.cs,HandleScopeChanged,The following switch statement is missing a default case: switch ((SearchScope)comboboxScope.Active) {  case SearchScope.WholeSolution:  	HideDirectoryPathUI ();  	ShowFileMaskUI ();  	break;  case SearchScope.CurrentProject:  	HideDirectoryPathUI ();  	ShowFileMaskUI ();  	break;  case SearchScope.AllOpenFiles:  	HideDirectoryPathUI ();  	ShowFileMaskUI ();  	break;  case SearchScope.Directories:  	ShowDirectoryPathUI ();  	ShowFileMaskUI ();  	break;  case SearchScope.CurrentDocument:  	HideDirectoryPathUI ();  	HideFileMaskUI ();  	break;  case SearchScope.Selection:  	HideDirectoryPathUI ();  	HideFileMaskUI ();  	break;  }  
Missing Default,MonoDevelop.Ide.FindInFiles,ReferenceFinder,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.FindInFiles\ReferencesFinder.cs,ReferenceFinder,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	referenceFinderCodons.Add (codon);  	break;  case ExtensionChange.Remove:  	referenceFinderCodons.Remove (codon);  	break;  }  
Missing Default,MonoDevelop.Ide.Execution,CustomExecutionModeManagerDialog,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Execution\CustomExecutionModeManagerDialog.cs,Fill,The following switch statement is missing a default case: switch (mode.Scope) {  case CustomModeScope.Project:  	scope = GettextCatalog.GetString ("Current project");  	break;  case CustomModeScope.Solution:  	scope = GettextCatalog.GetString ("Current solution");  	break;  case CustomModeScope.Global:  	scope = GettextCatalog.GetString ("All solutions");  	break;  }  
Missing Default,MonoDevelop.Ide.CustomTools,CustomToolService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CustomTools\CustomToolService.cs,CustomToolService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	if (nodes.ContainsKey (node.Name))  		LoggingService.LogError ("Duplicate custom tool name '{0}'"' node.Name);  	else  		nodes.Add (node.Name' node);  	break;  case ExtensionChange.Remove:  	nodes.Remove (node.Name);  	break;  }  
Missing Default,MonoDevelop.Components,FixedWidthWrapLabel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\FixedWidthWrapLabel.cs,breakText,The following switch statement is missing a default case: switch (c) {  case '<':  	inMarkup = true;  	sb.Append (c);  	continue;  case '>':  	inMarkup = false;  	sb.Append (c);  	continue;  case '&':  	inEntity = true;  	sb.Append (c);  	continue;  case ';':  	if (inEntity) {  		inEntity = false;  		sb.Append (c);  		continue;  	}  	break;  }  
Missing Default,MonoDevelop.Components,ListView,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\ListView.cs,ProcessKey,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Up:  	if (SelectionDisabled)  		SelectionDisabled = false;  	else  		ModifySelection (true' false' (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask);  	return true;  case Gdk.Key.Down:  	if (SelectionDisabled)  		SelectionDisabled = false;  	else  		ModifySelection (false' false' (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask);  	return true;  case Gdk.Key.Page_Up:  	ModifySelection (true' true' (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask);  	return true;  case Gdk.Key.Page_Down:  	ModifySelection (false' true' (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask);  	return true;  case Gdk.Key.Left:  	//if (curPos == 0) return KeyAction.CloseWindow | KeyAction.Process;  	//curPos--;  	return true;  case Gdk.Key.Right:  	//if (curPos == word.Length) return KeyAction.CloseWindow | KeyAction.Process;  	//curPos++;  	return true;  case Gdk.Key.Home:  	SelectedRow = 0;  	return true;  case Gdk.Key.End:  	if (dataProvider != null)  		SelectedRow = RowCount - 1;  	return true;  case Gdk.Key.Return:  	if (ItemActivated != null)  		ItemActivated (this' EventArgs.Empty);  	return true;  }  
Missing Default,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following switch statement is missing a default case: switch ((PopupPosition)(intPos & 0x0f)) {  case PopupPosition.Top:  	if (caret.Bottom + request.Height > geometry.Bottom)  		intPos = (intPos & 0xf0) | (int)PopupPosition.Bottom;  	break;  case PopupPosition.Bottom:  	if (caret.Top - request.Height < geometry.X)  		intPos = (intPos & 0xf0) | (int)PopupPosition.Top;  	break;  case PopupPosition.Right:  	if (caret.X - request.Width < geometry.X)  		intPos = (intPos & 0xf0) | (int)PopupPosition.Left;  	break;  case PopupPosition.Left:  	if (caret.Right + request.Width > geometry.Right)  		intPos = (intPos & 0xf0) | (int)PopupPosition.Right;  	break;  }  
Missing Default,MonoDevelop.Components,PopoverWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components\PopoverWindow.cs,RepositionWindow,The following switch statement is missing a default case: switch ((PopupPosition)((int)position & 0x0f)) {  case PopupPosition.Top:  	y = caret.Bottom;  	break;  case PopupPosition.Bottom:  	y = caret.Y - request.Height;  	break;  case PopupPosition.Right:  	x = caret.X - request.Width;  	break;  case PopupPosition.Left:  	x = caret.Right;  	break;  }  
Missing Default,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MoveNext,The following switch statement is missing a default case: switch (scale) {  case 0:  	current = current.AddSeconds (1);  	break;  case 1:  	current = current.AddSeconds (15);  	break;  case 2:  	current = current.AddMinutes (1);  	break;  case 3:  	current = current.AddMinutes (15);  	break;  case 4:  	current = current.AddHours (1);  	break;  case 5:  	current = current.AddDays (1);  	break;  case 6:  	current = current.AddMonths (1);  	break;  case 7:  	current = current.AddYears (1);  	break;  }  
Missing Default,MonoDevelop.Components.Chart,DateTimeTickEnumerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Chart\DateTimeAxis.cs,MovePrevious,The following switch statement is missing a default case: switch (scale) {  case 0:  	current = current.AddSeconds (-1);  	break;  case 1:  	current = current.AddSeconds (-15);  	break;  case 2:  	current = current.AddMinutes (-1);  	break;  case 3:  	current = current.AddMinutes (-15);  	break;  case 4:  	current = current.AddHours (-1);  	break;  case 5:  	current = current.AddDays (-1);  	break;  case 6:  	current = current.AddMonths (-1);  	break;  case 7:  	current = current.AddYears (-1);  	break;  }  
Missing Default,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,KeyToString,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Next:  	return "Page_Down";  case Gdk.Key.L1:  	return "F11";  case Gdk.Key.L2:  	return "F12";  }  
Missing Default,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,KeyToDisplayLabel,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Page_Down:  	//Gdk.Key.Next:  	return "Page Down";  case Gdk.Key.Page_Up:  	//case Gdk.Key.Prior:  	return "Page Up";  }  
Missing Default,MonoDevelop.Components.Commands,KeyBindingManager,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingManager.cs,AppleMapKeyToSymbol,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Escape:  	return '⎋';  case Gdk.Key.Tab:  	return '⇥';  case Gdk.Key.Caps_Lock:  	return '⇪';  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  	return '⇧';  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  	return '⌃';  case Gdk.Key.BackSpace:  	return '⌫';  case Gdk.Key.Delete:  	return '⌦';  case Gdk.Key.Home:  	return '⇱';  case Gdk.Key.End:  	return '⇲';  case Gdk.Key.Page_Up:  	return '⇞';  case Gdk.Key.Page_Down:  	return '⇟';  case Gdk.Key.Up:  	return '↑';  case Gdk.Key.Down:  	return '↓';  case Gdk.Key.Left:  	return '←';  case Gdk.Key.Right:  	return '→';  case Gdk.Key.Clear:  	return '⌧';  case Gdk.Key.Num_Lock:  	return '⇭';  case Gdk.Key.Return:  	return '⏎';  case Gdk.Key.space:  	return '␣';  case Gdk.Key.Meta_L:  case Gdk.Key.Meta_R:  	return '⌘';  case Gdk.Key.Alt_L:  case Gdk.Key.Alt_R:  	return '⌥';  }  
Missing Default,MonoDevelop.Components.Commands,KeyBindingSet,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Commands\KeyBindingSet.cs,LoadScheme,The following switch statement is missing a default case: switch (reader.LocalName) {  case "scheme":  	// this is the beginning of the next scheme  	return true;  case "binding":  	command = reader.GetAttribute (commandAttr);  	binding = reader.GetAttribute (shortcutAttr);  	if (!string.IsNullOrEmpty (command))  		bindings.Add (command' binding);  	break;  }  
Missing Default,MonoDevelop.Components.DockToolbars,DockToolbarPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\DockToolbarPanel.cs,DockToolbarPanel,The following switch statement is missing a default case: switch (placement) {  case Placement.Top:  	this.orientation = Orientation.Horizontal;  	break;  case Placement.Bottom:  	this.orientation = Orientation.Horizontal;  	break;  case Placement.Left:  	this.orientation = Orientation.Vertical;  	break;  case Placement.Right:  	this.orientation = Orientation.Vertical;  	break;  }  
Missing Default,MonoDevelop.Components.DockToolbars,FixedPanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.DockToolbars\FixedPanel.cs,OnSizeAllocated,The following switch statement is missing a default case: switch (placement) {  case Placement.Top:  	break;  case Placement.Bottom:  	crect.Y = Allocation.Height - crect.Y - crect.Height;  	break;  case Placement.Left: {  	int t = crect.X;  	crect.X = crect.Y;  	crect.Y = t;  	break;  }  case Placement.Right: {  	int t = crect.X;  	crect.X = crect.Y;  	crect.Y = t;  	crect.X = Allocation.Width - crect.X - crect.Width;  	break;  }  }  
Missing Default,MonoDevelop.Components.Theming,GtkColors,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Theming\GtkColors.cs,RefreshColors,The following switch statement is missing a default case: switch ((GtkColorClass)c) {  case GtkColorClass.Light:  	color = widget.Style.LightColors [s];  	break;  case GtkColorClass.Mid:  	color = widget.Style.MidColors [s];  	break;  case GtkColorClass.Dark:  	color = widget.Style.DarkColors [s];  	break;  case GtkColorClass.Base:  	color = widget.Style.BaseColors [s];  	break;  case GtkColorClass.Text:  	color = widget.Style.TextColors [s];  	break;  case GtkColorClass.Background:  	color = widget.Style.Backgrounds [s];  	break;  case GtkColorClass.Foreground:  	color = widget.Style.Foregrounds [s];  	break;  }  
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,AutoHideBox,The following switch statement is missing a default case: switch (pos) {  case PositionType.Left:  	cframe.SetMargins (0' 0' 1' 1);  	break;  case PositionType.Right:  	cframe.SetMargins (0' 0' 1' 1);  	break;  case PositionType.Top:  	cframe.SetMargins (1' 1' 0' 0);  	break;  case PositionType.Bottom:  	cframe.SetMargins (1' 1' 0' 0);  	break;  }  
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateShow,The following switch statement is missing a default case: switch (position) {  case PositionType.Left:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Right:  	WidthRequest += 1 + (targetSize - WidthRequest) / 3;  	X = targetPos - WidthRequest;  	if (WidthRequest < targetSize)  		return true;  	break;  case PositionType.Top:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	if (HeightRequest < targetSize)  		return true;  	break;  case PositionType.Bottom:  	HeightRequest += 1 + (targetSize - HeightRequest) / 3;  	Y = targetPos - HeightRequest;  	if (HeightRequest < targetSize)  		return true;  	break;  }  
Missing Default,MonoDevelop.Components.Docking,AutoHideBox,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,RunAnimateHide,The following switch statement is missing a default case: switch (position) {  case PositionType.Left: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		return true;  	}  	break;  }  case PositionType.Right: {  	int ns = WidthRequest - 1 - WidthRequest / 3;  	if (ns > 0) {  		WidthRequest = ns;  		X = targetPos - ns;  		return true;  	}  	break;  }  case PositionType.Top: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		return true;  	}  	break;  }  case PositionType.Bottom: {  	int ns = HeightRequest - 1 - HeightRequest / 3;  	if (ns > 0) {  		HeightRequest = ns;  		Y = targetPos - ns;  		return true;  	}  	break;  }  }  
Missing Default,MonoDevelop.Components.Docking,ScrollableContainer,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\AutoHideBox.cs,OnSizeAllocated,The following switch statement is missing a default case: switch (expandPos) {  case PositionType.Bottom:  	alloc = new Rectangle (alloc.X' alloc.Y' alloc.Width' targetSize);  	break;  case PositionType.Top:  	alloc = new Rectangle (alloc.X' alloc.Y - targetSize + alloc.Height' alloc.Width' targetSize);  	break;  case PositionType.Right:  	alloc = new Rectangle (alloc.X' alloc.Y' targetSize' alloc.Height);  	break;  case PositionType.Left:  	alloc = new Rectangle (alloc.X - targetSize + alloc.Width' alloc.Y' targetSize' alloc.Height);  	break;  }  
Missing Default,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnSizeAllocated,The following switch statement is missing a default case: switch (Position) {  case PositionType.Left:  	allocation.Width--;  	break;  case PositionType.Right:  	allocation.X++;  	allocation.Width--;  	break;  case PositionType.Top:  	allocation.Height--;  	break;  case PositionType.Bottom:  	allocation.Y++;  	allocation.Height--;  	break;  }  
Missing Default,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following switch statement is missing a default case: switch (Position) {  case PositionType.Left:  	ctx.MoveTo (alloc.X + alloc.Width - offs' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Right:  	ctx.MoveTo (alloc.X + offs' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Top:  	ctx.MoveTo (alloc.X' alloc.Y + alloc.Height - offs);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  case PositionType.Bottom:  	ctx.MoveTo (alloc.X' alloc.Y + offs);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  }  
Missing Default,MonoDevelop.Components.Docking,DockBar,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockBar.cs,OnExposeEvent,The following switch statement is missing a default case: switch (Position) {  case PositionType.Left:  	ctx.MoveTo (alloc.X + alloc.Width - 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Right:  	ctx.MoveTo (alloc.X + 0.5' alloc.Y);  	ctx.RelLineTo (0' Allocation.Height);  	break;  case PositionType.Top:  	ctx.MoveTo (alloc.X' alloc.Y + alloc.Height + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  case PositionType.Bottom:  	ctx.MoveTo (alloc.X' alloc.Y + 0.5);  	ctx.RelLineTo (Allocation.Width' 0);  	break;  }  
Missing Default,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,ExtractDockBar,The following switch statement is missing a default case: switch (pos) {  case PositionType.Left:  	db.OriginalBar = dockBarLeft;  	dockBarLeft = db;  	break;  case PositionType.Top:  	db.OriginalBar = dockBarTop;  	dockBarTop = db;  	break;  case PositionType.Right:  	db.OriginalBar = dockBarRight;  	dockBarRight = db;  	break;  case PositionType.Bottom:  	db.OriginalBar = dockBarBottom;  	dockBarBottom = db;  	break;  }  
Missing Default,MonoDevelop.Components.Docking,DockFrame,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockFrame.cs,GetDockBar,The following switch statement is missing a default case: switch (pos) {  case Gtk.PositionType.Top:  	return dockBarTop;  case Gtk.PositionType.Bottom:  	return dockBarBottom;  case Gtk.PositionType.Left:  	return dockBarLeft;  case Gtk.PositionType.Right:  	return dockBarRight;  }  
Missing Default,MonoDevelop.Components.Docking,DockGroup,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroup.cs,DrawSeparators,The following switch statement is missing a default case: switch (oper) {  case DrawSeparatorOperation.CollectAreas:  	if (Frame.ShadedSeparators)  		areasList.Add (new Gdk.Rectangle (x' y' hw' hh));  	break;  case DrawSeparatorOperation.Invalidate:  	Frame.Container.QueueDrawArea (x' y' hw' hh);  	break;  case DrawSeparatorOperation.Draw:  	Frame.Container.GdkWindow.DrawRectangle (hgc' true' x' y' hw' hh);  	break;  case DrawSeparatorOperation.Allocate:  	Frame.Container.AllocateSplitter (this' n' new Gdk.Rectangle (x' y' hw' hh));  	break;  }  
Missing Default,MonoDevelop.Components.Docking,DockGroupItem,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.Docking\DockGroupItem.cs,SetBarDocPosition,The following switch statement is missing a default case: switch (barDocPosition) {  case PositionType.Left:  	barDocPosition = PositionType.Right;  	break;  case PositionType.Right:  	barDocPosition = PositionType.Left;  	break;  case PositionType.Top:  	barDocPosition = PositionType.Bottom;  	break;  case PositionType.Bottom:  	barDocPosition = PositionType.Top;  	break;  }  
Missing Default,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PostProcessKey,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.BackSpace:  	ResetSizes ();  	UpdateWordSelection ();  	return KeyActions.Process;  }  
Missing Default,MonoDevelop.Ide.CodeCompletion,ListWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.CodeCompletion\ListWindow.cs,PreProcessKey,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Home:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = 0;  	return KeyActions.Ignore;  case Gdk.Key.End:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	List.SelectionFilterIndex = List.filteredItems.Count - 1;  	return KeyActions.Ignore;  case Gdk.Key.Up:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (-1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (-1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Tab:  	//tab always completes current item even if selection is disabled  	if (!AutoSelect)  		AutoSelect = true;  	goto case Gdk.Key.Return;  case Gdk.Key.Return:  case Gdk.Key.ISO_Enter:  case Gdk.Key.Key_3270_Enter:  case Gdk.Key.KP_Enter:  	lastCommitCharEndoffset = CompletionWidget.CaretOffset;  	WasShiftPressed = (modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask;  	return KeyActions.Complete | KeyActions.Ignore | KeyActions.CloseWindow;  case Gdk.Key.Down:  	if ((modifier & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask) {  		if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/)  			AutoCompleteEmptyMatch = AutoSelect = true;  		if (!List.InCategoryMode) {  			List.InCategoryMode = true;  			return KeyActions.Ignore;  		}  		List.MoveToCategory (1);  		return KeyActions.Ignore;  	}  	if (SelectionEnabled && list.filteredItems.Count < 1)  		return KeyActions.CloseWindow | KeyActions.Process;  	if (!SelectionEnabled/*&& !CompletionWindowManager.ForceSuggestionMode*/) {  		AutoCompleteEmptyMatch = AutoSelect = true;  	}  	else {  		list.MoveCursor (1);  	}  	return KeyActions.Ignore;  case Gdk.Key.Page_Up:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' scrollbar.Vadjustment.Value - scrollbar.Vadjustment.PageSize);  	list.MoveCursor (-8);  	return KeyActions.Ignore;  case Gdk.Key.Page_Down:  	if ((modifier & ModifierType.ShiftMask) == ModifierType.ShiftMask)  		return KeyActions.Process;  	if (list.filteredItems.Count < 2)  		return KeyActions.CloseWindow | KeyActions.Process;  	scrollbar.Vadjustment.Value = Math.Max (0' Math.Min (scrollbar.Vadjustment.Upper - scrollbar.Vadjustment.PageSize' scrollbar.Vadjustment.Value + scrollbar.Vadjustment.PageSize));  	list.MoveCursor (8);  	return KeyActions.Ignore;  case Gdk.Key.Left:  	//if (curPos == 0) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos--;  	return KeyActions.Process;  case Gdk.Key.Right:  	//if (curPos == word.Length) return KeyActions.CloseWindow | KeyActions.Process;  	//curPos++;  	return KeyActions.Process;  case Gdk.Key.Caps_Lock:  case Gdk.Key.Num_Lock:  case Gdk.Key.Scroll_Lock:  	return KeyActions.Ignore;  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  case Gdk.Key.Alt_L:  case Gdk.Key.Alt_R:  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.ISO_Level3_Shift:  	// AltGr  	return KeyActions.Process;  }  
Missing Default,MonoDevelop.Ide.Desktop,PlatformService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Desktop\PlatformService.cs,PlatformService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	// initialize child nodes.  	mimeTypeNode.ChildNodes.GetEnumerator ();  	newList.Add (mimeTypeNode);  	break;  case ExtensionChange.Remove:  	newList.Remove (mimeTypeNode);  	break;  }  
Missing Default,MonoDevelop.Ide.Projects,PackageReferencePanel,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Projects\PackageReferencePanel.cs,SignalRefChange,The following switch statement is missing a default case: switch (refInfo.ReferenceType) {  case ReferenceType.Package:  	SystemAssembly systemAssembly = store.GetValue (iter' ColAssembly) as SystemAssembly;  	if ((refInfo.Reference == systemAssembly.FullName) && (refInfo.Package == systemAssembly.Package))  		found = true;  	break;  case ReferenceType.Project:  	if ((string)store.GetValue (iter' ColFullName) == refInfo.Reference)  		found = true;  	break;  case ReferenceType.Assembly:  	if ((string)store.GetValue (iter' ColFullName) == refInfo.Reference)  		found = true;  	break;  }  
Missing Default,MonoDevelop.Ide.Fonts,FontService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.Fonts\FontService.cs,FontService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	fontDescriptions.Add (codon);  	break;  case ExtensionChange.Remove:  	fontDescriptions.Remove (codon);  	if (loadedFonts.ContainsKey (codon.Name))  		loadedFonts.Remove (codon.Name);  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,TypeSystemService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	parsers.Add ((TypeSystemParserNode)args.ExtensionNode);  	break;  case ExtensionChange.Remove:  	parsers.Remove ((TypeSystemParserNode)args.ExtensionNode);  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,TypeSystemService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\TypeSystemService.cs,TypeSystemService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	outputTrackedProjects.Add (projectType);  	break;  case ExtensionChange.Remove:  	outputTrackedProjects.Remove (projectType);  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,AmbienceService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	ambiences [ambience.MimeType] = (Ambience)ambience.CreateInstance ();  	break;  case ExtensionChange.Remove:  	ambiences.Remove (ambience.MimeType);  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,BreakLines,The following switch statement is missing a default case: switch (ch) {  case '<':  	inTag = true;  	break;  case '>':  	inTag = false;  	break;  case '&':  	inAmp = true;  	break;  case ';':  	inAmp = false;  	break;  case '\n':  	lineLength = 0;  	break;  case '\r':  	lineLength = 0;  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,UnescapeText,The following switch statement is missing a default case: switch (entity) {  case "lt":  	sb.Append ('<');  	break;  case "gt":  	sb.Append ('>');  	break;  case "amp":  	sb.Append ('&');  	break;  case "apos":  	sb.Append ('\'');  	break;  case "quot":  	sb.Append ('"');  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,ParseBody,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.EndElement:  	if (xml.Name == endTagName)  		goto end;  	break;  case XmlNodeType.Element:  	switch (xml.Name.ToLower ()) {  	case "para":  		result.AppendLine (ParseBody (member' xml' xml.Name' options));  		wasWhiteSpace = true;  		break;  	case "see":  		if (!wasWhiteSpace) {  			result.Append (' ');  			wasWhiteSpace = true;  		}  		result.Append ("<i>");  		string name = (GetCref (ctx' xml ["cref"]) + xml ["langword"]).Trim ();  		if (options.Ambience != null)  			name = options.Ambience.GetIntrinsicTypeName (name);  		result.Append (EscapeText (name));  		result.Append ("</i>");  		wasWhiteSpace = false;  		appendSpace = true;  		break;  	case "paramref":  		if (!wasWhiteSpace) {  			result.Append (' ');  			wasWhiteSpace = true;  		}  		result.Append ("<i>");  		result.Append (EscapeText (xml ["name"].Trim ()));  		result.Append ("</i>");  		appendSpace = true;  		wasWhiteSpace = false;  		break;  	}  	break;  case XmlNodeType.Text:  	if (IsEmptyDocumentation (xml.Value))  		break;  	foreach (char ch in xml.Value) {  		if (!Char.IsWhiteSpace (ch) && appendSpace) {  			result.Append (' ');  			appendSpace = false;  		}  		if (Char.IsWhiteSpace (ch) || ch == '\n' || ch == '\r') {  			if (!wasWhiteSpace) {  				result.Append (' ');  				wasWhiteSpace = true;  			}  			continue;  		}  		wasWhiteSpace = false;  		result.Append (EscapeText (ch.ToString ()));  	}  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,ParseBody,The following switch statement is missing a default case: switch (xml.Name.ToLower ()) {  case "para":  	result.AppendLine (ParseBody (member' xml' xml.Name' options));  	wasWhiteSpace = true;  	break;  case "see":  	if (!wasWhiteSpace) {  		result.Append (' ');  		wasWhiteSpace = true;  	}  	result.Append ("<i>");  	string name = (GetCref (ctx' xml ["cref"]) + xml ["langword"]).Trim ();  	if (options.Ambience != null)  		name = options.Ambience.GetIntrinsicTypeName (name);  	result.Append (EscapeText (name));  	result.Append ("</i>");  	wasWhiteSpace = false;  	appendSpace = true;  	break;  case "paramref":  	if (!wasWhiteSpace) {  		result.Append (' ');  		wasWhiteSpace = true;  	}  	result.Append ("<i>");  	result.Append (EscapeText (xml ["name"].Trim ()));  	result.Append ("</i>");  	appendSpace = true;  	wasWhiteSpace = false;  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,AmbienceService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\AmbienceService.cs,GetDocumentationMarkup,The following switch statement is missing a default case: switch (xml.Name.ToLower ()) {  case "para":  	ret.Append (options.FormatBody (ParseBody (member' xml' xml.Name' options)));  	if (summaryEnd < 0)  		summaryEnd = ret.Length;  	break;  case "summary":  	var summary = options.FormatBody (ParseBody (member' xml' xml.Name' options));  	if (!IsEmptyDocumentation (summary)) {  		//							ret.AppendLine (GetHeading ("Summary:"' options));  		ret.Append (summary);  		if (summaryEnd < 0)  			summaryEnd = ret.Length;  	}  	break;  case "remarks":  	if (string.IsNullOrEmpty (options.HighlightParameter)) {  		ret.AppendLine (options.FormatHeading (GettextCatalog.GetString ("Remarks:")));  		ret.Append (options.FormatBody (ParseBody (member' xml' xml.Name' options)));  		if (summaryEnd < 0)  			summaryEnd = ret.Length;  	}  	else {  		options.FormatBody (ParseBody (member' xml' xml.Name' options));  	}  	break;  // skip <example>-nodes  case "example":  	xml.Skip ();  	xml.Skip ();  	break;  case "exception":  	exceptionCount++;  	if (options.SmallText)  		exceptions.Append ("<small>");  	exceptions.Append ("<b>");  	exceptions.Append (EscapeText (GetCref (member.Compilation.TypeResolveContext' xml ["cref"])));  	exceptions.Append (": ");  	exceptions.Append ("</b>");  	if (options.SmallText)  		exceptions.Append ("</small>");  	exceptions.AppendLine (options.FormatBody (ParseBody (member' xml' xml.Name' options)));  	break;  case "returns":  	if (string.IsNullOrEmpty (options.HighlightParameter)) {  		ret.AppendLine (options.FormatHeading (GettextCatalog.GetString ("Returns:")));  		ret.Append (options.FormatBody (ParseBody (member' xml' xml.Name' options)));  	}  	else {  		options.FormatBody (ParseBody (member' xml' xml.Name' options));  	}  	break;  case "param":  	string paramName = xml.GetAttribute ("name") != null ? xml ["name"].Trim () : "";  	var body = options.FormatBody (ParseBody (member' xml' xml.Name' options));  	if (!IsEmptyDocumentation (body)) {  		paramCount++;  		parameterBuilder.Append ("<i>");  		if (options.HighlightParameter == paramName)  			parameterBuilder.Append ("<b>");  		if (options.SmallText)  			parameterBuilder.Append ("<small>");  		parameterBuilder.Append (EscapeText (paramName));  		if (options.SmallText)  			parameterBuilder.Append ("</small>");  		if (options.HighlightParameter == paramName)  			parameterBuilder.Append ("</b>");  		parameterBuilder.Append (":</i> ");  		parameterBuilder.Append (body);  	}  	break;  case "value":  	ret.AppendLine (options.FormatHeading (GettextCatalog.GetString ("Value:")));  	ret.AppendLine (options.FormatBody (ParseBody (member' xml' xml.Name' options)));  	break;  case "seealso":  	if (string.IsNullOrEmpty (options.HighlightParameter)) {  		ret.Append (options.FormatHeading (GettextCatalog.GetString ("See also:")));  		ret.Append (" " + EscapeText (GetCref (member.Compilation.TypeResolveContext' xml ["cref"]) + xml ["langword"]));  	}  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,NetAmbience,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\NetAmbience.cs,AppendModifiers,The following switch statement is missing a default case: switch (entity.Accessibility) {  case Accessibility.Internal:  	result.Append (settings.EmitModifiers ("Internal"));  	break;  case Accessibility.ProtectedAndInternal:  	result.Append (settings.EmitModifiers ("Protected And Internal"));  	break;  case Accessibility.ProtectedOrInternal:  	result.Append (settings.EmitModifiers ("Protected Or Internal"));  	break;  case Accessibility.Protected:  	result.Append (settings.EmitModifiers ("Protected"));  	break;  case Accessibility.Private:  	result.Append (settings.EmitModifiers ("Private"));  	break;  case Accessibility.Public:  	result.Append (settings.EmitModifiers ("Public"));  	break;  }  
Missing Default,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following switch statement is missing a default case: switch (entity.SymbolKind) {  case SymbolKind.TypeDefinition:  	return GetStockIcon ((IType)entity);  case SymbolKind.Field:  	if (showAccessibility)  		return fieldIconTable [(int)entity.Accessibility];  	else  		return fieldIconTable [0];  case SymbolKind.Method:  case SymbolKind.Constructor:  case SymbolKind.Destructor:  case SymbolKind.Operator:  	if (showAccessibility) {  		if (((IMethod)entity).IsExtensionMethod)  			return extensionMethodIconTable [(int)entity.Accessibility];  		return methodIconTable [(int)entity.Accessibility];  	}  	else {  		if (((IMethod)entity).IsExtensionMethod)  			return extensionMethodIconTable [0];  		return methodIconTable [0];  	}  case SymbolKind.Property:  case SymbolKind.Indexer:  	if (showAccessibility)  		return propertyIconTable [(int)entity.Accessibility];  	else  		return propertyIconTable [0];  case SymbolKind.Event:  	if (showAccessibility)  		return eventIconTable [(int)entity.Accessibility];  	else  		return eventIconTable [0];  }  
Missing Default,MonoDevelop.Ide.TypeSystem,Stock,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\StockIcons.cs,GetStockIcon,The following switch statement is missing a default case: switch (entity.SymbolKind) {  case SymbolKind.TypeDefinition:  	return GetStockIcon ((IUnresolvedTypeDefinition)entity);  case SymbolKind.Field:  	if (showAccessibility)  		return fieldIconTable [(int)entity.Accessibility];  	else  		return fieldIconTable [0];  case SymbolKind.Method:  case SymbolKind.Constructor:  case SymbolKind.Destructor:  case SymbolKind.Operator:  	if (showAccessibility)  		return methodIconTable [(int)entity.Accessibility];  	else  		return methodIconTable [0];  case SymbolKind.Property:  case SymbolKind.Indexer:  	if (showAccessibility)  		return propertyIconTable [(int)entity.Accessibility];  	else  		return propertyIconTable [0];  case SymbolKind.Event:  	if (showAccessibility)  		return eventIconTable [(int)entity.Accessibility];  	else  		return eventIconTable [0];  }  
Missing Default,MonoDevelop.Ide.TypeSystem,CodeGenerationService,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerationService.cs,GetSuitableInsertionPoint,The following switch statement is missing a default case: switch (member.SymbolKind) {  case SymbolKind.Field:  	return GetNewFieldPosition (points' mainPart);  case SymbolKind.Method:  case SymbolKind.Constructor:  case SymbolKind.Destructor:  case SymbolKind.Operator:  	return GetNewMethodPosition (points' mainPart);  case SymbolKind.Event:  	return GetNewEventPosition (points' mainPart);  case SymbolKind.Property:  	return GetNewPropertyPosition (points' mainPart);  }  
Missing Default,MonoDevelop.Ide.TypeSystem,CodeGenerator,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Ide.TypeSystem\CodeGenerator.cs,CodeGenerator,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	AddGenerator (node);  	break;  case ExtensionChange.Remove:  	RemoveGenerator (node);  	break;  }  
Missing Default,MonoDevelop.Components.MainToolbar,RoundButton,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\RoundButton.cs,GetIcon,The following switch statement is missing a default case: switch (icon) {  case OperationIcon.Stop:  	return State == StateType.Insensitive ? iconStopDisabled : iconStopNormal;  case OperationIcon.Run:  	return State == StateType.Insensitive ? iconRunDisabled : iconRunNormal;  case OperationIcon.Build:  	return State == StateType.Insensitive ? iconBuildDisabled : iconBuildNormal;  }  
Missing Default,MonoDevelop.Components.MainToolbar,SearchPopupWindow,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupWindow.cs,ProcessKey,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Up:  	if (state.HasFlag (Gdk.ModifierType.Mod2Mask))  		goto case Gdk.Key.Page_Up;  	if (state.HasFlag (Gdk.ModifierType.ControlMask))  		goto case Gdk.Key.Home;  	SelectItemUp ();  	return true;  case Gdk.Key.Down:  	if (state.HasFlag (Gdk.ModifierType.Mod2Mask))  		goto case Gdk.Key.Page_Down;  	if (state.HasFlag (Gdk.ModifierType.ControlMask))  		goto case Gdk.Key.End;  	SelectItemDown ();  	return true;  case Gdk.Key.KP_Page_Down:  case Gdk.Key.Page_Down:  	SelectNextCategory ();  	return true;  case Gdk.Key.KP_Page_Up:  case Gdk.Key.Page_Up:  	SelectPrevCategory ();  	return true;  case Gdk.Key.Home:  	SelectFirstCategory ();  	return true;  case Gdk.Key.End:  	SelectLastCatgory ();  	return true;  case Gdk.Key.Return:  	OnItemActivated (EventArgs.Empty);  	return true;  }  
Missing Default,MonoDevelop.Components.MainToolbar,SearchPopupSearchPattern,C:\repos\joncloud_monodevelop\main\src\core\MonoDevelop.Ide\MonoDevelop.Components.MainToolbar\SearchPopupSearchPattern.cs,ParsePattern,The following switch statement is missing a default case: switch (foundTags) {  case 1:  	pattern = parts [0];  	break;  case 2:  	if (!string.IsNullOrEmpty (parts [1]) && TryParseLineColumn (parts [1]' ref lineNumber' ref column)) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  	}  	else {  		tag = parts [0];  		pattern = parts [1];  	}  	break;  case 3:  	if (IsNumber (parts [1]) && IsNumber (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'" + parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else if (IsNumber (parts [1]) && string.IsNullOrEmpty (parts [2])) {  		if (!string.IsNullOrEmpty (parts [0]))  			pattern = parts [0];  		if (!TryParseLineColumn (parts [1] + "'0"' ref lineNumber' ref column))  			lineNumber = 0;  	}  	else {  		tag = parts [0];  		pattern = parts [1] ?? "";  		if (!TryParseLineColumn (parts [2]' ref lineNumber' ref column))  			lineNumber = 0;  	}  	break;  case 4:  	tag = parts [0];  	pattern = parts [1];  	if (!TryParseLineColumn (parts [2] + "'" + parts [3]' ref lineNumber' ref column))  		lineNumber = 0;  	break;  }  
