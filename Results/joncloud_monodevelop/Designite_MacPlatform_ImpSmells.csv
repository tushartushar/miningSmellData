Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The method has 153 lines of code.
Long Method,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The method has 123 lines of code.
Long Method,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The method has 117 lines of code.
Long Method,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The method has 101 lines of code.
Long Method,MonoDevelop.MacIntegration.MacMenu,MDMenuItem,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenuItem.cs,GetFunctionKey,The method has 153 lines of code.
Complex Method,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,FillViewers,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,BeginLayout,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,Cyclomatic complexity of the method is 24
Complex Method,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,Cyclomatic complexity of the method is 22
Complex Method,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.MacInterop,LaunchServices,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,OpenApplication,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,GetSecAuthenticationType,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,GetSecProtocolType,Cyclomatic complexity of the method is 34
Complex Method,MonoDevelop.MacIntegration.MacMenu,MDMenu,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenu.cs,MDMenu,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.MacIntegration.MacMenu,MDMenuItem,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenuItem.cs,SetAccel,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.MacIntegration.MacMenu,MDMenuItem,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenuItem.cs,GetCleanCommandText,Cyclomatic complexity of the method is 29
Complex Method,MonoDevelop.MacIntegration.MacMenu,MDMenuItem,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenuItem.cs,GetFunctionKey,Cyclomatic complexity of the method is 71
Long Parameter List,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The method has 11 parameters.
Long Parameter List,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,StartConsoleProcess,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,GetFileFilter,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacIntegration,MacExternalConsoleProcess,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacExternalConsoleProcess.cs,MacExternalConsoleProcess,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleEvent,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvent.cs,AEGetNthPtr,The method has 8 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleEvent,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvent.cs,AEGetNthPtr,The method has 8 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleEvent,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvent.cs,AEGetNthPtr,The method has 8 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleScript,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleScript.cs,OSADoScript,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleScript,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleScript.cs,OSAExecute,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleScript,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleScript.cs,OSADisplay,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleScript,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleScript.cs,OSACompileExecute,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop,AppleScript,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleScript.cs,OSALoadExecute,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainCreate,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainAddInternetPassword,The method has 15 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainFindInternetPassword,The method has 15 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainAddGenericPassword,The method has 8 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainFindGenericPassword,The method has 8 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainItemCreateFromContent,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainItemCopyAttributesAndData,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,SecKeychainItemCopyContent,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The method has 9 parameters.
Long Parameter List,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,InstallEventHandler,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetEventParameter,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetEventParameter,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetEventParameter,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,CreateEvent,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEInstallCoercionHandler,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEInstallCoercionHandler,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetCoercionHandler,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AECoercePtr,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AECreateDescFromExternalPtr,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEPutPtr,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetNthPtr,The method has 8 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetNthDesc,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetArray,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEPutArray,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEPutKeyPtr,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetKeyPtr,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AECreateAppleEvent,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEPutParamPtr,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetParamPtr,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetAttributePtr,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEPutAttributePtr,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEInstallEventHandler,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetEventHandler,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AERemoteProcessResolverScheduleWithRunLoop,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEBuildAppleEvent,The method has 11 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEStreamWriteKeyDesc,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEStreamCreateEvent,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AESetObjectCallbacks,The method has 7 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEInstallObjectAccessor,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AEGetObjectAccessor,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,AECallObjectAccessor,The method has 6 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,CreateCompDescriptor,The method has 5 parameters.
Long Parameter List,MonoDevelop.MacInterop.AppleEvents,Native,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvents\Native.cs,CreateObjSpecifier,The method has 6 parameters.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,CheckGtkVersion,The length of the statement  "		if (downloadButton == MessageService.GenericAlert (Stock.Error' GettextCatalog.GetString ("Some dependencies need to be updated")' GettextCatalog.GetString ("{0} requires a newer version of GTK+' which is included with the Mono Framework. Please " + "download and install the latest stable Mono Framework package and restart {0}."' BrandingService.ApplicationName)' new AlertButton ("Quit"' null)' downloadButton)) { " is 416.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,InitApp,The length of the statement  "	commandManager.GetCommand (HelpCommands.About).Text = GettextCatalog.GetString ("About {0}"' BrandingService.ApplicationName); " is 126.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,InitApp,The length of the statement  "	commandManager.GetCommand (MacIntegrationCommands.HideWindow).Text = GettextCatalog.GetString ("Hide {0}"' BrandingService.ApplicationName); " is 140.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The length of the statement  "				IdeApp.OpenFiles (e.Documents.Select (doc => new FileOpenInformation (doc.Key' doc.Value' 1' OpenDocumentOptions.Default))); " is 124.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,StartConsoleProcess,The length of the statement  "	return new MacExternalConsoleProcess (command' arguments' workingDirectory' environmentVariables' title' pauseWhenFinished); " is 124.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,SetIsFullscreen,The length of the statement  "		MonoMac.ObjCRuntime.Messaging.void_objc_msgSend_IntPtr (nswin.Handle' MonoMac.ObjCRuntime.Selector.GetHandle ("toggleFullScreen:")' IntPtr.Zero); " is 145.
Long Statement,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,IsModalDialogRunning,The length of the statement  "	return toplevels.Any (t => t.Key.IsVisible && (t.Value == null || t.Value.Modal) && !t.Key.DebugDescription.StartsWith ("<NSStatusBarWindow")); " is 143.
Long Statement,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The length of the statement  "			data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null; " is 124.
Long Statement,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,FillViewers,The length of the statement  "	if (IdeApp.Services.ProjectService.IsWorkspaceItemFile (filename) || IdeApp.Services.ProjectService.IsSolutionItemFile (filename)) { " is 132.
Long Statement,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The length of the statement  "	var frame = new RectangleF (origin.X + PadLeft' origin.Y + PadBottom' allocation.Width - PadLeft - PadRight' allocation.Height - PadTop - PadBottom); " is 149.
Long Statement,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The length of the statement  "			var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host); " is 189.
Long Statement,MonoDevelop.MacInterop,AppleScript,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleScript.cs,Run,The length of the statement  "	var component = ComponentManager.OpenDefaultComponent ((OSType)(int)OsaType.OsaComponent' (OSType)(int)OsaType.AppleScript); " is 124.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The length of the statement  "		var result = SecKeychainItemCreateFromContent (SecItemClass.InternetPassword' &attrList' (uint)passwd.Length' passwd' CurrentKeychain' IntPtr.Zero' ref item); " is 158.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The length of the statement  "	var result = SecKeychainFindInternetPassword (CurrentKeychain' (uint)host.Length' host' 0' null' (uint)user.Length' user' (uint)path.Length' path' (ushort)port' protocol' auth' out passwordLength' out passwordData' ref item); " is 225.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The length of the statement  "	var result = SecKeychainFindInternetPassword (CurrentKeychain' (uint)host.Length' host' 0' null' (uint)user.Length' user' (uint)path.Length' path' (ushort)port' protocol' auth' out passwordLength' out passwordData' ref item); " is 225.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,GetUsernameFromKeychainItemRef,The length of the statement  "		OSStatus status = SecKeychainItemCopyAttributesAndData (itemRef' &attributeInfo' ref itemClass' &attributeList' ref length' ref outData); " is 137.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,FindInternetUserNameAndPassword,The length of the statement  "	var result = SecKeychainFindInternetPassword (CurrentKeychain' (uint)host.Length' host' 0' null' 0' null' (uint)path.Length' path' (ushort)uri.Port' protocol' auth' out passwordLength' out passwordData' ref item); " is 213.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,FindInternetPassword,The length of the statement  "	var result = SecKeychainFindInternetPassword (CurrentKeychain' (uint)host.Length' host' 0' null' (uint)user.Length' user' (uint)path.Length' path' (ushort)uri.Port' protocol' auth' out passwordLength' out passwordData' ref item); " is 229.
Long Statement,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,FindInternetPassword,The length of the statement  "		result = SecKeychainFindInternetPassword (CurrentKeychain' (uint)host.Length' host' 0' null' (uint)user.Length' user' (uint)path.Length' path' (ushort)uri.Port' 0' auth' out passwordLength' out passwordData' ref item); " is 218.
Long Statement,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetFileListFromEventRef,The length of the statement  "	AEDesc list = GetEventParameter<AEDesc> (eventRef' CarbonEventParameterName.DirectObject' CarbonEventParameterType.AEList); " is 123.
Long Statement,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetFileListFromEventRef,The length of the statement  "			SelectionRange range = GetEventParameter<SelectionRange> (eventRef' CarbonEventParameterName.AEPosition' CarbonEventParameterType.Char); " is 136.
Long Statement,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetFileListFromEventRef,The length of the statement  "		var arr = AppleEvent.GetListFromAEDesc<string' FSRef> (ref list' CoreFoundation.FSRefToString' (OSType)(int)CarbonEventParameterType.FSRef); " is 140.
Long Statement,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetUrlListFromEventRef,The length of the statement  "	AEDesc list = GetEventParameter<AEDesc> (eventRef' CarbonEventParameterName.DirectObject' CarbonEventParameterType.AEList); " is 123.
Long Statement,MonoDevelop.MacIntegration.MacMenu,MDMenu,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenu.cs,FlashMenu,The length of the statement  "	var f35Event = NSEvent.KeyEvent (NSEventType.KeyDown' System.Drawing.PointF.Empty' NSEventModifierMask.CommandKeyMask' 0' 0' NSGraphicsContext.CurrentContext' f35' f35' false' 0); " is 179.
Complex Conditional,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GetPixbufFromNSImageRep,The conditional expression  "(pw == width && ph <= height) || (ph == height && pw <= width)"  is complex.
Empty Catch Block,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,SetGlobalMenu,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MacIntegration,MacExternalConsoleProcess,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacExternalConsoleProcess.cs,CloseTerminalWindow,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,SetProcessName,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,GetFileListFromEventRef,The method has an empty catch block.
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,MacPlatformService,The following statement contains a magic number: if (IntPtr.Size == 8)  	throw new Exception ("Mac integration is not yet 64-bit safe");  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,MacPlatformService,The following statement contains a magic number: CheckGtkVersion (2' 24' 14);  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,MacPlatformService,The following statement contains a magic number: CheckGtkVersion (2' 24' 14);  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,MacPlatformService,The following statement contains a magic number: CheckGtkVersion (2' 24' 14);  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,The following statement contains a magic number: try {  	using (var file = File.OpenRead ("/etc/apache2/mime.types")) {  		using (var reader = new StreamReader (file)) {  			var mime = new Regex ("([a-zA-Z]+/[a-zA-z0-9+-_.]+)\t+([a-zA-Z]+)"' RegexOptions.Compiled);  			string line;  			while ((line = reader.ReadLine ()) != null) {  				Match m = mime.Match (line);  				if (m.Success)  					map ["." + m.Groups [2].Captures [0].Value] = m.Groups [1].Captures [0].Value;  			}  		}  	}  }  catch (Exception ex) {  	LoggingService.LogError ("Could not load Apache mime database"' ex);  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,The following statement contains a magic number: using (var file = File.OpenRead ("/etc/apache2/mime.types")) {  	using (var reader = new StreamReader (file)) {  		var mime = new Regex ("([a-zA-Z]+/[a-zA-z0-9+-_.]+)\t+([a-zA-Z]+)"' RegexOptions.Compiled);  		string line;  		while ((line = reader.ReadLine ()) != null) {  			Match m = mime.Match (line);  			if (m.Success)  				map ["." + m.Groups [2].Captures [0].Value] = m.Groups [1].Captures [0].Value;  		}  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,The following statement contains a magic number: using (var reader = new StreamReader (file)) {  	var mime = new Regex ("([a-zA-Z]+/[a-zA-z0-9+-_.]+)\t+([a-zA-Z]+)"' RegexOptions.Compiled);  	string line;  	while ((line = reader.ReadLine ()) != null) {  		Match m = mime.Match (line);  		if (m.Success)  			map ["." + m.Groups [2].Captures [0].Value] = m.Groups [1].Captures [0].Value;  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,The following statement contains a magic number: while ((line = reader.ReadLine ()) != null) {  	Match m = mime.Match (line);  	if (m.Success)  		map ["." + m.Groups [2].Captures [0].Value] = m.Groups [1].Captures [0].Value;  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,The following statement contains a magic number: if (m.Success)  	map ["." + m.Groups [2].Captures [0].Value] = m.Groups [1].Captures [0].Value;  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,LoadMimeMapAsync,The following statement contains a magic number: map ["." + m.Groups [2].Captures [0].Value] = m.Groups [1].Captures [0].Value;  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The following statement contains a magic number: try {  	ApplicationEvents.Quit += delegate (object sender' ApplicationQuitEventArgs e) {  		// We can only attempt to quit safely if all windows are GTK windows and not modal  		if (!IsModalDialogRunning ()) {  			e.UserCancelled = !IdeApp.Exit ();  			e.Handled = true;  			return;  		}  		// When a modal dialog is running' things are much harder. We can't just shut down MD behind the  		// dialog' and aborting the dialog may not be appropriate.  		//  		// There's NSTerminateLater but I'm not sure how to access it from carbon' maybe  		// we need to swizzle methods into the app's NSApplicationDelegate.  		// Also' it stops the main CFRunLoop and enters a special runloop mode' not sure how that would  		// interact with GTK+.  		// For now' just bounce  		NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  		// and abort the quit.  		e.UserCancelled = true;  		e.Handled = true;  	};  	ApplicationEvents.Reopen += delegate (object sender' ApplicationEventArgs e) {  		if (IdeApp.Workbench != null && IdeApp.Workbench.RootWindow != null) {  			IdeApp.Workbench.RootWindow.Deiconify ();  			IdeApp.Workbench.RootWindow.Visible = true;  			IdeApp.Workbench.RootWindow.Present ();  			e.Handled = true;  		}  	};  	ApplicationEvents.OpenDocuments += delegate (object sender' ApplicationDocumentEventArgs e) {  		//OpenFiles may pump the mainloop' but can't do that from an AppleEvent' so use a brief timeout  		GLib.Timeout.Add (10' delegate {  			IdeApp.OpenFiles (e.Documents.Select (doc => new FileOpenInformation (doc.Key' doc.Value' 1' OpenDocumentOptions.Default)));  			return false;  		});  		e.Handled = true;  	};  	ApplicationEvents.OpenUrls += delegate (object sender' ApplicationUrlEventArgs e) {  		GLib.Timeout.Add (10' delegate {  			// Open files via the monodevelop:// URI scheme' compatible with the  			// common TextMate scheme: http://blog.macromates.com/2007/the-textmate-url-scheme/  			IdeApp.OpenFiles (e.Urls.Select (url =>  {  				try {  					var uri = new Uri (url);  					if (uri.Host != "open")  						return null;  					var qs = System.Web.HttpUtility.ParseQueryString (uri.Query);  					var fileUri = new Uri (qs ["file"]);  					int line' column;  					if (!Int32.TryParse (qs ["line"]' out line))  						line = 1;  					if (!Int32.TryParse (qs ["column"]' out column))  						column = 1;  					return new FileOpenInformation (fileUri.AbsolutePath' line' column' OpenDocumentOptions.Default);  				}  				catch (Exception ex) {  					LoggingService.LogError ("Invalid TextMate URI: " + url' ex);  					return null;  				}  			}).Where (foi => foi != null));  			return false;  		});  	};  	//if not running inside an app bundle (at dev time)' need to do some additional setup  	if (NSBundle.MainBundle.InfoDictionary ["CFBundleIdentifier"] == null) {  		SetupWithoutBundle ();  	}  }  catch (Exception ex) {  	LoggingService.LogError ("Could not install app event handlers"' ex);  	setupFail = true;  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The following statement contains a magic number: try {  	ApplicationEvents.Quit += delegate (object sender' ApplicationQuitEventArgs e) {  		// We can only attempt to quit safely if all windows are GTK windows and not modal  		if (!IsModalDialogRunning ()) {  			e.UserCancelled = !IdeApp.Exit ();  			e.Handled = true;  			return;  		}  		// When a modal dialog is running' things are much harder. We can't just shut down MD behind the  		// dialog' and aborting the dialog may not be appropriate.  		//  		// There's NSTerminateLater but I'm not sure how to access it from carbon' maybe  		// we need to swizzle methods into the app's NSApplicationDelegate.  		// Also' it stops the main CFRunLoop and enters a special runloop mode' not sure how that would  		// interact with GTK+.  		// For now' just bounce  		NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  		// and abort the quit.  		e.UserCancelled = true;  		e.Handled = true;  	};  	ApplicationEvents.Reopen += delegate (object sender' ApplicationEventArgs e) {  		if (IdeApp.Workbench != null && IdeApp.Workbench.RootWindow != null) {  			IdeApp.Workbench.RootWindow.Deiconify ();  			IdeApp.Workbench.RootWindow.Visible = true;  			IdeApp.Workbench.RootWindow.Present ();  			e.Handled = true;  		}  	};  	ApplicationEvents.OpenDocuments += delegate (object sender' ApplicationDocumentEventArgs e) {  		//OpenFiles may pump the mainloop' but can't do that from an AppleEvent' so use a brief timeout  		GLib.Timeout.Add (10' delegate {  			IdeApp.OpenFiles (e.Documents.Select (doc => new FileOpenInformation (doc.Key' doc.Value' 1' OpenDocumentOptions.Default)));  			return false;  		});  		e.Handled = true;  	};  	ApplicationEvents.OpenUrls += delegate (object sender' ApplicationUrlEventArgs e) {  		GLib.Timeout.Add (10' delegate {  			// Open files via the monodevelop:// URI scheme' compatible with the  			// common TextMate scheme: http://blog.macromates.com/2007/the-textmate-url-scheme/  			IdeApp.OpenFiles (e.Urls.Select (url =>  {  				try {  					var uri = new Uri (url);  					if (uri.Host != "open")  						return null;  					var qs = System.Web.HttpUtility.ParseQueryString (uri.Query);  					var fileUri = new Uri (qs ["file"]);  					int line' column;  					if (!Int32.TryParse (qs ["line"]' out line))  						line = 1;  					if (!Int32.TryParse (qs ["column"]' out column))  						column = 1;  					return new FileOpenInformation (fileUri.AbsolutePath' line' column' OpenDocumentOptions.Default);  				}  				catch (Exception ex) {  					LoggingService.LogError ("Invalid TextMate URI: " + url' ex);  					return null;  				}  			}).Where (foi => foi != null));  			return false;  		});  	};  	//if not running inside an app bundle (at dev time)' need to do some additional setup  	if (NSBundle.MainBundle.InfoDictionary ["CFBundleIdentifier"] == null) {  		SetupWithoutBundle ();  	}  }  catch (Exception ex) {  	LoggingService.LogError ("Could not install app event handlers"' ex);  	setupFail = true;  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The following statement contains a magic number: ApplicationEvents.OpenDocuments += delegate (object sender' ApplicationDocumentEventArgs e) {  	//OpenFiles may pump the mainloop' but can't do that from an AppleEvent' so use a brief timeout  	GLib.Timeout.Add (10' delegate {  		IdeApp.OpenFiles (e.Documents.Select (doc => new FileOpenInformation (doc.Key' doc.Value' 1' OpenDocumentOptions.Default)));  		return false;  	});  	e.Handled = true;  };  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	IdeApp.OpenFiles (e.Documents.Select (doc => new FileOpenInformation (doc.Key' doc.Value' 1' OpenDocumentOptions.Default)));  	return false;  });  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The following statement contains a magic number: ApplicationEvents.OpenUrls += delegate (object sender' ApplicationUrlEventArgs e) {  	GLib.Timeout.Add (10' delegate {  		// Open files via the monodevelop:// URI scheme' compatible with the  		// common TextMate scheme: http://blog.macromates.com/2007/the-textmate-url-scheme/  		IdeApp.OpenFiles (e.Urls.Select (url =>  {  			try {  				var uri = new Uri (url);  				if (uri.Host != "open")  					return null;  				var qs = System.Web.HttpUtility.ParseQueryString (uri.Query);  				var fileUri = new Uri (qs ["file"]);  				int line' column;  				if (!Int32.TryParse (qs ["line"]' out line))  					line = 1;  				if (!Int32.TryParse (qs ["column"]' out column))  					column = 1;  				return new FileOpenInformation (fileUri.AbsolutePath' line' column' OpenDocumentOptions.Default);  			}  			catch (Exception ex) {  				LoggingService.LogError ("Invalid TextMate URI: " + url' ex);  				return null;  			}  		}).Where (foi => foi != null));  		return false;  	});  };  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,GlobalSetup,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	// Open files via the monodevelop:// URI scheme' compatible with the  	// common TextMate scheme: http://blog.macromates.com/2007/the-textmate-url-scheme/  	IdeApp.OpenFiles (e.Urls.Select (url =>  {  		try {  			var uri = new Uri (url);  			if (uri.Host != "open")  				return null;  			var qs = System.Web.HttpUtility.ParseQueryString (uri.Query);  			var fileUri = new Uri (qs ["file"]);  			int line' column;  			if (!Int32.TryParse (qs ["line"]' out line))  				line = 1;  			if (!Int32.TryParse (qs ["column"]' out column))  				column = 1;  			return new FileOpenInformation (fileUri.AbsolutePath' line' column' OpenDocumentOptions.Default);  		}  		catch (Exception ex) {  			LoggingService.LogError ("Invalid TextMate URI: " + url' ex);  			return null;  		}  	}).Where (foi => foi != null));  	return false;  });  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,OnGetPixbufForFile,The following statement contains a magic number: if (!Gtk.Icon.SizeLookup (Gtk.IconSize.Menu' out w' out h)) {  	w = h = 22;  }  
Magic Number,MonoDevelop.MacIntegration,MacPlatformService,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacPlatform.cs,OnGetPixbufForFile,The following statement contains a magic number: w = h = 22;  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: using (var panel = new NSOpenPanel () {  	CanChooseDirectories = false'  	CanChooseFiles = true'  }) {  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	var popup = new NSPopUpButton (new RectangleF (0' 0' 200' 28)' false);  	var dropdownBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			new MDLabel (GettextCatalog.GetString ("Override build action:"))'  			true  		}'  		{  			new MDAlignment (popup' true) {  				MinWidth = 200  			}  		}  	};  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		dropdownBox.Layout ();  		var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  			dropdownBox.View'  			filterPopup'  		};  		box.Layout ();  		panel.AccessoryView = box.View;  		box.Layout (box.View.Superview.Frame.Size);  	}  	else {  		dropdownBox.Layout ();  		panel.AccessoryView = dropdownBox.View;  	}  	popup.AddItem (GettextCatalog.GetString ("(Default)"));  	popup.Menu.AddItem (NSMenuItem.SeparatorItem);  	foreach (var b in data.BuildActions) {  		if (b == "--")  			popup.Menu.AddItem (NSMenuItem.SeparatorItem);  		else  			popup.AddItem (b);  	}  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	var idx = popup.IndexOfSelectedItem - 2;  	if (idx >= 0)  		data.OverrideAction = data.BuildActions [idx];  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  	return true;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: if (filterPopup != null) {  	dropdownBox.Layout ();  	var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  		dropdownBox.View'  		filterPopup'  	};  	box.Layout ();  	panel.AccessoryView = box.View;  	box.Layout (box.View.Superview.Frame.Size);  }  else {  	dropdownBox.Layout ();  	panel.AccessoryView = dropdownBox.View;  }  
Magic Number,MonoDevelop.MacIntegration,MacAddFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAddFileDialogHandler.cs,Run,The following statement contains a magic number: if (filterPopup != null) {  	dropdownBox.Layout ();  	var box = new MDBox (LayoutDirection.Vertical' 2' 2) {  		dropdownBox.View'  		filterPopup'  	};  	box.Layout ();  	panel.AccessoryView = box.View;  	box.Layout (box.View.Superview.Frame.Size);  }  else {  	dropdownBox.Layout ();  	panel.AccessoryView = dropdownBox.View;  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: try {  	bool directoryMode = data.Action != Gtk.FileChooserAction.Open && data.Action != Gtk.FileChooserAction.Save;  	if (data.Action == Gtk.FileChooserAction.Save) {  		panel = new NSSavePanel ();  	}  	else {  		panel = new NSOpenPanel () {  			CanChooseDirectories = directoryMode'  			CanChooseFiles = !directoryMode'  		};  	}  	MacSelectFileDialogHandler.SetCommonPanelProperties (data' panel);  	SelectEncodingPopUpButton encodingSelector = null;  	NSPopUpButton viewerSelector = null;  	NSButton closeSolutionButton = null;  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	List<FileViewer> currentViewers = null;  	List<MDAlignment> labels = new List<MDAlignment> ();  	if (!directoryMode) {  		var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  		if (filterPopup != null) {  			var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  			var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					filterLabel  				}'  				{  					new MDAlignment (filterPopup' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (filterLabel);  			box.Add (filterBox);  		}  		if (data.ShowEncodingSelector) {  			encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  			encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  			var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  			var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					encodingLabel  				}'  				{  					new MDAlignment (encodingSelector' true) {  						MinWidth = 200  					}  				}  			};  			labels.Add (encodingLabel);  			box.Add (encodingBox);  		}  		if (data.ShowViewerSelector && panel is NSOpenPanel) {  			currentViewers = new List<FileViewer> ();  			viewerSelector = new NSPopUpButton () {  				Enabled = false'  			};  			if (encodingSelector != null) {  				viewerSelector.Activated += delegate {  					var idx = viewerSelector.IndexOfSelectedItem;  					encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  				};  			}  			var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  			var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  				{  					viewSelLabel'  					true  				}'  				{  					new MDAlignment (viewerSelector' true) {  						MinWidth = 200  					}  				}  			};  			if (IdeApp.Workspace.IsOpen) {  				closeSolutionButton = new NSButton () {  					Title = GettextCatalog.GetString ("Close current workspace")'  					Hidden = true'  					State = NSCellStateValue.On'  				};  				closeSolutionButton.SetButtonType (NSButtonType.Switch);  				closeSolutionButton.SizeToFit ();  				viewSelBox.Add (closeSolutionButton' true);  			}  			box.Add (viewSelBox);  		}  	}  	if (labels.Count > 0) {  		float w = labels.Max (l => l.MinWidth);  		foreach (var l in labels) {  			l.MinWidth = w;  			l.XAlign = LayoutAlign.Begin;  		}  	}  	if (box.Count > 0) {  		box.Layout ();  		panel.AccessoryView = box.View;  	}  	panel.SelectionDidChange += delegate (object sender' EventArgs e) {  		var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  		bool slnViewerSelected = false;  		if (viewerSelector != null) {  			FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  			if (currentViewers.Count == 0 || currentViewers [0] != null) {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = true;  				slnViewerSelected = false;  			}  			else {  				if (closeSolutionButton != null)  					closeSolutionButton.Hidden = false;  				slnViewerSelected = true;  			}  			box.Layout ();  			//re-center the accessory view in its parent' Cocoa does this for us initially and after  			//resizing the window' but we need to do it again after altering its layout  			var superFrame = box.View.Superview.Frame;  			var frame = box.View.Frame;  			//not sure why it's ceiling' but this matches the Cocoa layout  			frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  			frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  			box.View.Frame = frame;  		}  		if (encodingSelector != null)  			encodingSelector.Enabled = !slnViewerSelected;  	};  	if (panel.RunModal () == 0) {  		GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  		return false;  	}  	data.SelectedFiles = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	if (encodingSelector != null)  		data.Encoding = encodingSelector.SelectedEncodingId > 0 ? Encoding.GetEncoding (encodingSelector.SelectedEncodingId) : null;  	if (viewerSelector != null) {  		if (closeSolutionButton != null)  			data.CloseCurrentWorkspace = closeSolutionButton.State != NSCellStateValue.Off;  		data.SelectedViewer = currentViewers [viewerSelector.IndexOfSelectedItem];  	}  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  catch (Exception ex) {  	LoggingService.LogError ("Error in Open File dialog"' ex);  	MessageService.ShowException (ex);  }  finally {  	if (panel != null)  		panel.Dispose ();  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (!directoryMode) {  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  		var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				filterLabel  			}'  			{  				new MDAlignment (filterPopup' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (filterLabel);  		box.Add (filterBox);  	}  	if (data.ShowEncodingSelector) {  		encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  		encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  		var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  		var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				encodingLabel  			}'  			{  				new MDAlignment (encodingSelector' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (encodingLabel);  		box.Add (encodingBox);  	}  	if (data.ShowViewerSelector && panel is NSOpenPanel) {  		currentViewers = new List<FileViewer> ();  		viewerSelector = new NSPopUpButton () {  			Enabled = false'  		};  		if (encodingSelector != null) {  			viewerSelector.Activated += delegate {  				var idx = viewerSelector.IndexOfSelectedItem;  				encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  			};  		}  		var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  		var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				viewSelLabel'  				true  			}'  			{  				new MDAlignment (viewerSelector' true) {  					MinWidth = 200  				}  			}  		};  		if (IdeApp.Workspace.IsOpen) {  			closeSolutionButton = new NSButton () {  				Title = GettextCatalog.GetString ("Close current workspace")'  				Hidden = true'  				State = NSCellStateValue.On'  			};  			closeSolutionButton.SetButtonType (NSButtonType.Switch);  			closeSolutionButton.SizeToFit ();  			viewSelBox.Add (closeSolutionButton' true);  		}  		box.Add (viewSelBox);  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (!directoryMode) {  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  		var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				filterLabel  			}'  			{  				new MDAlignment (filterPopup' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (filterLabel);  		box.Add (filterBox);  	}  	if (data.ShowEncodingSelector) {  		encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  		encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  		var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  		var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				encodingLabel  			}'  			{  				new MDAlignment (encodingSelector' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (encodingLabel);  		box.Add (encodingBox);  	}  	if (data.ShowViewerSelector && panel is NSOpenPanel) {  		currentViewers = new List<FileViewer> ();  		viewerSelector = new NSPopUpButton () {  			Enabled = false'  		};  		if (encodingSelector != null) {  			viewerSelector.Activated += delegate {  				var idx = viewerSelector.IndexOfSelectedItem;  				encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  			};  		}  		var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  		var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				viewSelLabel'  				true  			}'  			{  				new MDAlignment (viewerSelector' true) {  					MinWidth = 200  				}  			}  		};  		if (IdeApp.Workspace.IsOpen) {  			closeSolutionButton = new NSButton () {  				Title = GettextCatalog.GetString ("Close current workspace")'  				Hidden = true'  				State = NSCellStateValue.On'  			};  			closeSolutionButton.SetButtonType (NSButtonType.Switch);  			closeSolutionButton.SizeToFit ();  			viewSelBox.Add (closeSolutionButton' true);  		}  		box.Add (viewSelBox);  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (!directoryMode) {  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  		var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				filterLabel  			}'  			{  				new MDAlignment (filterPopup' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (filterLabel);  		box.Add (filterBox);  	}  	if (data.ShowEncodingSelector) {  		encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  		encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  		var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  		var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				encodingLabel  			}'  			{  				new MDAlignment (encodingSelector' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (encodingLabel);  		box.Add (encodingBox);  	}  	if (data.ShowViewerSelector && panel is NSOpenPanel) {  		currentViewers = new List<FileViewer> ();  		viewerSelector = new NSPopUpButton () {  			Enabled = false'  		};  		if (encodingSelector != null) {  			viewerSelector.Activated += delegate {  				var idx = viewerSelector.IndexOfSelectedItem;  				encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  			};  		}  		var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  		var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				viewSelLabel'  				true  			}'  			{  				new MDAlignment (viewerSelector' true) {  					MinWidth = 200  				}  			}  		};  		if (IdeApp.Workspace.IsOpen) {  			closeSolutionButton = new NSButton () {  				Title = GettextCatalog.GetString ("Close current workspace")'  				Hidden = true'  				State = NSCellStateValue.On'  			};  			closeSolutionButton.SetButtonType (NSButtonType.Switch);  			closeSolutionButton.SizeToFit ();  			viewSelBox.Add (closeSolutionButton' true);  		}  		box.Add (viewSelBox);  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (!directoryMode) {  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  		var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				filterLabel  			}'  			{  				new MDAlignment (filterPopup' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (filterLabel);  		box.Add (filterBox);  	}  	if (data.ShowEncodingSelector) {  		encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  		encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  		var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  		var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				encodingLabel  			}'  			{  				new MDAlignment (encodingSelector' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (encodingLabel);  		box.Add (encodingBox);  	}  	if (data.ShowViewerSelector && panel is NSOpenPanel) {  		currentViewers = new List<FileViewer> ();  		viewerSelector = new NSPopUpButton () {  			Enabled = false'  		};  		if (encodingSelector != null) {  			viewerSelector.Activated += delegate {  				var idx = viewerSelector.IndexOfSelectedItem;  				encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  			};  		}  		var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  		var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				viewSelLabel'  				true  			}'  			{  				new MDAlignment (viewerSelector' true) {  					MinWidth = 200  				}  			}  		};  		if (IdeApp.Workspace.IsOpen) {  			closeSolutionButton = new NSButton () {  				Title = GettextCatalog.GetString ("Close current workspace")'  				Hidden = true'  				State = NSCellStateValue.On'  			};  			closeSolutionButton.SetButtonType (NSButtonType.Switch);  			closeSolutionButton.SizeToFit ();  			viewSelBox.Add (closeSolutionButton' true);  		}  		box.Add (viewSelBox);  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (!directoryMode) {  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  		var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				filterLabel  			}'  			{  				new MDAlignment (filterPopup' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (filterLabel);  		box.Add (filterBox);  	}  	if (data.ShowEncodingSelector) {  		encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  		encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  		var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  		var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				encodingLabel  			}'  			{  				new MDAlignment (encodingSelector' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (encodingLabel);  		box.Add (encodingBox);  	}  	if (data.ShowViewerSelector && panel is NSOpenPanel) {  		currentViewers = new List<FileViewer> ();  		viewerSelector = new NSPopUpButton () {  			Enabled = false'  		};  		if (encodingSelector != null) {  			viewerSelector.Activated += delegate {  				var idx = viewerSelector.IndexOfSelectedItem;  				encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  			};  		}  		var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  		var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				viewSelLabel'  				true  			}'  			{  				new MDAlignment (viewerSelector' true) {  					MinWidth = 200  				}  			}  		};  		if (IdeApp.Workspace.IsOpen) {  			closeSolutionButton = new NSButton () {  				Title = GettextCatalog.GetString ("Close current workspace")'  				Hidden = true'  				State = NSCellStateValue.On'  			};  			closeSolutionButton.SetButtonType (NSButtonType.Switch);  			closeSolutionButton.SizeToFit ();  			viewSelBox.Add (closeSolutionButton' true);  		}  		box.Add (viewSelBox);  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (!directoryMode) {  	var filterPopup = MacSelectFileDialogHandler.CreateFileFilterPopup (data' panel);  	if (filterPopup != null) {  		var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  		var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				filterLabel  			}'  			{  				new MDAlignment (filterPopup' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (filterLabel);  		box.Add (filterBox);  	}  	if (data.ShowEncodingSelector) {  		encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  		encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  		var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  		var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				encodingLabel  			}'  			{  				new MDAlignment (encodingSelector' true) {  					MinWidth = 200  				}  			}  		};  		labels.Add (encodingLabel);  		box.Add (encodingBox);  	}  	if (data.ShowViewerSelector && panel is NSOpenPanel) {  		currentViewers = new List<FileViewer> ();  		viewerSelector = new NSPopUpButton () {  			Enabled = false'  		};  		if (encodingSelector != null) {  			viewerSelector.Activated += delegate {  				var idx = viewerSelector.IndexOfSelectedItem;  				encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  			};  		}  		var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  		var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  			{  				viewSelLabel'  				true  			}'  			{  				new MDAlignment (viewerSelector' true) {  					MinWidth = 200  				}  			}  		};  		if (IdeApp.Workspace.IsOpen) {  			closeSolutionButton = new NSButton () {  				Title = GettextCatalog.GetString ("Close current workspace")'  				Hidden = true'  				State = NSCellStateValue.On'  			};  			closeSolutionButton.SetButtonType (NSButtonType.Switch);  			closeSolutionButton.SizeToFit ();  			viewSelBox.Add (closeSolutionButton' true);  		}  		box.Add (viewSelBox);  	}  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (filterPopup != null) {  	var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  	var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			filterLabel  		}'  		{  			new MDAlignment (filterPopup' true) {  				MinWidth = 200  			}  		}  	};  	labels.Add (filterLabel);  	box.Add (filterBox);  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (filterPopup != null) {  	var filterLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Show files:"))' true);  	var filterBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			filterLabel  		}'  		{  			new MDAlignment (filterPopup' true) {  				MinWidth = 200  			}  		}  	};  	labels.Add (filterLabel);  	box.Add (filterBox);  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (data.ShowEncodingSelector) {  	encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  	encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  	var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  	var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			encodingLabel  		}'  		{  			new MDAlignment (encodingSelector' true) {  				MinWidth = 200  			}  		}  	};  	labels.Add (encodingLabel);  	box.Add (encodingBox);  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (data.ShowEncodingSelector) {  	encodingSelector = new SelectEncodingPopUpButton (data.Action != Gtk.FileChooserAction.Save);  	encodingSelector.SelectedEncodingId = data.Encoding != null ? data.Encoding.CodePage : 0;  	var encodingLabel = new MDAlignment (new MDLabel (GettextCatalog.GetString ("Encoding:"))' true);  	var encodingBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			encodingLabel  		}'  		{  			new MDAlignment (encodingSelector' true) {  				MinWidth = 200  			}  		}  	};  	labels.Add (encodingLabel);  	box.Add (encodingBox);  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (data.ShowViewerSelector && panel is NSOpenPanel) {  	currentViewers = new List<FileViewer> ();  	viewerSelector = new NSPopUpButton () {  		Enabled = false'  	};  	if (encodingSelector != null) {  		viewerSelector.Activated += delegate {  			var idx = viewerSelector.IndexOfSelectedItem;  			encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  		};  	}  	var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  	var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			viewSelLabel'  			true  		}'  		{  			new MDAlignment (viewerSelector' true) {  				MinWidth = 200  			}  		}  	};  	if (IdeApp.Workspace.IsOpen) {  		closeSolutionButton = new NSButton () {  			Title = GettextCatalog.GetString ("Close current workspace")'  			Hidden = true'  			State = NSCellStateValue.On'  		};  		closeSolutionButton.SetButtonType (NSButtonType.Switch);  		closeSolutionButton.SizeToFit ();  		viewSelBox.Add (closeSolutionButton' true);  	}  	box.Add (viewSelBox);  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (data.ShowViewerSelector && panel is NSOpenPanel) {  	currentViewers = new List<FileViewer> ();  	viewerSelector = new NSPopUpButton () {  		Enabled = false'  	};  	if (encodingSelector != null) {  		viewerSelector.Activated += delegate {  			var idx = viewerSelector.IndexOfSelectedItem;  			encodingSelector.Enabled = !(idx == 0 && currentViewers [0] == null);  		};  	}  	var viewSelLabel = new MDLabel (GettextCatalog.GetString ("Open with:"));  	var viewSelBox = new MDBox (LayoutDirection.Horizontal' 2' 0) {  		{  			viewSelLabel'  			true  		}'  		{  			new MDAlignment (viewerSelector' true) {  				MinWidth = 200  			}  		}  	};  	if (IdeApp.Workspace.IsOpen) {  		closeSolutionButton = new NSButton () {  			Title = GettextCatalog.GetString ("Close current workspace")'  			Hidden = true'  			State = NSCellStateValue.On'  		};  		closeSolutionButton.SetButtonType (NSButtonType.Switch);  		closeSolutionButton.SizeToFit ();  		viewSelBox.Add (closeSolutionButton' true);  	}  	box.Add (viewSelBox);  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: panel.SelectionDidChange += delegate (object sender' EventArgs e) {  	var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	bool slnViewerSelected = false;  	if (viewerSelector != null) {  		FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  		if (currentViewers.Count == 0 || currentViewers [0] != null) {  			if (closeSolutionButton != null)  				closeSolutionButton.Hidden = true;  			slnViewerSelected = false;  		}  		else {  			if (closeSolutionButton != null)  				closeSolutionButton.Hidden = false;  			slnViewerSelected = true;  		}  		box.Layout ();  		//re-center the accessory view in its parent' Cocoa does this for us initially and after  		//resizing the window' but we need to do it again after altering its layout  		var superFrame = box.View.Superview.Frame;  		var frame = box.View.Frame;  		//not sure why it's ceiling' but this matches the Cocoa layout  		frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  		frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  		box.View.Frame = frame;  	}  	if (encodingSelector != null)  		encodingSelector.Enabled = !slnViewerSelected;  };  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: panel.SelectionDidChange += delegate (object sender' EventArgs e) {  	var selection = MacSelectFileDialogHandler.GetSelectedFiles (panel);  	bool slnViewerSelected = false;  	if (viewerSelector != null) {  		FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  		if (currentViewers.Count == 0 || currentViewers [0] != null) {  			if (closeSolutionButton != null)  				closeSolutionButton.Hidden = true;  			slnViewerSelected = false;  		}  		else {  			if (closeSolutionButton != null)  				closeSolutionButton.Hidden = false;  			slnViewerSelected = true;  		}  		box.Layout ();  		//re-center the accessory view in its parent' Cocoa does this for us initially and after  		//resizing the window' but we need to do it again after altering its layout  		var superFrame = box.View.Superview.Frame;  		var frame = box.View.Frame;  		//not sure why it's ceiling' but this matches the Cocoa layout  		frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  		frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  		box.View.Frame = frame;  	}  	if (encodingSelector != null)  		encodingSelector.Enabled = !slnViewerSelected;  };  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (viewerSelector != null) {  	FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  	if (currentViewers.Count == 0 || currentViewers [0] != null) {  		if (closeSolutionButton != null)  			closeSolutionButton.Hidden = true;  		slnViewerSelected = false;  	}  	else {  		if (closeSolutionButton != null)  			closeSolutionButton.Hidden = false;  		slnViewerSelected = true;  	}  	box.Layout ();  	//re-center the accessory view in its parent' Cocoa does this for us initially and after  	//resizing the window' but we need to do it again after altering its layout  	var superFrame = box.View.Superview.Frame;  	var frame = box.View.Frame;  	//not sure why it's ceiling' but this matches the Cocoa layout  	frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  	frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  	box.View.Frame = frame;  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: if (viewerSelector != null) {  	FillViewers (currentViewers' viewerSelector' closeSolutionButton' selection);  	if (currentViewers.Count == 0 || currentViewers [0] != null) {  		if (closeSolutionButton != null)  			closeSolutionButton.Hidden = true;  		slnViewerSelected = false;  	}  	else {  		if (closeSolutionButton != null)  			closeSolutionButton.Hidden = false;  		slnViewerSelected = true;  	}  	box.Layout ();  	//re-center the accessory view in its parent' Cocoa does this for us initially and after  	//resizing the window' but we need to do it again after altering its layout  	var superFrame = box.View.Superview.Frame;  	var frame = box.View.Frame;  	//not sure why it's ceiling' but this matches the Cocoa layout  	frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  	frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  	box.View.Frame = frame;  }  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: frame.X = (float)Math.Ceiling ((superFrame.Width - frame.Width) / 2);  
Magic Number,MonoDevelop.MacIntegration,MacOpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacOpenFileDialogHandler.cs,Run,The following statement contains a magic number: frame.Y = (float)Math.Ceiling ((superFrame.Height - frame.Height) / 2);  
Magic Number,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,CreateFileFilterPopup,The following statement contains a magic number: popup.Frame = new RectangleF (rect.X' rect.Y' 200' rect.Height);  
Magic Number,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,CreateLabelledDropdown,The following statement contains a magic number: popup = new NSPopUpButton (new RectangleF (0' 6' popupWidth' 18)' false) {  	AutoresizingMask = NSViewResizingMask.WidthSizable | NSViewResizingMask.MaxXMargin'  };  
Magic Number,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,CreateLabelledDropdown,The following statement contains a magic number: popup = new NSPopUpButton (new RectangleF (0' 6' popupWidth' 18)' false) {  	AutoresizingMask = NSViewResizingMask.WidthSizable | NSViewResizingMask.MaxXMargin'  };  
Magic Number,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,CreateLabelledDropdown,The following statement contains a magic number: return LabelControl (label' 200' popup);  
Magic Number,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,LabelControl,The following statement contains a magic number: control.Frame = new RectangleF (textWidth + 5' 0' controlWidth' rect.Height);  
Magic Number,MonoDevelop.MacIntegration,MacSelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacSelectFileDialogHandler.cs,LabelControl,The following statement contains a magic number: rect.Width = control.Frame.Width + textWidth + 5;  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: buttonRect.Y = 12;  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: label.Frame = new RectangleF (12' labelBottom' labelSize.Width' labelSize.Height);  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: addButton = new NSButton (new RectangleF (tableWidth + padding * 2' buttonLevel + padding / 2' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2192"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = goRightImage  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: addButton = new NSButton (new RectangleF (tableWidth + padding * 2' buttonLevel + padding / 2' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2192"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = goRightImage  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: removeButton = new NSButton (new RectangleF (tableWidth + padding * 2' buttonLevel - padding / 2 - moveButtonWidth' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2190"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = NSImage.ImageNamed ("NSGoLeftTemplate")'  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: removeButton = new NSButton (new RectangleF (tableWidth + padding * 2' buttonLevel - padding / 2 - moveButtonWidth' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2190"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = NSImage.ImageNamed ("NSGoLeftTemplate")'  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: upButton = new NSButton (new RectangleF (center + tableWidth + padding' buttonLevel + padding / 2' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2191"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = MakeRotatedCopy (goRightImage' 90)'  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: upButton = new NSButton (new RectangleF (center + tableWidth + padding' buttonLevel + padding / 2' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2191"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = MakeRotatedCopy (goRightImage' 90)'  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: downButton = new NSButton (new RectangleF (center + tableWidth + padding' buttonLevel - padding / 2 - moveButtonWidth' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2193"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = MakeRotatedCopy (goRightImage' -90)'  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,SelectEncodingPanel,The following statement contains a magic number: downButton = new NSButton (new RectangleF (center + tableWidth + padding' buttonLevel - padding / 2 - moveButtonWidth' moveButtonWidth' moveButtonWidth)) {  	//Title = "\u2193"'  	BezelStyle = NSBezelStyle.SmallSquare'  	Image = MakeRotatedCopy (goRightImage' -90)'  };  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: try {  	var rot = new NSAffineTransform ();  	rot.Translate (original.Size.Width / 2' original.Size.Height / 2);  	rot.RotateByDegrees (degrees);  	rot.Translate (-original.Size.Width / 2' -original.Size.Height / 2);  	rot.Concat ();  	original.Draw (PointF.Empty' RectangleF.Empty' NSCompositingOperation.Copy' 1);  }  finally {  	copy.UnlockFocus ();  }  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: try {  	var rot = new NSAffineTransform ();  	rot.Translate (original.Size.Width / 2' original.Size.Height / 2);  	rot.RotateByDegrees (degrees);  	rot.Translate (-original.Size.Width / 2' -original.Size.Height / 2);  	rot.Concat ();  	original.Draw (PointF.Empty' RectangleF.Empty' NSCompositingOperation.Copy' 1);  }  finally {  	copy.UnlockFocus ();  }  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: try {  	var rot = new NSAffineTransform ();  	rot.Translate (original.Size.Width / 2' original.Size.Height / 2);  	rot.RotateByDegrees (degrees);  	rot.Translate (-original.Size.Width / 2' -original.Size.Height / 2);  	rot.Concat ();  	original.Draw (PointF.Empty' RectangleF.Empty' NSCompositingOperation.Copy' 1);  }  finally {  	copy.UnlockFocus ();  }  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: try {  	var rot = new NSAffineTransform ();  	rot.Translate (original.Size.Width / 2' original.Size.Height / 2);  	rot.RotateByDegrees (degrees);  	rot.Translate (-original.Size.Width / 2' -original.Size.Height / 2);  	rot.Concat ();  	original.Draw (PointF.Empty' RectangleF.Empty' NSCompositingOperation.Copy' 1);  }  finally {  	copy.UnlockFocus ();  }  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: rot.Translate (original.Size.Width / 2' original.Size.Height / 2);  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: rot.Translate (original.Size.Width / 2' original.Size.Height / 2);  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: rot.Translate (-original.Size.Width / 2' -original.Size.Height / 2);  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPanel.cs,MakeRotatedCopy,The following statement contains a magic number: rot.Translate (-original.Size.Width / 2' -original.Size.Height / 2);  
Magic Number,MonoDevelop.MacIntegration,SelectEncodingPopUpButton,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\SelectEncodingPopUpButton.cs,SelectEncodingPopUpButton,The following statement contains a magic number: addRemoveItem = new NSMenuItem () {  	Title = GettextCatalog.GetString ("Add or Remove...")'  	Tag = -20'  	Target = this'  	Action = addRemoveActivationSel'  };  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (Direction == LayoutDirection.Horizontal) {  	float pos = PadLeft;  	if (wExpandCount == 0) {  		if (Align == LayoutAlign.End)  			pos += wExpand;  		else if (Align == LayoutAlign.Center)  			pos += wExpand / 2;  	}  	for (int i = 0; i < childRequests.Count; i++) {  		var child = children [i];  		var childReq = childRequests [i];  		if (!childReq.Visible)  			continue;  		var childSize = new SizeF (childReq.Size.Width' allocation.Height);  		if (childReq.ExpandWidth) {  			childSize.Width += wExpand;  		}  		else if (hExpandCount == 0 && Align == LayoutAlign.Fill) {  			childSize.Width += wExpand / visibleCount;  		}  		child.EndLayout (childReq' new PointF (pos' origin.Y)' childSize);  		pos += childSize.Width + Spacing;  	}  }  else {  	float pos = PadBottom;  	if (hExpandCount == 0) {  		if (Align == LayoutAlign.End)  			pos += hExpand;  		else if (Align == LayoutAlign.Center)  			pos += hExpand / 2;  	}  	for (int i = 0; i < childRequests.Count; i++) {  		var child = children [i];  		var childReq = childRequests [i];  		if (!childReq.Visible)  			continue;  		var childSize = new SizeF (allocation.Width' childReq.Size.Height);  		if (childReq.ExpandHeight) {  			childSize.Height += hExpand;  		}  		else if (hExpandCount == 0 && Align == LayoutAlign.Fill) {  			childSize.Height += hExpand / visibleCount;  		}  		child.EndLayout (childReq' new PointF (origin.X' pos)' childSize);  		pos += childSize.Height + Spacing;  	}  }  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (Direction == LayoutDirection.Horizontal) {  	float pos = PadLeft;  	if (wExpandCount == 0) {  		if (Align == LayoutAlign.End)  			pos += wExpand;  		else if (Align == LayoutAlign.Center)  			pos += wExpand / 2;  	}  	for (int i = 0; i < childRequests.Count; i++) {  		var child = children [i];  		var childReq = childRequests [i];  		if (!childReq.Visible)  			continue;  		var childSize = new SizeF (childReq.Size.Width' allocation.Height);  		if (childReq.ExpandWidth) {  			childSize.Width += wExpand;  		}  		else if (hExpandCount == 0 && Align == LayoutAlign.Fill) {  			childSize.Width += wExpand / visibleCount;  		}  		child.EndLayout (childReq' new PointF (pos' origin.Y)' childSize);  		pos += childSize.Width + Spacing;  	}  }  else {  	float pos = PadBottom;  	if (hExpandCount == 0) {  		if (Align == LayoutAlign.End)  			pos += hExpand;  		else if (Align == LayoutAlign.Center)  			pos += hExpand / 2;  	}  	for (int i = 0; i < childRequests.Count; i++) {  		var child = children [i];  		var childReq = childRequests [i];  		if (!childReq.Visible)  			continue;  		var childSize = new SizeF (allocation.Width' childReq.Size.Height);  		if (childReq.ExpandHeight) {  			childSize.Height += hExpand;  		}  		else if (hExpandCount == 0 && Align == LayoutAlign.Fill) {  			childSize.Height += hExpand / visibleCount;  		}  		child.EndLayout (childReq' new PointF (origin.X' pos)' childSize);  		pos += childSize.Height + Spacing;  	}  }  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (wExpandCount == 0) {  	if (Align == LayoutAlign.End)  		pos += wExpand;  	else if (Align == LayoutAlign.Center)  		pos += wExpand / 2;  }  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (Align == LayoutAlign.End)  	pos += wExpand;  else if (Align == LayoutAlign.Center)  	pos += wExpand / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (Align == LayoutAlign.Center)  	pos += wExpand / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: pos += wExpand / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (hExpandCount == 0) {  	if (Align == LayoutAlign.End)  		pos += hExpand;  	else if (Align == LayoutAlign.Center)  		pos += hExpand / 2;  }  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (Align == LayoutAlign.End)  	pos += hExpand;  else if (Align == LayoutAlign.Center)  	pos += hExpand / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (Align == LayoutAlign.Center)  	pos += hExpand / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutBox,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: pos += hExpand / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (allocation.Height > request.Size.Height) {  	if (YAlign != LayoutAlign.Fill) {  		frame.Height = request.Size.Height - PadTop - PadBottom;  		if (YAlign == LayoutAlign.Center) {  			frame.Y += (allocation.Height - request.Size.Height) / 2;  		}  		else if (YAlign == LayoutAlign.End) {  			frame.Y += (allocation.Height - request.Size.Height);  		}  	}  }  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (YAlign != LayoutAlign.Fill) {  	frame.Height = request.Size.Height - PadTop - PadBottom;  	if (YAlign == LayoutAlign.Center) {  		frame.Y += (allocation.Height - request.Size.Height) / 2;  	}  	else if (YAlign == LayoutAlign.End) {  		frame.Y += (allocation.Height - request.Size.Height);  	}  }  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (YAlign == LayoutAlign.Center) {  	frame.Y += (allocation.Height - request.Size.Height) / 2;  }  else if (YAlign == LayoutAlign.End) {  	frame.Y += (allocation.Height - request.Size.Height);  }  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: frame.Y += (allocation.Height - request.Size.Height) / 2;  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (allocation.Width > request.Size.Width) {  	if (XAlign != LayoutAlign.Fill) {  		frame.Width = request.Size.Width - PadLeft - PadRight;  		if (XAlign == LayoutAlign.Center) {  			frame.X += (allocation.Width - request.Size.Width) / 2;  		}  		else if (XAlign == LayoutAlign.End) {  			frame.X += (allocation.Width - request.Size.Width);  		}  	}  }  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (XAlign != LayoutAlign.Fill) {  	frame.Width = request.Size.Width - PadLeft - PadRight;  	if (XAlign == LayoutAlign.Center) {  		frame.X += (allocation.Width - request.Size.Width) / 2;  	}  	else if (XAlign == LayoutAlign.End) {  		frame.X += (allocation.Width - request.Size.Width);  	}  }  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: if (XAlign == LayoutAlign.Center) {  	frame.X += (allocation.Width - request.Size.Width) / 2;  }  else if (XAlign == LayoutAlign.End) {  	frame.X += (allocation.Width - request.Size.Width);  }  
Magic Number,MonoDevelop.MacIntegration,LayoutAlignment,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\Layout.cs,EndLayout,The following statement contains a magic number: frame.X += (allocation.Width - request.Size.Width) / 2;  
Magic Number,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert ()) {  	alert.Window.Title = data.Title ?? BrandingService.ApplicationName;  	if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Information) {  		alert.AlertStyle = NSAlertStyle.Critical;  	}  	else if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Warning) {  		alert.AlertStyle = NSAlertStyle.Warning;  	}  	else {  		//if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Information) {  		alert.AlertStyle = NSAlertStyle.Informational;  	}  	//FIXME: use correct size so we don't get horrible scaling?  	if (!string.IsNullOrEmpty (data.Message.Icon)) {  		var pix = ImageService.GetPixbuf (data.Message.Icon' Gtk.IconSize.Dialog);  		byte[] buf = pix.SaveToBuffer ("tiff");  		unsafe {  			fixed (byte* b = buf) {  				alert.Icon = new NSImage (NSData.FromBytes ((IntPtr)b' (uint)buf.Length));  			}  		}  	}  	else {  		//for some reason the NSAlert doesn't pick up the app icon by default  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	}  	alert.MessageText = data.Message.Text;  	alert.InformativeText = data.Message.SecondaryText ?? "";  	var buttons = data.Buttons.Reverse ().ToList ();  	for (int i = 0; i < buttons.Count - 1; i++) {  		if (i == data.Message.DefaultButton) {  			var next = buttons [i];  			for (int j = buttons.Count - 1; j >= i; j--) {  				var tmp = buttons [j];  				buttons [j] = next;  				next = tmp;  			}  			break;  		}  	}  	foreach (var button in buttons) {  		var label = button.Label;  		if (button.IsStockButton)  			label = Gtk.Stock.Lookup (label).Label;  		label = label.Replace ("_"' "");  		//this message seems to be a standard Mac message since alert handles it specially  		if (button == AlertButton.CloseWithoutSave)  			label = GettextCatalog.GetString ("Don't Save");  		alert.AddButton (label);  	}  	NSButton[] optionButtons = null;  	if (data.Options.Count > 0) {  		var box = new MDBox (LayoutDirection.Vertical' 2' 2);  		optionButtons = new NSButton[data.Options.Count];  		for (int i = data.Options.Count - 1; i >= 0; i--) {  			var option = data.Options [i];  			var button = new NSButton () {  				Title = option.Text'  				Tag = i'  				State = option.Value ? NSCellStateValue.On : NSCellStateValue.Off'  			};  			button.SetButtonType (NSButtonType.Switch);  			optionButtons [i] = button;  			box.Add (new MDAlignment (button' true) {  				XAlign = LayoutAlign.Begin  			});  		}  		box.Layout ();  		alert.AccessoryView = box.View;  	}  	NSButton applyToAllCheck = null;  	if (data.Message.AllowApplyToAll) {  		alert.ShowsSuppressionButton = true;  		applyToAllCheck = alert.SuppressionButton;  		applyToAllCheck.Title = GettextCatalog.GetString ("Apply to all");  	}  	// Hack up a slightly wider than normal alert dialog. I don't know how to do this in a nicer way  	// as the min size constraints are apparently ignored.  	var frame = ((NSPanel)alert.Window).Frame;  	((NSPanel)alert.Window).SetFrame (new RectangleF (frame.X' frame.Y' Math.Max (frame.Width' 600)' frame.Height)' true);  	alert.Layout ();  	bool completed = false;  	if (data.Message.CancellationToken.CanBeCanceled) {  		data.Message.CancellationToken.Register (delegate {  			alert.InvokeOnMainThread (() =>  {  				if (!completed) {  					NSApplication.SharedApplication.AbortModal ();  				}  			});  		});  	}  	if (!data.Message.CancellationToken.IsCancellationRequested) {  		int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  		completed = true;  		if (result >= 0 && result < buttons.Count) {  			data.ResultButton = buttons [result];  		}  		else {  			data.ResultButton = null;  		}  	}  	if (data.ResultButton == null || data.Message.CancellationToken.IsCancellationRequested) {  		data.SetResultToCancelled ();  	}  	if (optionButtons != null) {  		foreach (var button in optionButtons) {  			var option = data.Options [button.Tag];  			data.Message.SetOptionValue (option.Id' button.State != 0);  		}  	}  	if (applyToAllCheck != null && applyToAllCheck.State != 0)  		data.ApplyToAll = true;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert ()) {  	alert.Window.Title = data.Title ?? BrandingService.ApplicationName;  	if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Information) {  		alert.AlertStyle = NSAlertStyle.Critical;  	}  	else if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Warning) {  		alert.AlertStyle = NSAlertStyle.Warning;  	}  	else {  		//if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Information) {  		alert.AlertStyle = NSAlertStyle.Informational;  	}  	//FIXME: use correct size so we don't get horrible scaling?  	if (!string.IsNullOrEmpty (data.Message.Icon)) {  		var pix = ImageService.GetPixbuf (data.Message.Icon' Gtk.IconSize.Dialog);  		byte[] buf = pix.SaveToBuffer ("tiff");  		unsafe {  			fixed (byte* b = buf) {  				alert.Icon = new NSImage (NSData.FromBytes ((IntPtr)b' (uint)buf.Length));  			}  		}  	}  	else {  		//for some reason the NSAlert doesn't pick up the app icon by default  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	}  	alert.MessageText = data.Message.Text;  	alert.InformativeText = data.Message.SecondaryText ?? "";  	var buttons = data.Buttons.Reverse ().ToList ();  	for (int i = 0; i < buttons.Count - 1; i++) {  		if (i == data.Message.DefaultButton) {  			var next = buttons [i];  			for (int j = buttons.Count - 1; j >= i; j--) {  				var tmp = buttons [j];  				buttons [j] = next;  				next = tmp;  			}  			break;  		}  	}  	foreach (var button in buttons) {  		var label = button.Label;  		if (button.IsStockButton)  			label = Gtk.Stock.Lookup (label).Label;  		label = label.Replace ("_"' "");  		//this message seems to be a standard Mac message since alert handles it specially  		if (button == AlertButton.CloseWithoutSave)  			label = GettextCatalog.GetString ("Don't Save");  		alert.AddButton (label);  	}  	NSButton[] optionButtons = null;  	if (data.Options.Count > 0) {  		var box = new MDBox (LayoutDirection.Vertical' 2' 2);  		optionButtons = new NSButton[data.Options.Count];  		for (int i = data.Options.Count - 1; i >= 0; i--) {  			var option = data.Options [i];  			var button = new NSButton () {  				Title = option.Text'  				Tag = i'  				State = option.Value ? NSCellStateValue.On : NSCellStateValue.Off'  			};  			button.SetButtonType (NSButtonType.Switch);  			optionButtons [i] = button;  			box.Add (new MDAlignment (button' true) {  				XAlign = LayoutAlign.Begin  			});  		}  		box.Layout ();  		alert.AccessoryView = box.View;  	}  	NSButton applyToAllCheck = null;  	if (data.Message.AllowApplyToAll) {  		alert.ShowsSuppressionButton = true;  		applyToAllCheck = alert.SuppressionButton;  		applyToAllCheck.Title = GettextCatalog.GetString ("Apply to all");  	}  	// Hack up a slightly wider than normal alert dialog. I don't know how to do this in a nicer way  	// as the min size constraints are apparently ignored.  	var frame = ((NSPanel)alert.Window).Frame;  	((NSPanel)alert.Window).SetFrame (new RectangleF (frame.X' frame.Y' Math.Max (frame.Width' 600)' frame.Height)' true);  	alert.Layout ();  	bool completed = false;  	if (data.Message.CancellationToken.CanBeCanceled) {  		data.Message.CancellationToken.Register (delegate {  			alert.InvokeOnMainThread (() =>  {  				if (!completed) {  					NSApplication.SharedApplication.AbortModal ();  				}  			});  		});  	}  	if (!data.Message.CancellationToken.IsCancellationRequested) {  		int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  		completed = true;  		if (result >= 0 && result < buttons.Count) {  			data.ResultButton = buttons [result];  		}  		else {  			data.ResultButton = null;  		}  	}  	if (data.ResultButton == null || data.Message.CancellationToken.IsCancellationRequested) {  		data.SetResultToCancelled ();  	}  	if (optionButtons != null) {  		foreach (var button in optionButtons) {  			var option = data.Options [button.Tag];  			data.Message.SetOptionValue (option.Id' button.State != 0);  		}  	}  	if (applyToAllCheck != null && applyToAllCheck.State != 0)  		data.ApplyToAll = true;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert ()) {  	alert.Window.Title = data.Title ?? BrandingService.ApplicationName;  	if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Information) {  		alert.AlertStyle = NSAlertStyle.Critical;  	}  	else if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Warning) {  		alert.AlertStyle = NSAlertStyle.Warning;  	}  	else {  		//if (data.Message.Icon == MonoDevelop.Ide.Gui.Stock.Information) {  		alert.AlertStyle = NSAlertStyle.Informational;  	}  	//FIXME: use correct size so we don't get horrible scaling?  	if (!string.IsNullOrEmpty (data.Message.Icon)) {  		var pix = ImageService.GetPixbuf (data.Message.Icon' Gtk.IconSize.Dialog);  		byte[] buf = pix.SaveToBuffer ("tiff");  		unsafe {  			fixed (byte* b = buf) {  				alert.Icon = new NSImage (NSData.FromBytes ((IntPtr)b' (uint)buf.Length));  			}  		}  	}  	else {  		//for some reason the NSAlert doesn't pick up the app icon by default  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	}  	alert.MessageText = data.Message.Text;  	alert.InformativeText = data.Message.SecondaryText ?? "";  	var buttons = data.Buttons.Reverse ().ToList ();  	for (int i = 0; i < buttons.Count - 1; i++) {  		if (i == data.Message.DefaultButton) {  			var next = buttons [i];  			for (int j = buttons.Count - 1; j >= i; j--) {  				var tmp = buttons [j];  				buttons [j] = next;  				next = tmp;  			}  			break;  		}  	}  	foreach (var button in buttons) {  		var label = button.Label;  		if (button.IsStockButton)  			label = Gtk.Stock.Lookup (label).Label;  		label = label.Replace ("_"' "");  		//this message seems to be a standard Mac message since alert handles it specially  		if (button == AlertButton.CloseWithoutSave)  			label = GettextCatalog.GetString ("Don't Save");  		alert.AddButton (label);  	}  	NSButton[] optionButtons = null;  	if (data.Options.Count > 0) {  		var box = new MDBox (LayoutDirection.Vertical' 2' 2);  		optionButtons = new NSButton[data.Options.Count];  		for (int i = data.Options.Count - 1; i >= 0; i--) {  			var option = data.Options [i];  			var button = new NSButton () {  				Title = option.Text'  				Tag = i'  				State = option.Value ? NSCellStateValue.On : NSCellStateValue.Off'  			};  			button.SetButtonType (NSButtonType.Switch);  			optionButtons [i] = button;  			box.Add (new MDAlignment (button' true) {  				XAlign = LayoutAlign.Begin  			});  		}  		box.Layout ();  		alert.AccessoryView = box.View;  	}  	NSButton applyToAllCheck = null;  	if (data.Message.AllowApplyToAll) {  		alert.ShowsSuppressionButton = true;  		applyToAllCheck = alert.SuppressionButton;  		applyToAllCheck.Title = GettextCatalog.GetString ("Apply to all");  	}  	// Hack up a slightly wider than normal alert dialog. I don't know how to do this in a nicer way  	// as the min size constraints are apparently ignored.  	var frame = ((NSPanel)alert.Window).Frame;  	((NSPanel)alert.Window).SetFrame (new RectangleF (frame.X' frame.Y' Math.Max (frame.Width' 600)' frame.Height)' true);  	alert.Layout ();  	bool completed = false;  	if (data.Message.CancellationToken.CanBeCanceled) {  		data.Message.CancellationToken.Register (delegate {  			alert.InvokeOnMainThread (() =>  {  				if (!completed) {  					NSApplication.SharedApplication.AbortModal ();  				}  			});  		});  	}  	if (!data.Message.CancellationToken.IsCancellationRequested) {  		int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  		completed = true;  		if (result >= 0 && result < buttons.Count) {  			data.ResultButton = buttons [result];  		}  		else {  			data.ResultButton = null;  		}  	}  	if (data.ResultButton == null || data.Message.CancellationToken.IsCancellationRequested) {  		data.SetResultToCancelled ();  	}  	if (optionButtons != null) {  		foreach (var button in optionButtons) {  			var option = data.Options [button.Tag];  			data.Message.SetOptionValue (option.Id' button.State != 0);  		}  	}  	if (applyToAllCheck != null && applyToAllCheck.State != 0)  		data.ApplyToAll = true;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The following statement contains a magic number: if (data.Options.Count > 0) {  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	optionButtons = new NSButton[data.Options.Count];  	for (int i = data.Options.Count - 1; i >= 0; i--) {  		var option = data.Options [i];  		var button = new NSButton () {  			Title = option.Text'  			Tag = i'  			State = option.Value ? NSCellStateValue.On : NSCellStateValue.Off'  		};  		button.SetButtonType (NSButtonType.Switch);  		optionButtons [i] = button;  		box.Add (new MDAlignment (button' true) {  			XAlign = LayoutAlign.Begin  		});  	}  	box.Layout ();  	alert.AccessoryView = box.View;  }  
Magic Number,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The following statement contains a magic number: if (data.Options.Count > 0) {  	var box = new MDBox (LayoutDirection.Vertical' 2' 2);  	optionButtons = new NSButton[data.Options.Count];  	for (int i = data.Options.Count - 1; i >= 0; i--) {  		var option = data.Options [i];  		var button = new NSButton () {  			Title = option.Text'  			Tag = i'  			State = option.Value ? NSCellStateValue.On : NSCellStateValue.Off'  		};  		button.SetButtonType (NSButtonType.Switch);  		optionButtons [i] = button;  		box.Add (new MDAlignment (button' true) {  			XAlign = LayoutAlign.Begin  		});  	}  	box.Layout ();  	alert.AccessoryView = box.View;  }  
Magic Number,MonoDevelop.MacIntegration,MacAlertDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacAlertDialogHandler.cs,Run,The following statement contains a magic number: ((NSPanel)alert.Window).SetFrame (new RectangleF (frame.X' frame.Y' Math.Max (frame.Width' 600)' frame.Height)' true);  
Magic Number,MonoDevelop.MacIntegration,MacExternalConsoleProcess,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacExternalConsoleProcess.cs,MacExternalConsoleProcess,The following statement contains a magic number: windowId = ret.Substring (i + 3);  
Magic Number,MonoDevelop.MacIntegration,MacExternalConsoleProcess,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacExternalConsoleProcess.cs,WaitForCompleted,The following statement contains a magic number: while (!IsCompleted) {  	Thread.Sleep (1000);  }  
Magic Number,MonoDevelop.MacIntegration,MacExternalConsoleProcess,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacExternalConsoleProcess.cs,WaitForCompleted,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert {  	AlertStyle = NSAlertStyle.Critical  }) {  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	alert.MessageText = data.Title ?? GettextCatalog.GetString ("Error");  	if (!string.IsNullOrEmpty (data.Message)) {  		alert.InformativeText = data.Message;  	}  	List<AlertButton> buttons = null;  	if (data.Buttons != null && data.Buttons.Length > 0)  		buttons = data.Buttons.Reverse ().ToList ();  	if (buttons != null) {  		foreach (var button in buttons) {  			var label = button.Label;  			if (button.IsStockButton)  				label = Gtk.Stock.Lookup (label).Label;  			label = label.Replace ("_"' "");  			//this message seems to be a standard Mac message since alert handles it specially  			if (button == AlertButton.CloseWithoutSave)  				label = GettextCatalog.GetString ("Don't Save");  			alert.AddButton (label);  		}  	}  	if (data.Exception != null) {  		var scrollSize = new SizeF (400' 130);  		float spacing = 4;  		string title = GettextCatalog.GetString ("View details");  		string altTitle = GettextCatalog.GetString ("Hide details");  		var buttonFrame = new RectangleF (0' 0' 0' 0);  		var button = new NSButton (buttonFrame) {  			BezelStyle = NSBezelStyle.Disclosure'  			Title = ""'  			AlternateTitle = ""'  		};  		button.SetButtonType (NSButtonType.OnOff);  		button.SizeToFit ();  		var label = new MDClickableLabel (title) {  			Alignment = NSTextAlignment.Left'  		};  		label.SizeToFit ();  		button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  		label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  		var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  			HorizontallyResizable = true'  		};  		text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  		text.TextContainer.WidthTracksTextView = true;  		text.InsertText (new NSString (data.Exception.ToString ()));  		text.Editable = false;  		var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  			HasHorizontalScroller = true'  			HasVerticalScroller = true'  		};  		var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  		accessory.AddSubview (scrollView);  		accessory.AddSubview (button);  		accessory.AddSubview (label);  		alert.AccessoryView = accessory;  		button.Activated += delegate {  			float change;  			if (button.State == NSCellStateValue.On) {  				change = scrollSize.Height + spacing;  				label.StringValue = altTitle;  				scrollView.Hidden = false;  				scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  				scrollView.DocumentView = text;  			}  			else {  				change = -(scrollSize.Height + spacing);  				label.StringValue = title;  				scrollView.Hidden = true;  				scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  			}  			var f = accessory.Frame;  			f.Height += change;  			accessory.Frame = f;  			var lf = label.Frame;  			lf.Y += change;  			label.Frame = lf;  			var bf = button.Frame;  			bf.Y += change;  			button.Frame = bf;  			label.SizeToFit ();  			var panel = (NSPanel)alert.Window;  			var pf = panel.Frame;  			pf.Height += change;  			pf.Y -= change;  			panel.SetFrame (pf' true' true);  			//unless we assign the icon again' it starts nesting old icon into the warning icon  			alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  			alert.Layout ();  		};  		label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  	}  	int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  	data.ResultButton = buttons != null ? buttons [result] : null;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert {  	AlertStyle = NSAlertStyle.Critical  }) {  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	alert.MessageText = data.Title ?? GettextCatalog.GetString ("Error");  	if (!string.IsNullOrEmpty (data.Message)) {  		alert.InformativeText = data.Message;  	}  	List<AlertButton> buttons = null;  	if (data.Buttons != null && data.Buttons.Length > 0)  		buttons = data.Buttons.Reverse ().ToList ();  	if (buttons != null) {  		foreach (var button in buttons) {  			var label = button.Label;  			if (button.IsStockButton)  				label = Gtk.Stock.Lookup (label).Label;  			label = label.Replace ("_"' "");  			//this message seems to be a standard Mac message since alert handles it specially  			if (button == AlertButton.CloseWithoutSave)  				label = GettextCatalog.GetString ("Don't Save");  			alert.AddButton (label);  		}  	}  	if (data.Exception != null) {  		var scrollSize = new SizeF (400' 130);  		float spacing = 4;  		string title = GettextCatalog.GetString ("View details");  		string altTitle = GettextCatalog.GetString ("Hide details");  		var buttonFrame = new RectangleF (0' 0' 0' 0);  		var button = new NSButton (buttonFrame) {  			BezelStyle = NSBezelStyle.Disclosure'  			Title = ""'  			AlternateTitle = ""'  		};  		button.SetButtonType (NSButtonType.OnOff);  		button.SizeToFit ();  		var label = new MDClickableLabel (title) {  			Alignment = NSTextAlignment.Left'  		};  		label.SizeToFit ();  		button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  		label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  		var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  			HorizontallyResizable = true'  		};  		text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  		text.TextContainer.WidthTracksTextView = true;  		text.InsertText (new NSString (data.Exception.ToString ()));  		text.Editable = false;  		var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  			HasHorizontalScroller = true'  			HasVerticalScroller = true'  		};  		var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  		accessory.AddSubview (scrollView);  		accessory.AddSubview (button);  		accessory.AddSubview (label);  		alert.AccessoryView = accessory;  		button.Activated += delegate {  			float change;  			if (button.State == NSCellStateValue.On) {  				change = scrollSize.Height + spacing;  				label.StringValue = altTitle;  				scrollView.Hidden = false;  				scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  				scrollView.DocumentView = text;  			}  			else {  				change = -(scrollSize.Height + spacing);  				label.StringValue = title;  				scrollView.Hidden = true;  				scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  			}  			var f = accessory.Frame;  			f.Height += change;  			accessory.Frame = f;  			var lf = label.Frame;  			lf.Y += change;  			label.Frame = lf;  			var bf = button.Frame;  			bf.Y += change;  			button.Frame = bf;  			label.SizeToFit ();  			var panel = (NSPanel)alert.Window;  			var pf = panel.Frame;  			pf.Height += change;  			pf.Y -= change;  			panel.SetFrame (pf' true' true);  			//unless we assign the icon again' it starts nesting old icon into the warning icon  			alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  			alert.Layout ();  		};  		label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  	}  	int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  	data.ResultButton = buttons != null ? buttons [result] : null;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert {  	AlertStyle = NSAlertStyle.Critical  }) {  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	alert.MessageText = data.Title ?? GettextCatalog.GetString ("Error");  	if (!string.IsNullOrEmpty (data.Message)) {  		alert.InformativeText = data.Message;  	}  	List<AlertButton> buttons = null;  	if (data.Buttons != null && data.Buttons.Length > 0)  		buttons = data.Buttons.Reverse ().ToList ();  	if (buttons != null) {  		foreach (var button in buttons) {  			var label = button.Label;  			if (button.IsStockButton)  				label = Gtk.Stock.Lookup (label).Label;  			label = label.Replace ("_"' "");  			//this message seems to be a standard Mac message since alert handles it specially  			if (button == AlertButton.CloseWithoutSave)  				label = GettextCatalog.GetString ("Don't Save");  			alert.AddButton (label);  		}  	}  	if (data.Exception != null) {  		var scrollSize = new SizeF (400' 130);  		float spacing = 4;  		string title = GettextCatalog.GetString ("View details");  		string altTitle = GettextCatalog.GetString ("Hide details");  		var buttonFrame = new RectangleF (0' 0' 0' 0);  		var button = new NSButton (buttonFrame) {  			BezelStyle = NSBezelStyle.Disclosure'  			Title = ""'  			AlternateTitle = ""'  		};  		button.SetButtonType (NSButtonType.OnOff);  		button.SizeToFit ();  		var label = new MDClickableLabel (title) {  			Alignment = NSTextAlignment.Left'  		};  		label.SizeToFit ();  		button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  		label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  		var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  			HorizontallyResizable = true'  		};  		text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  		text.TextContainer.WidthTracksTextView = true;  		text.InsertText (new NSString (data.Exception.ToString ()));  		text.Editable = false;  		var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  			HasHorizontalScroller = true'  			HasVerticalScroller = true'  		};  		var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  		accessory.AddSubview (scrollView);  		accessory.AddSubview (button);  		accessory.AddSubview (label);  		alert.AccessoryView = accessory;  		button.Activated += delegate {  			float change;  			if (button.State == NSCellStateValue.On) {  				change = scrollSize.Height + spacing;  				label.StringValue = altTitle;  				scrollView.Hidden = false;  				scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  				scrollView.DocumentView = text;  			}  			else {  				change = -(scrollSize.Height + spacing);  				label.StringValue = title;  				scrollView.Hidden = true;  				scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  			}  			var f = accessory.Frame;  			f.Height += change;  			accessory.Frame = f;  			var lf = label.Frame;  			lf.Y += change;  			label.Frame = lf;  			var bf = button.Frame;  			bf.Y += change;  			button.Frame = bf;  			label.SizeToFit ();  			var panel = (NSPanel)alert.Window;  			var pf = panel.Frame;  			pf.Height += change;  			pf.Y -= change;  			panel.SetFrame (pf' true' true);  			//unless we assign the icon again' it starts nesting old icon into the warning icon  			alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  			alert.Layout ();  		};  		label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  	}  	int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  	data.ResultButton = buttons != null ? buttons [result] : null;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: using (var alert = new NSAlert {  	AlertStyle = NSAlertStyle.Critical  }) {  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	alert.MessageText = data.Title ?? GettextCatalog.GetString ("Error");  	if (!string.IsNullOrEmpty (data.Message)) {  		alert.InformativeText = data.Message;  	}  	List<AlertButton> buttons = null;  	if (data.Buttons != null && data.Buttons.Length > 0)  		buttons = data.Buttons.Reverse ().ToList ();  	if (buttons != null) {  		foreach (var button in buttons) {  			var label = button.Label;  			if (button.IsStockButton)  				label = Gtk.Stock.Lookup (label).Label;  			label = label.Replace ("_"' "");  			//this message seems to be a standard Mac message since alert handles it specially  			if (button == AlertButton.CloseWithoutSave)  				label = GettextCatalog.GetString ("Don't Save");  			alert.AddButton (label);  		}  	}  	if (data.Exception != null) {  		var scrollSize = new SizeF (400' 130);  		float spacing = 4;  		string title = GettextCatalog.GetString ("View details");  		string altTitle = GettextCatalog.GetString ("Hide details");  		var buttonFrame = new RectangleF (0' 0' 0' 0);  		var button = new NSButton (buttonFrame) {  			BezelStyle = NSBezelStyle.Disclosure'  			Title = ""'  			AlternateTitle = ""'  		};  		button.SetButtonType (NSButtonType.OnOff);  		button.SizeToFit ();  		var label = new MDClickableLabel (title) {  			Alignment = NSTextAlignment.Left'  		};  		label.SizeToFit ();  		button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  		label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  		var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  			HorizontallyResizable = true'  		};  		text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  		text.TextContainer.WidthTracksTextView = true;  		text.InsertText (new NSString (data.Exception.ToString ()));  		text.Editable = false;  		var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  			HasHorizontalScroller = true'  			HasVerticalScroller = true'  		};  		var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  		accessory.AddSubview (scrollView);  		accessory.AddSubview (button);  		accessory.AddSubview (label);  		alert.AccessoryView = accessory;  		button.Activated += delegate {  			float change;  			if (button.State == NSCellStateValue.On) {  				change = scrollSize.Height + spacing;  				label.StringValue = altTitle;  				scrollView.Hidden = false;  				scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  				scrollView.DocumentView = text;  			}  			else {  				change = -(scrollSize.Height + spacing);  				label.StringValue = title;  				scrollView.Hidden = true;  				scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  			}  			var f = accessory.Frame;  			f.Height += change;  			accessory.Frame = f;  			var lf = label.Frame;  			lf.Y += change;  			label.Frame = lf;  			var bf = button.Frame;  			bf.Y += change;  			button.Frame = bf;  			label.SizeToFit ();  			var panel = (NSPanel)alert.Window;  			var pf = panel.Frame;  			pf.Height += change;  			pf.Y -= change;  			panel.SetFrame (pf' true' true);  			//unless we assign the icon again' it starts nesting old icon into the warning icon  			alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  			alert.Layout ();  		};  		label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  	}  	int result = alert.RunModal () - (int)NSAlertButtonReturn.First;  	data.ResultButton = buttons != null ? buttons [result] : null;  	GtkQuartz.FocusWindow (data.TransientFor ?? MessageService.RootWindow);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: if (data.Exception != null) {  	var scrollSize = new SizeF (400' 130);  	float spacing = 4;  	string title = GettextCatalog.GetString ("View details");  	string altTitle = GettextCatalog.GetString ("Hide details");  	var buttonFrame = new RectangleF (0' 0' 0' 0);  	var button = new NSButton (buttonFrame) {  		BezelStyle = NSBezelStyle.Disclosure'  		Title = ""'  		AlternateTitle = ""'  	};  	button.SetButtonType (NSButtonType.OnOff);  	button.SizeToFit ();  	var label = new MDClickableLabel (title) {  		Alignment = NSTextAlignment.Left'  	};  	label.SizeToFit ();  	button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  	label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  	var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  		HorizontallyResizable = true'  	};  	text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  	text.TextContainer.WidthTracksTextView = true;  	text.InsertText (new NSString (data.Exception.ToString ()));  	text.Editable = false;  	var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  		HasHorizontalScroller = true'  		HasVerticalScroller = true'  	};  	var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  	accessory.AddSubview (scrollView);  	accessory.AddSubview (button);  	accessory.AddSubview (label);  	alert.AccessoryView = accessory;  	button.Activated += delegate {  		float change;  		if (button.State == NSCellStateValue.On) {  			change = scrollSize.Height + spacing;  			label.StringValue = altTitle;  			scrollView.Hidden = false;  			scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  			scrollView.DocumentView = text;  		}  		else {  			change = -(scrollSize.Height + spacing);  			label.StringValue = title;  			scrollView.Hidden = true;  			scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  		}  		var f = accessory.Frame;  		f.Height += change;  		accessory.Frame = f;  		var lf = label.Frame;  		lf.Y += change;  		label.Frame = lf;  		var bf = button.Frame;  		bf.Y += change;  		button.Frame = bf;  		label.SizeToFit ();  		var panel = (NSPanel)alert.Window;  		var pf = panel.Frame;  		pf.Height += change;  		pf.Y -= change;  		panel.SetFrame (pf' true' true);  		//unless we assign the icon again' it starts nesting old icon into the warning icon  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		alert.Layout ();  	};  	label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: if (data.Exception != null) {  	var scrollSize = new SizeF (400' 130);  	float spacing = 4;  	string title = GettextCatalog.GetString ("View details");  	string altTitle = GettextCatalog.GetString ("Hide details");  	var buttonFrame = new RectangleF (0' 0' 0' 0);  	var button = new NSButton (buttonFrame) {  		BezelStyle = NSBezelStyle.Disclosure'  		Title = ""'  		AlternateTitle = ""'  	};  	button.SetButtonType (NSButtonType.OnOff);  	button.SizeToFit ();  	var label = new MDClickableLabel (title) {  		Alignment = NSTextAlignment.Left'  	};  	label.SizeToFit ();  	button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  	label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  	var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  		HorizontallyResizable = true'  	};  	text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  	text.TextContainer.WidthTracksTextView = true;  	text.InsertText (new NSString (data.Exception.ToString ()));  	text.Editable = false;  	var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  		HasHorizontalScroller = true'  		HasVerticalScroller = true'  	};  	var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  	accessory.AddSubview (scrollView);  	accessory.AddSubview (button);  	accessory.AddSubview (label);  	alert.AccessoryView = accessory;  	button.Activated += delegate {  		float change;  		if (button.State == NSCellStateValue.On) {  			change = scrollSize.Height + spacing;  			label.StringValue = altTitle;  			scrollView.Hidden = false;  			scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  			scrollView.DocumentView = text;  		}  		else {  			change = -(scrollSize.Height + spacing);  			label.StringValue = title;  			scrollView.Hidden = true;  			scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  		}  		var f = accessory.Frame;  		f.Height += change;  		accessory.Frame = f;  		var lf = label.Frame;  		lf.Y += change;  		label.Frame = lf;  		var bf = button.Frame;  		bf.Y += change;  		button.Frame = bf;  		label.SizeToFit ();  		var panel = (NSPanel)alert.Window;  		var pf = panel.Frame;  		pf.Height += change;  		pf.Y -= change;  		panel.SetFrame (pf' true' true);  		//unless we assign the icon again' it starts nesting old icon into the warning icon  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		alert.Layout ();  	};  	label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: if (data.Exception != null) {  	var scrollSize = new SizeF (400' 130);  	float spacing = 4;  	string title = GettextCatalog.GetString ("View details");  	string altTitle = GettextCatalog.GetString ("Hide details");  	var buttonFrame = new RectangleF (0' 0' 0' 0);  	var button = new NSButton (buttonFrame) {  		BezelStyle = NSBezelStyle.Disclosure'  		Title = ""'  		AlternateTitle = ""'  	};  	button.SetButtonType (NSButtonType.OnOff);  	button.SizeToFit ();  	var label = new MDClickableLabel (title) {  		Alignment = NSTextAlignment.Left'  	};  	label.SizeToFit ();  	button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  	label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  	var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  		HorizontallyResizable = true'  	};  	text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  	text.TextContainer.WidthTracksTextView = true;  	text.InsertText (new NSString (data.Exception.ToString ()));  	text.Editable = false;  	var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  		HasHorizontalScroller = true'  		HasVerticalScroller = true'  	};  	var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  	accessory.AddSubview (scrollView);  	accessory.AddSubview (button);  	accessory.AddSubview (label);  	alert.AccessoryView = accessory;  	button.Activated += delegate {  		float change;  		if (button.State == NSCellStateValue.On) {  			change = scrollSize.Height + spacing;  			label.StringValue = altTitle;  			scrollView.Hidden = false;  			scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  			scrollView.DocumentView = text;  		}  		else {  			change = -(scrollSize.Height + spacing);  			label.StringValue = title;  			scrollView.Hidden = true;  			scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  		}  		var f = accessory.Frame;  		f.Height += change;  		accessory.Frame = f;  		var lf = label.Frame;  		lf.Y += change;  		label.Frame = lf;  		var bf = button.Frame;  		bf.Y += change;  		button.Frame = bf;  		label.SizeToFit ();  		var panel = (NSPanel)alert.Window;  		var pf = panel.Frame;  		pf.Height += change;  		pf.Y -= change;  		panel.SetFrame (pf' true' true);  		//unless we assign the icon again' it starts nesting old icon into the warning icon  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		alert.Layout ();  	};  	label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: if (data.Exception != null) {  	var scrollSize = new SizeF (400' 130);  	float spacing = 4;  	string title = GettextCatalog.GetString ("View details");  	string altTitle = GettextCatalog.GetString ("Hide details");  	var buttonFrame = new RectangleF (0' 0' 0' 0);  	var button = new NSButton (buttonFrame) {  		BezelStyle = NSBezelStyle.Disclosure'  		Title = ""'  		AlternateTitle = ""'  	};  	button.SetButtonType (NSButtonType.OnOff);  	button.SizeToFit ();  	var label = new MDClickableLabel (title) {  		Alignment = NSTextAlignment.Left'  	};  	label.SizeToFit ();  	button.SetFrameSize (new SizeF (button.Frame.Width' Math.Max (button.Frame.Height' label.Frame.Height)));  	label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  	var text = new MyTextView (new RectangleF (0' 0' float.MaxValue' float.MaxValue)) {  		HorizontallyResizable = true'  	};  	text.TextContainer.ContainerSize = new SizeF (float.MaxValue' float.MaxValue);  	text.TextContainer.WidthTracksTextView = true;  	text.InsertText (new NSString (data.Exception.ToString ()));  	text.Editable = false;  	var scrollView = new NSScrollView (new RectangleF (PointF.Empty' SizeF.Empty)) {  		HasHorizontalScroller = true'  		HasVerticalScroller = true'  	};  	var accessory = new NSView (new RectangleF (0' 0' scrollSize.Width' button.Frame.Height));  	accessory.AddSubview (scrollView);  	accessory.AddSubview (button);  	accessory.AddSubview (label);  	alert.AccessoryView = accessory;  	button.Activated += delegate {  		float change;  		if (button.State == NSCellStateValue.On) {  			change = scrollSize.Height + spacing;  			label.StringValue = altTitle;  			scrollView.Hidden = false;  			scrollView.Frame = new RectangleF (PointF.Empty' scrollSize);  			scrollView.DocumentView = text;  		}  		else {  			change = -(scrollSize.Height + spacing);  			label.StringValue = title;  			scrollView.Hidden = true;  			scrollView.Frame = new RectangleF (PointF.Empty' SizeF.Empty);  		}  		var f = accessory.Frame;  		f.Height += change;  		accessory.Frame = f;  		var lf = label.Frame;  		lf.Y += change;  		label.Frame = lf;  		var bf = button.Frame;  		bf.Y += change;  		button.Frame = bf;  		label.SizeToFit ();  		var panel = (NSPanel)alert.Window;  		var pf = panel.Frame;  		pf.Height += change;  		pf.Y -= change;  		panel.SetFrame (pf' true' true);  		//unless we assign the icon again' it starts nesting old icon into the warning icon  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		alert.Layout ();  	};  	label.OnMouseUp += (sender' e) => button.PerformClick (e.Event);  }  
Magic Number,MonoDevelop.MacIntegration,MacExceptionDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\Dialogs\MacExceptionDialogHandler.cs,Run,The following statement contains a magic number: label.SetFrameOrigin (new PointF (button.Frame.Width + 5' button.Frame.Y));  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: DispatchService.GuiSyncDispatch (() =>  {  	using (var ns = new NSAutoreleasePool ()) {  		var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  		NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  		alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  		NSView view = new NSView (new RectangleF (0' 0' 313' 91));  		var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  		var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  			Identifier = "usernameLabel"'  			StringValue = "Username:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (usernameLabel);  		var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  		usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  		view.AddSubview (usernameInput);  		var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  			StringValue = "Password:"'  			Alignment = NSTextAlignment.Right'  			Editable = false'  			Bordered = false'  			DrawsBackground = false'  			Bezeled = false'  			Selectable = false'  		};  		view.AddSubview (passwordLabel);  		var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  		passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  		view.AddSubview (passwordInput);  		alert.AccessoryView = view;  		result = alert.RunModal () == 1;  		username = usernameInput.StringValue;  		password = passwordInput.StringValue;  	}  });  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacIntegration,MacProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacProxyCredentialProvider.cs,GetCredentials,The following statement contains a magic number: using (var ns = new NSAutoreleasePool ()) {  	var message = string.Format ("{0} needs {1} credentials to access {2}."' BrandingService.ApplicationName' credentialType == CredentialType.ProxyCredentials ? "proxy" : "request"' uri.Host);  	NSAlert alert = NSAlert.WithMessage ("Credentials Required"' "OK"' "Cancel"' null' message);  	alert.Icon = NSApplication.SharedApplication.ApplicationIconImage;  	NSView view = new NSView (new RectangleF (0' 0' 313' 91));  	var creds = Utility.GetCredentialsForUriFromICredentials (uri' existingCredentials);  	var usernameLabel = new NSTextField (new RectangleF (17' 55' 71' 17)) {  		Identifier = "usernameLabel"'  		StringValue = "Username:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (usernameLabel);  	var usernameInput = new NSTextField (new RectangleF (93' 52' 200' 22));  	usernameInput.StringValue = creds != null ? creds.UserName : string.Empty;  	view.AddSubview (usernameInput);  	var passwordLabel = new NSTextField (new RectangleF (22' 23' 66' 17)) {  		StringValue = "Password:"'  		Alignment = NSTextAlignment.Right'  		Editable = false'  		Bordered = false'  		DrawsBackground = false'  		Bezeled = false'  		Selectable = false'  	};  	view.AddSubview (passwordLabel);  	var passwordInput = new NSSecureTextField (new RectangleF (93' 20' 200' 22));  	passwordInput.StringValue = creds != null ? creds.Password : string.Empty;  	view.AddSubview (passwordInput);  	alert.AccessoryView = view;  	result = alert.RunModal () == 1;  	username = usernameInput.StringValue;  	password = passwordInput.StringValue;  }  
Magic Number,MonoDevelop.MacInterop,CoreFoundation,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\CoreFoundation.cs,FetchString,The following statement contains a magic number: if (u == IntPtr.Zero) {  	CFRange r = new CFRange (0' l);  	buffer = Marshal.AllocCoTaskMem (l * 2);  	CFStringGetCharacters (handle' r' buffer);  	u = buffer;  }  
Magic Number,MonoDevelop.MacInterop,CoreFoundation,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\CoreFoundation.cs,FetchString,The following statement contains a magic number: buffer = Marshal.AllocCoTaskMem (l * 2);  
Magic Number,MonoDevelop.MacInterop,AppleEvent,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\AppleEvent.cs,AEGetNthPtr,The following statement contains a magic number: CheckReturn (AEGetNthPtr (ref descList' index' desiredType' 0' 0' out ret' 4' 0));  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,LaunchServicesException,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\LaunchServices.cs,LookupErrorMessage,The following statement contains a magic number: switch (errorCode) {  case -10660:  	return "Can not launch applications from trash folder";  case -10661:  	return "Incorrect executable";  case -10662:  	return "Attribute not found";  case -10663:  	return "The attribute not settable";  case -10664:  	return "Incompatible application version";  case -10665:  	return "Required Rosetta environment not found";  case -10810:  	return "Unknown error";  case -10811:  	return "Not an application";  case -10813:  	return "Data Unavailable";  case -10814:  	return "Application not found";  case -10815:  	return "Unknown item type";  case -10816:  	return "Data too old";  case -10817:  	return "Data error";  case -10818:  	return "Launch in progress";  case -10819:  	return "Not registered";  case -10820:  	return "App does not claim type";  case -10821:  	return "App does not support scheme";  case -10822:  	return "Server communication error";  case -10823:  	return "Cannot set info";  case -10824:  	return "No registration info";  case -10825:  	return "App is incompatible with the system version";  case -10826:  	return "No launch permission";  case -10827:  	return "Executable is missing";  case -10828:  	return "Required Classic environment not found";  case -10829:  	return "Multiple sessions not supported";  default:  	return String.Format ("Unknown LaunchServices return code {0}"' errorCode);  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,CFStringGetString,The following statement contains a magic number: if (unicode == IntPtr.Zero) {  	var range = new CFRange (0' length);  	buffer = Marshal.AllocCoTaskMem (length * 2);  	CFStringGetCharacters (handle' range' buffer);  	unicode = buffer;  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,CFStringGetString,The following statement contains a magic number: buffer = Marshal.AllocCoTaskMem (length * 2);  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,GetSecAuthenticationType,The following statement contains a magic number: foreach (var pair in query.Substring (1).Split (new char[] {  	'&'  })) {  	var kvp = pair.ToLowerInvariant ().Split (new char[] {  		'='  	});  	if (kvp [0] == "auth" && kvp.Length == 2) {  		auth = kvp [1];  		break;  	}  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,GetSecAuthenticationType,The following statement contains a magic number: if (kvp [0] == "auth" && kvp.Length == 2) {  	auth = kvp [1];  	break;  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: fixed (byte* labelPtr = label' descPtr = desc' userPtr = user' hostPtr = host' pathPtr = path) {  	SecKeychainAttribute* attrs = stackalloc SecKeychainAttribute[8];  	int* protoPtr = (int*)&protocol;  	int* authPtr = (int*)&auth;  	int* portPtr = &port;  	int n = 0;  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Label' (uint)label.Length' (IntPtr)labelPtr);  	if (desc != null)  		attrs [n++] = new SecKeychainAttribute (SecItemAttr.Description' (uint)desc.Length' (IntPtr)descPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Account' (uint)user.Length' (IntPtr)userPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Protocol' (uint)4' (IntPtr)protoPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.AuthType' (uint)4' (IntPtr)authPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Server' (uint)host.Length' (IntPtr)hostPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Port' (uint)4' (IntPtr)portPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Path' (uint)path.Length' (IntPtr)pathPtr);  	SecKeychainAttributeList attrList = new SecKeychainAttributeList (n' (IntPtr)attrs);  	var item = IntPtr.Zero;  	var result = SecKeychainItemCreateFromContent (SecItemClass.InternetPassword' &attrList' (uint)passwd.Length' passwd' CurrentKeychain' IntPtr.Zero' ref item);  	CFRelease (item);  	return result;  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: fixed (byte* labelPtr = label' descPtr = desc' userPtr = user' hostPtr = host' pathPtr = path) {  	SecKeychainAttribute* attrs = stackalloc SecKeychainAttribute[8];  	int* protoPtr = (int*)&protocol;  	int* authPtr = (int*)&auth;  	int* portPtr = &port;  	int n = 0;  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Label' (uint)label.Length' (IntPtr)labelPtr);  	if (desc != null)  		attrs [n++] = new SecKeychainAttribute (SecItemAttr.Description' (uint)desc.Length' (IntPtr)descPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Account' (uint)user.Length' (IntPtr)userPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Protocol' (uint)4' (IntPtr)protoPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.AuthType' (uint)4' (IntPtr)authPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Server' (uint)host.Length' (IntPtr)hostPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Port' (uint)4' (IntPtr)portPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Path' (uint)path.Length' (IntPtr)pathPtr);  	SecKeychainAttributeList attrList = new SecKeychainAttributeList (n' (IntPtr)attrs);  	var item = IntPtr.Zero;  	var result = SecKeychainItemCreateFromContent (SecItemClass.InternetPassword' &attrList' (uint)passwd.Length' passwd' CurrentKeychain' IntPtr.Zero' ref item);  	CFRelease (item);  	return result;  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: fixed (byte* labelPtr = label' descPtr = desc' userPtr = user' hostPtr = host' pathPtr = path) {  	SecKeychainAttribute* attrs = stackalloc SecKeychainAttribute[8];  	int* protoPtr = (int*)&protocol;  	int* authPtr = (int*)&auth;  	int* portPtr = &port;  	int n = 0;  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Label' (uint)label.Length' (IntPtr)labelPtr);  	if (desc != null)  		attrs [n++] = new SecKeychainAttribute (SecItemAttr.Description' (uint)desc.Length' (IntPtr)descPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Account' (uint)user.Length' (IntPtr)userPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Protocol' (uint)4' (IntPtr)protoPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.AuthType' (uint)4' (IntPtr)authPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Server' (uint)host.Length' (IntPtr)hostPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Port' (uint)4' (IntPtr)portPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Path' (uint)path.Length' (IntPtr)pathPtr);  	SecKeychainAttributeList attrList = new SecKeychainAttributeList (n' (IntPtr)attrs);  	var item = IntPtr.Zero;  	var result = SecKeychainItemCreateFromContent (SecItemClass.InternetPassword' &attrList' (uint)passwd.Length' passwd' CurrentKeychain' IntPtr.Zero' ref item);  	CFRelease (item);  	return result;  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: fixed (byte* labelPtr = label' descPtr = desc' userPtr = user' hostPtr = host' pathPtr = path) {  	SecKeychainAttribute* attrs = stackalloc SecKeychainAttribute[8];  	int* protoPtr = (int*)&protocol;  	int* authPtr = (int*)&auth;  	int* portPtr = &port;  	int n = 0;  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Label' (uint)label.Length' (IntPtr)labelPtr);  	if (desc != null)  		attrs [n++] = new SecKeychainAttribute (SecItemAttr.Description' (uint)desc.Length' (IntPtr)descPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Account' (uint)user.Length' (IntPtr)userPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Protocol' (uint)4' (IntPtr)protoPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.AuthType' (uint)4' (IntPtr)authPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Server' (uint)host.Length' (IntPtr)hostPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Port' (uint)4' (IntPtr)portPtr);  	attrs [n++] = new SecKeychainAttribute (SecItemAttr.Path' (uint)path.Length' (IntPtr)pathPtr);  	SecKeychainAttributeList attrList = new SecKeychainAttributeList (n' (IntPtr)attrs);  	var item = IntPtr.Zero;  	var result = SecKeychainItemCreateFromContent (SecItemClass.InternetPassword' &attrList' (uint)passwd.Length' passwd' CurrentKeychain' IntPtr.Zero' ref item);  	CFRelease (item);  	return result;  }  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: attrs [n++] = new SecKeychainAttribute (SecItemAttr.Protocol' (uint)4' (IntPtr)protoPtr);  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: attrs [n++] = new SecKeychainAttribute (SecItemAttr.AuthType' (uint)4' (IntPtr)authPtr);  
Magic Number,MonoDevelop.MacInterop,Keychain,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Keychain.cs,AddInternetPassword,The following statement contains a magic number: attrs [n++] = new SecKeychainAttribute (SecItemAttr.Port' (uint)4' (IntPtr)portPtr);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,ConvertCharCode,The following statement contains a magic number: Debug.Assert (fourcc.Length == 4);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,ConvertCharCode,The following statement contains a magic number: return (fourcc [3]) | (fourcc [2] << 8) | (fourcc [1] << 16) | (fourcc [0] << 24);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,ConvertCharCode,The following statement contains a magic number: return (fourcc [3]) | (fourcc [2] << 8) | (fourcc [1] << 16) | (fourcc [0] << 24);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,ConvertCharCode,The following statement contains a magic number: return (fourcc [3]) | (fourcc [2] << 8) | (fourcc [1] << 16) | (fourcc [0] << 24);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,ConvertCharCode,The following statement contains a magic number: return (fourcc [3]) | (fourcc [2] << 8) | (fourcc [1] << 16) | (fourcc [0] << 24);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,ConvertCharCode,The following statement contains a magic number: return (fourcc [3]) | (fourcc [2] << 8) | (fourcc [1] << 16) | (fourcc [0] << 24);  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,UnConvertCharCode,The following statement contains a magic number: return new string (new char[] {  	(char)(i >> 24)'  	(char)(0xFF & (i >> 16))'  	(char)(0xFF & (i >> 8))'  	(char)(0xFF & i)'  });  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,UnConvertCharCode,The following statement contains a magic number: return new string (new char[] {  	(char)(i >> 24)'  	(char)(0xFF & (i >> 16))'  	(char)(0xFF & (i >> 8))'  	(char)(0xFF & i)'  });  
Magic Number,MonoDevelop.MacInterop,Carbon,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacInterop\Carbon.cs,UnConvertCharCode,The following statement contains a magic number: return new string (new char[] {  	(char)(i >> 24)'  	(char)(0xFF & (i >> 16))'  	(char)(0xFF & (i >> 8))'  	(char)(0xFF & i)'  });  
Missing Default,MonoDevelop.MacIntegration.MacMenu,MDMenuItem,C:\repos\joncloud_monodevelop\main\src\addins\MacPlatform\MacMenu\MDMenuItem.cs,GetFunctionKey,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.Return:  	return (FunctionKey)(uint)'\n';  case Gdk.Key.BackSpace:  	return (FunctionKey)0x08;  // NSBackspaceCharacter  case Gdk.Key.KP_Delete:  case Gdk.Key.Delete:  	return (FunctionKey)0x7F;  // NSDeleteCharacter  case Gdk.Key.KP_Up:  case Gdk.Key.Up:  	return FunctionKey.UpArrow;  case Gdk.Key.KP_Down:  case Gdk.Key.Down:  	return FunctionKey.DownArrow;  case Gdk.Key.KP_Left:  case Gdk.Key.Left:  	return FunctionKey.LeftArrow;  case Gdk.Key.KP_Right:  case Gdk.Key.Right:  	return FunctionKey.RightArrow;  case Gdk.Key.F1:  	return FunctionKey.F1;  case Gdk.Key.F2:  	return FunctionKey.F2;  case Gdk.Key.F3:  	return FunctionKey.F3;  case Gdk.Key.F4:  	return FunctionKey.F4;  case Gdk.Key.F5:  	return FunctionKey.F5;  case Gdk.Key.F6:  	return FunctionKey.F6;  case Gdk.Key.F7:  	return FunctionKey.F7;  case Gdk.Key.F8:  	return FunctionKey.F8;  case Gdk.Key.F9:  	return FunctionKey.F9;  case Gdk.Key.F10:  	return FunctionKey.F10;  case Gdk.Key.F11:  	return FunctionKey.F11;  case Gdk.Key.F12:  	return FunctionKey.F12;  case Gdk.Key.F13:  	return FunctionKey.F13;  case Gdk.Key.F14:  	return FunctionKey.F14;  case Gdk.Key.F15:  	return FunctionKey.F15;  case Gdk.Key.F16:  	return FunctionKey.F16;  case Gdk.Key.F17:  	return FunctionKey.F17;  case Gdk.Key.F18:  	return FunctionKey.F18;  case Gdk.Key.F19:  	return FunctionKey.F19;  case Gdk.Key.F20:  	return FunctionKey.F20;  case Gdk.Key.F21:  	return FunctionKey.F21;  case Gdk.Key.F22:  	return FunctionKey.F22;  case Gdk.Key.F23:  	return FunctionKey.F23;  case Gdk.Key.F24:  	return FunctionKey.F24;  case Gdk.Key.F25:  	return FunctionKey.F25;  case Gdk.Key.F26:  	return FunctionKey.F26;  case Gdk.Key.F27:  	return FunctionKey.F27;  case Gdk.Key.F28:  	return FunctionKey.F28;  case Gdk.Key.F29:  	return FunctionKey.F29;  case Gdk.Key.F30:  	return FunctionKey.F30;  case Gdk.Key.F31:  	return FunctionKey.F31;  case Gdk.Key.F32:  	return FunctionKey.F32;  case Gdk.Key.F33:  	return FunctionKey.F33;  case Gdk.Key.F34:  	return FunctionKey.F34;  case Gdk.Key.F35:  	return FunctionKey.F35;  case Gdk.Key.KP_Insert:  case Gdk.Key.Insert:  	return FunctionKey.Insert;  case Gdk.Key.KP_Home:  case Gdk.Key.Home:  	return FunctionKey.Home;  case Gdk.Key.Begin:  	return FunctionKey.Begin;  case Gdk.Key.KP_End:  case Gdk.Key.End:  	return FunctionKey.End;  case Gdk.Key.KP_Page_Up:  case Gdk.Key.Page_Up:  	return FunctionKey.PageUp;  case Gdk.Key.KP_Page_Down:  case Gdk.Key.Page_Down:  	return FunctionKey.PageDown;  case Gdk.Key.Key_3270_PrintScreen:  	return FunctionKey.PrintScreen;  case Gdk.Key.Scroll_Lock:  	return FunctionKey.ScrollLock;  case Gdk.Key.Pause:  	return FunctionKey.Pause;  case Gdk.Key.Sys_Req:  	return FunctionKey.SysReq;  case Gdk.Key.Break:  	return FunctionKey.Break;  case Gdk.Key.Key_3270_Reset:  	return FunctionKey.Reset;  case Gdk.Key.Menu:  	return FunctionKey.Menu;  case Gdk.Key.Print:  	return FunctionKey.Print;  case Gdk.Key.Help:  	return FunctionKey.Help;  case Gdk.Key.Find:  	return FunctionKey.Find;  case Gdk.Key.Undo:  	return FunctionKey.Undo;  case Gdk.Key.Redo:  	return FunctionKey.Redo;  case Gdk.Key.Execute:  	return FunctionKey.Execute;  /* 				return FunctionKey.Stop; 				return FunctionKey.User; 				return FunctionKey.System; 				return FunctionKey.ClearLine; 				return FunctionKey.ClearDisplay; 				return FunctionKey.InsertLine; 				return FunctionKey.DeleteLine; 				return FunctionKey.InsertChar; 				return FunctionKey.DeleteChar; 				return FunctionKey.Next; 				return FunctionKey.Prev; 				return FunctionKey.Select; 				return FunctionKey.ModeSwitch; 				*/}  
