Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,Cyclomatic complexity of the method is 12
Complex Method,Mono.MHex.Data,PieceTable,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\PieceTable.cs,Remove,Cyclomatic complexity of the method is 8
Complex Method,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,HexEditorDataSelectionChanged,Cyclomatic complexity of the method is 13
Complex Method,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,OnDraw,Cyclomatic complexity of the method is 10
Complex Method,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,Cyclomatic complexity of the method is 8
Complex Method,Mono.MHex.Rendering,Margin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,HandleSelection,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.HexEditor,HexEditorVisualizer,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,GetVisualizerWidget,Cyclomatic complexity of the method is 10
Long Parameter List,Mono.MHex.Data,PieceTable,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\PieceTable.cs,PieceTable,The method has 6 parameters.
Long Parameter List,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,HexEditor,The method has 5 parameters.
Long Parameter List,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,RepaintMarginArea,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,Margin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,HandleSelection,The method has 6 parameters.
Long Parameter List,Mono.MHex.Rendering,Margin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\Margin.cs,Draw,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,Draw,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,TextEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,Draw,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,GutterMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\GutterMargin.cs,Draw,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,EmptySpaceMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\EmptySpaceMargin.cs,Draw,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,Draw,The method has 5 parameters.
Long Parameter List,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The method has 6 parameters.
Long Statement,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The length of the statement  "	if (parent.color == black && sibling.color == black && GetColorSafe (sibling.left) == black && GetColorSafe (sibling.right) == black) { " is 135.
Long Statement,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The length of the statement  "	if (parent.color == red && sibling.color == black && GetColorSafe (sibling.left) == black && GetColorSafe (sibling.right) == black) { " is 133.
Long Statement,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The length of the statement  "	if (node == parent.left && sibling.color == black && GetColorSafe (sibling.left) == red && GetColorSafe (sibling.right) == black) { " is 131.
Long Statement,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The length of the statement  "	else if (node == parent.right && sibling.color == black && GetColorSafe (sibling.right) == red && GetColorSafe (sibling.left) == black) { " is 137.
Long Statement,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,AppendNode,The length of the statement  "	builder.Append (GetIndent (indent) + "Node (" + (node.color == red ? "r" : "b") + "):" + node.value.ToString () + Environment.NewLine); " is 135.
Long Statement,Mono.MHex.Data,LineUpdateRequest,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\UpdateRequest.cs,AddRedraw,The length of the statement  "	editor.RepaintArea (0' (int)(Line * editor.LineHeight - editor.HexEditorData.VAdjustment.Value)' editor.Bounds.Width' editor.LineHeight); " is 137.
Long Statement,Mono.MHex.Data,MarginLineUpdateRequest,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\UpdateRequest.cs,AddRedraw,The length of the statement  "		editor.RepaintMarginArea (margin' margin.XOffset' (int)(Line * editor.LineHeight - editor.HexEditorData.VAdjustment.Value)' margin.Width' editor.LineHeight); " is 157.
Long Statement,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,HAdjustmentValueChanged,The length of the statement  "	//			this.RepaintArea (this.textViewMargin.XOffset' 0' this.Bounds.Width - this.textViewMargin.XOffset' this.Bounds.Height); " is 124.
Long Statement,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,RepaintLines,The length of the statement  "	RepaintArea (0' (int)(start * LineHeight - HexEditorData.VAdjustment.Value)' Bounds.Width' (int)((end - start) * LineHeight)); " is 126.
Long Statement,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,ScrollToCaret,The length of the statement  "	HexEditorData.VAdjustment.Value = System.Math.Max (caretY - HexEditorData.VAdjustment.PageSize + LineHeight' System.Math.Min (caretY' HexEditorData.VAdjustment.Value)); " is 168.
Long Statement,Mono.MHex,CaretMoveActions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\CaretMoveActions.cs,LineEnd,The length of the statement  "	data.Caret.Offset = System.Math.Min (data.Length - 1' data.Caret.Offset + data.BytesInRow - 1 - data.Caret.Offset % data.BytesInRow); " is 133.
Long Statement,Mono.MHex,CaretMoveActions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\CaretMoveActions.cs,PageUp,The length of the statement  "	data.VAdjustment.Value = System.Math.Max (data.VAdjustment.LowerValue' data.VAdjustment.Value - data.VAdjustment.PageSize); " is 123.
Long Statement,Mono.MHex,CaretMoveActions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\CaretMoveActions.cs,PageDown,The length of the statement  "	data.VAdjustment.Value = System.Math.Min (data.VAdjustment.UpperValue - data.VAdjustment.PageSize' data.VAdjustment.Value + data.VAdjustment.PageSize); " is 151.
Long Statement,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "	keyBindings.Add (GetKeyCode (Key.NumPadHome' ModifierKeys.Shift | ModifierKeys.Control)' SelectionActions.MoveToDocumentStart); " is 127.
Long Statement,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "	keyBindings.Add (GetKeyCode (Key.Home' ModifierKeys.Shift | ModifierKeys.Control)' SelectionActions.MoveToDocumentStart); " is 121.
Long Statement,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InitDefaultBindings,The length of the statement  "	keyBindings.Add (GetKeyCode (Key.NumPadEnd' ModifierKeys.Shift | ModifierKeys.Control)' SelectionActions.MoveToDocumentEnd); " is 124.
Long Statement,Mono.MHex,ScrollActions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\ScrollActions.cs,Up,The length of the statement  "	data.VAdjustment.Value = System.Math.Max (data.VAdjustment.LowerValue' data.VAdjustment.Value - data.VAdjustment.StepIncrement); " is 128.
Long Statement,Mono.MHex,ScrollActions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\ScrollActions.cs,Down,The length of the statement  "	data.VAdjustment.Value = System.Math.Min (data.VAdjustment.UpperValue - data.VAdjustment.PageSize' data.VAdjustment.Value + data.VAdjustment.StepIncrement); " is 156.
Complex Conditional,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "parent.color == black && sibling.color == black && GetColorSafe (sibling.left) == black && GetColorSafe (sibling.right) == black"  is complex.
Complex Conditional,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "parent.color == red && sibling.color == black && GetColorSafe (sibling.left) == black && GetColorSafe (sibling.right) == black"  is complex.
Complex Conditional,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "node == parent.left && sibling.color == black && GetColorSafe (sibling.left) == red && GetColorSafe (sibling.right) == black"  is complex.
Complex Conditional,Mono.MHex.Data,RedBlackTree,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\RedBlackTree.cs,DeleteOneChild,The conditional expression  "node == parent.right && sibling.color == black && GetColorSafe (sibling.right) == red && GetColorSafe (sibling.left) == black"  is complex.
Complex Conditional,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,The conditional expression  "(char.IsLetterOrDigit (ch) || char.IsPunctuation (ch) || ch == ' ') && unicodeChar <= 255"  is complex.
Empty Catch Block,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,UpdateCaret,The method has an empty catch block.
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,ResetCaretBlink,The following statement contains a magic number: lock (lockObject) {  	if (caretTimer != null)  		StopCaretThread ();  	if (caretTimer == null) {  		caretTimer = new Timer (800);  		caretTimer.Elapsed += UpdateCaret;  	}  	caretBlink = true;  	caretTimer.Start ();  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,ResetCaretBlink,The following statement contains a magic number: if (caretTimer == null) {  	caretTimer = new Timer (800);  	caretTimer.Elapsed += UpdateCaret;  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,ResetCaretBlink,The following statement contains a magic number: caretTimer = new Timer (800);  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,DrawCaret,The following statement contains a magic number: if (HexEditorData.Caret.IsInsertMode) {  	ctx.Rectangle (caretX' (int)caretY' 2' LineHeight);  }  else {  	ctx.Rectangle (caretX' (int)caretY' textEditorMargin.charWidth' LineHeight);  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,DrawCaret,The following statement contains a magic number: ctx.Rectangle (caretX' (int)caretY' 2' LineHeight);  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: for (int i = start; i < 100; i += Options.GroupBytes) {  	double width = margins.Sum (margin => margin.CalculateWidth (i));  	if (width > maxWidth) {  		BytesInRow = i - Options.GroupBytes;  		if (i == start) {  			WidthRequest = margins.Sum (margin => margin.CalculateWidth (BytesInRow + BytesInRow - 1));  		}  		else {  			WidthRequest = 10;  		}  		break;  	}  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: for (int i = start; i < 100; i += Options.GroupBytes) {  	double width = margins.Sum (margin => margin.CalculateWidth (i));  	if (width > maxWidth) {  		BytesInRow = i - Options.GroupBytes;  		if (i == start) {  			WidthRequest = margins.Sum (margin => margin.CalculateWidth (BytesInRow + BytesInRow - 1));  		}  		else {  			WidthRequest = 10;  		}  		break;  	}  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: if (width > maxWidth) {  	BytesInRow = i - Options.GroupBytes;  	if (i == start) {  		WidthRequest = margins.Sum (margin => margin.CalculateWidth (BytesInRow + BytesInRow - 1));  	}  	else {  		WidthRequest = 10;  	}  	break;  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: if (i == start) {  	WidthRequest = margins.Sum (margin => margin.CalculateWidth (BytesInRow + BytesInRow - 1));  }  else {  	WidthRequest = 10;  }  
Magic Number,Mono.MHex,HexEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditor.cs,CalculateBytesInRow,The following statement contains a magic number: WidthRequest = 10;  
Magic Number,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,The following statement contains a magic number: if (HexEditorData.Caret.InTextEditor) {  	if ((char.IsLetterOrDigit (ch) || char.IsPunctuation (ch) || ch == ' ') && unicodeChar <= 255) {  		if (HexEditorData.Caret.IsInsertMode) {  			HexEditorData.Insert (HexEditorData.Caret.Offset' (byte)unicodeChar);  		}  		else {  			HexEditorData.Replace (HexEditorData.Caret.Offset' 1' (byte)unicodeChar);  		}  		Editor.Margins.ForEach (margin => margin.PurgeLayoutCache ());  		CaretMoveActions.Right (HexEditorData);  	}  }  else {  	string hex = "0123456789ABCDEF";  	int idx = hex.IndexOf (char.ToUpper (ch));  	if (idx >= 0) {  		if (HexEditorData.Caret.Offset >= HexEditorData.Length)  			HexEditorData.Insert (HexEditorData.Length' 0);  		if (HexEditorData.Caret.IsInsertMode && HexEditorData.Caret.SubPosition == 0) {  			HexEditorData.Insert (HexEditorData.Caret.Offset' (byte)(idx * 0x10));  		}  		else {  			byte cur = HexEditorData.GetByte (HexEditorData.Caret.Offset);  			int newByte = HexEditorData.Caret.SubPosition == 0 ? cur & 0xF | idx * 0x10 : cur & 0xF0 | idx;  			HexEditorData.Replace (HexEditorData.Caret.Offset' 1' (byte)newByte);  		}  		Editor.Margins.ForEach (margin => margin.PurgeLayoutCache ());  		CaretMoveActions.Right (HexEditorData);  	}  }  
Magic Number,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,InsertCharacter,The following statement contains a magic number: if ((char.IsLetterOrDigit (ch) || char.IsPunctuation (ch) || ch == ' ') && unicodeChar <= 255) {  	if (HexEditorData.Caret.IsInsertMode) {  		HexEditorData.Insert (HexEditorData.Caret.Offset' (byte)unicodeChar);  	}  	else {  		HexEditorData.Replace (HexEditorData.Caret.Offset' 1' (byte)unicodeChar);  	}  	Editor.Margins.ForEach (margin => margin.PurgeLayoutCache ());  	CaretMoveActions.Right (HexEditorData);  }  
Magic Number,Mono.MHex,SimpleEditMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\SimpleEditMode.cs,GetKeyCode,The following statement contains a magic number: return (int)key | (int)(m << 16);  
Magic Number,Mono.MHex,HexEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomIn,The following statement contains a magic number: zoom *= 1.1;  
Magic Number,Mono.MHex,HexEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomIn,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));  
Magic Number,Mono.MHex,HexEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomIn,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));  
Magic Number,Mono.MHex,HexEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomOut,The following statement contains a magic number: zoom *= 0.9;  
Magic Number,Mono.MHex,HexEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomOut,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));  
Magic Number,Mono.MHex,HexEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex\HexEditorOptions.cs,ZoomOut,The following statement contains a magic number: Zoom = System.Math.Min (8.0' System.Math.Max (0.7' zoom));  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: if (Data.IsSomethingSelected) {  	ISegment selection = Data.MainSelection.Segment;  	HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  		result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  		result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	});  }  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: if (Data.IsSomethingSelected) {  	ISegment selection = Data.MainSelection.Segment;  	HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  		result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  		result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	});  }  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: if (Data.IsSomethingSelected) {  	ISegment selection = Data.MainSelection.Segment;  	HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  		result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  		result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	});  }  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: if (Data.IsSomethingSelected) {  	ISegment selection = Data.MainSelection.Segment;  	HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  		result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  		result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	});  }  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  	result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  });  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  	result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  });  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  	result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  });  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: HandleSelection (selection.Offset' selection.EndOffset' startOffset' endOffset' null' delegate (long start' long end) {  	result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  	result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  });  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: result.Layout.SetForeground (Style.Selection' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,RenderLine,The following statement contains a magic number: result.Layout.SetBackground (Style.SelectionBg' (int)(start - startOffset) * 3' (int)(end - start) * 3 - 1);  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,TranslateColumn,The following statement contains a magic number: return (uint)(column * 3);  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,MousePressed,The following statement contains a magic number: Caret.SubPosition = groupChar % 2;  
Magic Number,Mono.MHex.Rendering,HexEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\HexEditorMargin.cs,GetOffset,The following statement contains a magic number: return line * BytesInRow + groupNumber * Editor.Options.GroupBytes + groupChar / 2;  
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,The following statement contains a magic number: for (int i = 0; i < lineBytes.Length; i++) {  	byte b = lineBytes [i];  	char ch = (char)b;  	if (b < 128 && (Char.IsLetterOrDigit (ch) || Char.IsPunctuation (ch))) {  		sb.Append (ch);  	}  	else {  		sb.Append (".");  	}  }  
Magic Number,Mono.MHex.Rendering,TextEditorMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\TextEditorMargin.cs,RenderLine,The following statement contains a magic number: if (b < 128 && (Char.IsLetterOrDigit (ch) || Char.IsPunctuation (ch))) {  	sb.Append (ch);  }  else {  	sb.Append (".");  }  
Magic Number,Mono.MHex.Rendering,GutterMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\GutterMargin.cs,Draw,The following statement contains a magic number: if (line >= 0 && line * Editor.BytesInRow < Data.Length) {  	LayoutWrapper layout = GetLayout (line);  	var sz = layout.Layout.GetSize ();  	ctx.SetColor (line != Caret.Line ? Style.HexOffset : Style.HexOffsetHighlighted);  	ctx.DrawTextLayout (layout.Layout' x + Width - sz.Width - 4' y);  	if (layout.IsUncached)  		layout.Dispose ();  }  
Magic Number,Mono.MHex.Rendering,GutterMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\GutterMargin.cs,Draw,The following statement contains a magic number: ctx.DrawTextLayout (layout.Layout' x + Width - sz.Width - 4' y);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,OptionsChanged,The following statement contains a magic number: marginWidth *= 12;  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,OptionsChanged,The following statement contains a magic number: marginWidth /= 10;  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: DrawRoundRectangle (cr' x + 1' y + 1' 8' Width - 4' Editor.LineHeight - 4);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: DrawRoundRectangle (cr' x + 1' y + 1' 8' Width - 4' Editor.LineHeight - 4);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: DrawRoundRectangle (cr' x + 1' y + 1' 8' Width - 4' Editor.LineHeight - 4);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: using (var pat = new LinearGradient (x + Width / 4' y' x + Width / 2' y + Editor.LineHeight - 4)) {  	pat.AddColorStop (0' color1);  	pat.AddColorStop (1' color2);  	cr.Pattern = pat;  	cr.FillPreserve ();  }  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: using (var pat = new LinearGradient (x + Width / 4' y' x + Width / 2' y + Editor.LineHeight - 4)) {  	pat.AddColorStop (0' color1);  	pat.AddColorStop (1' color2);  	cr.Pattern = pat;  	cr.FillPreserve ();  }  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawBookmark,The following statement contains a magic number: using (var pat = new LinearGradient (x + Width / 4' y' x + Width / 2' y + Editor.LineHeight - 4)) {  	pat.AddColorStop (0' color1);  	pat.AddColorStop (1' color2);  	cr.Pattern = pat;  	cr.FillPreserve ();  }  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: if (radius_x > w - radius_x)  	radius_x = w / 2;  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: radius_x = w / 2;  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: if (radius_y > h - radius_y)  	radius_y = h / 2;  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: radius_y = h / 2;  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (w - 2 * radius_x' 0.0);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (0' h - 2 * radius_y);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (-w + 2 * radius_x' 0);  
Magic Number,Mono.MHex.Rendering,IconMargin,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Rendering\IconMargin.cs,DrawRoundRectangle,The following statement contains a magic number: cr.RelLineTo (0' -h + 2 * radius_y);  
Magic Number,MonoDevelop.HexEditor,RawStringBuffer,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,RawStringBuffer,The following statement contains a magic number: Bytes = new byte[raw.Length * 2];  
Magic Number,MonoDevelop.HexEditor,RawStringBuffer,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,RawStringBuffer,The following statement contains a magic number: Length = raw.Length * 2;  
Missing Default,Mono.MHex.Data,HexEditorData,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\Mono.MHex.Data\HexEditorData.cs,DeleteSelection,The following switch statement is missing a default case: switch (MainSelection.SelectionMode) {  case SelectionMode.Normal:  	Remove (MainSelection.Segment);  	break;  case SelectionMode.Block:  	throw new NotImplementedException ();  }  
Missing Default,MonoDevelop.HexEditor,HexEditorVisualizer,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.HexEditor\MonoDevelop.HexEditor\HexEditorVisualizer.cs,GetVisualizerWidget,The following switch statement is missing a default case: switch (val.TypeName) {  case "sbyte[]":  	buffer = new RawSByteArrayBuffer (raw);  	break;  case "char[]":  	buffer = new RawCharArrayBuffer (raw);  	break;  case "byte[]":  	buffer = new RawByteArrayBuffer (raw);  	break;  }  
