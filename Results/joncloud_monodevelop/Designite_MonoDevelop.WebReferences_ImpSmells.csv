Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.WebReferences,Library,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\Library.cs,GenerateWsdlXml,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.WebReferences,DiscoveryProtocol,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\DiscoveryProtocol.cs,ReadAllUseBasePath,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.WebReferences,WebServiceDiscoveryResult,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\WebServiceDiscoveryResult.cs,GenerateFiles,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,Browser_GoButtonClicked,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,UpdateService,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,OnBtnConfigClicked,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,Cyclomatic complexity of the method is 59
Complex Method,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,OnBtnBackClicked,Cyclomatic complexity of the method is 8
Complex Method,Mono.ServiceContractTool,MoonlightChannelBaseContext,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,FindClientType,Cyclomatic complexity of the method is 10
Complex Method,Mono.ServiceContractTool,MoonlightChannelBaseContractExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,Fixup,Cyclomatic complexity of the method is 11
Complex Method,Mono.ServiceContractTool,MoonlightChannelBaseContractExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,EliminateSync,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.WebReferences.WCF,WebServiceEngineWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceEngineWCF.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.WebReferences.WCF,WebServiceDiscoveryResultWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceDiscoveryResultWCF.cs,CreateProxyFile,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.WebReferences.WCF,WebServiceDiscoveryResultWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceDiscoveryResultWCF.cs,ConvertMapFile,Cyclomatic complexity of the method is 13
Long Parameter List,MonoDevelop.WebReferences,WebReferenceItem,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\WebReferenceItem.cs,WebReferenceItem,The method has 5 parameters.
Long Parameter List,MonoDevelop.WebReferences.NodeBuilders,WebReferenceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.NodeBuilders\WebReferenceFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.WebReferences.NodeBuilders,WebReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.NodeBuilders\WebReferenceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.WebReferences.WCF,WebServiceDiscoveryResultWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceDiscoveryResultWCF.cs,WebServiceDiscoveryResultWCF,The method has 5 parameters.
Long Statement,MonoDevelop.WebReferences,Library,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\Library.cs,GenerateDiscoXml,The length of the statement  "			text.AppendFormat ("<b>Service: {0}</b>\n<span size='small'>{1}</span>"' Path.GetFileNameWithoutExtension (dref.DefaultFilename)' dref.Url); " is 140.
Long Statement,MonoDevelop.WebReferences,WebServiceDiscoveryResult,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\WebServiceDiscoveryResult.cs,GenerateFiles,The length of the statement  "		string targetName = project.TargetRuntime.AssemblyContext.GetAssemblyNameForVersion (refName' null' project.TargetFramework); " is 125.
Long Statement,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,OnBtnOKClicked,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("Web reference already exists")' GettextCatalog.GetString ("A web service reference with the name '{0}' already exists in the project. Please use a different name."' tbxReferenceName.Text)); " is 242.
Long Statement,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,OnBtnOKClicked,The length of the statement  "		MessageService.ShowError (GettextCatalog.GetString ("Web reference already exists")' GettextCatalog.GetString ("The web service '{0}' already exists with the name '{1}'"' ServiceUrl' webref.RelPath.FileName)); " is 209.
Long Statement,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The length of the statement  "		UpdateReferenceContext.BeginProgress (GettextCatalog.GetPluralString ("Updating web reference"' "Updating web references"' items.Count)); " is 137.
Long Statement,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The length of the statement  "				DispatchService.GuiDispatch (() => UpdateReferenceContext.SetProgressFraction (Math.Max (0.1' (double)i / items.Count))); " is 121.
Long Statement,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The length of the statement  "				IdeApp.Workbench.StatusBar.ShowMessage (GettextCatalog.GetPluralString ("Updated Web Reference {0}"' "Updated Web References"' items.Count' items [0].Name)); " is 157.
Long Statement,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,Delete,The length of the statement  "	if (!MessageService.Confirm (GettextCatalog.GetString ("Are you sure you want to delete the web service reference '{0}'?"' item.Name)' AlertButton.Delete)) " is 155.
Long Statement,Mono.ServiceContractTool,MoonlightChannelBaseContractExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,Fixup,The length of the statement  "	creator.Statements.Add (new CodeMethodReturnStatement (new CodeCastExpression (gt' new CodeObjectCreateExpression (new CodeTypeReference (name)' new CodeThisReferenceExpression ())))); " is 184.
Long Statement,Mono.ServiceContractTool,MoonlightChannelBaseContractExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,EliminateSync,The length of the statement  "	// remove such OperationContract methods that do not have AsyncPattern parameter. It is sort of hack as it does not check the value (it might be "false"). " is 154.
Long Statement,Mono.ServiceContractTool,MoonlightChannelBaseOperationExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,FixupSync,The length of the statement  "	var argsDecl = new CodeVariableDeclarationStatement (typeof(object[])' "args"' new CodeArrayCreateExpression (typeof(object)' inArgs.ConvertAll<CodeExpression> (decl => new CodeArgumentReferenceExpression (decl.Name)).ToArray ())); " is 231.
Long Statement,Mono.ServiceContractTool,MoonlightChannelBaseOperationExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,FixupAsync,The length of the statement  "	var call = new CodeMethodInvokeExpression (baseExpr' "BeginInvoke"' new CodePrimitiveExpression (od.Name)' new CodeArrayCreateExpression (typeof(object)' inArgs.ConvertAll<CodeExpression> (decl => new CodeArgumentReferenceExpression (decl.Name)).ToArray ())' new CodeArgumentReferenceExpression ("asyncCallback")' new CodeArgumentReferenceExpression ("userState")); " is 365.
Long Statement,Mono.ServiceContractTool,MoonlightChannelBaseOperationExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,FixupAsync,The length of the statement  "	var argsDecl = new CodeVariableDeclarationStatement (typeof(object[])' "args"' new CodeArrayCreateExpression (typeof(object)' new CodePrimitiveExpression (outArgs.Count))); " is 172.
Long Statement,Mono.ServiceContractTool,MoonlightChannelBaseOperationExtension,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\MoonlightChannelBaseExtension.cs,FixupAsync,The length of the statement  "	var ret = new CodeMethodInvokeExpression (baseExpr' "EndInvoke"' new CodePrimitiveExpression (od.Name)' new CodeVariableReferenceExpression ("args")' new CodeArgumentReferenceExpression (resultArgName)); " is 203.
Long Statement,MonoDevelop.WebReferences.WCF,WebServiceEngineWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceEngineWCF.cs,GetReferenceItems,The length of the statement  "			yield return new WebReferenceItem (this' project' mds.Path.CanonicalPath.FileName' mapFile.FilePath.ParentDirectory' mapFile); " is 126.
Long Statement,MonoDevelop.WebReferences.WCF,WebServiceEngineWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceEngineWCF.cs,Delete,The length of the statement  "	WCFMetadataStorage metStor = project.Items.GetAll<WCFMetadataStorage> ().FirstOrDefault (m => m.Path.CanonicalPath == item.BasePath); " is 133.
Long Statement,MonoDevelop.WebReferences.WCF,WebServiceDiscoveryResultWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceDiscoveryResultWCF.cs,GenerateDescriptionFiles,The length of the statement  "	WCFMetadataStorage metStor = dotNetProject.Items.GetAll<WCFMetadataStorage> ().FirstOrDefault (m => m.Path.CanonicalPath == basePath); " is 134.
Long Statement,MonoDevelop.WebReferences.WS,WebServiceEngineWS,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WS\WebServiceEngineWS.cs,GetReferenceItems,The length of the statement  "			yield return new WebReferenceItem (this' project' wru.RelPath.CanonicalPath.FileName' mapFile.FilePath.ParentDirectory' mapFile); " is 129.
Long Statement,MonoDevelop.WebReferences.WS,WebServiceEngineWS,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WS\WebServiceEngineWS.cs,Delete,The length of the statement  "	WebReferenceUrl wru = project.Items.GetAll<WebReferenceUrl> ().FirstOrDefault (m => m.RelPath.CanonicalPath == item.BasePath); " is 126.
Long Statement,MonoDevelop.WebReferences.WS,WebServiceDiscoveryResultWS,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WS\WebServiceDiscoveryResultWS.cs,GenerateDescriptionFiles,The length of the statement  "	WebReferenceUrl wru = dotNetProject.Items.GetAll<WebReferenceUrl> ().FirstOrDefault (m => m.RelPath.CanonicalPath == basePath); " is 127.
Long Statement,MonoDevelop.WebReferences.WS,WebServiceDiscoveryResultWS,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WS\WebServiceDiscoveryResultWS.cs,Update,The length of the statement  "	WebReferenceUrl wru = Item.Project.Items.GetAll<WebReferenceUrl> ().FirstOrDefault (m => m.RelPath.CanonicalPath == Item.BasePath); " is 131.
Long Statement,MonoDevelop.WebReferences.WS,WebServiceDiscoveryResultWS,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WS\WebServiceDiscoveryResultWS.cs,CreateProxyFile,The length of the statement  "					urlConstructor.Statements.Add (new CodeAssignStatement (new CodePropertyReferenceExpression (new CodeThisReferenceExpression ()' "Url")' new CodeVariableReferenceExpression ("url"))); " is 183.
Long Statement,MonoDevelop.WebReferences.WS,WebServiceDiscoveryResultWS,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WS\WebServiceDiscoveryResultWS.cs,GetServiceURL,The length of the statement  "	WebReferenceUrl wru = Item.Project.Items.GetAll<WebReferenceUrl> ().FirstOrDefault (m => m.RelPath.CanonicalPath == Item.BasePath); " is 131.
Virtual Method Call from Constructor,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,WebReferenceDialog,The constructor "WebReferenceDialog" calls a virtual method "GetServiceURL".
Empty Catch Block,MonoDevelop.WebReferences,Library,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\Library.cs,ReadServiceDescription,The method has an empty catch block.
Empty Catch Block,MonoDevelop.WebReferences.WCF,WebServiceDiscoveryResultWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceDiscoveryResultWCF.cs,CreateProxyFile,The method has an empty catch block.
Magic Number,MonoDevelop.WebReferences,WebReferenceFolder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences\WebReferenceFolder.cs,GetHashCode,The following statement contains a magic number: return project.GetHashCode () + 2;  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,UpdateService,The following statement contains a magic number: if (service == null) {  	IsWebService = false;  	selectedService = null;  }  else {  	// Set the Default Namespace and Reference  	tbxNamespace.Text = DefaultNamespace;  	if (project != null) {  		string name = DefaultReferenceName;  		var items = WebReferencesService.GetWebReferenceItems (project);  		if (items.Any (it => it.Name == name)) {  			int num = 2;  			while (items.Any (it => it.Name == name + "_" + num))  				num++;  			name = name + "_" + num;  		}  		tbxReferenceName.Text = name;  	}  	IsWebService = true;  	selectedService = service;  	if (docLabel != null) {  		docLabel.Wrap = false;  		text.Append (service.GetDescriptionMarkup ());  	}  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,UpdateService,The following statement contains a magic number: if (project != null) {  	string name = DefaultReferenceName;  	var items = WebReferencesService.GetWebReferenceItems (project);  	if (items.Any (it => it.Name == name)) {  		int num = 2;  		while (items.Any (it => it.Name == name + "_" + num))  			num++;  		name = name + "_" + num;  	}  	tbxReferenceName.Text = name;  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,UpdateService,The following statement contains a magic number: if (items.Any (it => it.Name == name)) {  	int num = 2;  	while (items.Any (it => it.Name == name + "_" + num))  		num++;  	name = name + "_" + num;  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,The following statement contains a magic number: switch (state) {  case DialogState.Create:  case DialogState.Modify:  	if (WebBrowserService.CanGetWebBrowser) {  		browser = WebBrowserService.GetWebBrowser ();  		browserWidget = (Widget)browser;  		browser.LocationChanged += Browser_LocationChanged;  		browser.NetStart += Browser_StartLoading;  		browser.NetStop += Browser_StopLoading;  		frmBrowser.Add (browserWidget);  		browser.LoadUrl (tbxReferenceURL.Text);  		browserWidget.Show ();  	}  	else {  		docLabel = new Label ();  		docLabel.Xpad = 6;  		docLabel.Ypad = 6;  		docLabel.Xalign = 0;  		docLabel.Yalign = 0;  		sw = new ScrolledWindow ();  		sw.ShadowType = ShadowType.In;  		sw.AddWithViewport (docLabel);  		sw.ShowAll ();  		frmBrowser.Add (sw);  		UpdateLocation ();  	}  	break;  case DialogState.ModifyConfig:  case DialogState.CreateConfig:  	if (!hasConfig)  		return;  	sw = new ScrolledWindow ();  	sw.ShadowType = ShadowType.In;  	wcfConfig = new WCFConfigWidget (wcfOptions);  	sw.AddWithViewport (wcfConfig);  	sw.ShowAll ();  	frmBrowser.Add (sw);  	break;  default:  	throw new InvalidOperationException ();  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,The following statement contains a magic number: switch (state) {  case DialogState.Create:  case DialogState.Modify:  	if (WebBrowserService.CanGetWebBrowser) {  		browser = WebBrowserService.GetWebBrowser ();  		browserWidget = (Widget)browser;  		browser.LocationChanged += Browser_LocationChanged;  		browser.NetStart += Browser_StartLoading;  		browser.NetStop += Browser_StopLoading;  		frmBrowser.Add (browserWidget);  		browser.LoadUrl (tbxReferenceURL.Text);  		browserWidget.Show ();  	}  	else {  		docLabel = new Label ();  		docLabel.Xpad = 6;  		docLabel.Ypad = 6;  		docLabel.Xalign = 0;  		docLabel.Yalign = 0;  		sw = new ScrolledWindow ();  		sw.ShadowType = ShadowType.In;  		sw.AddWithViewport (docLabel);  		sw.ShowAll ();  		frmBrowser.Add (sw);  		UpdateLocation ();  	}  	break;  case DialogState.ModifyConfig:  case DialogState.CreateConfig:  	if (!hasConfig)  		return;  	sw = new ScrolledWindow ();  	sw.ShadowType = ShadowType.In;  	wcfConfig = new WCFConfigWidget (wcfOptions);  	sw.AddWithViewport (wcfConfig);  	sw.ShowAll ();  	frmBrowser.Add (sw);  	break;  default:  	throw new InvalidOperationException ();  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,The following statement contains a magic number: if (WebBrowserService.CanGetWebBrowser) {  	browser = WebBrowserService.GetWebBrowser ();  	browserWidget = (Widget)browser;  	browser.LocationChanged += Browser_LocationChanged;  	browser.NetStart += Browser_StartLoading;  	browser.NetStop += Browser_StopLoading;  	frmBrowser.Add (browserWidget);  	browser.LoadUrl (tbxReferenceURL.Text);  	browserWidget.Show ();  }  else {  	docLabel = new Label ();  	docLabel.Xpad = 6;  	docLabel.Ypad = 6;  	docLabel.Xalign = 0;  	docLabel.Yalign = 0;  	sw = new ScrolledWindow ();  	sw.ShadowType = ShadowType.In;  	sw.AddWithViewport (docLabel);  	sw.ShowAll ();  	frmBrowser.Add (sw);  	UpdateLocation ();  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,The following statement contains a magic number: if (WebBrowserService.CanGetWebBrowser) {  	browser = WebBrowserService.GetWebBrowser ();  	browserWidget = (Widget)browser;  	browser.LocationChanged += Browser_LocationChanged;  	browser.NetStart += Browser_StartLoading;  	browser.NetStop += Browser_StopLoading;  	frmBrowser.Add (browserWidget);  	browser.LoadUrl (tbxReferenceURL.Text);  	browserWidget.Show ();  }  else {  	docLabel = new Label ();  	docLabel.Xpad = 6;  	docLabel.Ypad = 6;  	docLabel.Xalign = 0;  	docLabel.Yalign = 0;  	sw = new ScrolledWindow ();  	sw.ShadowType = ShadowType.In;  	sw.AddWithViewport (docLabel);  	sw.ShowAll ();  	frmBrowser.Add (sw);  	UpdateLocation ();  }  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,The following statement contains a magic number: docLabel.Xpad = 6;  
Magic Number,MonoDevelop.WebReferences.Dialogs,WebReferenceDialog,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Dialogs\WebReferenceDialog.cs,ChangeState,The following statement contains a magic number: docLabel.Ypad = 6;  
Magic Number,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The following statement contains a magic number: try {  	UpdateReferenceContext = IdeApp.Workbench.StatusBar.CreateContext ();  	UpdateReferenceContext.BeginProgress (GettextCatalog.GetPluralString ("Updating web reference"' "Updating web references"' items.Count));  	DispatchService.ThreadDispatch (() =>  {  		for (int i = 0; i < items.Count; i++) {  			DispatchService.GuiDispatch (() => UpdateReferenceContext.SetProgressFraction (Math.Max (0.1' (double)i / items.Count)));  			try {  				items [i].Update ();  			}  			catch (Exception ex) {  				DispatchService.GuiSyncDispatch (() =>  {  					MessageService.ShowException (ex' GettextCatalog.GetString ("Failed to update Web Reference '{0}'"' items [i].Name));  					DisposeUpdateContext ();  				});  				return;  			}  		}  		DispatchService.GuiDispatch (() =>  {  			// Make sure that we save all relevant projects' there should only be 1 though  			foreach (var project in items.Select (i => i.Project).Distinct ())  				IdeApp.ProjectOperations.Save (project);  			IdeApp.Workbench.StatusBar.ShowMessage (GettextCatalog.GetPluralString ("Updated Web Reference {0}"' "Updated Web References"' items.Count' items [0].Name));  			DisposeUpdateContext ();  		});  	});  }  catch {  	DisposeUpdateContext ();  	throw;  }  
Magic Number,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The following statement contains a magic number: DispatchService.ThreadDispatch (() =>  {  	for (int i = 0; i < items.Count; i++) {  		DispatchService.GuiDispatch (() => UpdateReferenceContext.SetProgressFraction (Math.Max (0.1' (double)i / items.Count)));  		try {  			items [i].Update ();  		}  		catch (Exception ex) {  			DispatchService.GuiSyncDispatch (() =>  {  				MessageService.ShowException (ex' GettextCatalog.GetString ("Failed to update Web Reference '{0}'"' items [i].Name));  				DisposeUpdateContext ();  			});  			return;  		}  	}  	DispatchService.GuiDispatch (() =>  {  		// Make sure that we save all relevant projects' there should only be 1 though  		foreach (var project in items.Select (i => i.Project).Distinct ())  			IdeApp.ProjectOperations.Save (project);  		IdeApp.Workbench.StatusBar.ShowMessage (GettextCatalog.GetPluralString ("Updated Web Reference {0}"' "Updated Web References"' items.Count' items [0].Name));  		DisposeUpdateContext ();  	});  });  
Magic Number,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The following statement contains a magic number: for (int i = 0; i < items.Count; i++) {  	DispatchService.GuiDispatch (() => UpdateReferenceContext.SetProgressFraction (Math.Max (0.1' (double)i / items.Count)));  	try {  		items [i].Update ();  	}  	catch (Exception ex) {  		DispatchService.GuiSyncDispatch (() =>  {  			MessageService.ShowException (ex' GettextCatalog.GetString ("Failed to update Web Reference '{0}'"' items [i].Name));  			DisposeUpdateContext ();  		});  		return;  	}  }  
Magic Number,MonoDevelop.WebReferences.Commands,WebReferenceCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.Commands\WebReferenceCommandHandler.cs,UpdateReferences,The following statement contains a magic number: DispatchService.GuiDispatch (() => UpdateReferenceContext.SetProgressFraction (Math.Max (0.1' (double)i / items.Count)));  
Missing Default,MonoDevelop.WebReferences.WCF,WebServiceDiscoveryResultWCF,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.WebReferences\MonoDevelop.WebReferences.WCF\WebServiceDiscoveryResultWCF.cs,ConvertMapFile,The following switch statement is missing a default case: switch (Path.GetExtension (file.FileName).ToLower ()) {  case ".disco":  	file.MetadataType = "Disco";  	break;  case ".wsdl":  	file.MetadataType = "Wsdl";  	break;  case ".xsd":  	file.MetadataType = "Schema";  	break;  }  
