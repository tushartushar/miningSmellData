Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The method has 207 lines of code.
Long Method,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,The method has 113 lines of code.
Complex Method,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,FillTestInformation,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,ShowTestResult,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.NUnit,TestNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestNodeBuilder.cs,BuildNode,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,Cyclomatic complexity of the method is 22
Complex Method,MonoDevelop.NUnit,UnitTest,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\UnitTest.cs,OnSaveOptions,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunUnitTest,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,ReportXmlResult,Cyclomatic complexity of the method is 37
Complex Method,MonoDevelop.NUnit,XmlResultsStore,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\XmlResultsStore.cs,GetResults,Cyclomatic complexity of the method is 8
Long Parameter List,MonoDevelop.NUnit,TestNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.NUnit,NUnitAssemblyGroupNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\NUnitAssemblyGroupNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.NUnit,NUnitAssemblyGroupConfigurationNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\NUnitAssemblyGroupConfigurationNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.NUnit,TestAssemblyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestAssemblyNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunUnitTest,The method has 5 parameters.
Long Parameter List,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,The method has 6 parameters.
Long Parameter List,MonoDevelop.NUnit,NUnitProjectTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitProjectTestSuite.cs,GetCustomConsoleRunner,The method has 5 parameters.
Long Parameter List,MonoDevelop.NUnit.External,ExternalTestRunner,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\ExternalTestRunner.cs,Run,The method has 7 parameters.
Long Statement,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,RunTest,The length of the statement  "	runningTestOperation.Completed += (OperationHandler)DispatchService.GuiDispatch (new OperationHandler (OnTestSessionCompleted)); " is 128.
Long Statement,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,FillTestInformation,The length of the statement  "					detailsStore.AppendValues (t' t.Name' res.Passed.ToString ()' res.ErrorsAndFailures.ToString ()' res.Ignored.ToString ()); " is 122.
Long Statement,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,GetResultsMarkup,The length of the statement  "	return string.Format (GettextCatalog.GetString ("<b>Passed</b>: {0}   <b>Failed</b>: {1}   <b>Errors</b>: {2}   <b>Inconclusive</b>: {3}   <b>Invalid</b>: {4}   <b>Ignored</b>: {5}   <b>Skipped</b>: {6}   <b>Time</b>: {7}")' resultSummary.Passed' resultSummary.Failures' resultSummary.Errors' resultSummary.Inconclusive' resultSummary.NotRunnable' resultSummary.Ignored' resultSummary.Skipped' resultSummary.Time); " is 414.
Long Statement,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,AddStartMessage,The length of the statement  "		string msg = string.Format (isRunning ? GettextCatalog.GetString ("Running tests for <b>{0}</b> configuration <b>{1}</b>") : GettextCatalog.GetString ("Test results for <b>{0}</b> configuration <b>{1}</b>")' rootTest.Name' configuration); " is 238.
Long Statement,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,FinishTestRun,The length of the statement  "		string msg = string.Format (GettextCatalog.GetString ("Test results for <b>{0}</b> configuration <b>{1}</b>")' rootTest != null ? rootTest.Name : "null"' configuration); " is 169.
Long Statement,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,ShowTestResult,The length of the statement  "		string file = test.SourceCodeLocation != null ? test.SourceCodeLocation.FileName + ":" + test.SourceCodeLocation.Line : null; " is 125.
Long Statement,MonoDevelop.NUnit,TestNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestNodeBuilder.cs,BuildNode,The length of the statement  "			label += string.Format (GettextCatalog.GetString (" ({0} passed' {1} failed' {2} not run)")' res.Passed' res.ErrorsAndFailures' res.TestsNotRun); " is 145.
Long Statement,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,The length of the statement  "				if (res.TestDate.Day != lastResult.TestDate.Day || res.TestDate.Month != lastResult.TestDate.Month || res.TestDate.Year != lastResult.TestDate.Year) " is 148.
Long Statement,MonoDevelop.NUnit,TestAssemblyNodeCommandHandler,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestAssemblyNodeBuilder.cs,DeleteItem,The length of the statement  "	NUnitAssemblyGroupProjectConfiguration config = (NUnitAssemblyGroupProjectConfiguration)CurrentNode.GetParentDataItem (typeof(NUnitAssemblyGroupProjectConfiguration)' false); " is 174.
Long Statement,MonoDevelop.NUnit,RootTest,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Project\NUnitAssemblyGroupProject.cs,OnCreateTests,The length of the statement  "	NUnitAssemblyGroupProjectConfiguration conf = (NUnitAssemblyGroupProjectConfiguration)project.GetConfiguration ((ItemConfigurationSelector)ActiveConfiguration); " is 160.
Long Statement,MonoDevelop.NUnit,NUnitService,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitService.cs,RunTest,The length of the statement  "		resultsPad = IdeApp.Workbench.ShowPad (new TestResultsPad ()' "MonoDevelop.NUnit.TestResultsPad"' GettextCatalog.GetString ("Test results")' "Bottom"' "md-solution"); " is 166.
Long Statement,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunUnitTest,The length of the statement  "	ExternalTestRunner runner = (ExternalTestRunner)Runtime.ProcessService.CreateExternalProcessObject (typeof(ExternalTestRunner)' testContext.ExecutionContext' UserAssemblyPaths); " is 177.
Long Statement,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunUnitTest,The length of the statement  "			string msg = GettextCatalog.GetString ("Could not get a valid path to the assembly. There may be a conflict in the project configurations."); " is 141.
Long Statement,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunUnitTest,The length of the statement  "		result = runner.Run (localMonitor' filter' AssemblyPath' ""' new List<string> (SupportAssemblies)' testRunnerType' testRunnerAssembly); " is 135.
Long Statement,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,The length of the statement  "		bool automaticUpdates = cmd.Command != null && (cmd.Command.Contains ("GuiUnit") || (cmd.Command.Contains ("mdtool.exe") && cmd.Arguments.Contains ("run-md-tests"))); " is 166.
Long Statement,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunWithConsoleRunner,The length of the statement  "				bool macunitStyle = doc.Root.Element ("environment") != null && doc.Root.Element ("environment").Attribute ("macunit-version") != null; " is 135.
Long Statement,MonoDevelop.NUnit,NUnitProjectTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitProjectTestSuite.cs,CreateTest,The length of the statement  "		if (p.Reference.IndexOf ("GuiUnit"' StringComparison.OrdinalIgnoreCase) != -1 || p.Reference.IndexOf ("nunit.framework") != -1 || p.Reference.IndexOf ("nunit.core") != -1) " is 171.
Long Statement,MonoDevelop.NUnit,NUnitProjectTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitProjectTestSuite.cs,GetCustomConsoleRunner,The length of the statement  "		var guiUnit = project.References.FirstOrDefault (pref => pref.ReferenceType == ReferenceType.Assembly && StringComparer.OrdinalIgnoreCase.Equals (Path.GetFileName (pref.Reference)' "GuiUnit.exe")); " is 197.
Long Statement,MonoDevelop.NUnit,NUnitProjectTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitProjectTestSuite.cs,GetCustomConsoleRunner,The length of the statement  "		var projectReference = project.References.FirstOrDefault (pref => pref.ReferenceType == ReferenceType.Project && pref.Reference.StartsWith ("GuiUnit"' StringComparison.OrdinalIgnoreCase)); " is 188.
Long Statement,MonoDevelop.NUnit,XmlResultsStore,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\XmlResultsStore.cs,GetRootFileName,The length of the statement  "	// Filter out all invalid path characters in the file name (see: Bug 3023 - Running NUnit tests throws ArgumentException: Illegal Characters in path) " is 149.
Long Statement,MonoDevelop.NUnit,XmlResultsStore,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\XmlResultsStore.cs,GetRootFileName,The length of the statement  "	var filteredConfiguration = new string (configuration.Where (c => !Path.GetInvalidPathChars ().Any (i => c == i)).ToArray ()); " is 126.
Long Statement,MonoDevelop.NUnit,XmlResultsStore,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\XmlResultsStore.cs,GetRootFileName,The length of the statement  "	return storeId + "-" + filteredConfiguration + "-" + date.ToString ("yyyy-MM-dd"' CultureInfo.InvariantCulture) + ".xml"; " is 121.
Long Statement,MonoDevelop.NUnit.External,ExternalTestRunner,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\ExternalTestRunner.cs,Run,The length of the statement  "	TestResult res = runner.Run (listenerWrapper' filter' path' suiteName' supportAssemblies' testRunnerType' testRunnerAssembly); " is 126.
Long Statement,MonoDevelop.NUnit.External,ExternalTestRunner,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\ExternalTestRunner.cs,GetRunner,The length of the statement  "	runner.PreloadAssemblies (typeof(NF.Assert).Assembly.Location' typeof(NC.TestSuiteBuilder).Assembly.Location' typeof(NC.Test).Assembly.Location); " is 145.
Complex Conditional,MonoDevelop.NUnit,UnitTest,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\UnitTest.cs,FindRegressions,The conditional expression  "(res1 == null || res1.IsSuccess) && (res2 != null && !res2.IsSuccess)"  is complex.
Empty Catch Block,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,OnRowActivated,The method has an empty catch block.
Empty Catch Block,MonoDevelop.NUnit,NUnitService,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitService.cs,BuildTest,The method has an empty catch block.
Empty Catch Block,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,Dispose,The method has an empty catch block.
Empty Catch Block,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The method has an empty catch block.
Empty Catch Block,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The method has an empty catch block.
Empty Catch Block,MonoDevelop.NUnit,XmlResultsStore,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\XmlResultsStore.cs,GetStoreDates,The method has an empty catch block.
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: try {  	Running = Gdk.Pixbuf.LoadFromResource ("NUnit.Running.png");  	Failure = Gdk.Pixbuf.LoadFromResource ("NUnit.Failed.png");  	None = Gdk.Pixbuf.LoadFromResource ("NUnit.None.png");  	NotRun = Gdk.Pixbuf.LoadFromResource ("NUnit.NotRun.png");  	Success = Gdk.Pixbuf.LoadFromResource ("NUnit.Success.png");  	SuccessAndFailure = Gdk.Pixbuf.LoadFromResource ("NUnit.SuccessAndFailed.png");  	Loading = Gdk.Pixbuf.LoadFromResource ("NUnit.Loading.png");  	Inconclusive = Gdk.Pixbuf.LoadFromResource ("NUnit.Inconclusive.png");  	OldFailure = ImageService.MakeTransparent (Failure' 0.4);  	OldSuccess = ImageService.MakeTransparent (Success' 0.4);  	OldSuccessAndFailure = ImageService.MakeTransparent (SuccessAndFailure' 0.4);  	OldInconclusive = ImageService.MakeTransparent (Inconclusive' 0.4);  }  catch (Exception e) {  	LoggingService.LogError ("Error while loading icons."' e);  }  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: try {  	Running = Gdk.Pixbuf.LoadFromResource ("NUnit.Running.png");  	Failure = Gdk.Pixbuf.LoadFromResource ("NUnit.Failed.png");  	None = Gdk.Pixbuf.LoadFromResource ("NUnit.None.png");  	NotRun = Gdk.Pixbuf.LoadFromResource ("NUnit.NotRun.png");  	Success = Gdk.Pixbuf.LoadFromResource ("NUnit.Success.png");  	SuccessAndFailure = Gdk.Pixbuf.LoadFromResource ("NUnit.SuccessAndFailed.png");  	Loading = Gdk.Pixbuf.LoadFromResource ("NUnit.Loading.png");  	Inconclusive = Gdk.Pixbuf.LoadFromResource ("NUnit.Inconclusive.png");  	OldFailure = ImageService.MakeTransparent (Failure' 0.4);  	OldSuccess = ImageService.MakeTransparent (Success' 0.4);  	OldSuccessAndFailure = ImageService.MakeTransparent (SuccessAndFailure' 0.4);  	OldInconclusive = ImageService.MakeTransparent (Inconclusive' 0.4);  }  catch (Exception e) {  	LoggingService.LogError ("Error while loading icons."' e);  }  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: try {  	Running = Gdk.Pixbuf.LoadFromResource ("NUnit.Running.png");  	Failure = Gdk.Pixbuf.LoadFromResource ("NUnit.Failed.png");  	None = Gdk.Pixbuf.LoadFromResource ("NUnit.None.png");  	NotRun = Gdk.Pixbuf.LoadFromResource ("NUnit.NotRun.png");  	Success = Gdk.Pixbuf.LoadFromResource ("NUnit.Success.png");  	SuccessAndFailure = Gdk.Pixbuf.LoadFromResource ("NUnit.SuccessAndFailed.png");  	Loading = Gdk.Pixbuf.LoadFromResource ("NUnit.Loading.png");  	Inconclusive = Gdk.Pixbuf.LoadFromResource ("NUnit.Inconclusive.png");  	OldFailure = ImageService.MakeTransparent (Failure' 0.4);  	OldSuccess = ImageService.MakeTransparent (Success' 0.4);  	OldSuccessAndFailure = ImageService.MakeTransparent (SuccessAndFailure' 0.4);  	OldInconclusive = ImageService.MakeTransparent (Inconclusive' 0.4);  }  catch (Exception e) {  	LoggingService.LogError ("Error while loading icons."' e);  }  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: try {  	Running = Gdk.Pixbuf.LoadFromResource ("NUnit.Running.png");  	Failure = Gdk.Pixbuf.LoadFromResource ("NUnit.Failed.png");  	None = Gdk.Pixbuf.LoadFromResource ("NUnit.None.png");  	NotRun = Gdk.Pixbuf.LoadFromResource ("NUnit.NotRun.png");  	Success = Gdk.Pixbuf.LoadFromResource ("NUnit.Success.png");  	SuccessAndFailure = Gdk.Pixbuf.LoadFromResource ("NUnit.SuccessAndFailed.png");  	Loading = Gdk.Pixbuf.LoadFromResource ("NUnit.Loading.png");  	Inconclusive = Gdk.Pixbuf.LoadFromResource ("NUnit.Inconclusive.png");  	OldFailure = ImageService.MakeTransparent (Failure' 0.4);  	OldSuccess = ImageService.MakeTransparent (Success' 0.4);  	OldSuccessAndFailure = ImageService.MakeTransparent (SuccessAndFailure' 0.4);  	OldInconclusive = ImageService.MakeTransparent (Inconclusive' 0.4);  }  catch (Exception e) {  	LoggingService.LogError ("Error while loading icons."' e);  }  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: OldFailure = ImageService.MakeTransparent (Failure' 0.4);  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: OldSuccess = ImageService.MakeTransparent (Success' 0.4);  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: OldSuccessAndFailure = ImageService.MakeTransparent (SuccessAndFailure' 0.4);  
Magic Number,MonoDevelop.NUnit,CircleImage,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\CircleImage.cs,CircleImage,The following statement contains a magic number: OldInconclusive = ImageService.MakeTransparent (Inconclusive' 0.4);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: detailLabel.Padding = 6;  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: hcol.Red = (ushort)(((double)hcol.Red) * 0.9);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: hcol.Green = (ushort)(((double)hcol.Green) * 0.9);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: hcol.Blue = (ushort)(((double)hcol.Blue) * 0.9);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: panedDetails.BorderWidth = 3;  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: chart.HeightRequest = 50;  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: col3.AddAttribute (tr' "markup"' 2);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: col4.AddAttribute (tr' "markup"' 3);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: col5.AddAttribute (tr' "markup"' 4);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: col.AddAttribute (pr' "pixbuf"' 2);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,Initialize,The following statement contains a magic number: col.AddAttribute (pr' "pixbuf"' 2);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,OnGoBackTest,The following statement contains a magic number: if (c > 1) {  	UnitTest t = (UnitTest)testNavigationHistory [c - 2];  	testNavigationHistory.RemoveAt (c - 1);  	testNavigationHistory.RemoveAt (c - 2);  	FillDetails (t' true);  }  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,OnGoBackTest,The following statement contains a magic number: if (c > 1) {  	UnitTest t = (UnitTest)testNavigationHistory [c - 2];  	testNavigationHistory.RemoveAt (c - 1);  	testNavigationHistory.RemoveAt (c - 2);  	FillDetails (t' true);  }  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,OnGoBackTest,The following statement contains a magic number: testNavigationHistory.RemoveAt (c - 2);  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,FillDetails,The following statement contains a magic number: if (detailsTest != test) {  	detailsTest = test;  	if (selectInTree)  		SelectTest (test);  	testNavigationHistory.Add (test);  	if (testNavigationHistory.Count > 50)  		testNavigationHistory.RemoveAt (0);  }  
Magic Number,MonoDevelop.NUnit,TestPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestPad.cs,FillDetails,The following statement contains a magic number: if (testNavigationHistory.Count > 50)  	testNavigationHistory.RemoveAt (0);  
Magic Number,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,Initialize,The following statement contains a magic number: runPanel.Add (infoCurrent' true' 10);  
Magic Number,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,Initialize,The following statement contains a magic number: labels = new HBox (false' 10);  
Magic Number,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,Initialize,The following statement contains a magic number: runPanel.Add (infoSep' false' 10);  
Magic Number,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,OnRowActivated,The following statement contains a magic number: if (failuresTreeView.Selection.GetSelected (out iter)) {  	string file = (string)failuresStore.GetValue (iter' 3);  	int line = (int)failuresStore.GetValue (iter' 4);  	try {  		if (file != null && File.Exists (file)) {  			IdeApp.Workbench.OpenDocument (file' line' -1);  			return;  		}  	}  	catch (Exception) {  	}  }  
Magic Number,MonoDevelop.NUnit,TestResultsPad,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestResultsPad.cs,OnRowActivated,The following statement contains a magic number: if (failuresTreeView.Selection.GetSelected (out iter)) {  	string file = (string)failuresStore.GetValue (iter' 3);  	int line = (int)failuresStore.GetValue (iter' 4);  	try {  		if (file != null && File.Exists (file)) {  			IdeApp.Workbench.OpenDocument (file' line' -1);  			return;  		}  	}  	catch (Exception) {  	}  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,TestChart,The following statement contains a magic number: serieSuccess.Color = new Cairo.Color (0' 0.65' 0);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,TestChart,The following statement contains a magic number: serieIgnored.Color = new Cairo.Color (0.8' 0.8' 0);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,TestChart,The following statement contains a magic number: serieIgnored.Color = new Cairo.Color (0.8' 0.8' 0);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,TestChart,The following statement contains a magic number: EndX = 5;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks / 2);  	if (currentSpan.TotalSeconds < 60)  		currentSpan = TimeSpan.FromSeconds (60);  }  else {  	testCount = testCount / 2;  	if (testCount < 5)  		testCount = 5;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks / 2);  	if (currentSpan.TotalSeconds < 60)  		currentSpan = TimeSpan.FromSeconds (60);  }  else {  	testCount = testCount / 2;  	if (testCount < 5)  		testCount = 5;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks / 2);  	if (currentSpan.TotalSeconds < 60)  		currentSpan = TimeSpan.FromSeconds (60);  }  else {  	testCount = testCount / 2;  	if (testCount < 5)  		testCount = 5;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks / 2);  	if (currentSpan.TotalSeconds < 60)  		currentSpan = TimeSpan.FromSeconds (60);  }  else {  	testCount = testCount / 2;  	if (testCount < 5)  		testCount = 5;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks / 2);  	if (currentSpan.TotalSeconds < 60)  		currentSpan = TimeSpan.FromSeconds (60);  }  else {  	testCount = testCount / 2;  	if (testCount < 5)  		testCount = 5;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks / 2);  	if (currentSpan.TotalSeconds < 60)  		currentSpan = TimeSpan.FromSeconds (60);  }  else {  	testCount = testCount / 2;  	if (testCount < 5)  		testCount = 5;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: currentSpan = new TimeSpan (currentSpan.Ticks / 2);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (currentSpan.TotalSeconds < 60)  	currentSpan = TimeSpan.FromSeconds (60);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (currentSpan.TotalSeconds < 60)  	currentSpan = TimeSpan.FromSeconds (60);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: currentSpan = TimeSpan.FromSeconds (60);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: testCount = testCount / 2;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (testCount < 5)  	testCount = 5;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: if (testCount < 5)  	testCount = 5;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomIn,The following statement contains a magic number: testCount = 5;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (timeScale) {  	currentSpan = new TimeSpan (currentSpan.Ticks * 2);  	if (currentSpan.TotalDays > 50 * 365)  		currentSpan = TimeSpan.FromDays (50 * 365);  }  else {  	testCount *= 2;  	if (testCount > 100000)  		testCount = 100000;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: currentSpan = new TimeSpan (currentSpan.Ticks * 2);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (currentSpan.TotalDays > 50 * 365)  	currentSpan = TimeSpan.FromDays (50 * 365);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (currentSpan.TotalDays > 50 * 365)  	currentSpan = TimeSpan.FromDays (50 * 365);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (currentSpan.TotalDays > 50 * 365)  	currentSpan = TimeSpan.FromDays (50 * 365);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (currentSpan.TotalDays > 50 * 365)  	currentSpan = TimeSpan.FromDays (50 * 365);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: currentSpan = TimeSpan.FromDays (50 * 365);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: currentSpan = TimeSpan.FromDays (50 * 365);  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: testCount *= 2;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (testCount > 100000)  	testCount = 100000;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: if (testCount > 100000)  	testCount = 100000;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,ZoomOut,The following statement contains a magic number: testCount = 100000;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoNext,The following statement contains a magic number: if (timeScale) {  	lastDateValue += (EndX - StartX) / 3;  	UnitTestResult lastResult = test.Results.GetLastResult (DateTime.Now);  	if (lastResult != null && new DateTime ((long)lastDateValue) > lastResult.TestDate)  		showLastTest = true;  }  else {  	lastTestNumber -= (EndX - StartX) / 3;  	if (lastTestNumber < 0)  		showLastTest = true;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoNext,The following statement contains a magic number: if (timeScale) {  	lastDateValue += (EndX - StartX) / 3;  	UnitTestResult lastResult = test.Results.GetLastResult (DateTime.Now);  	if (lastResult != null && new DateTime ((long)lastDateValue) > lastResult.TestDate)  		showLastTest = true;  }  else {  	lastTestNumber -= (EndX - StartX) / 3;  	if (lastTestNumber < 0)  		showLastTest = true;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoNext,The following statement contains a magic number: lastDateValue += (EndX - StartX) / 3;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoNext,The following statement contains a magic number: lastTestNumber -= (EndX - StartX) / 3;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoPrevious,The following statement contains a magic number: if (timeScale) {  	lastDateValue -= (EndX - StartX) / 3;  }  else {  	lastTestNumber += (EndX - StartX) / 3;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoPrevious,The following statement contains a magic number: if (timeScale) {  	lastDateValue -= (EndX - StartX) / 3;  }  else {  	lastTestNumber += (EndX - StartX) / 3;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoPrevious,The following statement contains a magic number: lastDateValue -= (EndX - StartX) / 3;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,GoPrevious,The following statement contains a magic number: lastTestNumber += (EndX - StartX) / 3;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,The following statement contains a magic number: if (timeScale) {  	DateTime startDate;  	if (showLastTest) {  		startDate = lastResult.TestDate - currentSpan;  		StartX = startDate.Ticks;  		EndX = lastResult.TestDate.Ticks;  		first = test.Results.GetLastResult (startDate);  		results = test.Results.GetResults (startDate' lastResult.TestDate);  	}  	else {  		DateTime endDate = new DateTime ((long)lastDateValue);  		startDate = endDate - currentSpan;  		StartX = (double)startDate.Ticks;  		EndX = (double)endDate.Ticks;  		first = test.Results.GetLastResult (startDate);  		results = test.Results.GetResults (startDate' lastResult.TestDate);  	}  	if (singleDayResult) {  		first = test.Results.GetPreviousResult (new DateTime (startDate.Year' startDate.Month' startDate.Day));  		ArrayList list = new ArrayList ();  		if (first != null)  			list.Add (first);  		for (int n = 0; n < results.Length - 1; n++) {  			DateTime d1 = results [n].TestDate;  			DateTime d2 = results [n + 1].TestDate;  			if (d1.Day != d2.Day || d1.Month != d2.Month || d1.Year != d2.Year)  				list.Add (results [n]);  		}  		list.Add (results [results.Length - 1]);  		results = (UnitTestResult[])list.ToArray (typeof(UnitTestResult));  	}  	if (resetCursors) {  		SelectionEnd.Value = EndX;  		if (results.Length > 1)  			SelectionStart.Value = results [results.Length - 2].TestDate.Ticks;  		else  			SelectionStart.Value = EndX;  		resetCursors = false;  	}  }  else {  	if (singleDayResult) {  		ArrayList list = new ArrayList ();  		list.Add (lastResult);  		while (list.Count < testCount + (int)lastTestNumber + 1) {  			UnitTestResult res = test.Results.GetPreviousResult (lastResult.TestDate);  			if (res == null)  				break;  			if (res.TestDate.Day != lastResult.TestDate.Day || res.TestDate.Month != lastResult.TestDate.Month || res.TestDate.Year != lastResult.TestDate.Year)  				list.Add (res);  			lastResult = res;  		}  		results = (UnitTestResult[])list.ToArray (typeof(UnitTestResult));  		Array.Reverse (results);  	}  	else {  		results = test.Results.GetResultsToDate (DateTime.Now' testCount + (int)lastTestNumber + 1);  	}  	EndX = lastTestNumber + testCount;  	StartX = lastTestNumber;  	if (resetCursors) {  		SelectionStart.Value = StartX;  		SelectionEnd.Value = StartX + 1;  		resetCursors = false;  	}  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,The following statement contains a magic number: if (resetCursors) {  	SelectionEnd.Value = EndX;  	if (results.Length > 1)  		SelectionStart.Value = results [results.Length - 2].TestDate.Ticks;  	else  		SelectionStart.Value = EndX;  	resetCursors = false;  }  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,The following statement contains a magic number: if (results.Length > 1)  	SelectionStart.Value = results [results.Length - 2].TestDate.Ticks;  else  	SelectionStart.Value = EndX;  
Magic Number,MonoDevelop.NUnit,TestChart,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Gui\TestChart.cs,Fill,The following statement contains a magic number: SelectionStart.Value = results [results.Length - 2].TestDate.Ticks;  
Magic Number,MonoDevelop.NUnit,TestSession,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitService.cs,WaitForCompleted,The following statement contains a magic number: if (DispatchService.IsGuiThread) {  	while (!IsCompleted) {  		while (Gtk.Application.EventsPending ())  			Gtk.Application.RunIteration ();  		Thread.Sleep (100);  	}  }  else {  	lock (this) {  		if (waitEvent == null)  			waitEvent = new ManualResetEvent (false);  	}  	waitEvent.WaitOne ();  }  
Magic Number,MonoDevelop.NUnit,TestSession,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitService.cs,WaitForCompleted,The following statement contains a magic number: while (!IsCompleted) {  	while (Gtk.Application.EventsPending ())  		Gtk.Application.RunIteration ();  	Thread.Sleep (100);  }  
Magic Number,MonoDevelop.NUnit,TestSession,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitService.cs,WaitForCompleted,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,CountTestCases,The following statement contains a magic number: lock (locker) {  	if (Status == TestStatus.Loading)  		Monitor.Wait (locker' 10000);  }  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,CountTestCases,The following statement contains a magic number: if (Status == TestStatus.Loading)  	Monitor.Wait (locker' 10000);  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,CountTestCases,The following statement contains a magic number: Monitor.Wait (locker' 10000);  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The following statement contains a magic number: while (true) {  	LoadData ld;  	lock (loadQueue) {  		if (loadQueue.Count == 0) {  			if (!Monitor.Wait (loadQueue' 5000' true)) {  				loaderRunning = false;  				return;  			}  		}  		ld = (LoadData)loadQueue.Dequeue ();  	}  	try {  		// If the information is cached in a file and it is up to date information'  		// there is no need to parse again the assembly.  		if (ld.TestInfoCachePath != null && File.Exists (ld.TestInfoCachePath)) {  			ld.InfoCache = TestInfoCache.Read (ld.TestInfoCachePath);  			NunitTestInfo info = ld.InfoCache.GetInfo (ld.Path);  			if (info != null) {  				ld.Info = info;  				ld.Callback (ld);  				continue;  			}  		}  	}  	catch (Exception ex) {  		LoggingService.LogError (ex.ToString ());  	}  	ExternalTestRunner runner = null;  	try {  		if (File.Exists (ld.Path)) {  			runner = (ExternalTestRunner)Runtime.ProcessService.CreateExternalProcessObject (typeof(ExternalTestRunner)' false);  			ld.Info = runner.GetTestInfo (ld.Path' ld.SupportAssemblies);  		}  	}  	catch (Exception ex) {  		Console.WriteLine (ex);  		ld.Error = ex;  	}  	finally {  		try {  			if (runner != null)  				runner.Dispose ();  		}  		catch {  		}  	}  	try {  		ld.Callback (ld);  	}  	catch {  	}  }  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The following statement contains a magic number: lock (loadQueue) {  	if (loadQueue.Count == 0) {  		if (!Monitor.Wait (loadQueue' 5000' true)) {  			loaderRunning = false;  			return;  		}  	}  	ld = (LoadData)loadQueue.Dequeue ();  }  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The following statement contains a magic number: if (loadQueue.Count == 0) {  	if (!Monitor.Wait (loadQueue' 5000' true)) {  		loaderRunning = false;  		return;  	}  }  
Magic Number,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,RunAsyncLoadTest,The following statement contains a magic number: if (!Monitor.Wait (loadQueue' 5000' true)) {  	loaderRunning = false;  	return;  }  
Magic Number,MonoDevelop.NUnit,XmlResultsStore,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\XmlResultsStore.cs,ParseFileNameDate,The following statement contains a magic number: fileName = fileName.Substring (storeId.Length + configuration.Length + 2);  
Missing Default,MonoDevelop.NUnit,NUnitAssemblyTestSuite,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\NUnitAssemblyTestSuite.cs,ReportXmlResult,The following switch statement is missing a default case: switch (result.Status) {  case ResultStatus.Success:  	result.Passed++;  	break;  case ResultStatus.Failure:  	result.Failures++;  	break;  case ResultStatus.Ignored:  	result.Ignored++;  	break;  case ResultStatus.Inconclusive:  	result.Inconclusive++;  	break;  }  
Missing Default,MonoDevelop.NUnit.External,TcpTestListener,C:\repos\joncloud_monodevelop\main\src\addins\NUnit\Services\TcpTestListener.cs,TcpTestListener,The following switch statement is missing a default case: switch (action) {  case "suite-started":  	UpdateTestSuiteStatus (testName' false);  	break;  case "test-started":  	UpdateTestSuiteStatus (testName' true);  	listener.TestStarted (testName);  	break;  case "test-finished":  	var res = CreateResult (element);  	AddTestResult (res);  	listener.TestFinished (testName' res);  	break;  case "suite-finished":  	if (testName == rootTestName) {  		FinishSuites (0);  		listener.SuiteFinished ("<root>"' CreateResult (element));  		rootSuiteStarted = false;  	}  	break;  }  
