Implementation smell,Namespace,Class,File,Method,Description
Long Method,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,rTBDoc_KeyUp,The method has 225 lines of code.
Complex Method,MeTagWinForm,AppBase,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,LoadFile,Cyclomatic complexity of the method is 25
Complex Method,MeTagWinForm,AppBase,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,SaveFile,Cyclomatic complexity of the method is 10
Complex Method,MeTagWinForm,TagNode,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,GetHead,Cyclomatic complexity of the method is 25
Complex Method,MeTagWinForm,TagNode,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,GetTail,Cyclomatic complexity of the method is 9
Complex Method,MeTagWinForm,TagDoc,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,FormatContent,Cyclomatic complexity of the method is 8
Complex Method,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,SetCurTag,Cyclomatic complexity of the method is 67
Complex Method,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,RefreshRichTextBox,Cyclomatic complexity of the method is 29
Complex Method,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,Cyclomatic complexity of the method is 8
Complex Method,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,rTBDoc_KeyDown,Cyclomatic complexity of the method is 18
Complex Method,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,rTBDoc_KeyUp,Cyclomatic complexity of the method is 56
Long Statement,MeTagWinForm,AppBase,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,SaveFile,The length of the statement  "	if (savedDoc == null || String.IsNullOrEmpty (savedDoc.type) || String.IsNullOrEmpty (savedDoc.id) || string.IsNullOrEmpty (savedDoc.content)) " is 142.
Long Statement,MeTagWinForm,AppBase,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,SaveFile,The length of the statement  "	xmlDoc.LoadXml ("<?xml version=\"1.0\" encoding=\"UTF-8\"?><doc id=\"\"><type></type><intent></intent><content xml:space=\"preserve\"></content></doc>"); " is 153.
Long Statement,MeTagWinForm,TagDoc,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,getTagNodesByRange,The length of the statement  "		if (posStart <= curNode.startPos && curNode.startPos <= posEnd || posStart <= curNode.endPos && curNode.endPos <= posEnd) { " is 123.
Long Statement,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,OpenFileCmd,The length of the statement  "		lbMessage.Text = String.Format ("Message:\n Tilte:{0}\n Author:{1}\n URL:{2}\n ID:{3}"' curDoc.title' curDoc.author' curDoc.url' curDoc.id); " is 140.
Long Statement,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,SelectTagCmd,The length of the statement  "	rTBDoc.Select (curDoc.tagNodeList [index].startPos' curDoc.tagNodeList [index].endPos - curDoc.tagNodeList [index].startPos); " is 125.
Long Statement,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,Form1_Load,The length of the statement  "	cBType.SelectedIndex = cbIntent.SelectedIndex = cBPurpose.SelectedIndex = cBDestination.SelectedIndex = cBTime.SelectedIndex = 0; " is 129.
Long Statement,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,The length of the statement  "				lbMessage.Text = String.Format ("Message:\n Tilte:{0}\n Author:{1}\n URL:{2}\n ID:{3}"' curDoc.title' curDoc.author' curDoc.url' curDoc.id); " is 140.
Complex Conditional,MeTagWinForm,AppBase,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,SaveFile,The conditional expression  "savedDoc == null || String.IsNullOrEmpty (savedDoc.type) || String.IsNullOrEmpty (savedDoc.id) || string.IsNullOrEmpty (savedDoc.content)"  is complex.
Complex Conditional,MeTagWinForm,TagDoc,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,GetInsertPos,The conditional expression  "posStart < slotStart && slotStart < posEnd || posStart < slotEnd && slotEnd < posEnd || slotStart > posEnd"  is complex.
Complex Conditional,MeTagWinForm,TagDoc,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,getTagNodesByRange,The conditional expression  "posStart <= curNode.startPos && curNode.startPos <= posEnd || posStart <= curNode.endPos && curNode.endPos <= posEnd"  is complex.
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,OpenFileCmd,The following statement contains a magic number: if (curDoc == null)  	MessageBox.Show ("Failed to load seleted file' check file format.");  else {  	rTBDoc.Clear ();  	rTBDoc.Text = curDoc.content;  	if (!String.IsNullOrEmpty (curDoc.intent))  		cbIntent.Text = curDoc.intent;  	if (!String.IsNullOrEmpty (curDoc.type))  		cBType.Text = curDoc.type;  	lbMessage.Text = String.Format ("Message:\n Tilte:{0}\n Author:{1}\n URL:{2}\n ID:{3}"' curDoc.title' curDoc.author' curDoc.url' curDoc.id);  	RefreshRichTextBox (-1' -1);  	curDocFileName = Path.GetFileNameWithoutExtension (fileName);  	if (curDocFileName.EndsWith (".xml"))  		curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  }  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,OpenFileCmd,The following statement contains a magic number: if (curDocFileName.EndsWith (".xml"))  	curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,OpenFileCmd,The following statement contains a magic number: curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,Form1_Load,The following statement contains a magic number: if (args.Length > 2 && Int32.TryParse (args [2]' out index))  	SelectTagCmd (index);  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,Form1_Load,The following statement contains a magic number: if (args.Length > 2 && Int32.TryParse (args [2]' out index))  	SelectTagCmd (index);  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,The following statement contains a magic number: using (OpenFileDialog ofDlg = new OpenFileDialog ()) {  	ofDlg.DefaultExt = ".xml";  	ofDlg.Filter = "XML File|*.xml|Work State File|*.ws|All File|*.*";  	ofDlg.Multiselect = false;  	if (ofDlg.ShowDialog () == DialogResult.OK) {  		curDoc = AppBase.LoadFile (ofDlg.FileName);  		if (curDoc == null)  			MessageBox.Show ("Failed to load seleted file' check file format.");  		else {  			rTBDoc.Clear ();  			rTBDoc.Text = curDoc.content;  			if (!String.IsNullOrEmpty (curDoc.intent))  				cbIntent.Text = curDoc.intent;  			if (!String.IsNullOrEmpty (curDoc.type))  				cBType.Text = curDoc.type;  			lbMessage.Text = String.Format ("Message:\n Tilte:{0}\n Author:{1}\n URL:{2}\n ID:{3}"' curDoc.title' curDoc.author' curDoc.url' curDoc.id);  			RefreshRichTextBox (-1' -1);  			curDocFileName = Path.GetFileNameWithoutExtension (ofDlg.FileName);  			if (curDocFileName.EndsWith (".xml"))  				curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  		}  	}  }  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,The following statement contains a magic number: if (ofDlg.ShowDialog () == DialogResult.OK) {  	curDoc = AppBase.LoadFile (ofDlg.FileName);  	if (curDoc == null)  		MessageBox.Show ("Failed to load seleted file' check file format.");  	else {  		rTBDoc.Clear ();  		rTBDoc.Text = curDoc.content;  		if (!String.IsNullOrEmpty (curDoc.intent))  			cbIntent.Text = curDoc.intent;  		if (!String.IsNullOrEmpty (curDoc.type))  			cBType.Text = curDoc.type;  		lbMessage.Text = String.Format ("Message:\n Tilte:{0}\n Author:{1}\n URL:{2}\n ID:{3}"' curDoc.title' curDoc.author' curDoc.url' curDoc.id);  		RefreshRichTextBox (-1' -1);  		curDocFileName = Path.GetFileNameWithoutExtension (ofDlg.FileName);  		if (curDocFileName.EndsWith (".xml"))  			curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  	}  }  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,The following statement contains a magic number: if (curDoc == null)  	MessageBox.Show ("Failed to load seleted file' check file format.");  else {  	rTBDoc.Clear ();  	rTBDoc.Text = curDoc.content;  	if (!String.IsNullOrEmpty (curDoc.intent))  		cbIntent.Text = curDoc.intent;  	if (!String.IsNullOrEmpty (curDoc.type))  		cBType.Text = curDoc.type;  	lbMessage.Text = String.Format ("Message:\n Tilte:{0}\n Author:{1}\n URL:{2}\n ID:{3}"' curDoc.title' curDoc.author' curDoc.url' curDoc.id);  	RefreshRichTextBox (-1' -1);  	curDocFileName = Path.GetFileNameWithoutExtension (ofDlg.FileName);  	if (curDocFileName.EndsWith (".xml"))  		curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  }  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,The following statement contains a magic number: if (curDocFileName.EndsWith (".xml"))  	curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  
Magic Number,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,tSbtOpen_Click,The following statement contains a magic number: curDocFileName = curDocFileName.Substring (0' curDocFileName.Length - 4);  
Missing Default,MeTagWinForm,TagNode,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\AppBase.cs,GetHead,The following switch statement is missing a default case: switch (tagType) {  case TagType.PURPOSE:  	sbTag.Append ("<purpose");  	break;  case TagType.DESTINATION:  	sbTag.Append ("<destination");  	break;  case TagType.ATTENDER:  	sbTag.Append ("<attender");  	break;  case TagType.TRANSPORT:  	sbTag.Append ("<transport");  	break;  case TagType.BEFORE_TRAVEL:  	sbTag.Append ("<beforetravel");  	break;  case TagType.DURING_TRAVEL:  	sbTag.Append ("<duringtravel");  	break;  case TagType.AFTER_TRAVEL:  	sbTag.Append ("<aftertravel");  	break;  case TagType.TIME:  	sbTag.Append ("<time");  	break;  }  
Missing Default,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,SetCurTag,The following switch statement is missing a default case: switch (curTag.tagType) {  case TagType.PURPOSE:  	BoldLabel (lbPurpose' false);  	cBPurpose.TextChanged -= new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.DESTINATION:  	BoldLabel (lbDestination' false);  	cBDestination.TextChanged -= new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.ATTENDER:  	BoldLabel (lbAttender' false);  	break;  case TagType.TRANSPORT:  	BoldLabel (lbTransport' false);  	break;  case TagType.BEFORE_TRAVEL:  	BoldLabel (lbBeforeTravel' false);  	cBBeforeTravel.TextChanged -= new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.DURING_TRAVEL:  	BoldLabel (lbDuringTravel' false);  	cBDuringTravel.TextChanged -= new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.AFTER_TRAVEL:  	BoldLabel (lbAfterTravel' false);  	cBAfterTravel.TextChanged -= new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.TIME:  	BoldLabel (lbTime' false);  	cBTime.TextChanged -= new EventHandler (cBCurTag_TextChanged);  	break;  }  
Missing Default,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,SetCurTag,The following switch statement is missing a default case: switch (curTag.tagType) {  case TagType.PURPOSE:  	BoldLabel (lbPurpose' true);  	cBPurpose.Text = curTag.attributes [0].Value;  	cBPurpose.TextChanged += new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.DESTINATION:  	BoldLabel (lbDestination' true);  	cBDestination.Text = curTag.attributes [0].Value;  	cBDestination.TextChanged += new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.ATTENDER:  	BoldLabel (lbAttender' true);  	break;  case TagType.TRANSPORT:  	BoldLabel (lbTransport' true);  	break;  case TagType.BEFORE_TRAVEL:  	BoldLabel (lbBeforeTravel' true);  	cBBeforeTravel.Text = curTag.attributes [0].Value;  	cBBeforeTravel.TextChanged += new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.DURING_TRAVEL:  	BoldLabel (lbDuringTravel' true);  	cBDuringTravel.Text = curTag.attributes [0].Value;  	cBDuringTravel.TextChanged += new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.AFTER_TRAVEL:  	BoldLabel (lbAfterTravel' true);  	cBAfterTravel.Text = curTag.attributes [0].Value;  	cBAfterTravel.TextChanged += new EventHandler (cBCurTag_TextChanged);  	break;  case TagType.TIME:  	BoldLabel (lbTime' true);  	cBTime.Text = curTag.attributes [0].Value;  	cBTime.TextChanged += new EventHandler (cBCurTag_TextChanged);  	break;  }  
Missing Default,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,RefreshRichTextBox,The following switch statement is missing a default case: switch (curNode.tagType) {  case TagType.PURPOSE:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#FF8888");  	break;  case TagType.DESTINATION:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#FFBB88");  	break;  case TagType.ATTENDER:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#FFFFBB");  	break;  case TagType.TRANSPORT:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#88FF88");  	break;  case TagType.BEFORE_TRAVEL:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#88FFFF");  	break;  case TagType.DURING_TRAVEL:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#88BBFF");  	break;  case TagType.AFTER_TRAVEL:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#8888FF");  	break;  case TagType.TIME:  	rTBDoc.SelectionBackColor = ColorTranslator.FromHtml ("#FF88FF");  	break;  }  
Missing Default,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,rTBDoc_KeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.F1:  	cBPurpose.Focus ();  	break;  case Keys.F2:  	cBDestination.Focus ();  	break;  case Keys.F5:  	cBBeforeTravel.Focus ();  	break;  case Keys.F6:  	cBDuringTravel.Focus ();  	break;  case Keys.F7:  	cBAfterTravel.Focus ();  	break;  case Keys.F8:  	cBTime.Focus ();  	break;  }  
Missing Default,MeTagWinForm,Form1,C:\repos\superlucky8848_Misc_VS\MeTag\MeTagWinForm\Form1.cs,rTBDoc_KeyUp,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.F1:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.PURPOSE;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			newNode.attributes.Add (new KeyValuePair<string' string> ("value"' cBPurpose.Text));  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F2:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.DESTINATION;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			newNode.attributes.Add (new KeyValuePair<string' string> ("value"' cBDestination.Text));  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F3:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.ATTENDER;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F4:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.TRANSPORT;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F5:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.BEFORE_TRAVEL;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			newNode.attributes.Add (new KeyValuePair<string' string> ("value"' cBBeforeTravel.Text));  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F6:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.DURING_TRAVEL;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			newNode.attributes.Add (new KeyValuePair<string' string> ("value"' cBDuringTravel.Text));  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F7:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.AFTER_TRAVEL;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			newNode.attributes.Add (new KeyValuePair<string' string> ("value"' cBAfterTravel.Text));  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  case Keys.F8:  	if (curTag == null)//Insert New Node  	 {  		insertPos = curDoc.GetInsertPos (posStart' posEnd);  		if (rTBDoc.SelectionLength == 0)  			MessageBox.Show ("Select something to add node");  		else if (insertPos < 0)  			MessageBox.Show ("Can not add tag here");  		else {  			TagNode newNode = new TagNode ();  			newNode.tagType = TagType.TIME;  			newNode.startPos = posStart;  			newNode.endPos = posEnd;  			newNode.attributes.Add (new KeyValuePair<string' string> ("value"' cBTime.Text));  			curDoc.tagNodeList.Insert (insertPos' newNode);  			RefreshRichTextBox (posStart' posEnd);  		}  	}  	else//Remove Existing Node  	 {  		int tagStart = curTag.startPos' tagEnd = curTag.endPos;  		curDoc.tagNodeList.Remove (curTag);  		RefreshRichTextBox (tagStart' tagEnd);  	}  	rTBDoc.Focus ();  	break;  }  
