Implementation smell,Namespace,Class,File,Method,Description
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: try {  	// test the connection  	influxdb.TestCredentials ();  	// list available databases  	foreach (var db in influxdb.ListDatabase ()) {  		Console.WriteLine ("Database: {0}"' db.Name);  	}  	// list available time series  	foreach (var series in influxdb.ListSeries ()) {  		Console.WriteLine (" Series: {0}"' series.Name);  	}  	// insert data  	for (var i = 0; i < 10; i++) {  		influxdb.WritePoints ("localhost_memory"' new[] {  			"free"  		}' new[] {  			RamCounter.NextValue ()  		});  		Thread.Sleep (1000);  	}  	// query the data  	var result = influxdb.Query ("SELECT free FROM localhost_memory");  	// display  	foreach (var point in result.Points) {  		long unixDate = point [0];  		long sequenceNumber = point [1];  		long free = point [2];  		var date = InfluxDb.UnixEpoch.AddMilliseconds (unixDate).ToLocalTime ();  		Console.WriteLine (" {0} ({1}) : {2}MB"' date.ToLongTimeString ()' sequenceNumber' free);  	}  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  finally {  	Console.ReadLine ();  }  
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: try {  	// test the connection  	influxdb.TestCredentials ();  	// list available databases  	foreach (var db in influxdb.ListDatabase ()) {  		Console.WriteLine ("Database: {0}"' db.Name);  	}  	// list available time series  	foreach (var series in influxdb.ListSeries ()) {  		Console.WriteLine (" Series: {0}"' series.Name);  	}  	// insert data  	for (var i = 0; i < 10; i++) {  		influxdb.WritePoints ("localhost_memory"' new[] {  			"free"  		}' new[] {  			RamCounter.NextValue ()  		});  		Thread.Sleep (1000);  	}  	// query the data  	var result = influxdb.Query ("SELECT free FROM localhost_memory");  	// display  	foreach (var point in result.Points) {  		long unixDate = point [0];  		long sequenceNumber = point [1];  		long free = point [2];  		var date = InfluxDb.UnixEpoch.AddMilliseconds (unixDate).ToLocalTime ();  		Console.WriteLine (" {0} ({1}) : {2}MB"' date.ToLongTimeString ()' sequenceNumber' free);  	}  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  finally {  	Console.ReadLine ();  }  
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: try {  	// test the connection  	influxdb.TestCredentials ();  	// list available databases  	foreach (var db in influxdb.ListDatabase ()) {  		Console.WriteLine ("Database: {0}"' db.Name);  	}  	// list available time series  	foreach (var series in influxdb.ListSeries ()) {  		Console.WriteLine (" Series: {0}"' series.Name);  	}  	// insert data  	for (var i = 0; i < 10; i++) {  		influxdb.WritePoints ("localhost_memory"' new[] {  			"free"  		}' new[] {  			RamCounter.NextValue ()  		});  		Thread.Sleep (1000);  	}  	// query the data  	var result = influxdb.Query ("SELECT free FROM localhost_memory");  	// display  	foreach (var point in result.Points) {  		long unixDate = point [0];  		long sequenceNumber = point [1];  		long free = point [2];  		var date = InfluxDb.UnixEpoch.AddMilliseconds (unixDate).ToLocalTime ();  		Console.WriteLine (" {0} ({1}) : {2}MB"' date.ToLongTimeString ()' sequenceNumber' free);  	}  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  finally {  	Console.ReadLine ();  }  
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	influxdb.WritePoints ("localhost_memory"' new[] {  		"free"  	}' new[] {  		RamCounter.NextValue ()  	});  	Thread.Sleep (1000);  }  
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	influxdb.WritePoints ("localhost_memory"' new[] {  		"free"  	}' new[] {  		RamCounter.NextValue ()  	});  	Thread.Sleep (1000);  }  
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,influxdb_csharp_example,Program,C:\repos\pingfu_influxdb-csharp\influxdb-csharp-example\Program.cs,Main,The following statement contains a magic number: foreach (var point in result.Points) {  	long unixDate = point [0];  	long sequenceNumber = point [1];  	long free = point [2];  	var date = InfluxDb.UnixEpoch.AddMilliseconds (unixDate).ToLocalTime ();  	Console.WriteLine (" {0} ({1}) : {2}MB"' date.ToLongTimeString ()' sequenceNumber' free);  }  
