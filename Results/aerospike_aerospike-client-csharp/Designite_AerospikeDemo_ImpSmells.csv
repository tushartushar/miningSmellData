Implementation smell,Namespace,Class,File,Method,Description
Long Method,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The method has 841 lines of code.
Complex Method,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,Cyclomatic complexity of the method is 10
Long Parameter List,Aerospike.Demo,WriteHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,WriteHandler,The method has 5 parameters. Parameters: parent' client' policy' key' bin
Long Parameter List,Aerospike.Demo,WriteHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,WriteHandler,The method has 5 parameters. Parameters: parent' client' args' binName' max
Long Parameter List,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,WriteRecords,The method has 6 parameters. Parameters: client' args' keyPrefix' binName' valuePrefix' size
Long Parameter List,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReads,The method has 5 parameters. Parameters: client' args' keyPrefix' binName' size
Long Parameter List,Aerospike.Demo,BenchmarkThreadSync,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkThreadSync.cs,BenchmarkThreadSync,The method has 5 parameters. Parameters: console' args' shared' example' client
Long Parameter List,Aerospike.Demo,BenchmarkThreadAsync,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkThreadAsync.cs,BenchmarkThreadAsync,The method has 5 parameters. Parameters: console' args' shared' example' client
Long Parameter List,Aerospike.Demo,AsyncQuery,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncQuery.cs,RunQueryExample,The method has 5 parameters. Parameters: client' args' keyPrefix' binName' size
Long Parameter List,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,CreateIndex,The method has 5 parameters. Parameters: client' args' indexType' indexName' binName
Long Parameter List,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapRecords,The method has 7 parameters. Parameters: client' args' keyPrefix' binName' binName2' valuePrefix' size
Long Parameter List,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapKeyRecords,The method has 7 parameters. Parameters: client' args' keyPrefix' binName' binName2' valuePrefix' size
Long Parameter List,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteListRecords,The method has 6 parameters. Parameters: client' args' keyPrefix' binName' binName2' size
Long Parameter List,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunQuery,The method has 5 parameters. Parameters: client' args' binName' binName2' indexType
Long Parameter List,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The method has 6 parameters. Parameters: client' args' keyPrefix' binName1' binName2' size
Long Parameter List,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,RunQuery,The method has 5 parameters. Parameters: client' args' indexName' binName1' binName2
Long Parameter List,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,WriteRecords,The method has 5 parameters. Parameters: client' args' keyPrefix' binName' size
Long Parameter List,Aerospike.Demo,Account,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,Read,The method has 5 parameters. Parameters: client' policy' ns' set' accountId
Long Parameter List,Aerospike.Demo,QueryFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryFilter.cs,WriteRecord,The method has 5 parameters. Parameters: client' args' userKey' name' password
Long Parameter List,Aerospike.Demo,Operate,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Operate.cs,ValidateBin,The method has 5 parameters. Parameters: key' record' binName' expected' received
Long Parameter List,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,WriteRecords,The method has 6 parameters. Parameters: client' args' keyPrefix' binName1' binName2' size
Long Parameter List,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,RunQueryExecute,The method has 5 parameters. Parameters: client' args' indexName' binName1' binName2
Long Parameter List,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The method has 6 parameters. Parameters: client' args' indexName' binName1' binName2' size
Long Parameter List,Aerospike.Demo,QueryInteger,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryInteger.cs,WriteRecords,The method has 5 parameters. Parameters: client' args' keyPrefix' binName' size
Long Parameter List,Aerospike.Demo,QueryString,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryString.cs,WriteRecords,The method has 6 parameters. Parameters: client' args' keyPrefix' binName' valuePrefix' size
Long Parameter List,Aerospike.Demo,QueryString,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryString.cs,RunQuery,The method has 5 parameters. Parameters: client' args' indexName' binName' valuePrefix
Long Parameter List,Aerospike.Demo,QuerySum,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QuerySum.cs,WriteRecords,The method has 5 parameters. Parameters: client' args' keyPrefix' binName' size
Long Parameter List,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The method has 6 parameters. Parameters: client' policy' key' bin' search' expected
Long Statement,Aerospike.Demo,WriteHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,OnSuccess,The length of the statement  "					parent.console.Info("Query for: ns=" + args.ns + " set=" + args.set + " bin=" + binName + " >= " + begin + " <= " + end); " is 121.
Long Statement,Aerospike.Demo,BenchmarkReadWrite,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkReadWrite.cs,RunTicker,The length of the statement  "					console.Info("write(tps={0} timeouts={1} errors={2}) read(tps={3} timeouts={4} errors={5}) total(tps={6} timeouts={7} errors={8})"' " is 131.
Long Statement,Aerospike.Demo,BenchmarkReadWrite,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkReadWrite.cs,RunTicker,The length of the statement  "					console.Info("threads=" + t + "'minw=" + minw + "'minp=" + minp + "'maxw=" + maxw + "'maxp=" + maxp + "'aw=" + aw + "'ap=" + ap); " is 129.
Long Statement,Aerospike.Demo,AsyncUserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncUserDefinedFunction.cs,WriteUsingUdfAsync,The length of the statement  "			console.Info("Write with udf: namespace=" + key.ns + " set=" + key.setName + " key=" + key.userKey + " value=" + bin.value); " is 124.
Long Statement,Aerospike.Demo,AsyncUserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncUserDefinedFunction.cs,WriteUsingUdfAsync,The length of the statement  "			client.Execute(null' new WriteHandler(this' client' key' bin.name)' key' "record_example"' "writeBin"' Value.Get(bin.name)' bin.value); " is 135.
Long Statement,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunSimpleExample,The length of the statement  "			record = client.Operate(args.writePolicy' key' MapOperation.RemoveByKey(binName' Value.Get(1)' MapReturnType.VALUE)' MapOperation.Size(binName)); " is 145.
Long Statement,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,CreateIndex,The length of the statement  "			console.Info("Create GeoJSON {0} index: ns={1} set={2} index={3} bin={4}"' indexType' args.ns' args.set' indexName' binName); " is 125.
Long Statement,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunQuery,The length of the statement  "			console.Info("Query for: ns={0} set={1} bin={2} {3} within <region>"' args.ns' args.set' binName' indexType.ToString()); " is 120.
Long Statement,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The length of the statement  "			return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"' " is 164.
Long Statement,Aerospike.Demo,Account,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,Validate,The length of the statement  "				throw new Exception("positions.Count mismatch. Expected " + this.positions.Count + " Received " + other.positions.Count); " is 121.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,HighlightSourceCode,The length of the statement  "            string tokens = @"(using|namespace|class|public|base|override|void|string|int|bool|\stry\s|null|if|throw|new|\sobject\s|uint|out|else|catch|finally|private|foreach|\sin\s)"; " is 173.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The length of the statement  "			this.splitContainer1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The length of the statement  "			this.latencyDisplayLabel.Font = new System.Drawing.Font("Courier New"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 157.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The length of the statement  "			this.codeBox.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 143.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The length of the statement  "			this.consoleBox.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 146.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The length of the statement  "			this.consoleBox.Font = new System.Drawing.Font("Courier New"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 148.
Long Statement,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The length of the statement  "			this.examplesView.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 147.
Long Statement,Aerospike.Demo,Generation,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Generation.cs,RunExample,The length of the statement  "					throw new Exception(string.Format("Unexpected set return code: namespace={0} set={1} key={2} bin={3} value={4} code={5}"'  " is 121.
Long Statement,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,RunQueryExecute,The length of the statement  "			ExecuteTask task = client.Execute(args.writePolicy' stmt' "record_example"' "processRecord"' Value.Get(binName1)' Value.Get(binName2)' Value.Get(100)); " is 151.
Long Statement,Aerospike.Demo,Arguments,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Arguments.cs,ToString,The length of the statement  "			return "Parameters: hosts=" + Util.ArrayToString(hosts) + " port=" + port + " ns=" + ns + " set=" + set + " single-bin=" + singleBin; " is 133.
Long Statement,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,WriteIfGenerationNotChanged,The length of the statement  "			client.Execute(args.writePolicy' key' "record_example"' "writeIfGenerationNotChanged"' Value.Get(bin.name)' bin.value' Value.Get(gen)); " is 135.
Long Statement,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The length of the statement  "			long lexists = (long)client.Execute(policy' key' "record_example"' "valueExists"' Value.Get(bin.name)' Value.Get(search)); " is 122.
Complex Conditional,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The conditional expression  "!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100)"  is complex.
Empty Catch Block,Aerospike.Demo,BenchmarkExample,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkExample.cs,GetIsStopWrites,The method has an empty catch block.
Magic Number,Aerospike.Demo,Add,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Add.cs,RunExample,The following statement contains a magic number: Bin bin = new Bin(binName' 10);
Magic Number,Aerospike.Demo,Add,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Add.cs,RunExample,The following statement contains a magic number: bin = new Bin(binName' 5);
Magic Number,Aerospike.Demo,Add,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Add.cs,RunExample,The following statement contains a magic number: int expected = 15;
Magic Number,Aerospike.Demo,Add,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Add.cs,RunExample,The following statement contains a magic number: bin = new Bin(binName' 30);
Magic Number,Aerospike.Demo,Add,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Add.cs,RunExample,The following statement contains a magic number: expected = 45;
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 2)' true));
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 3)' true));
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 4)' false));
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 5)' true));
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 6)' true));
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 7)' bins));
Magic Number,Aerospike.Demo,AsyncBatch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' KeyPrefix + 8)' new string[] { "binnotfound" }));
Magic Number,Aerospike.Demo,WriteHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,OnSuccess,The following statement contains a magic number: if (rows == max)  				{  					try  					{  						// All writes succeeded. Run batch queries in parallel.  						parent.taskSize = 6;  						parent.BatchExistsArray();  						parent.BatchExistsSequence();  						parent.BatchGetArray();  						parent.BatchGetSequence();  						parent.BatchGetHeaders();  						parent.BatchReadComplex();  					}  					catch (Exception e)  					{  						parent.console.Error("Batch failed: " + e.Message);  						parent.AllTasksComplete();  					}  				}
Magic Number,Aerospike.Demo,WriteHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,OnSuccess,The following statement contains a magic number: if (rows == max)  				{  					int begin = 26;  					int end = 34;    					parent.console.Info("Query for: ns=" + args.ns + " set=" + args.set + " bin=" + binName + " >= " + begin + " <= " + end);    					Statement stmt = new Statement();  					stmt.SetNamespace(args.ns);  					stmt.SetSetName(args.set);  					stmt.SetBinNames(binName);  					stmt.SetFilter(Filter.Range(binName' begin' end));    					client.Query(null' new RecordSequenceHandler(parent' binName)' stmt);  				}
Magic Number,Aerospike.Demo,WriteHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,OnSuccess,The following statement contains a magic number: if (rows == max)  				{  					int begin = 26;  					int end = 34;    					parent.console.Info("Query for: ns=" + args.ns + " set=" + args.set + " bin=" + binName + " >= " + begin + " <= " + end);    					Statement stmt = new Statement();  					stmt.SetNamespace(args.ns);  					stmt.SetSetName(args.set);  					stmt.SetBinNames(binName);  					stmt.SetFilter(Filter.Range(binName' begin' end));    					client.Query(null' new RecordSequenceHandler(parent' binName)' stmt);  				}
Magic Number,Aerospike.Demo,RecordSequenceHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,OnRecord,The following statement contains a magic number: if ((parent.recordCount % 10000) == 0)  				{  					parent.console.Info("Records " + parent.recordCount);  				}
Magic Number,Aerospike.Demo,BatchListHandler,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncBatch.cs,OnSuccess,The following statement contains a magic number: if (found != 8)  				{  					parent.console.Error("Records found mismatch. Expected 8. Received " + found);  				}
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,RunExample,The following statement contains a magic number: int size = 8;
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 2)' true));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 3)' true));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 4)' false));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 5)' true));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 6)' true));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 7)' bins));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: records.Add(new BatchRead(new Key(args.ns' args.set' keyPrefix + 8)' new string[] { "binnotfound" }));
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: if (found != 8)  			{  				console.Error("Records found mismatch. Expected %d. Received %d."' 8' found);  			}
Magic Number,Aerospike.Demo,Batch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Batch.cs,BatchReadComplex,The following statement contains a magic number: if (found != 8)  			{  				console.Error("Records found mismatch. Expected %d. Received %d."' 8' found);  			}
Magic Number,Aerospike.Demo,BenchmarkArguments,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkArguments.cs,GetValue,The following statement contains a magic number: switch (binType)              {                  case BinType.Integer:                      return Value.Get(random.Next());                    case BinType.String:                      StringBuilder sb = new StringBuilder(binSize);                        for (int i = 0; i < binSize; i++)                      {                          sb.Append((char) random.Next(33'127));                      }                      return Value.Get(sb.ToString());                    case BinType.Byte:                      byte[] bytes = new byte[binSize];                      random.NextBytes(bytes);                      return Value.Get(bytes);                    default:                      return null;              }
Magic Number,Aerospike.Demo,BenchmarkArguments,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkArguments.cs,GetValue,The following statement contains a magic number: switch (binType)              {                  case BinType.Integer:                      return Value.Get(random.Next());                    case BinType.String:                      StringBuilder sb = new StringBuilder(binSize);                        for (int i = 0; i < binSize; i++)                      {                          sb.Append((char) random.Next(33'127));                      }                      return Value.Get(sb.ToString());                    case BinType.Byte:                      byte[] bytes = new byte[binSize];                      random.NextBytes(bytes);                      return Value.Get(bytes);                    default:                      return null;              }
Magic Number,Aerospike.Demo,BenchmarkThread,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkThread.cs,RunWorker,The following statement contains a magic number: while (example.valid)              {                  // Choose key at random.                  int key = random.Next(0' args.records);                    // Roll a percentage die.                  int die = random.Next(0' 100);                    if (die < args.readPct)                  {                      Read(key);                  }                  else                  {                      Write(key);                  }              }
Magic Number,Aerospike.Demo,BenchmarkInitialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkInitialize.cs,RunTicker,The following statement contains a magic number: if (shared.writeLatency != null)              {                  latencyBuilder = new StringBuilder(200);                  latencyHeader = shared.writeLatency.PrintHeader();              }
Magic Number,Aerospike.Demo,BenchmarkInitialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkInitialize.cs,RunTicker,The following statement contains a magic number: while (valid)  			{  				int writeCurrent = Interlocked.Exchange(ref shared.writeCount' 0);  				int writeTimeoutCurrent = Interlocked.Exchange(ref shared.writeTimeoutCount' 0);  				int writeErrorCurrent = Interlocked.Exchange(ref shared.writeErrorCount' 0);  				int totalCount = shared.currentKey;  				  				DateTime time = DateTime.Now;  				double seconds = (double)time.Subtract(prevTime).TotalSeconds;  				prevTime = time;    				if (seconds > 0.0)  				{  					double writeTps = Math.Round((double)writeCurrent / seconds' 0);    					console.Info("write(tps={0} timeouts={1} errors={2} total={3})"'  						writeTps' writeTimeoutCurrent' writeErrorCurrent' totalCount  					);                        if (latencyHeader != null)                      {                          console.Write(latencyHeader);                          console.Write(shared.writeLatency.PrintResults(latencyBuilder' "write"));                      }  				}    				/* Keep going so node add/remove tests can be run.  				if (writeTimeoutCurrent + writeErrorCurrent > 10)  				{                      if (GetIsStopWrites())  					{  						if (valid)  						{  							console.Error("Cluster is either in readonly mode or no nodes responded. Shutting down...");  							valid = false;  						}  					}  				}  				*/  				Thread.Sleep(1000);  			}
Magic Number,Aerospike.Demo,BenchmarkReadWrite,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkReadWrite.cs,RunTicker,The following statement contains a magic number: if (shared.writeLatency != null)              {                  latencyBuilder = new StringBuilder(200);                  latencyHeader = shared.writeLatency.PrintHeader();              }
Magic Number,Aerospike.Demo,BenchmarkReadWrite,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\BenchmarkReadWrite.cs,RunTicker,The following statement contains a magic number: while (valid)  			{  				int writeCurrent = Interlocked.Exchange(ref shared.writeCount' 0);  				int writeTimeoutCurrent = Interlocked.Exchange(ref shared.writeTimeoutCount' 0);  				int writeErrorCurrent = Interlocked.Exchange(ref shared.writeErrorCount' 0);  				int readCurrent = Interlocked.Exchange(ref shared.readCount' 0);  				int readTimeoutCurrent = Interlocked.Exchange(ref shared.readTimeoutCount' 0);  				int readErrorCurrent = Interlocked.Exchange(ref shared.readErrorCount' 0);  				  				DateTime time = DateTime.Now;  				double seconds = (double)time.Subtract(prevTime).TotalSeconds;  				prevTime = time;    				if (seconds > 0.0)  				{  					double writeTps = Math.Round((double)writeCurrent / seconds' 0);  					double readTps = Math.Round((double)readCurrent / seconds' 0);    					console.Info("write(tps={0} timeouts={1} errors={2}) read(tps={3} timeouts={4} errors={5}) total(tps={6} timeouts={7} errors={8})"'  						writeTps' writeTimeoutCurrent' writeErrorCurrent'   						readTps' readTimeoutCurrent' readErrorCurrent'  						writeTps + readTps' writeTimeoutCurrent + readTimeoutCurrent' writeErrorCurrent + readErrorCurrent);                        if (latencyHeader != null)                      {                          console.Write(latencyHeader);                          console.Write(shared.writeLatency.PrintResults(latencyBuilder' "write"));                          console.Write(shared.readLatency.PrintResults(latencyBuilder' "read"));                      }    					/*  					int minw' minp' maxw' maxp' aw' ap;  					ThreadPool.GetMinThreads(out minw' out minp);  					ThreadPool.GetMaxThreads(out maxw' out maxp);  					ThreadPool.GetAvailableThreads(out aw' out ap);  					int t = Process.GetCurrentProcess().Threads.Count;  					console.Info("threads=" + t + "'minw=" + minw + "'minp=" + minp + "'maxw=" + maxw + "'maxp=" + maxp + "'aw=" + aw + "'ap=" + ap);  					*/  				}    				/* Keep going so node add/remove tests can be run.  				if (writeTimeoutCurrent + writeErrorCurrent > 10)  				{                      if (GetIsStopWrites())  					{  						if (valid)  						{  							console.Error("Cluster is either in readonly mode or no nodes responded. Shutting down...");                              valid = false;  						}  					}  				}  				*/  				Thread.Sleep(1000);  			}
Magic Number,Aerospike.Demo,AsyncQuery,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\AsyncQuery.cs,RunExample,The following statement contains a magic number: int size = 50;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunExample,The following statement contains a magic number: int size = 50;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,WriteRecords,The following statement contains a magic number: for (int i = 1; i <= size; i++)  			{  				Key key = new Key(args.ns' args.set' i);  				Bin bin1 = new Bin(binName' i);  				Bin bin2 = new Bin("bin2"' i * 10);  				Bin bin3;    				if (i % 4 == 0)  				{  					bin3 = new Bin("bin3"' "prefix-" + i + "-suffix");  				}  				else if (i % 2 == 0)  				{  					bin3 = new Bin("bin3"' "prefix-" + i + "-SUFFIX");  				}  				else  				{  					bin3 = new Bin("bin3"' "pre-" + i + "-suf");  				}  				client.Put(args.writePolicy' key' bin1' bin2' bin3);  			}
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,WriteRecords,The following statement contains a magic number: for (int i = 1; i <= size; i++)  			{  				Key key = new Key(args.ns' args.set' i);  				Bin bin1 = new Bin(binName' i);  				Bin bin2 = new Bin("bin2"' i * 10);  				Bin bin3;    				if (i % 4 == 0)  				{  					bin3 = new Bin("bin3"' "prefix-" + i + "-suffix");  				}  				else if (i % 2 == 0)  				{  					bin3 = new Bin("bin3"' "prefix-" + i + "-SUFFIX");  				}  				else  				{  					bin3 = new Bin("bin3"' "pre-" + i + "-suf");  				}  				client.Put(args.writePolicy' key' bin1' bin2' bin3);  			}
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,WriteRecords,The following statement contains a magic number: for (int i = 1; i <= size; i++)  			{  				Key key = new Key(args.ns' args.set' i);  				Bin bin1 = new Bin(binName' i);  				Bin bin2 = new Bin("bin2"' i * 10);  				Bin bin3;    				if (i % 4 == 0)  				{  					bin3 = new Bin("bin3"' "prefix-" + i + "-suffix");  				}  				else if (i % 2 == 0)  				{  					bin3 = new Bin("bin3"' "prefix-" + i + "-SUFFIX");  				}  				else  				{  					bin3 = new Bin("bin3"' "pre-" + i + "-suf");  				}  				client.Put(args.writePolicy' key' bin1' bin2' bin3);  			}
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: int begin = 10;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: int end = 40;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: stmt.SetPredExp(  				PredExp.IntegerBin("bin2")'   				PredExp.IntegerValue(126)'  				PredExp.IntegerGreater()'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(140)'  				PredExp.IntegerLessEq()'  				PredExp.And(2)'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(360)'  				PredExp.IntegerEqual()'  				PredExp.Or(2)  				);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: stmt.SetPredExp(  				PredExp.IntegerBin("bin2")'   				PredExp.IntegerValue(126)'  				PredExp.IntegerGreater()'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(140)'  				PredExp.IntegerLessEq()'  				PredExp.And(2)'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(360)'  				PredExp.IntegerEqual()'  				PredExp.Or(2)  				);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: stmt.SetPredExp(  				PredExp.IntegerBin("bin2")'   				PredExp.IntegerValue(126)'  				PredExp.IntegerGreater()'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(140)'  				PredExp.IntegerLessEq()'  				PredExp.And(2)'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(360)'  				PredExp.IntegerEqual()'  				PredExp.Or(2)  				);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: stmt.SetPredExp(  				PredExp.IntegerBin("bin2")'   				PredExp.IntegerValue(126)'  				PredExp.IntegerGreater()'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(140)'  				PredExp.IntegerLessEq()'  				PredExp.And(2)'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(360)'  				PredExp.IntegerEqual()'  				PredExp.Or(2)  				);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery1,The following statement contains a magic number: stmt.SetPredExp(  				PredExp.IntegerBin("bin2")'   				PredExp.IntegerValue(126)'  				PredExp.IntegerGreater()'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(140)'  				PredExp.IntegerLessEq()'  				PredExp.And(2)'  				PredExp.IntegerBin("bin2")'  				PredExp.IntegerValue(360)'  				PredExp.IntegerEqual()'  				PredExp.Or(2)  				);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: int begin = 10;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: int end = 40;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: DateTime beginTime = new DateTime(2017' 1' 15);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: DateTime beginTime = new DateTime(2017' 1' 15);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: DateTime endTime = new DateTime(2017' 1' 16);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: DateTime endTime = new DateTime(2017' 1' 16);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery2,The following statement contains a magic number: stmt.SetPredExp(  				PredExp.RecLastUpdate()'  				PredExp.IntegerValue(beginTime)'  				PredExp.IntegerGreaterEq()'  				PredExp.RecLastUpdate()'  				PredExp.IntegerValue(endTime)'  				PredExp.IntegerLess()'  				PredExp.And(2)  				);
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery3,The following statement contains a magic number: int begin = 20;
Magic Number,Aerospike.Demo,QueryPredExp,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryPredExp.cs,RunQuery3,The following statement contains a magic number: int end = 30;
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunSimpleExample,The following statement contains a magic number: inputMap[Value.Get(1)] = Value.Get(55);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunSimpleExample,The following statement contains a magic number: inputMap[Value.Get(2)] = Value.Get(33);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunSimpleExample,The following statement contains a magic number: inputMap[Value.Get(2)] = Value.Get(33);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: inputMap[Value.Get("Charlie")] = Value.Get(55);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: inputMap[Value.Get("Jim")] = Value.Get(98);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: inputMap[Value.Get("John")] = Value.Get(76);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: inputMap[Value.Get("Harry")] = Value.Get(82);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: record = client.Operate(args.writePolicy' key'  				MapOperation.Increment(MapPolicy.Default' binName' Value.Get("John")' Value.Get(5))'  				MapOperation.Decrement(MapPolicy.Default' binName' Value.Get("Jim")' Value.Get(4))  				);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: record = client.Operate(args.writePolicy' key'  				MapOperation.Increment(MapPolicy.Default' binName' Value.Get("John")' Value.Get(5))'  				MapOperation.Decrement(MapPolicy.Default' binName' Value.Get("Jim")' Value.Get(4))  				);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: record = client.Operate(args.writePolicy' key'   				MapOperation.GetByRankRange(binName' -2' 2' MapReturnType.KEY_VALUE)  				);
Magic Number,Aerospike.Demo,OperateMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateMap.cs,RunScoreExample,The following statement contains a magic number: record = client.Operate(args.writePolicy' key'   				MapOperation.GetByRankRange(binName' -2' 2' MapReturnType.KEY_VALUE)  				);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunMapExample,The following statement contains a magic number: int size = 1000;
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunMapKeyExample,The following statement contains a magic number: int size = 1000;
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunListExample,The following statement contains a magic number: int size = 1000;
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<string' Value> map = new Dictionary<string' Value>();    				for (int jj = 0; jj < 10; ++jj)  				{  					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[valuePrefix + "pointkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[valuePrefix + "regionkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<string' Value> map = new Dictionary<string' Value>();    				for (int jj = 0; jj < 10; ++jj)  				{  					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[valuePrefix + "pointkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[valuePrefix + "regionkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<string' Value> map = new Dictionary<string' Value>();    				for (int jj = 0; jj < 10; ++jj)  				{  					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[valuePrefix + "pointkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[valuePrefix + "regionkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<string' Value> map = new Dictionary<string' Value>();    				for (int jj = 0; jj < 10; ++jj)  				{  					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[valuePrefix + "pointkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[valuePrefix + "regionkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<string' Value> map = new Dictionary<string' Value>();    				for (int jj = 0; jj < 10; ++jj)  				{  					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[valuePrefix + "pointkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[valuePrefix + "regionkey_" + i + "_" + jj] = Value.GetAsGeoJSON(geoString);    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapKeyRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<Value' string> map = new Dictionary<Value' string>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "pointkey_" + i + "_" + jj;    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "regionkey_" + i + "_" + jj;    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapKeyRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<Value' string> map = new Dictionary<Value' string>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "pointkey_" + i + "_" + jj;    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "regionkey_" + i + "_" + jj;    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapKeyRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<Value' string> map = new Dictionary<Value' string>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "pointkey_" + i + "_" + jj;    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "regionkey_" + i + "_" + jj;    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapKeyRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<Value' string> map = new Dictionary<Value' string>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "pointkey_" + i + "_" + jj;    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "regionkey_" + i + "_" + jj;    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteMapKeyRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Dictionary<Value' string> map = new Dictionary<Value' string>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "pointkey_" + i + "_" + jj;    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					map[Value.GetAsGeoJSON(geoString)] = valuePrefix + "regionkey_" + i + "_" + jj;    				}  				Bin bin = new Bin(binName' map);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteListRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				List<Value> mylist = new List<Value>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    				}    				Bin bin = new Bin(binName' mylist);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteListRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				List<Value> mylist = new List<Value>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    				}    				Bin bin = new Bin(binName' mylist);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteListRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				List<Value> mylist = new List<Value>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    				}    				Bin bin = new Bin(binName' mylist);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteListRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				List<Value> mylist = new List<Value>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    				}    				Bin bin = new Bin(binName' mylist);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,WriteListRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				List<Value> mylist = new List<Value>();    				for (int jj = 0; jj < 10; ++jj)  				{    					double plat = 0.0 + (0.01 * i);  					double plng = 0.0 + (0.10 * jj);  					string geoString = GeneratePoint(plat' plng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    					double rlat = 0.0 + (0.01 * i);  					double rlng = 0.0 - (0.10 * jj);    					geoString = GeneratePolygon(rlat' rlng);    					mylist.Add(Value.GetAsGeoJSON(geoString));    				}    				Bin bin = new Bin(binName' mylist);  				Bin bin2 = new Bin(binName2' "other_bin_value_" + i);  				client.Put(args.writePolicy' key' bin' bin2);  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;  				HashSet<string> uniques = new HashSet<string>();    				while (rs.Next())  				{  					Record record = rs.Record;  					string val = record.GetString(binName2);  					uniques.Add(val);  					count++;  				}    				if (count != 697)  				{  					console.Error("Query failed. {0} records expected. {1} returned."' 697' count);  				}  				else if (uniques.Count != 21)  				{  					console.Error("Query failed. {0} unique records expected. {1} unique returned."' 21' uniques.Count);  				}  				else  				{  					console.Info("query succeeded with {0} records {1} unique"' count' uniques.Count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;  				HashSet<string> uniques = new HashSet<string>();    				while (rs.Next())  				{  					Record record = rs.Record;  					string val = record.GetString(binName2);  					uniques.Add(val);  					count++;  				}    				if (count != 697)  				{  					console.Error("Query failed. {0} records expected. {1} returned."' 697' count);  				}  				else if (uniques.Count != 21)  				{  					console.Error("Query failed. {0} unique records expected. {1} unique returned."' 21' uniques.Count);  				}  				else  				{  					console.Info("query succeeded with {0} records {1} unique"' count' uniques.Count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;  				HashSet<string> uniques = new HashSet<string>();    				while (rs.Next())  				{  					Record record = rs.Record;  					string val = record.GetString(binName2);  					uniques.Add(val);  					count++;  				}    				if (count != 697)  				{  					console.Error("Query failed. {0} records expected. {1} returned."' 697' count);  				}  				else if (uniques.Count != 21)  				{  					console.Error("Query failed. {0} unique records expected. {1} unique returned."' 21' uniques.Count);  				}  				else  				{  					console.Info("query succeeded with {0} records {1} unique"' count' uniques.Count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;  				HashSet<string> uniques = new HashSet<string>();    				while (rs.Next())  				{  					Record record = rs.Record;  					string val = record.GetString(binName2);  					uniques.Add(val);  					count++;  				}    				if (count != 697)  				{  					console.Error("Query failed. {0} records expected. {1} returned."' 697' count);  				}  				else if (uniques.Count != 21)  				{  					console.Error("Query failed. {0} unique records expected. {1} unique returned."' 21' uniques.Count);  				}  				else  				{  					console.Info("query succeeded with {0} records {1} unique"' count' uniques.Count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,QueryGeoCollection,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryGeoCollection.cs,GeneratePolygon,The following statement contains a magic number: return string.Format("{{ \"type\": \"Polygon\"' \"coordinates\": [ [[{0:F6}' {1:F6}]' [{2:F6}' {3:F6}]' [{4:F6}' {5:F6}]' [{6:F6}' {7:F6}]' [{8:F6}' {9:F6}]] ] }}"'  				rlng - 0.001' rlat - 0.001'  				rlng + 0.001' rlat - 0.001'  				rlng + 0.001' rlat + 0.001'  				rlng - 0.001' rlat + 0.001'  				rlng - 0.001' rlat - 0.001);
Magic Number,Aerospike.Demo,OperateList,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateList.cs,RunSimpleExample,The following statement contains a magic number: inputList.Add(Value.Get(55));
Magic Number,Aerospike.Demo,OperateList,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\OperateList.cs,RunSimpleExample,The following statement contains a magic number: inputList.Add(Value.Get(77));
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,RunExample,The following statement contains a magic number: int size = 20;
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin1 = Bin.AsGeoJSON(binName1' ptsb.ToString());  				Bin bin2;  				if (i % 7 == 0)  				{  					bin2 = new Bin(binName2' "hospital");  				}  				else if (i % 2 == 0)  				{  					bin2 = new Bin(binName2' "school");  				}  				else  				{  					bin2 = new Bin(binName2' "store");  				}  				client.Put(args.writePolicy' key' bin1' bin2);  			}
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin1 = Bin.AsGeoJSON(binName1' ptsb.ToString());  				Bin bin2;  				if (i % 7 == 0)  				{  					bin2 = new Bin(binName2' "hospital");  				}  				else if (i % 2 == 0)  				{  					bin2 = new Bin(binName2' "school");  				}  				else  				{  					bin2 = new Bin(binName2' "store");  				}  				client.Put(args.writePolicy' key' bin1' bin2);  			}
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin1 = Bin.AsGeoJSON(binName1' ptsb.ToString());  				Bin bin2;  				if (i % 7 == 0)  				{  					bin2 = new Bin(binName2' "hospital");  				}  				else if (i % 2 == 0)  				{  					bin2 = new Bin(binName2' "school");  				}  				else  				{  					bin2 = new Bin(binName2' "store");  				}  				client.Put(args.writePolicy' key' bin1' bin2);  			}
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin1 = Bin.AsGeoJSON(binName1' ptsb.ToString());  				Bin bin2;  				if (i % 7 == 0)  				{  					bin2 = new Bin(binName2' "hospital");  				}  				else if (i % 2 == 0)  				{  					bin2 = new Bin(binName2' "school");  				}  				else  				{  					bin2 = new Bin(binName2' "store");  				}  				client.Put(args.writePolicy' key' bin1' bin2);  			}
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin1 = Bin.AsGeoJSON(binName1' ptsb.ToString());  				Bin bin2;  				if (i % 7 == 0)  				{  					bin2 = new Bin(binName2' "hospital");  				}  				else if (i % 2 == 0)  				{  					bin2 = new Bin(binName2' "school");  				}  				else  				{  					bin2 = new Bin(binName2' "store");  				}  				client.Put(args.writePolicy' key' bin1' bin2);  			}
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin1 = Bin.AsGeoJSON(binName1' ptsb.ToString());  				Bin bin2;  				if (i % 7 == 0)  				{  					bin2 = new Bin(binName2' "hospital");  				}  				else if (i % 2 == 0)  				{  					bin2 = new Bin(binName2' "school");  				}  				else  				{  					bin2 = new Bin(binName2' "store");  				}  				client.Put(args.writePolicy' key' bin1' bin2);  			}
Magic Number,Aerospike.Demo,QueryRegionFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegionFilter.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;    				while (rs.Next())  				{  					object result = rs.Object;  					console.Info("Record found: " + result);  					count++;  				}    				if (count != 2)  				{  					console.Error("Wrong number of schools found. %d != 2"' count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,RunExample,The following statement contains a magic number: int size = 20;
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin = Bin.AsGeoJSON(binName' ptsb.ToString());  				client.Put(args.writePolicy' key' bin);  			}
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin = Bin.AsGeoJSON(binName' ptsb.ToString());  				client.Put(args.writePolicy' key' bin);  			}
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin = Bin.AsGeoJSON(binName' ptsb.ToString());  				client.Put(args.writePolicy' key' bin);  			}
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,WriteRecords,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				double lng = -122 + (0.1 * i);  				double lat = 37.5 + (0.1 * i);  				StringBuilder ptsb = new StringBuilder();  				ptsb.Append("{ \"type\": \"Point\"' \"coordinates\": [");  				ptsb.Append(lng);  				ptsb.Append("' ");  				ptsb.Append(lat);  				ptsb.Append("] }");  				Key key = new Key(args.ns' args.set' keyPrefix + i);  				Bin bin = Bin.AsGeoJSON(binName' ptsb.ToString());  				client.Put(args.writePolicy' key' bin);  			}
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					string result = record.GetGeoJSON(binName);    					console.Info("Record found: " + result);  					count++;  				}    				if (count != 6)  				{  					console.Error("Query count mismatch. Expected 6. Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,RunRadiusQuery,The following statement contains a magic number: double lon = -122.0;
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,RunRadiusQuery,The following statement contains a magic number: double lat = 37.5;
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,RunRadiusQuery,The following statement contains a magic number: double radius = 50000.0;
Magic Number,Aerospike.Demo,QueryRegion,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryRegion.cs,RunRadiusQuery,The following statement contains a magic number: try  			{  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					string result = record.GetGeoJSON(binName);    					console.Info("Record found: " + result);  					count++;  				}    				if (count != 4)  				{  					console.Error("Query count mismatch. Expected 4. Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,GetAndJoin,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,RunExample,The following statement contains a magic number: Security security = new Security("GE"' 26.89);
Magic Number,Aerospike.Demo,GetAndJoin,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,RunExample,The following statement contains a magic number: security = new Security("IBM"' 183.6);
Magic Number,Aerospike.Demo,GetAndJoin,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,RunExample,The following statement contains a magic number: List<Position> positions = new List<Position>(2);
Magic Number,Aerospike.Demo,GetAndJoin,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,RunExample,The following statement contains a magic number: positions.Add(new Position("GE"' 1000));
Magic Number,Aerospike.Demo,GetAndJoin,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,RunExample,The following statement contains a magic number: positions.Add(new Position("IBM"' 500));
Magic Number,Aerospike.Demo,Account,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\GetAndJoin.cs,Write,The following statement contains a magic number: MemoryStream ms = new MemoryStream(500);
Magic Number,Aerospike.Demo,QueryFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryFilter.cs,WriteRecords,The following statement contains a magic number: WriteRecord(client' args' keyPrefix + 2' "Bill"' "hknfpkj");
Magic Number,Aerospike.Demo,QueryFilter,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryFilter.cs,WriteRecords,The following statement contains a magic number: WriteRecord(client' args' keyPrefix + 3' "Doug"' "dj6554");
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintHeader,The following statement contains a magic number: StringBuilder sb = new StringBuilder(200);
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintHeader,The following statement contains a magic number: for (int i = 2; i <= lastBucket; i++)              {                  limit <<= bitShift;                  String s = " >" + limit + "ms";                  sb.Append(s);              }
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintResults,The following statement contains a magic number: int spaces = 6 - prefix.Length;
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintResults,The following statement contains a magic number: for (int i = 2; i < array.Length; i++)              {                  limit <<= bitShift;                  PrintColumn(sb' limit' sumDouble' array[i]);              }
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintColumn,The following statement contains a magic number: if (value > 0)              {                  percent = (int)((double)value * 100.0 / sum + 0.5);              }
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintColumn,The following statement contains a magic number: if (value > 0)              {                  percent = (int)((double)value * 100.0 / sum + 0.5);              }
Magic Number,Aerospike.Demo,LatencyManager,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\LatencyManager.cs,PrintColumn,The following statement contains a magic number: int spaces = limit.ToString().Length + 4 - percentString.Length;
Magic Number,Aerospike.Demo,Operate,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Operate.cs,RunExample,The following statement contains a magic number: Bin bin1 = new Bin("optintbin"' 7);
Magic Number,Aerospike.Demo,Operate,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Operate.cs,RunExample,The following statement contains a magic number: Bin bin3 = new Bin(bin1.name' 4);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,FormInit,The following statement contains a magic number: try              {                  codeBox.Font = new Font("Consolas"' 10.0f);                  codeBox.SelectionTabs = new int[] { 25' 50' 75' 100' 125 };                    binTypeBox.Items.Add(BinType.Integer);                  binTypeBox.Items.Add(BinType.String);                  binTypeBox.Items.Add(BinType.Byte);                  binTypeBox.SelectedItem = BinType.Integer;    				replicaBox.Items.Add(Replica.SEQUENCE);  				replicaBox.Items.Add(Replica.MASTER);  				replicaBox.Items.Add(Replica.MASTER_PROLES);  				replicaBox.Items.Add(Replica.RANDOM);  				replicaBox.SelectedItem = Replica.SEQUENCE;                    ReadDefaults();                    console = new ConsoleBox(consoleBox);                  Log.SetLevel(Log.Level.INFO);                  Log.SetCallback(LogCallback);                    TreeNode info = new ExampleTreeNode("Server Info"' new ServerInfo(console));                    TreeNode examples = new TreeNode("Examples"' new TreeNode[] {                      info'                      new ExampleTreeNode("Put/Get"' new PutGet(console))'                      new ExampleTreeNode("Replace"' new Replace(console))'                      new ExampleTreeNode("Add"' new Add(console))'                      new ExampleTreeNode("Append"' new Append(console))'                      new ExampleTreeNode("Prepend"' new Prepend(console))'                      new ExampleTreeNode("Batch"' new Batch(console))'                      new ExampleTreeNode("Generation"' new Generation(console))'                      new ExampleTreeNode("Serialize"' new Serialize(console))'                      new ExampleTreeNode("Expire"' new Expire(console))'                      new ExampleTreeNode("Touch"' new Touch(console))'                      new ExampleTreeNode("Operate"' new Operate(console))'                      new ExampleTreeNode("OperateList"' new OperateList(console))'                      new ExampleTreeNode("OperateMap"' new OperateMap(console))'                      new ExampleTreeNode("Delete Bin"' new DeleteBin(console))'                      new ExampleTreeNode("Join"' new GetAndJoin(console))'                      new ExampleTreeNode("Scan Parallel"' new ScanParallel(console))'                      new ExampleTreeNode("Scan Series"' new ScanSeries(console))'                      new ExampleTreeNode("Async PutGet"' new AsyncPutGet(console))'                      new ExampleTreeNode("Async Batch"' new AsyncBatch(console))'                      new ExampleTreeNode("Async Scan"' new AsyncScan(console))'                      new ExampleTreeNode("Async Query"' new AsyncQuery(console))'                      new ExampleTreeNode("Async UDF"' new AsyncUserDefinedFunction(console))'                      new ExampleTreeNode("List/Map"' new ListMap(console))'                      new ExampleTreeNode("User Defined Function"' new UserDefinedFunction(console))'                      new ExampleTreeNode("Query Integer"' new QueryInteger(console))'                      new ExampleTreeNode("Query String"' new QueryString(console))'                      new ExampleTreeNode("Query Region"' new QueryRegion(console))'                      new ExampleTreeNode("Query Region Filter"' new QueryRegionFilter(console))'                      new ExampleTreeNode("Query Filter"' new QueryFilter(console))'                      new ExampleTreeNode("Query PredExp"' new QueryPredExp(console))'                      new ExampleTreeNode("Query Sum"' new QuerySum(console))'                      new ExampleTreeNode("Query Average"' new QueryAverage(console))'                      new ExampleTreeNode("Query Execute"' new QueryExecute(console))'                      new ExampleTreeNode("Query Geo Collection"' new QueryGeoCollection(console))                  });                  TreeNode benchmarks = new TreeNode("Benchmarks"' new TreeNode[] {                      new ExampleTreeNode("Initialize"' new BenchmarkInitialize(console))'                      new ExampleTreeNode("Read/Write"' new BenchmarkReadWrite(console))                  });                    examplesView.Nodes.Add(examples);                  examplesView.Nodes.Add(benchmarks);                  examplesView.SelectedNode = info;                  examplesView.ExpandAll();              }              catch (Exception ex)              {                  MessageBox.Show(ex.Message);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,FormInit,The following statement contains a magic number: try              {                  codeBox.Font = new Font("Consolas"' 10.0f);                  codeBox.SelectionTabs = new int[] { 25' 50' 75' 100' 125 };                    binTypeBox.Items.Add(BinType.Integer);                  binTypeBox.Items.Add(BinType.String);                  binTypeBox.Items.Add(BinType.Byte);                  binTypeBox.SelectedItem = BinType.Integer;    				replicaBox.Items.Add(Replica.SEQUENCE);  				replicaBox.Items.Add(Replica.MASTER);  				replicaBox.Items.Add(Replica.MASTER_PROLES);  				replicaBox.Items.Add(Replica.RANDOM);  				replicaBox.SelectedItem = Replica.SEQUENCE;                    ReadDefaults();                    console = new ConsoleBox(consoleBox);                  Log.SetLevel(Log.Level.INFO);                  Log.SetCallback(LogCallback);                    TreeNode info = new ExampleTreeNode("Server Info"' new ServerInfo(console));                    TreeNode examples = new TreeNode("Examples"' new TreeNode[] {                      info'                      new ExampleTreeNode("Put/Get"' new PutGet(console))'                      new ExampleTreeNode("Replace"' new Replace(console))'                      new ExampleTreeNode("Add"' new Add(console))'                      new ExampleTreeNode("Append"' new Append(console))'                      new ExampleTreeNode("Prepend"' new Prepend(console))'                      new ExampleTreeNode("Batch"' new Batch(console))'                      new ExampleTreeNode("Generation"' new Generation(console))'                      new ExampleTreeNode("Serialize"' new Serialize(console))'                      new ExampleTreeNode("Expire"' new Expire(console))'                      new ExampleTreeNode("Touch"' new Touch(console))'                      new ExampleTreeNode("Operate"' new Operate(console))'                      new ExampleTreeNode("OperateList"' new OperateList(console))'                      new ExampleTreeNode("OperateMap"' new OperateMap(console))'                      new ExampleTreeNode("Delete Bin"' new DeleteBin(console))'                      new ExampleTreeNode("Join"' new GetAndJoin(console))'                      new ExampleTreeNode("Scan Parallel"' new ScanParallel(console))'                      new ExampleTreeNode("Scan Series"' new ScanSeries(console))'                      new ExampleTreeNode("Async PutGet"' new AsyncPutGet(console))'                      new ExampleTreeNode("Async Batch"' new AsyncBatch(console))'                      new ExampleTreeNode("Async Scan"' new AsyncScan(console))'                      new ExampleTreeNode("Async Query"' new AsyncQuery(console))'                      new ExampleTreeNode("Async UDF"' new AsyncUserDefinedFunction(console))'                      new ExampleTreeNode("List/Map"' new ListMap(console))'                      new ExampleTreeNode("User Defined Function"' new UserDefinedFunction(console))'                      new ExampleTreeNode("Query Integer"' new QueryInteger(console))'                      new ExampleTreeNode("Query String"' new QueryString(console))'                      new ExampleTreeNode("Query Region"' new QueryRegion(console))'                      new ExampleTreeNode("Query Region Filter"' new QueryRegionFilter(console))'                      new ExampleTreeNode("Query Filter"' new QueryFilter(console))'                      new ExampleTreeNode("Query PredExp"' new QueryPredExp(console))'                      new ExampleTreeNode("Query Sum"' new QuerySum(console))'                      new ExampleTreeNode("Query Average"' new QueryAverage(console))'                      new ExampleTreeNode("Query Execute"' new QueryExecute(console))'                      new ExampleTreeNode("Query Geo Collection"' new QueryGeoCollection(console))                  });                  TreeNode benchmarks = new TreeNode("Benchmarks"' new TreeNode[] {                      new ExampleTreeNode("Initialize"' new BenchmarkInitialize(console))'                      new ExampleTreeNode("Read/Write"' new BenchmarkReadWrite(console))                  });                    examplesView.Nodes.Add(examples);                  examplesView.Nodes.Add(benchmarks);                  examplesView.SelectedNode = info;                  examplesView.ExpandAll();              }              catch (Exception ex)              {                  MessageBox.Show(ex.Message);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,FormInit,The following statement contains a magic number: try              {                  codeBox.Font = new Font("Consolas"' 10.0f);                  codeBox.SelectionTabs = new int[] { 25' 50' 75' 100' 125 };                    binTypeBox.Items.Add(BinType.Integer);                  binTypeBox.Items.Add(BinType.String);                  binTypeBox.Items.Add(BinType.Byte);                  binTypeBox.SelectedItem = BinType.Integer;    				replicaBox.Items.Add(Replica.SEQUENCE);  				replicaBox.Items.Add(Replica.MASTER);  				replicaBox.Items.Add(Replica.MASTER_PROLES);  				replicaBox.Items.Add(Replica.RANDOM);  				replicaBox.SelectedItem = Replica.SEQUENCE;                    ReadDefaults();                    console = new ConsoleBox(consoleBox);                  Log.SetLevel(Log.Level.INFO);                  Log.SetCallback(LogCallback);                    TreeNode info = new ExampleTreeNode("Server Info"' new ServerInfo(console));                    TreeNode examples = new TreeNode("Examples"' new TreeNode[] {                      info'                      new ExampleTreeNode("Put/Get"' new PutGet(console))'                      new ExampleTreeNode("Replace"' new Replace(console))'                      new ExampleTreeNode("Add"' new Add(console))'                      new ExampleTreeNode("Append"' new Append(console))'                      new ExampleTreeNode("Prepend"' new Prepend(console))'                      new ExampleTreeNode("Batch"' new Batch(console))'                      new ExampleTreeNode("Generation"' new Generation(console))'                      new ExampleTreeNode("Serialize"' new Serialize(console))'                      new ExampleTreeNode("Expire"' new Expire(console))'                      new ExampleTreeNode("Touch"' new Touch(console))'                      new ExampleTreeNode("Operate"' new Operate(console))'                      new ExampleTreeNode("OperateList"' new OperateList(console))'                      new ExampleTreeNode("OperateMap"' new OperateMap(console))'                      new ExampleTreeNode("Delete Bin"' new DeleteBin(console))'                      new ExampleTreeNode("Join"' new GetAndJoin(console))'                      new ExampleTreeNode("Scan Parallel"' new ScanParallel(console))'                      new ExampleTreeNode("Scan Series"' new ScanSeries(console))'                      new ExampleTreeNode("Async PutGet"' new AsyncPutGet(console))'                      new ExampleTreeNode("Async Batch"' new AsyncBatch(console))'                      new ExampleTreeNode("Async Scan"' new AsyncScan(console))'                      new ExampleTreeNode("Async Query"' new AsyncQuery(console))'                      new ExampleTreeNode("Async UDF"' new AsyncUserDefinedFunction(console))'                      new ExampleTreeNode("List/Map"' new ListMap(console))'                      new ExampleTreeNode("User Defined Function"' new UserDefinedFunction(console))'                      new ExampleTreeNode("Query Integer"' new QueryInteger(console))'                      new ExampleTreeNode("Query String"' new QueryString(console))'                      new ExampleTreeNode("Query Region"' new QueryRegion(console))'                      new ExampleTreeNode("Query Region Filter"' new QueryRegionFilter(console))'                      new ExampleTreeNode("Query Filter"' new QueryFilter(console))'                      new ExampleTreeNode("Query PredExp"' new QueryPredExp(console))'                      new ExampleTreeNode("Query Sum"' new QuerySum(console))'                      new ExampleTreeNode("Query Average"' new QueryAverage(console))'                      new ExampleTreeNode("Query Execute"' new QueryExecute(console))'                      new ExampleTreeNode("Query Geo Collection"' new QueryGeoCollection(console))                  });                  TreeNode benchmarks = new TreeNode("Benchmarks"' new TreeNode[] {                      new ExampleTreeNode("Initialize"' new BenchmarkInitialize(console))'                      new ExampleTreeNode("Read/Write"' new BenchmarkReadWrite(console))                  });                    examplesView.Nodes.Add(examples);                  examplesView.Nodes.Add(benchmarks);                  examplesView.SelectedNode = info;                  examplesView.ExpandAll();              }              catch (Exception ex)              {                  MessageBox.Show(ex.Message);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,FormInit,The following statement contains a magic number: try              {                  codeBox.Font = new Font("Consolas"' 10.0f);                  codeBox.SelectionTabs = new int[] { 25' 50' 75' 100' 125 };                    binTypeBox.Items.Add(BinType.Integer);                  binTypeBox.Items.Add(BinType.String);                  binTypeBox.Items.Add(BinType.Byte);                  binTypeBox.SelectedItem = BinType.Integer;    				replicaBox.Items.Add(Replica.SEQUENCE);  				replicaBox.Items.Add(Replica.MASTER);  				replicaBox.Items.Add(Replica.MASTER_PROLES);  				replicaBox.Items.Add(Replica.RANDOM);  				replicaBox.SelectedItem = Replica.SEQUENCE;                    ReadDefaults();                    console = new ConsoleBox(consoleBox);                  Log.SetLevel(Log.Level.INFO);                  Log.SetCallback(LogCallback);                    TreeNode info = new ExampleTreeNode("Server Info"' new ServerInfo(console));                    TreeNode examples = new TreeNode("Examples"' new TreeNode[] {                      info'                      new ExampleTreeNode("Put/Get"' new PutGet(console))'                      new ExampleTreeNode("Replace"' new Replace(console))'                      new ExampleTreeNode("Add"' new Add(console))'                      new ExampleTreeNode("Append"' new Append(console))'                      new ExampleTreeNode("Prepend"' new Prepend(console))'                      new ExampleTreeNode("Batch"' new Batch(console))'                      new ExampleTreeNode("Generation"' new Generation(console))'                      new ExampleTreeNode("Serialize"' new Serialize(console))'                      new ExampleTreeNode("Expire"' new Expire(console))'                      new ExampleTreeNode("Touch"' new Touch(console))'                      new ExampleTreeNode("Operate"' new Operate(console))'                      new ExampleTreeNode("OperateList"' new OperateList(console))'                      new ExampleTreeNode("OperateMap"' new OperateMap(console))'                      new ExampleTreeNode("Delete Bin"' new DeleteBin(console))'                      new ExampleTreeNode("Join"' new GetAndJoin(console))'                      new ExampleTreeNode("Scan Parallel"' new ScanParallel(console))'                      new ExampleTreeNode("Scan Series"' new ScanSeries(console))'                      new ExampleTreeNode("Async PutGet"' new AsyncPutGet(console))'                      new ExampleTreeNode("Async Batch"' new AsyncBatch(console))'                      new ExampleTreeNode("Async Scan"' new AsyncScan(console))'                      new ExampleTreeNode("Async Query"' new AsyncQuery(console))'                      new ExampleTreeNode("Async UDF"' new AsyncUserDefinedFunction(console))'                      new ExampleTreeNode("List/Map"' new ListMap(console))'                      new ExampleTreeNode("User Defined Function"' new UserDefinedFunction(console))'                      new ExampleTreeNode("Query Integer"' new QueryInteger(console))'                      new ExampleTreeNode("Query String"' new QueryString(console))'                      new ExampleTreeNode("Query Region"' new QueryRegion(console))'                      new ExampleTreeNode("Query Region Filter"' new QueryRegionFilter(console))'                      new ExampleTreeNode("Query Filter"' new QueryFilter(console))'                      new ExampleTreeNode("Query PredExp"' new QueryPredExp(console))'                      new ExampleTreeNode("Query Sum"' new QuerySum(console))'                      new ExampleTreeNode("Query Average"' new QueryAverage(console))'                      new ExampleTreeNode("Query Execute"' new QueryExecute(console))'                      new ExampleTreeNode("Query Geo Collection"' new QueryGeoCollection(console))                  });                  TreeNode benchmarks = new TreeNode("Benchmarks"' new TreeNode[] {                      new ExampleTreeNode("Initialize"' new BenchmarkInitialize(console))'                      new ExampleTreeNode("Read/Write"' new BenchmarkReadWrite(console))                  });                    examplesView.Nodes.Add(examples);                  examplesView.Nodes.Add(benchmarks);                  examplesView.SelectedNode = info;                  examplesView.ExpandAll();              }              catch (Exception ex)              {                  MessageBox.Show(ex.Message);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,FormInit,The following statement contains a magic number: try              {                  codeBox.Font = new Font("Consolas"' 10.0f);                  codeBox.SelectionTabs = new int[] { 25' 50' 75' 100' 125 };                    binTypeBox.Items.Add(BinType.Integer);                  binTypeBox.Items.Add(BinType.String);                  binTypeBox.Items.Add(BinType.Byte);                  binTypeBox.SelectedItem = BinType.Integer;    				replicaBox.Items.Add(Replica.SEQUENCE);  				replicaBox.Items.Add(Replica.MASTER);  				replicaBox.Items.Add(Replica.MASTER_PROLES);  				replicaBox.Items.Add(Replica.RANDOM);  				replicaBox.SelectedItem = Replica.SEQUENCE;                    ReadDefaults();                    console = new ConsoleBox(consoleBox);                  Log.SetLevel(Log.Level.INFO);                  Log.SetCallback(LogCallback);                    TreeNode info = new ExampleTreeNode("Server Info"' new ServerInfo(console));                    TreeNode examples = new TreeNode("Examples"' new TreeNode[] {                      info'                      new ExampleTreeNode("Put/Get"' new PutGet(console))'                      new ExampleTreeNode("Replace"' new Replace(console))'                      new ExampleTreeNode("Add"' new Add(console))'                      new ExampleTreeNode("Append"' new Append(console))'                      new ExampleTreeNode("Prepend"' new Prepend(console))'                      new ExampleTreeNode("Batch"' new Batch(console))'                      new ExampleTreeNode("Generation"' new Generation(console))'                      new ExampleTreeNode("Serialize"' new Serialize(console))'                      new ExampleTreeNode("Expire"' new Expire(console))'                      new ExampleTreeNode("Touch"' new Touch(console))'                      new ExampleTreeNode("Operate"' new Operate(console))'                      new ExampleTreeNode("OperateList"' new OperateList(console))'                      new ExampleTreeNode("OperateMap"' new OperateMap(console))'                      new ExampleTreeNode("Delete Bin"' new DeleteBin(console))'                      new ExampleTreeNode("Join"' new GetAndJoin(console))'                      new ExampleTreeNode("Scan Parallel"' new ScanParallel(console))'                      new ExampleTreeNode("Scan Series"' new ScanSeries(console))'                      new ExampleTreeNode("Async PutGet"' new AsyncPutGet(console))'                      new ExampleTreeNode("Async Batch"' new AsyncBatch(console))'                      new ExampleTreeNode("Async Scan"' new AsyncScan(console))'                      new ExampleTreeNode("Async Query"' new AsyncQuery(console))'                      new ExampleTreeNode("Async UDF"' new AsyncUserDefinedFunction(console))'                      new ExampleTreeNode("List/Map"' new ListMap(console))'                      new ExampleTreeNode("User Defined Function"' new UserDefinedFunction(console))'                      new ExampleTreeNode("Query Integer"' new QueryInteger(console))'                      new ExampleTreeNode("Query String"' new QueryString(console))'                      new ExampleTreeNode("Query Region"' new QueryRegion(console))'                      new ExampleTreeNode("Query Region Filter"' new QueryRegionFilter(console))'                      new ExampleTreeNode("Query Filter"' new QueryFilter(console))'                      new ExampleTreeNode("Query PredExp"' new QueryPredExp(console))'                      new ExampleTreeNode("Query Sum"' new QuerySum(console))'                      new ExampleTreeNode("Query Average"' new QueryAverage(console))'                      new ExampleTreeNode("Query Execute"' new QueryExecute(console))'                      new ExampleTreeNode("Query Geo Collection"' new QueryGeoCollection(console))                  });                  TreeNode benchmarks = new TreeNode("Benchmarks"' new TreeNode[] {                      new ExampleTreeNode("Initialize"' new BenchmarkInitialize(console))'                      new ExampleTreeNode("Read/Write"' new BenchmarkReadWrite(console))                  });                    examplesView.Nodes.Add(examples);                  examplesView.Nodes.Add(benchmarks);                  examplesView.SelectedNode = info;                  examplesView.ExpandAll();              }              catch (Exception ex)              {                  MessageBox.Show(ex.Message);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,ParseArguments,The following statement contains a magic number: if (currentExample.IsBenchmark())              {                  BenchmarkArguments bargs = new BenchmarkArguments();                  bargs.sync = syncButton.Checked;                    if (bargs.sync)                  {                      bargs.threadMax = int.Parse(syncThreadBox.Text);                  }                  else                  {                      bargs.threadMax = int.Parse(asyncThreadBox.Text);                  }                  bargs.commandMax = int.Parse(maxCommandBox.Text);                                    bargs.records = int.Parse(recordsBox.Text);                  bargs.binType = (BinType)binTypeBox.SelectedItem;                  bargs.binSize = int.Parse(binSizeBox.Text);                    bargs.readPct = int.Parse(readBox.Text);                  int writePct = int.Parse(writeBox.Text);                    if (!(bargs.readPct >= 0 && bargs.readPct <= 100 &&                      writePct >= 0 && writePct <= 100 &&                      bargs.readPct + writePct == 100))                  {                      throw new Exception("Read + Write percentage must equal 100");                  }                    int recordsInitPct = int.Parse(initPctBox.Text);                  bargs.recordsInit = bargs.records / 100 * recordsInitPct;                    if (fixedValueButton.Checked)                  {                      bargs.SetFixedValue();                  }                    int timeout = int.Parse(timeoutBox.Text);                  int maxRetries = int.Parse(maxRetriesBox.Text);                  int sleepBetweenRetries = int.Parse(sleepBox.Text);  				Replica replica = (Replica)replicaBox.SelectedItem;    				if (replica == Replica.SEQUENCE)  				{  					bargs.requestProleReplicas = true;  				}    				if (replica == Replica.MASTER_PROLES)  				{  					bargs.requestProleReplicas = true;  				}    				bargs.policy.totalTimeout = timeout;                  bargs.policy.maxRetries = maxRetries;                  bargs.policy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.policy.replica = replica;    				bargs.writePolicy.totalTimeout = timeout;                  bargs.writePolicy.maxRetries = maxRetries;                  bargs.writePolicy.sleepBetweenRetries = sleepBetweenRetries;  				bargs.writePolicy.replica = replica;                    bargs.debug = debugBox.Checked;                  bargs.latency = latencyBox.Checked;                    if (latencyBox.Checked)                  {                      bargs.latencyColumns = int.Parse(latencyColumnsBox.Text);                      bargs.latencyShift = int.Parse(latencyShiftBox.Text);                        if (!(bargs.latencyColumns >= 2 && bargs.latencyColumns <= 10))                      {                          throw new Exception("Latency columns must be between 2 and 10 inclusive.");                      }                        if (!(bargs.latencyShift >= 1 && bargs.latencyShift <= 5))                      {                          throw new Exception("Latency exponent shift must be between 1 and 5 inclusive.");                      }                  }                    args = bargs;              }              else              {                  args = new Arguments();                  args.commandMax = 40;              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,printLatencyLayout,The following statement contains a magic number: StringBuilder sb = new StringBuilder(200);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,printLatencyLayout,The following statement contains a magic number: for (i = 2; i < columns; i++)              {                  limit <<= bitShift;                  String s = " >" + limit + "ms";                  sb.Append(s);                    if (sb.Length >= 65)                  {                      max = i + 1;                      break;                  }              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,printLatencyLayout,The following statement contains a magic number: for (i = 2; i < columns; i++)              {                  limit <<= bitShift;                  String s = " >" + limit + "ms";                  sb.Append(s);                    if (sb.Length >= 65)                  {                      max = i + 1;                      break;                  }              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,printLatencyLayout,The following statement contains a magic number: for (i = 2; i < max; i++)              {                  limit <<= bitShift;                  int spaces = limit.ToString().Length + 4 - size;                    for (int j = 0; j < spaces; j++)                  {                      sb.Append(' ');                  }                  sb.Append(val);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,printLatencyLayout,The following statement contains a magic number: for (i = 2; i < max; i++)              {                  limit <<= bitShift;                  int spaces = limit.ToString().Length + 4 - size;                    for (int j = 0; j < spaces; j++)                  {                      sb.Append(' ');                  }                  sb.Append(val);              }
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,PercentKeyDown,The following statement contains a magic number: e.SuppressKeyPress = !((e.KeyValue >= 48 && e.KeyValue <= 57)                  || e.KeyValue == 127 || e.KeyValue == 8 || e.KeyValue == 37 || e.KeyValue == 39);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,PercentKeyDown,The following statement contains a magic number: e.SuppressKeyPress = !((e.KeyValue >= 48 && e.KeyValue <= 57)                  || e.KeyValue == 127 || e.KeyValue == 8 || e.KeyValue == 37 || e.KeyValue == 39);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,PercentKeyDown,The following statement contains a magic number: e.SuppressKeyPress = !((e.KeyValue >= 48 && e.KeyValue <= 57)                  || e.KeyValue == 127 || e.KeyValue == 8 || e.KeyValue == 37 || e.KeyValue == 39);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,PercentKeyDown,The following statement contains a magic number: e.SuppressKeyPress = !((e.KeyValue >= 48 && e.KeyValue <= 57)                  || e.KeyValue == 127 || e.KeyValue == 8 || e.KeyValue == 37 || e.KeyValue == 39);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,PercentKeyDown,The following statement contains a magic number: e.SuppressKeyPress = !((e.KeyValue >= 48 && e.KeyValue <= 57)                  || e.KeyValue == 127 || e.KeyValue == 8 || e.KeyValue == 37 || e.KeyValue == 39);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,PercentKeyDown,The following statement contains a magic number: e.SuppressKeyPress = !((e.KeyValue >= 48 && e.KeyValue <= 57)                  || e.KeyValue == 127 || e.KeyValue == 8 || e.KeyValue == 37 || e.KeyValue == 39);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,FindRelativeDirectory,The following statement contains a magic number: for (int i = 0; i < 8; i++)  			{  				if (Directory.Exists(path + dirname))  				{  					// udf directory found.  Use corresponding directory path.   					return path;  				}    				// Try next level up.  				path += ".." + Path.DirectorySeparatorChar;  			}
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(155' 32);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(155' 32);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(1026' 753);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(1026' 753);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 399;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterWidth = 6;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.benchmarkPanel.Size = new System.Drawing.Size(540' 390);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.benchmarkPanel.Size = new System.Drawing.Size(540' 390);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.benchmarkPanel.TabIndex = 9;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initializePanel.Location = new System.Drawing.Point(14' 165);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initializePanel.Location = new System.Drawing.Point(14' 165);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initializePanel.Size = new System.Drawing.Size(161' 28);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initializePanel.Size = new System.Drawing.Size(161' 28);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initializePanel.TabIndex = 110;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctLabel.Location = new System.Drawing.Point(134' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctLabel.Location = new System.Drawing.Point(134' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctLabel.Size = new System.Drawing.Size(15' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctLabel.Size = new System.Drawing.Size(15' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctLabel.TabIndex = 107;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctBox.Location = new System.Drawing.Point(89' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctBox.Location = new System.Drawing.Point(89' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctBox.Size = new System.Drawing.Size(45' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctBox.Size = new System.Drawing.Size(45' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.initPctBox.TabIndex = 106;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(84' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(84' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 88;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.workloadPanel.Location = new System.Drawing.Point(14' 165);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.workloadPanel.Location = new System.Drawing.Point(14' 165);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.workloadPanel.Size = new System.Drawing.Size(478' 28);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.workloadPanel.Size = new System.Drawing.Size(478' 28);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.workloadPanel.TabIndex = 108;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(255' 7);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(255' 7);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(72' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(72' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label18.TabIndex = 115;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.replicaBox.Location = new System.Drawing.Point(333' 2);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.replicaBox.Location = new System.Drawing.Point(333' 2);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.replicaBox.Size = new System.Drawing.Size(118' 21);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.replicaBox.Size = new System.Drawing.Size(118' 21);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.replicaBox.TabIndex = 114;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(225' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(225' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(15' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(15' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.TabIndex = 91;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.writeBox.Location = new System.Drawing.Point(191' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.writeBox.Location = new System.Drawing.Point(191' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.writeBox.Size = new System.Drawing.Size(35' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.writeBox.Size = new System.Drawing.Size(35' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.writeBox.TabIndex = 86;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(160' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(160' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(32' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(32' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label11.TabIndex = 90;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(134' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(134' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(15' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(15' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 89;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.readBox.Location = new System.Drawing.Point(100' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.readBox.Location = new System.Drawing.Point(100' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.readBox.Size = new System.Drawing.Size(35' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.readBox.Size = new System.Drawing.Size(35' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.readBox.TabIndex = 85;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(67' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(67' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(33' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(33' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 88;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(3' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(3' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(60' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(60' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 87;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(15' 136);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(15' 136);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(246' 29);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(246' 29);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 107;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.dynamicValueButton.Location = new System.Drawing.Point(94' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.dynamicValueButton.Location = new System.Drawing.Point(94' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.dynamicValueButton.Size = new System.Drawing.Size(144' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.dynamicValueButton.Size = new System.Drawing.Size(144' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.dynamicValueButton.TabIndex = 4;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.fixedValueButton.Location = new System.Drawing.Point(5' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.fixedValueButton.Location = new System.Drawing.Point(5' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.fixedValueButton.Size = new System.Drawing.Size(80' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.fixedValueButton.Size = new System.Drawing.Size(80' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.fixedValueButton.TabIndex = 3;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(380' 75);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(380' 75);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 106;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.threadPanel.Location = new System.Drawing.Point(3' 42);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.threadPanel.Location = new System.Drawing.Point(3' 42);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.threadPanel.Size = new System.Drawing.Size(160' 26);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.threadPanel.Size = new System.Drawing.Size(160' 26);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.threadPanel.TabIndex = 66;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncThreadBox.Location = new System.Drawing.Point(68' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncThreadBox.Location = new System.Drawing.Point(68' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncThreadBox.Size = new System.Drawing.Size(80' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncThreadBox.Size = new System.Drawing.Size(80' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncThreadBox.TabIndex = 4;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label25.Location = new System.Drawing.Point(0' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label25.Size = new System.Drawing.Size(46' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label25.Size = new System.Drawing.Size(46' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label25.TabIndex = 3;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncButton.Location = new System.Drawing.Point(99' 19);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncButton.Location = new System.Drawing.Point(99' 19);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncButton.Size = new System.Drawing.Size(92' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncButton.Size = new System.Drawing.Size(92' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncButton.TabIndex = 3;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncButton.Location = new System.Drawing.Point(6' 19);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncButton.Location = new System.Drawing.Point(6' 19);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncButton.Size = new System.Drawing.Size(87' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncButton.Size = new System.Drawing.Size(87' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.syncButton.TabIndex = 2;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandPanel.Location = new System.Drawing.Point(3' 42);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandPanel.Location = new System.Drawing.Point(3' 42);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandPanel.Size = new System.Drawing.Size(358' 26);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandPanel.Size = new System.Drawing.Size(358' 26);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandPanel.TabIndex = 67;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncThreadBox.Location = new System.Drawing.Point(300' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncThreadBox.Location = new System.Drawing.Point(300' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncThreadBox.Size = new System.Drawing.Size(50' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncThreadBox.Size = new System.Drawing.Size(50' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.asyncThreadBox.TabIndex = 9;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label26.Location = new System.Drawing.Point(203' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label26.Location = new System.Drawing.Point(203' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label26.Size = new System.Drawing.Size(96' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label26.Size = new System.Drawing.Size(96' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label26.TabIndex = 8;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandBox.Location = new System.Drawing.Point(146' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandBox.Location = new System.Drawing.Point(146' 3);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandBox.Size = new System.Drawing.Size(50' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandBox.Size = new System.Drawing.Size(50' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxCommandBox.TabIndex = 7;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label27.Location = new System.Drawing.Point(3' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label27.Location = new System.Drawing.Point(3' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label27.Size = new System.Drawing.Size(137' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label27.Size = new System.Drawing.Size(137' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label27.TabIndex = 6;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyGroup.Location = new System.Drawing.Point(15' 249);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyGroup.Location = new System.Drawing.Point(15' 249);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyGroup.Size = new System.Drawing.Size(504' 104);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyGroup.Size = new System.Drawing.Size(504' 104);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyGroup.TabIndex = 102;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyDisplayLabel.Location = new System.Drawing.Point(3' 60);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyDisplayLabel.Location = new System.Drawing.Point(3' 60);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyDisplayLabel.Size = new System.Drawing.Size(483' 40);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyDisplayLabel.Size = new System.Drawing.Size(483' 40);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyDisplayLabel.TabIndex = 100;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsLabel.Location = new System.Drawing.Point(6' 27);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsLabel.Location = new System.Drawing.Point(6' 27);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsLabel.Size = new System.Drawing.Size(47' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsLabel.Size = new System.Drawing.Size(47' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsLabel.TabIndex = 96;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsBox.Location = new System.Drawing.Point(56' 24);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsBox.Location = new System.Drawing.Point(56' 24);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyColumnsBox.TabIndex = 97;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftLabel.Location = new System.Drawing.Point(134' 27);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftLabel.Location = new System.Drawing.Point(134' 27);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftLabel.Size = new System.Drawing.Size(76' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftLabel.Size = new System.Drawing.Size(76' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftLabel.TabIndex = 98;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftBox.Location = new System.Drawing.Point(212' 24);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftBox.Location = new System.Drawing.Point(212' 24);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyShiftBox.TabIndex = 99;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label20.Location = new System.Drawing.Point(472' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label20.Location = new System.Drawing.Point(472' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label20.Size = new System.Drawing.Size(20' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label20.Size = new System.Drawing.Size(20' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label20.TabIndex = 94;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBox.Location = new System.Drawing.Point(177' 226);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBox.Location = new System.Drawing.Point(177' 226);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBox.Size = new System.Drawing.Size(88' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBox.Size = new System.Drawing.Size(88' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBox.TabIndex = 3;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyBox.Location = new System.Drawing.Point(21' 226);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyBox.Location = new System.Drawing.Point(21' 226);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyBox.Size = new System.Drawing.Size(145' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyBox.Size = new System.Drawing.Size(145' 17);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.latencyBox.TabIndex = 95;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.sleepBox.Location = new System.Drawing.Point(419' 195);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.sleepBox.Location = new System.Drawing.Point(419' 195);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.sleepBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.sleepBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.sleepBox.TabIndex = 89;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(302' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(302' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(115' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(115' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label17.TabIndex = 93;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxRetriesBox.Location = new System.Drawing.Point(240' 195);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxRetriesBox.Location = new System.Drawing.Point(240' 195);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxRetriesBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxRetriesBox.Size = new System.Drawing.Size(52' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.maxRetriesBox.TabIndex = 88;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(173' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(173' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(63' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(63' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label16.TabIndex = 92;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(148' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(148' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(20' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(20' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label15.TabIndex = 91;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.timeoutBox.Location = new System.Drawing.Point(82' 195);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.timeoutBox.Location = new System.Drawing.Point(82' 195);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.timeoutBox.Size = new System.Drawing.Size(66' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.timeoutBox.Size = new System.Drawing.Size(66' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.timeoutBox.TabIndex = 87;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(16' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(16' 198);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(45' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(45' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label14.TabIndex = 90;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeBox.Location = new System.Drawing.Point(219' 112);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeBox.Location = new System.Drawing.Point(219' 112);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeBox.Size = new System.Drawing.Size(64' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeBox.Size = new System.Drawing.Size(64' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeBox.TabIndex = 72;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeLabel.Location = new System.Drawing.Point(173' 115);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeLabel.Location = new System.Drawing.Point(173' 115);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeLabel.Size = new System.Drawing.Size(45' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeLabel.Size = new System.Drawing.Size(45' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binSizeLabel.TabIndex = 75;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binTypeBox.Location = new System.Drawing.Point(82' 111);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binTypeBox.Location = new System.Drawing.Point(82' 111);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binTypeBox.Size = new System.Drawing.Size(81' 21);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binTypeBox.Size = new System.Drawing.Size(81' 21);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.binTypeBox.TabIndex = 71;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(16' 115);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(16' 115);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(49' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(49' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 74;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.recordsBox.Location = new System.Drawing.Point(82' 84);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.recordsBox.Location = new System.Drawing.Point(82' 84);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.recordsBox.Size = new System.Drawing.Size(80' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.recordsBox.Size = new System.Drawing.Size(80' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.recordsBox.TabIndex = 66;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label24.Location = new System.Drawing.Point(16' 87);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label24.Location = new System.Drawing.Point(16' 87);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label24.Size = new System.Drawing.Size(47' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label24.Size = new System.Drawing.Size(47' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label24.TabIndex = 68;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.codeBox.Size = new System.Drawing.Size(1019' 400);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.codeBox.Size = new System.Drawing.Size(1019' 400);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.codeBox.TabIndex = 8;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.consoleBox.Location = new System.Drawing.Point(0' 34);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.consoleBox.Size = new System.Drawing.Size(1019' 287);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.consoleBox.Size = new System.Drawing.Size(1019' 287);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.consoleBox.TabIndex = 11;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.stopButton.Location = new System.Drawing.Point(82' 5);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.stopButton.Location = new System.Drawing.Point(82' 5);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.stopButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.stopButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.stopButton.TabIndex = 10;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Location = new System.Drawing.Point(1' 5);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.runButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.runButton.TabIndex = 9;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.nsBox.Location = new System.Drawing.Point(621' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.nsBox.Location = new System.Drawing.Point(621' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.nsBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.nsBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.nsBox.TabIndex = 3;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(558' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(558' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(64' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(64' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 11;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.portBox.Location = new System.Drawing.Point(200' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.portBox.Location = new System.Drawing.Point(200' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.portBox.Size = new System.Drawing.Size(50' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.portBox.Size = new System.Drawing.Size(50' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.portBox.TabIndex = 2;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(174' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(174' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(26' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(26' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 9;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(2' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(2' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(63' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(63' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 8;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.hostBox.Location = new System.Drawing.Point(65' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.hostBox.Location = new System.Drawing.Point(65' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.hostBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.hostBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.setBox.Location = new System.Drawing.Point(754' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.setBox.Location = new System.Drawing.Point(754' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.setBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.setBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.setBox.TabIndex = 4;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(731' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(731' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(23' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(23' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 13;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.examplesView.Indent = 5;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.examplesView.Location = new System.Drawing.Point(5' 32);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.examplesView.Location = new System.Drawing.Point(5' 32);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.examplesView.Size = new System.Drawing.Size(144' 753);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.examplesView.Size = new System.Drawing.Size(144' 753);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.examplesView.TabIndex = 14;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.passwordBox.Location = new System.Drawing.Point(450' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.passwordBox.Location = new System.Drawing.Point(450' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.passwordBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.passwordBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.passwordBox.TabIndex = 16;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(397' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(397' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(53' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(53' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label12.TabIndex = 18;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.userBox.Location = new System.Drawing.Point(288' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.userBox.Location = new System.Drawing.Point(288' 6);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.userBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.userBox.Size = new System.Drawing.Size(100' 20);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.userBox.TabIndex = 15;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(257' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(257' 9);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(29' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(29' 13);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.label13.TabIndex = 17;
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1184' 789);
Magic Number,Aerospike.Demo,DemoForm,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\DemoForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1184' 789);
Magic Number,Aerospike.Demo,Expire,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Expire.cs,RunExample,The following statement contains a magic number: writePolicy.expiration = 2;
Magic Number,Aerospike.Demo,Expire,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Expire.cs,RunExample,The following statement contains a magic number: Thread.Sleep(3 * 1000);
Magic Number,Aerospike.Demo,Expire,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Expire.cs,RunExample,The following statement contains a magic number: Thread.Sleep(3 * 1000);
Magic Number,Aerospike.Demo,Generation,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Generation.cs,RunExample,The following statement contains a magic number: writePolicy.generation = 9999;
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListStrings,The following statement contains a magic number: ValidateSize(3' receivedList.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListStrings,The following statement contains a magic number: Validate("string3"' receivedList[2]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListComplex,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListComplex,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListComplex,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListComplex,The following statement contains a magic number: list.Add(2);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListComplex,The following statement contains a magic number: ValidateSize(3' receivedList.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListComplex,The following statement contains a magic number: Validate(blob' (byte[])receivedList[2]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapStrings,The following statement contains a magic number: ValidateSize(3' receivedMap.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: list.Add(100034);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: list.Add(12384955);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: list.Add(3);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: list.Add(512);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: map["key2"] = 2;
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: ValidateSize(4' receivedMap.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: ValidateSize(4' receivedInner.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: Validate(3L' receivedInner[2]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestMapComplex,The following statement contains a magic number: Validate(512L' receivedInner[3]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: byte[] blob = new byte[] {3' 52' 125};
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: inner.Add(5);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: innerMap[2] = "b";
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: innerMap[3] = blob;
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: list.Add(8);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: ValidateSize(4' received.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: List<object> receivedInner = (List<object>)received[2];
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: ValidateSize(2' receivedInner.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: Dictionary<object' object> receivedMap = (Dictionary<object' object>)received[3];
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: ValidateSize(4' receivedMap.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListMapCombined,The following statement contains a magic number: ValidateSize(2' receivedInner2.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundBlob,The following statement contains a magic number: list.Add(new CompoundObject("string1"' 7));
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundBlob,The following statement contains a magic number: list.Add(new CompoundObject("string2"' 9));
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundBlob,The following statement contains a magic number: list.Add(new CompoundObject("string3"' 54));
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundBlob,The following statement contains a magic number: ValidateSize(3' receivedList.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundBlob,The following statement contains a magic number: Validate(list[2]' receivedList[2]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundBlob,The following statement contains a magic number: Validate(list[2]' receivedList[2]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundList,The following statement contains a magic number: list.Add(new CompoundObject("string1"' 7));
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundList,The following statement contains a magic number: list.Add(new CompoundObject("string2"' 9));
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundList,The following statement contains a magic number: list.Add(new CompoundObject("string3"' 54));
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundList,The following statement contains a magic number: ValidateSize(3' receivedList.Count);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundList,The following statement contains a magic number: Validate(list[2]' receivedList[2]);
Magic Number,Aerospike.Demo,ListMap,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ListMap.cs,TestListCompoundList,The following statement contains a magic number: Validate(list[2]' receivedList[2]);
Magic Number,Aerospike.Demo,QueryAverage,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryAverage.cs,RunExample,The following statement contains a magic number: int size = 10;
Magic Number,Aerospike.Demo,QueryAverage,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryAverage.cs,RunQuery,The following statement contains a magic number: try  			{  				if (rs.Next())  				{  					object obj = rs.Object;    					if (obj is Dictionary<object'object>)  					{  						Dictionary<object' object> map = (Dictionary<object' object>)obj;  						object objsum = map["sum"];  						object objcount = map["count"];  						double sum = (double)(long)objsum;  						double count = (double)(long)objcount;  						double avg = sum / count;  						console.Info("Sum=" + sum + " Count=" + count + " Average=" + avg);    						double expected = 5.5;  						if (avg != expected)  						{  							console.Error("Data mismatch: Expected {0}. Received {1}."' expected' avg);  						}  					}  					else  					{  						console.Error("Unexpected object returned: " + obj);  					}  				}  				else  				{  					console.Error("Query failed. No records returned.");  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,RunExample,The following statement contains a magic number: int size = 10;
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,RunQueryExecute,The following statement contains a magic number: int begin = 3;
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,RunQueryExecute,The following statement contains a magic number: int end = 9;
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,RunQueryExecute,The following statement contains a magic number: ExecuteTask task = client.Execute(args.writePolicy' stmt' "record_example"' "processRecord"' Value.Get(binName1)' Value.Get(binName2)' Value.Get(100));
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: int end = size + 100;
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryExecute,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryExecute.cs,ValidateRecords,The following statement contains a magic number: try  			{  				int[] expectedList = new int[] {1'2'3'104'5'106'7'108'-1'10};  				int expectedSize = size - 1;  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					object value1 = null;  					object value2 = null;    					record.bins.TryGetValue(binName1' out value1);  					record.bins.TryGetValue(binName2' out value2);    					console.Info("Record found: ns={0} set={1} bin1={2} value1={3} bin2={4} value2={5}"'   						key.ns' key.setName' binName1' value1' binName2' value2);    					if (value1 == null)  					{  						console.Error("Data mismatch. value1 is null");  						break;  					}  					long val1 = (long)value1;    					if (val1 == 9)  					{  						console.Error("Data mismatch. value1 " + val1 + " should not exist");  						break;  					}    					if (val1 == 5)  					{  						if (value2 != null)  						{  							console.Error("Data mismatch. value2 " + value2 + " should be null");  							break;  						}  					}  					else   					{  						long val2 = (long)value2;  						  						if (val1 != expectedList[val2 - 1])  						{  							console.Error("Data mismatch. Expected " + expectedList[val2 - 1] + ". Received " + value1);  							break;  						}  					}  					count++;  				}    				if (count != expectedSize)  				{  					console.Error("Query count mismatch. Expected " + expectedSize + ". Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryInteger,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryInteger.cs,RunExample,The following statement contains a magic number: int size = 50;
Magic Number,Aerospike.Demo,QueryInteger,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryInteger.cs,RunQuery,The following statement contains a magic number: int begin = 14;
Magic Number,Aerospike.Demo,QueryInteger,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryInteger.cs,RunQuery,The following statement contains a magic number: int end = 18;
Magic Number,Aerospike.Demo,QueryInteger,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryInteger.cs,RunQuery,The following statement contains a magic number: try  			{  				int count = 0;    				while (rs.Next())  				{  					Key key = rs.Key;  					Record record = rs.Record;  					long result = record.GetLong(binName);    					console.Info("Record found: namespace={0} set={1} digest={2} bin={3} value={4}"'  						key.ns' key.setName' ByteUtil.BytesToHexString(key.digest)' binName' result);    					count++;  				}    				if (count != 5)  				{  					console.Error("Query count mismatch. Expected 5. Received " + count);  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,QueryString,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryString.cs,RunExample,The following statement contains a magic number: int size = 5;
Magic Number,Aerospike.Demo,QueryString,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QueryString.cs,RunQuery,The following statement contains a magic number: string filter = valuePrefix + 3;
Magic Number,Aerospike.Demo,QuerySum,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QuerySum.cs,RunExample,The following statement contains a magic number: int size = 10;
Magic Number,Aerospike.Demo,QuerySum,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QuerySum.cs,RunQuery,The following statement contains a magic number: int begin = 4;
Magic Number,Aerospike.Demo,QuerySum,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QuerySum.cs,RunQuery,The following statement contains a magic number: int end = 7;
Magic Number,Aerospike.Demo,QuerySum,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\QuerySum.cs,RunQuery,The following statement contains a magic number: try  			{  				int expected = 22; // 4 + 5 + 6 + 7  				int count = 0;    				while (rs.Next())  				{  					object obj = rs.Object;    					if (obj is long)  					{  						long sum = (long)rs.Object;    						if (expected == (int)sum)  						{  							console.Info("Sum matched: value=" + expected);  						}  						else  						{  							console.Error("Sum mismatch: Expected {0}. Received {1}."' expected' sum);  						}  					}  					else  					{  						console.Error("Unexpected return value: " + obj);  						continue;  					}  					count++;  				}    				if (count == 0)  				{  					console.Error("Query failed. No records returned.");  				}  			}  			finally  			{  				rs.Close();  			}
Magic Number,Aerospike.Demo,ScanParallel,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\ScanParallel.cs,ScanCallback,The following statement contains a magic number: if ((count % 10000) == 0)  			{  				console.Info("Records " + count);  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestArray,The following statement contains a magic number: int[] array = new int[10000];
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestArray,The following statement contains a magic number: for (int i = 0; i < 10000; i++)  			{  				array[i] = i * i;  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestArray,The following statement contains a magic number: if (received.Length != 10000)  			{  				throw new Exception(string.Format("Array length mismatch: Expected={0:D} Received={1:D}"'   					10000' received.Length));  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestArray,The following statement contains a magic number: if (received.Length != 10000)  			{  				throw new Exception(string.Format("Array length mismatch: Expected={0:D} Received={1:D}"'   					10000' received.Length));  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestArray,The following statement contains a magic number: for (int i = 0; i < 10000; i++)  			{  				if (received[i] != i * i)  				{  					throw new Exception(string.Format("Mismatch: index={0:D} expected={1:D} received={2:D}"'   						i' i * i' received[i]));  				}  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestList,The following statement contains a magic number: if (received.Count != 3)  			{  				throw new Exception(string.Format("Array length mismatch: Expected={0:D} Received={1:D}"'   					3' received.Count));  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestList,The following statement contains a magic number: if (received.Count != 3)  			{  				throw new Exception(string.Format("Array length mismatch: Expected={0:D} Received={1:D}"'   					3' received.Count));  			}
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestComplex,The following statement contains a magic number: inner.Add(8);
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestComplex,The following statement contains a magic number: innerMap[2] = "b";
Magic Number,Aerospike.Demo,Serialize,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Serialize.cs,TestComplex,The following statement contains a magic number: list.Add(4);
Magic Number,Aerospike.Demo,Touch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Touch.cs,RunExample,The following statement contains a magic number: writePolicy.expiration = 2;
Magic Number,Aerospike.Demo,Touch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Touch.cs,RunExample,The following statement contains a magic number: writePolicy.expiration = 5;
Magic Number,Aerospike.Demo,Touch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Touch.cs,RunExample,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,Aerospike.Demo,Touch,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\Touch.cs,RunExample,The following statement contains a magic number: Thread.Sleep(4000);
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,WriteWithValidation,The following statement contains a magic number: client.Execute(args.writePolicy' key' "record_example"' "writeWithValidation"' Value.Get(binName)' Value.Get(4));
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,WriteWithValidation,The following statement contains a magic number: try  			{  				client.Execute(args.writePolicy' key' "record_example"' "writeWithValidation"' Value.Get(binName)' Value.Get(11));  				console.Error("UDF should not have succeeded!");  			}  			catch (Exception)  			{  				console.Info("Success. UDF resulted in exception as expected.");  			}
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,WriteBlobUsingUdf,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream())  			{  				Formatter.Default.Serialize(ms' 9845);  				Formatter.Default.Serialize(ms' "Hello world.");  				blob = ms.ToArray();  			}
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The following statement contains a magic number: list.Add(64);
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The following statement contains a magic number: list.Add(3702);
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The following statement contains a magic number: list.Add(-5);
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The following statement contains a magic number: ServerSideExists(client' args.writePolicy' key' bin' 3702' true);
Magic Number,Aerospike.Demo,UserDefinedFunction,C:\repos\aerospike_aerospike-client-csharp\Framework\AerospikeDemo\UserDefinedFunction.cs,ServerSideExists,The following statement contains a magic number: ServerSideExists(client' args.writePolicy' key' bin' 65' false);
