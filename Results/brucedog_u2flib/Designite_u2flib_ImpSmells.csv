Implementation smell,Namespace,Class,File,Method,Description
Complex Method,u2flib.Data.Messages,AuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\AuthenticateResponse.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,u2flib.Data.Messages,RegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RegisterResponse.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,u2flib.Data.Messages,StartedRegistration,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedRegistration.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,u2flib.Data.Messages,StartedAuthentication,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,Equals,Cyclomatic complexity of the method is 12
Long Parameter List,u2flib.Data,DeviceRegistration,C:\repos\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,DeviceRegistration,The method has 5 parameters. Parameters: keyHandle' publicKey' attestationCert' counter' isCompromised
Long Identifier,u2flib.Data.Messages,RawRegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,,The length of the parameter RegistrationSignedReservedByteValue is 35.
Magic Number,u2flib.Data.Messages,AuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\AuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: int hash = ClientData.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,AuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\AuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: hash += SignatureData.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,AuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\AuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: hash += KeyHandle.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,RawAuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawAuthenticateResponse.cs,FromBase64,The following statement contains a magic number: byte[] counterBytes = binaryReader.ReadBytes(4);
Magic Number,u2flib.Data.Messages,RawAuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawAuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: return 23 + Signature.Sum(b => b + 31 + (int)Counter + UserPresence);
Magic Number,u2flib.Data.Messages,RawAuthenticateResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawAuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: return 23 + Signature.Sum(b => b + 31 + (int)Counter + UserPresence);
Magic Number,u2flib.Data.Messages,RegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RegisterResponse.cs,GetHashCode,The following statement contains a magic number: int hash = RegistrationData.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,RegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RegisterResponse.cs,GetHashCode,The following statement contains a magic number: hash += ClientData.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedRegistration,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedRegistration.cs,GetHashCode,The following statement contains a magic number: int hash = Version.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedRegistration,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedRegistration.cs,GetHashCode,The following statement contains a magic number: hash += Challenge.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedRegistration,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedRegistration.cs,GetHashCode,The following statement contains a magic number: hash += AppId.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedAuthentication,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: int hash = 23 + Version.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedAuthentication,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: int hash = 23 + Version.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedAuthentication,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: hash += Challenge.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedAuthentication,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: hash += AppId.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,StartedAuthentication,C:\repos\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: hash += KeyHandle.Sum(c => c + 31);
Magic Number,u2flib.Data.Messages,RawRegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,FromBase64,The following statement contains a magic number: try              {                  byte reservedByte = binaryReader.ReadByte();                  if (reservedByte != RegistrationReservedByteValue)                  {                      throw new U2fException(String.Format("Incorrect value of reserved byte. Expected: {0}. Was: {1}"'                          RegistrationReservedByteValue' reservedByte));                  }                    byte[] publicKey = binaryReader.ReadBytes(65);                  byte[] keyHandle = binaryReader.ReadBytes(binaryReader.ReadByte());                  X509CertificateParser x509CertificateParser = new X509CertificateParser();                  X509Certificate attestationCertificate = x509CertificateParser.ReadCertificate(stream);                  int size = (int)(binaryReader.BaseStream.Length - binaryReader.BaseStream.Position);                                    byte[] signature = binaryReader.ReadBytes(size);                    RawRegisterResponse rawRegisterResponse = new RawRegisterResponse(                      publicKey'                      keyHandle'                      attestationCertificate'                      signature);                    return rawRegisterResponse;              }              catch (CertificateException e)              {                  throw new U2fException("Error when parsing attestation certificate"' e);              }              finally              {                  stream.Dispose();                  binaryReader.Dispose();              }
Magic Number,u2flib.Data.Messages,RawRegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,GetHashCode,The following statement contains a magic number: int hash = 23 + _userPublicKey.Sum(b => b + 31);
Magic Number,u2flib.Data.Messages,RawRegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,GetHashCode,The following statement contains a magic number: int hash = 23 + _userPublicKey.Sum(b => b + 31);
Magic Number,u2flib.Data.Messages,RawRegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,GetHashCode,The following statement contains a magic number: hash += _keyHandle.Sum(b => b + 31);
Magic Number,u2flib.Data.Messages,RawRegisterResponse,C:\repos\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,GetHashCode,The following statement contains a magic number: hash += _signature.Sum(b => b + 31);
Magic Number,u2flib.Crypto,RandomChallengeGenerator,C:\repos\brucedog_u2flib\u2flib\Crypto\RandomChallengeGenerator.cs,GenerateChallenge,The following statement contains a magic number: byte[] randomBytes = new byte[32];
Magic Number,u2flib.Data,DeviceRegistration,C:\repos\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,GetHashCode,The following statement contains a magic number: int hash = PublicKey.Sum(b => b + 31);
Magic Number,u2flib.Data,DeviceRegistration,C:\repos\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,GetHashCode,The following statement contains a magic number: hash += AttestationCert.Sum(b => b + 31);
Magic Number,u2flib.Data,DeviceRegistration,C:\repos\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,GetHashCode,The following statement contains a magic number: hash += KeyHandle.Sum(b => b + 31);
Magic Number,u2flib.Util,Utils,C:\repos\brucedog_u2flib\u2flib\Util\Utils.cs,Base64StringToByteArray,The following statement contains a magic number: int mod4 = input.Length % 4;
Magic Number,u2flib.Util,Utils,C:\repos\brucedog_u2flib\u2flib\Util\Utils.cs,Base64StringToByteArray,The following statement contains a magic number: if (mod4 > 0)              {                  input += new string('='' 4 - mod4);              }
