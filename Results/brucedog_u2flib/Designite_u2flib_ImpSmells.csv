Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,u2flib.Data,DeviceRegistration,F:\newReposMay17\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,DeviceRegistration,The method has 5 parameters.
Long Statement,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,FromBase64,The length of the statement  "			throw new U2fException (String.Format ("Incorrect value of reserved byte. Expected: {0}. Was: {1}"' RegistrationReservedByteValue' reservedByte)); " is 146.
Long Statement,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,FromBase64,The length of the statement  "		RawRegisterResponse rawRegisterResponse = new RawRegisterResponse (publicKey' keyHandle' attestationCertificate' signature); " is 124.
Long Statement,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,CheckSignature,The length of the statement  "	byte[] signedBytes = PackBytesToSign (U2F.Crypto.Hash (appId)' U2F.Crypto.Hash (clientData)' _keyHandle' _userPublicKey); " is 121.
Long Statement,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,CreateDevice,The length of the statement  "	return new DeviceRegistration (_keyHandle' _userPublicKey' _attestationCertificate.GetEncoded ()' DeviceRegistration.InitialCounterValue); " is 138.
Long Statement,u2flib.Data,DeviceRegistration,F:\newReposMay17\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,Equals,The length of the statement  "	return Arrays.AreEqual (KeyHandle' that.KeyHandle) && Arrays.AreEqual (PublicKey' that.PublicKey) && Arrays.AreEqual (AttestationCert' that.AttestationCert) && (IsCompromised == that.IsCompromised); " is 198.
Long Statement,u2flib,U2F,F:\newReposMay17\brucedog_u2flib\u2flib\U2F.cs,StartAuthentication,The length of the statement  "	return new StartedAuthentication (Utils.ByteArrayToBase64String (challenge)' appId' Utils.ByteArrayToBase64String (deviceRegistration.KeyHandle)); " is 146.
Magic Number,u2flib.Data.Messages,AuthenticateResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\AuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: hash += SignatureData.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,AuthenticateResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\AuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: hash += KeyHandle.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,RawAuthenticateResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawAuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: return 23 + Signature.Sum (b => b + 31 + (int)Counter + UserPresence);  
Magic Number,u2flib.Data.Messages,RawAuthenticateResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawAuthenticateResponse.cs,GetHashCode,The following statement contains a magic number: return 23 + Signature.Sum (b => b + 31 + (int)Counter + UserPresence);  
Magic Number,u2flib.Data.Messages,RegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RegisterResponse.cs,GetHashCode,The following statement contains a magic number: hash += ClientData.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,StartedRegistration,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\StartedRegistration.cs,GetHashCode,The following statement contains a magic number: hash += Challenge.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,StartedRegistration,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\StartedRegistration.cs,GetHashCode,The following statement contains a magic number: hash += AppId.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,StartedAuthentication,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: hash += Challenge.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,StartedAuthentication,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: hash += AppId.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,StartedAuthentication,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\StartedAuthentication.cs,GetHashCode,The following statement contains a magic number: hash += KeyHandle.Sum (c => c + 31);  
Magic Number,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,FromBase64,The following statement contains a magic number: try {  	byte reservedByte = binaryReader.ReadByte ();  	if (reservedByte != RegistrationReservedByteValue) {  		throw new U2fException (String.Format ("Incorrect value of reserved byte. Expected: {0}. Was: {1}"' RegistrationReservedByteValue' reservedByte));  	}  	byte[] publicKey = binaryReader.ReadBytes (65);  	byte[] keyHandle = binaryReader.ReadBytes (binaryReader.ReadByte ());  	X509CertificateParser x509CertificateParser = new X509CertificateParser ();  	X509Certificate attestationCertificate = x509CertificateParser.ReadCertificate (stream);  	int size = (int)(binaryReader.BaseStream.Length - binaryReader.BaseStream.Position);  	byte[] signature = binaryReader.ReadBytes (size);  	RawRegisterResponse rawRegisterResponse = new RawRegisterResponse (publicKey' keyHandle' attestationCertificate' signature);  	return rawRegisterResponse;  } catch (CertificateException e) {  	throw new U2fException ("Error when parsing attestation certificate"' e);  } finally {  	stream.Dispose ();  	binaryReader.Dispose ();  }  
Magic Number,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,GetHashCode,The following statement contains a magic number: hash += _keyHandle.Sum (b => b + 31);  
Magic Number,u2flib.Data.Messages,RawRegisterResponse,F:\newReposMay17\brucedog_u2flib\u2flib\Data\Messages\RawRegisterResponse.cs,GetHashCode,The following statement contains a magic number: hash += _signature.Sum (b => b + 31);  
Magic Number,u2flib.Data,DeviceRegistration,F:\newReposMay17\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,GetHashCode,The following statement contains a magic number: hash += AttestationCert.Sum (b => b + 31);  
Magic Number,u2flib.Data,DeviceRegistration,F:\newReposMay17\brucedog_u2flib\u2flib\Data\DeviceRegistration.cs,GetHashCode,The following statement contains a magic number: hash += KeyHandle.Sum (b => b + 31);  
Magic Number,u2flib.Util,Utils,F:\newReposMay17\brucedog_u2flib\u2flib\Util\Utils.cs,Base64StringToByteArray,The following statement contains a magic number: if (mod4 > 0) {  	input += new string ('='' 4 - mod4);  }  
Magic Number,u2flib.Util,Utils,F:\newReposMay17\brucedog_u2flib\u2flib\Util\Utils.cs,Base64StringToByteArray,The following statement contains a magic number: input += new string ('='' 4 - mod4);  
