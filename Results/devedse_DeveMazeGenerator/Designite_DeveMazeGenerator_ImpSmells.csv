Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The method has 111 lines of code.
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The method has 133 lines of code.
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The method has 190 lines of code.
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The method has 201 lines of code.
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The method has 201 lines of code.
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The method has 114 lines of code.
Long Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The method has 195 lines of code.
Long Method,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The method has 117 lines of code.
Long Method,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The method has 214 lines of code.
Long Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The method has 222 lines of code.
Long Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The method has 107 lines of code.
Long Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The method has 100 lines of code.
Long Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirst,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirst.cs,GoFind,The method has 107 lines of code.
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GenerateListOfMazeWalls,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,Cyclomatic complexity of the method is 8
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithColorMap,Cyclomatic complexity of the method is 8
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,Cyclomatic complexity of the method is 13
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,Cyclomatic complexity of the method is 16
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,Cyclomatic complexity of the method is 18
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,Cyclomatic complexity of the method is 14
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxe,Cyclomatic complexity of the method is 8
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeWithDynamicallyGeneratedPath,Cyclomatic complexity of the method is 8
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,Cyclomatic complexity of the method is 12
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPath,Cyclomatic complexity of the method is 8
Complex Method,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,Cyclomatic complexity of the method is 18
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,Cyclomatic complexity of the method is 12
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,Cyclomatic complexity of the method is 12
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,Cyclomatic complexity of the method is 16
Complex Method,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,Cyclomatic complexity of the method is 35
Complex Method,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,Cyclomatic complexity of the method is 14
Complex Method,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,Cyclomatic complexity of the method is 11
Complex Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,Cyclomatic complexity of the method is 36
Complex Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,Cyclomatic complexity of the method is 12
Complex Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,Cyclomatic complexity of the method is 15
Complex Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,Cyclomatic complexity of the method is 14
Complex Method,DeveMazeGenerator.PathFinders,PathFinderDepthFirst,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirst.cs,GoFind,Cyclomatic complexity of the method is 12
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,AddToWallList,The method has 5 parameters. Parameters: walls' xstart' ystart' xend' yend
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The method has 5 parameters. Parameters: size' lineSavingProgress' tiffTileSize' useComplexImage' debugMessageCallback
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMaxPathRowsThatWouldFitInMemoryFromHere,The method has 5 parameters. Parameters: debugMessageCallback' pathPointsPerRow' startRow' stepsToIncreaseWithSize' memoryFree
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxe,The method has 6 parameters. Parameters: mazeSaveFileType' fileName' path' lineSavingProgress' useTiles' useColorMap
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxe,The method has 6 parameters. Parameters: mazeSaveFileType' fileName' pathPosjes' lineSavingProgress' useTiles' useColorMap
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeWithDynamicallyGeneratedPath,The method has 8 parameters. Parameters: mazeSaveFileType' fileName' dynamicallyGeneratedPath' lineSavingProgress' useTiles' useColorMap' saveAsSplittedImages' debugMessageCallback
Long Parameter List,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMaxPathRowsThatWouldFitInMemoryFromHerePng,The method has 5 parameters. Parameters: debugMessageCallback' pathPointsPerRow' startRow' stepsToIncreaseWithSize' memoryFree
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The method has 5 parameters. Parameters: map' maze' r' pixelChangedCallback' seed
Long Parameter List,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators,Algorithm,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Algorithm.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,Generate,The method has 5 parameters. Parameters: width' height' innerMapType' seed' pixelChangedCallback
Long Parameter List,DeveMazeGenerator.InnerMaps,HybridInnerMapPart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,HybridInnerMapPart,The method has 5 parameters. Parameters: startX' startY' endX' endY' hdArray
Long Parameter List,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternalWithCount,The method has 5 parameters. Parameters: directions' start' end' map' maxCount
Long Statement,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The length of the statement  "                return lowerBound + (int)((REAL_UNIT_UINT * (double)(w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound)); " is 141.
Long Statement,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The length of the statement  "            return lowerBound + (int)((REAL_UNIT_INT * (double)(int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))))) * (double)range); " is 128.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The length of the statement  "                    debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Count: {3}' Time to generate this part: {4} sec' Size: {5}mb"' partNumber' yChunkStart' yChunkEnd' pathPointsHere.Count' Math.Round(w.Elapsed.TotalSeconds' 2)' Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3))); " is 297.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "            debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2))); " is 187.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "            //    debugMessageCallback(string.Format("We can't work with the default tilesize of '{0}' so we have to scale it back to RowsPerCycle: '{1}'"' tiffTileSize' rowsPerPathDeterminingCycle)); " is 188.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //We must use rowsperpathdeterminingcycle here instead of tifftilesize because else you might get into a scenario where the first 4 values and the second 4 values are beneath 1000. But if we would take value 2 to 6 which are also 4 values we would go above 1000. " is 262.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //And yes I thought about this pretty well' it needs to be like this because you get forced into reading 500 lines of path from for example 1000 to 1500 where the other thing is 2000' hmmmm... " is 192.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //Or not I really need to think about this a bit more. Because if the chunk size is 1000 then you can never end up reading something smaller then that which works because the rowsperpath is always bigger. " is 204.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //So yeah' because rows per path is always a multiple or equal to tifftilesize you can never go out of sync becuase no matter what happens' e.g. tifftile = 500 and perpath = 2000. When you're at 2500 you just need to read 500. And you are never forced in reading anything that was " is 280.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //not measured. Because you can't end up in having to read somewhere from 1250 to 1750 because of the multiple thingy. Ok I'm quite sure now it needs to be tiffTileSize. " is 169.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //Additional note' it always needs to be a multiple of tiffTileSize because we write tiles at a time (we can't write half tiles). So that's why we don't want some stupidly small numbers here. " is 191.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                int stepsThisLoop = FindTheMaxPathRowsThatWouldFitInMemoryFromHere(debugMessageCallback' pathPointsPerRow' yChunkStart' tiffTileSize' memoryFree); " is 146.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                //We don't use a ToList here because we do actually know the expected list size beforehand. This way we make sure we don't have to do any internal Array Resizing. " is 162.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                    debugMessageCallback(string.Format("Warning: Something strange is happening where the actual path point count '{0}' is not equal to the expected path point count '{1}' (Maze will still save correctly but it uses more memory then expected)"' pathPointsHere.Count' expectedPathCount)); " is 283.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The length of the statement  "                debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"' " is 259.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "            debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2))); " is 187.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                debugMessageCallback(string.Format("We can't work with the default tilesize of '{0}' so we have to scale it back to RowsPerCycle: '{1}'"' tiffTileSize' rowsPerPathDeterminingCycle)); " is 182.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //We must use rowsperpathdeterminingcycle here instead of tifftilesize because else you might get into a scenario where the first 4 values and the second 4 values are beneath 1000. But if we would take value 2 to 6 which are also 4 values we would go above 1000. " is 262.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //And yes I thought about this pretty well' it needs to be like this because you get forced into reading 500 lines of path from for example 1000 to 1500 where the other thing is 2000' hmmmm... " is 192.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //Or not I really need to think about this a bit more. Because if the chunk size is 1000 then you can never end up reading something smaller then that which works because the rowsperpath is always bigger. " is 204.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //So yeah' because rows per path is always a multiple or equal to tifftilesize you can never go out of sync becuase no matter what happens' e.g. tifftile = 500 and perpath = 2000. When you're at 2500 you just need to read 500. And you are never forced in reading anything that was " is 280.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //not measured. Because you can't end up in having to read somewhere from 1250 to 1750 because of the multiple thingy. Ok I'm quite sure now it needs to be tiffTileSize. " is 169.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //Additional note' it always needs to be a multiple of tiffTileSize because we write tiles at a time (we can't write half tiles). So that's why we don't want some stupidly small numbers here. " is 191.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    int stepsThisLoop = FindTheMaxPathRowsThatWouldFitInMemoryFromHere(debugMessageCallback' pathPointsPerRow' yChunkStart' tiffTileSize' memoryFree); " is 146.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    //We don't use a ToList here because we do actually know the expected list size beforehand. This way we make sure we don't have to do any internal Array Resizing. " is 162.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                        debugMessageCallback(string.Format("Warning: Something strange is happening where the actual path point count '{0}' is not equal to the expected path point count '{1}' (Maze will still save correctly but it uses more memory then expected)"' pathPointsHere.Count' expectedPathCount)); " is 283.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"' " is 259.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //We must use rowsperpathdeterminingcycle here instead of tifftilesize because else you might get into a scenario where the first 4 values and the second 4 values are beneath 1000. But if we would take value 2 to 6 which are also 4 values we would go above 1000. " is 262.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //And yes I thought about this pretty well' it needs to be like this because you get forced into reading 500 lines of path from for example 1000 to 1500 where the other thing is 2000' hmmmm... " is 192.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //Or not I really need to think about this a bit more. Because if the chunk size is 1000 then you can never end up reading something smaller then that which works because the rowsperpath is always bigger. " is 204.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //So yeah' because rows per path is always a multiple or equal to tifftilesize you can never go out of sync becuase no matter what happens' e.g. tifftile = 500 and perpath = 2000. When you're at 2500 you just need to read 500. And you are never forced in reading anything that was " is 280.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //not measured. Because you can't end up in having to read somewhere from 1250 to 1750 because of the multiple thingy. Ok I'm quite sure now it needs to be tiffTileSize. " is 169.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //Additional note' it always needs to be a multiple of tiffTileSize because we write tiles at a time (we can't write half tiles). So that's why we don't want some stupidly small numbers here. " is 191.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //int stepsThisLoop = FindTheMaxPathRowsThatWouldFitInMemoryFromHere(debugMessageCallback' pathPointsPerRow' yChunkStart' tiffTileSize' memoryFree); " is 148.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    ////We don't use a ToList here because we do actually know the expected list size beforehand. This way we make sure we don't have to do any internal Array Resizing. " is 164.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    //    debugMessageCallback(string.Format("Warning: Something strange is happening where the actual path point count '{0}' is not equal to the expected path point count '{1}' (Maze will still save correctly but it uses more memory then expected)"' pathPointsHere.Count' expectedPathCount)); " is 289.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The length of the statement  "                    debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"' " is 259.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The length of the statement  "                    debugMessageCallback(string.Format("We would have to create a list bigger then int.MaxValue with RowsPerCycle '{0}'' so we take '{1}'"' newTestSize' rowsPerPathDeterminingCycle)); " is 179.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The length of the statement  "                    debugMessageCallback(string.Format("Memory would be full with RowsPerCycle '{0}'' so we take '{1}'"' newTestSize' rowsPerPathDeterminingCycle)); " is 144.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The length of the statement  "                    debugMessageCallback(string.Format("This RowsPerCycle is chosen because it fits in memory and we can do the complete maze in it: '{0}'"' rowsPerPathDeterminingCycle)); " is 167.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The length of the statement  "            debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2))); " is 168.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeWithDynamicallyGeneratedPath,The length of the statement  "                    SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis(fileName' dynamicallyGeneratedPath' lineSavingProgress' debugMessageCallback); " is 143.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeWithDynamicallyGeneratedPath,The length of the statement  "                    SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis(fileName' dynamicallyGeneratedPath' lineSavingProgress' debugMessageCallback); " is 144.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeWithDynamicallyGeneratedPath,The length of the statement  "                    SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages(Path.GetFileNameWithoutExtension(fileName)' dynamicallyGeneratedPath' lineSavingProgress' debugMessageCallback); " is 192.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath32Bit,The length of the statement  "                objGraphics.FillRegion(new SolidBrush(brushColor)' new Region(new Rectangle(n.X * cursize' n.Y * cursize' cursize' cursize))); " is 126.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,CreatePngWriter,The length of the statement  "            var stream = new FileStream(fileName' FileMode.Create' FileAccess.Write' FileShare.Read' 4096' FileOptions.WriteThrough); " is 121.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "            debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2))); " is 187.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                debugMessageCallback(string.Format("We can't work with the default tilesize of '{0}' so we have to scale it back to RowsPerCycle: '{1}'"' tiffTileSize' rowsPerPathDeterminingCycle)); " is 182.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //We must use rowsperpathdeterminingcycle here instead of tifftilesize because else you might get into a scenario where the first 4 values and the second 4 values are beneath 1000. But if we would take value 2 to 6 which are also 4 values we would go above 1000. " is 262.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //And yes I thought about this pretty well' it needs to be like this because you get forced into reading 500 lines of path from for example 1000 to 1500 where the other thing is 2000' hmmmm... " is 192.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //Or not I really need to think about this a bit more. Because if the chunk size is 1000 then you can never end up reading something smaller then that which works because the rowsperpath is always bigger. " is 204.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //So yeah' because rows per path is always a multiple or equal to tifftilesize you can never go out of sync becuase no matter what happens' e.g. tifftile = 500 and perpath = 2000. When you're at 2500 you just need to read 500. And you are never forced in reading anything that was " is 280.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //not measured. Because you can't end up in having to read somewhere from 1250 to 1750 because of the multiple thingy. Ok I'm quite sure now it needs to be tiffTileSize. " is 169.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //Additional note' it always needs to be a multiple of tiffTileSize because we write tiles at a time (we can't write half tiles). So that's why we don't want some stupidly small numbers here. " is 191.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                int stepsThisLoop = FindTheMaxPathRowsThatWouldFitInMemoryFromHerePng(debugMessageCallback' pathPointsPerRow' yChunkStart' tiffTileSize' memoryFree); " is 149.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                //We don't use a ToList here because we do actually know the expected list size beforehand. This way we make sure we don't have to do any internal Array Resizing. " is 162.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    debugMessageCallback(string.Format("Warning: Something strange is happening where the actual path point count '{0}' is not equal to the expected path point count '{1}' (Maze will still save correctly but it uses more memory then expected)"' pathPointsHere.Count' expectedPathCount)); " is 283.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"' " is 298.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The length of the statement  "                    Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)' " is 163.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The length of the statement  "                    debugMessageCallback(string.Format("We would have to create a list bigger then int.MaxValue with RowsPerCycle '{0}'' so we take '{1}'"' newTestSize' rowsPerPathDeterminingCycle)); " is 179.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The length of the statement  "                    debugMessageCallback(string.Format("Memory would be full with RowsPerCycle '{0}'' so we take '{1}'"' newTestSize' rowsPerPathDeterminingCycle)); " is 144.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The length of the statement  "                    debugMessageCallback(string.Format("This RowsPerCycle is chosen because it fits in memory and we can do the complete maze in it: '{0}'"' rowsPerPathDeterminingCycle)); " is 167.
Long Statement,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The length of the statement  "            debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2))); " is 168.
Long Statement,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,LoadNewMapPart,The length of the statement  "                if (mapToCheck != null && mapToCheck.StartX == x * GridSize && mapToCheck.StartY == y * GridSize && mapToCheck.EndX == (x + 1) * GridSize && mapToCheck.EndY == (y + 1) * GridSize) " is 179.
Long Statement,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,LoadNewMapPart,The length of the statement  "                    long posToStoreAt = sizeinbytes * (long)(Width / GridSize) * (long)(oldone.StartY / GridSize) + (long)sizeinbytes * (long)(oldone.StartX / GridSize); " is 149.
Long Statement,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,LoadNewMapPart,The length of the statement  "                currentMapPart = new HybridInnerMapPart(x * GridSize' y * GridSize' (x + 1) * GridSize' (y + 1) * GridSize' completeHDArray); " is 125.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The length of the statement  "                //If we have more then 2 directions we got a junction (only if we're not backtracking) (This is actually 3 directions but we only count 2 because we don't count previous direction) " is 180.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The length of the statement  "                //If we are however at the start (which is actually the end because we swap them around) we don't create a direction because you're at the end and don't need directions " is 168.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The length of the statement  "                //If we are however at the end (which is the start) we will create a direction if we have more then 2 directions (This is 2 because we don't have a previous one yet) " is 165.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The length of the statement  "                if ((possibleDirectionsCount >= 2 && !backtracking && (x != start.X || y != start.Y)) || (possibleDirectionsCount >= 1 && x == end.X && y == end.Y)) " is 148.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirections,The length of the statement  "            //By first determining max and then returning a yield IEnumerable based on this max we only have to calculate the max value once instead of every time you look through the IEnumerable " is 183.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirections,The length of the statement  "            //This is because a yield return is only executed when a foreach is ran. But the parameters are already precalculated in it. " is 124.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirections,The length of the statement  "            //One additional note is calling this method to obtain the IEnumerable will instantly execute this max count instead of having this also done later. (This means that when you want to " is 182.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirections,The length of the statement  "            //loop through the path once it will still do it one extra time to determine the max count). This shouldn't matter that much though :). " is 135.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The length of the statement  "                //Make sure the point was not the previous point' also make sure that if we backtracked we don't go to a direction we already went to' also make sure that the point is white " is 173.
Long Statement,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The length of the statement  "                //Make sure the point was not the previous point' also make sure that if we backtracked we don't go to a direction we already went to' also make sure that the point is white " is 173.
Complex Conditional,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,isValid,The conditional expression  "x > 0 && x < maze.Width - 1 && y > 0 && y < maze.Height - 1"  is complex.
Complex Conditional,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The conditional expression  "(x + 1) % 2 == 0 && (y + 1) % 2 == 0 && x != map.Width - 1 && y != map.Height - 1"  is complex.
Complex Conditional,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,isValid,The conditional expression  "x > 0 && x < maze.Width - 1 && y > 0 && y < maze.Height - 1"  is complex.
Complex Conditional,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The conditional expression  "x == 0 || x == maze.Width - 1 || x == maze.Width - 2 || y == 0 || y == maze.Height - 1 || y == maze.Height - 2"  is complex.
Complex Conditional,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,LoadNewMapPart,The conditional expression  "mapToCheck != null && mapToCheck.StartX == x * GridSize && mapToCheck.StartY == y * GridSize && mapToCheck.EndX == (x + 1) * GridSize && mapToCheck.EndY == (y + 1) * GridSize"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The conditional expression  "(prev.X != x - 1 || prev.Y != y) && x - 1 > 0 && map[x - 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The conditional expression  "(prev.X != x || prev.Y != y - 1) && y - 1 > 0 && map[x' y - 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The conditional expression  "(prev.X != x + 1 || prev.Y != y) && x + 1 < width - 1 && map[x + 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The conditional expression  "(prev.X != x || prev.Y != y + 1) && y + 1 < height - 1 && map[x' y + 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The conditional expression  "(possibleDirectionsCount >= 2 && !backtracking && (x != start.X || y != start.Y)) || (possibleDirectionsCount >= 1 && x == end.X && y == end.Y)"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,The conditional expression  "(prev.X != x - 1 || prev.Y != y) && x - 1 > 0 && map[x - 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,The conditional expression  "(prev.X != x || prev.Y != y - 1) && y - 1 > 0 && map[x' y - 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,The conditional expression  "(prev.X != x + 1 || prev.Y != y) && x + 1 < width - 1 && map[x + 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,The conditional expression  "(prev.X != x || prev.Y != y + 1) && y + 1 < height - 1 && map[x' y + 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The conditional expression  "(prev.X != x + 1 || prev.Y != y) && lastBackTrackDir < 0 && x + 1 < width - 1 && map[x + 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The conditional expression  "(prev.X != x || prev.Y != y + 1) && lastBackTrackDir < 1 && y + 1 < height - 1 && map[x' y + 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The conditional expression  "(prev.X != x - 1 || prev.Y != y) && lastBackTrackDir < 2 && x - 1 > 0 && map[x - 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The conditional expression  "(prev.X != x || prev.Y != y - 1) && lastBackTrackDir < 3 && y - 1 > 0 && map[x' y - 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The conditional expression  "(prev.X != x + 1 || prev.Y != y) && lastBackTrackDir < 0 && x + 1 < width - 1 && map[x + 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The conditional expression  "(prev.X != x || prev.Y != y + 1) && lastBackTrackDir < 1 && y + 1 < height - 1 && map[x' y + 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The conditional expression  "(prev.X != x - 1 || prev.Y != y) && lastBackTrackDir < 2 && x - 1 > 0 && map[x - 1' y]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The conditional expression  "(prev.X != x || prev.Y != y - 1) && lastBackTrackDir < 3 && y - 1 > 0 && map[x' y - 1]"  is complex.
Complex Conditional,DeveMazeGenerator.PathFinders,PathFinderDepthFirst,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirst.cs,GoFind,The conditional expression  "x == 0 || y == 0 || x == width || y == height"  is complex.
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: return (int)((REAL_UNIT_INT * (int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))))) * upperBound);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: return (int)((REAL_UNIT_INT * (int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))))) * upperBound);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_UINT * (double)(w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_UINT * (double)(w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)))) * (double)((long)upperBound - (long)lowerBound));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_INT * (double)(int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))))) * (double)range);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,Next,The following statement contains a magic number: return lowerBound + (int)((REAL_UNIT_INT * (double)(int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))))) * (double)range);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextDouble,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextDouble,The following statement contains a magic number: return (REAL_UNIT_INT * (int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)))));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextDouble,The following statement contains a magic number: return (REAL_UNIT_INT * (int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)))));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer[i++] = (byte)(w >> 8);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer[i++] = (byte)(w >> 16);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer[i++] = (byte)(w >> 24);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer[i++] = (byte)(w >> 8);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer[i++] = (byte)(w >> 16);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBytes,The following statement contains a magic number: buffer[i] = (byte)(w >> 24);
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextUInt,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextUInt,The following statement contains a magic number: return (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextUInt,The following statement contains a magic number: return (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextInt,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextInt,The following statement contains a magic number: return (int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextInt,The following statement contains a magic number: return (int)(0x7FFFFFFF & (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8))));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: uint t = (x ^ (x << 11));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: bitBuffer = w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,FastRandom,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\FastRandom.cs,NextBool,The following statement contains a magic number: bitBuffer = w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GetColorMaps,The following statement contains a magic number: int colorMapSize = 256;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GetColorMaps,The following statement contains a magic number: int colorMapSizeMinusTwo = colorMapSize - 2;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GetColorMaps,The following statement contains a magic number: i < colorMapSize - 2
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GetColorMaps,The following statement contains a magic number: colorMapRed[colorMapSize - 2] = 0;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GetColorMaps,The following statement contains a magic number: colorMapGreen[colorMapSize - 2] = 0;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,GetColorMaps,The following statement contains a magic number: colorMapBlue[colorMapSize - 2] = 0;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: byte[] color_ptr = new byte[(this.Width - 1) * 3];
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: g = (byte)(255 - curPathPos.RelativePos);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: color_ptr[x * 3 + 0] = r;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: color_ptr[x * 3 + 1] = g;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: color_ptr[x * 3 + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: color_ptr[x * 3 + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiff,The following statement contains a magic number: lineSavingProgress(y' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: byte[] color_ptr = new byte[tileSize * tileSize * 3];
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: int startPos = othery * tileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: int startPos = othery * tileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: color_ptr[startPos + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: var result = tif.WriteEncodedTile(tileNumber' color_ptr' tileSize * tileSize * 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithChunks,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithColorMap,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithColorMap,The following statement contains a magic number: byte ding = 254;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithColorMap,The following statement contains a magic number: float reinterpreted = ((float)curPathPos.RelativePos) / 255.0f * 253.0f;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithColorMap,The following statement contains a magic number: float reinterpreted = ((float)curPathPos.RelativePos) / 255.0f * 253.0f;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithColorMap,The following statement contains a magic number: lineSavingProgress(y' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: byte[] color_ptr = new byte[tiffTileSize * tiffTileSize * 3];
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Count: {3}' Time to generate this part: {4} sec' Size: {5}mb"' partNumber' yChunkStart' yChunkEnd' pathPointsHere.Count' Math.Round(w.Elapsed.TotalSeconds' 2)' Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Count: {3}' Time to generate this part: {4} sec' Size: {5}mb"' partNumber' yChunkStart' yChunkEnd' pathPointsHere.Count' Math.Round(w.Elapsed.TotalSeconds' 2)' Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Count: {3}' Time to generate this part: {4} sec' Size: {5}mb"' partNumber' yChunkStart' yChunkEnd' pathPointsHere.Count' Math.Round(w.Elapsed.TotalSeconds' 2)' Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Count: {3}' Time to generate this part: {4} sec' Size: {5}mb"' partNumber' yChunkStart' yChunkEnd' pathPointsHere.Count' Math.Round(w.Elapsed.TotalSeconds' 2)' Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Count: {3}' Time to generate this part: {4} sec' Size: {5}mb"' partNumber' yChunkStart' yChunkEnd' pathPointsHere.Count' Math.Round(w.Elapsed.TotalSeconds' 2)' Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: color_ptr[startPos + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: var result = tif.WriteEncodedTile(tileNumber' color_ptr' tiffTileSize * tiffTileSize * 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPath,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Memory free: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Memory free: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: memoryFree = (ulong)(memoryFree * 0.6);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Setting max usage to 60% of this: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("Setting max usage to 60% of this: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: tiffTileSize = 256;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: byte[] color_ptr = new byte[tiffTileSize * tiffTileSize * 3];
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: color_ptr[startPos + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysisAndSplitImages,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveTiffImage,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveTiffImage,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveTiffImage,The following statement contains a magic number: tif.WriteEncodedTile(0' color_ptr' tileWidth * tileHeight * 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Memory free: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Memory free: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: memoryFree = (ulong)(memoryFree * 0.6);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Setting max usage to 60% of this: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Setting max usage to 60% of this: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: byte[] color_ptr = new byte[tiffTileSize * tiffTileSize * 3];
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: color_ptr[startPos + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: var result = tif.WriteEncodedTile(tileNumber' color_ptr' tiffTileSize * tiffTileSize * 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' this.Height - 2)' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxeTiffWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          pathPointsHere.Count'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                          Math.Round(wSort.Elapsed.TotalSeconds' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                          Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: var frandom = new FastRandom(1337);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: byte[] color_ptr = new byte[tiffTileSize * tiffTileSize * 3];
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: var stepsThisLoop = 8192;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: int startPos = othery * tiffTileSize * 3 + otherx * 3;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: color_ptr[startPos + 2] = b;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: var result = tif.WriteEncodedTile(tileNumber' color_ptr' tiffTileSize * tiffTileSize * 3);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' size - 2)' size - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: lineSavingProgress((int)Math.Min((tileNumber + 1L) * tiffTileSize / tilesInWidth' size - 2)' size - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          ""'                          ""'                          Math.Round(lastTime' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          ""'                          ""));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,Testje,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to save this part in the image: {7} sec' Combined time: {8} sec' Size: {9}mb"'                          partNumber'                          yChunkStart'                          yChunkEnd'                          stepsThisLoop'                          ""'                          ""'                          Math.Round(lastTime' 2)'                          Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                          ""'                          ""));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMaxPathRowsThatWouldFitInMemoryFromHere,The following statement contains a magic number: var expectedMemoryUsage = curSize * 9;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: int rowsPerPathDeterminingCycle = 16;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: int newTestSize = rowsPerPathDeterminingCycle * 2;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: var expectedMemoryUsage = maxSizeCur * 9;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWrite,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxe,The following statement contains a magic number: byte formulathing = (byte)((double)i / (double)path.Count * 255.0);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImage,The following statement contains a magic number: BitArray bitar = new BitArray(8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath32Bit,The following statement contains a magic number: int formulathing = (int)((double)i / (double)path.Count * 255.0);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath32Bit,The following statement contains a magic number: Color brushColor = Color.FromArgb(formulathing' 255 - formulathing' 0);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: BitArray bitar = new BitArray(8);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: bitar[j + 3] = true;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: bitar[j + 2] = true;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: long percent = 100L * (long)(i + 1) / (long)path.Count;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: int xrest = point.X % 2;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: int pos = bmpData.Stride * point.Y + point.X / 2;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: int xtra = 4;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: bitar[xtra + 3] = true;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: bitar[xtra + 2] = false;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImagePath4Bit,The following statement contains a magic number: percent < 20
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,CreatePngWriter,The following statement contains a magic number: var stream = new FileStream(fileName' FileMode.Create' FileAccess.Write' FileShare.Read' 4096' FileOptions.WriteThrough);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePng,The following statement contains a magic number: ImageInfo imi = new ImageInfo(this.Width - 1' this.Height - 1' 8' false);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePng,The following statement contains a magic number: png.GetMetadata().SetDpi(100.0);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePng,The following statement contains a magic number: png.CompLevel = 4;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePng,The following statement contains a magic number: g = 255 - curPathPos.RelativePos;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePng,The following statement contains a magic number: lineSavingProgress(y' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPath,The following statement contains a magic number: ImageInfo imi = new ImageInfo(this.Width - 1' this.Height - 1' 8' false);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPath,The following statement contains a magic number: png.GetMetadata().SetDpi(100.0);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPath,The following statement contains a magic number: png.CompLevel = 4;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPath,The following statement contains a magic number: g = 255 - curPathPos.RelativePos;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPath,The following statement contains a magic number: lineSavingProgress(y' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Path analysis completed. Total path length: {0}' this would take up {1}mb."' totalPathLength' Math.Round(totalPathLength * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Memory free: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Memory free: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: memoryFree = (ulong)(memoryFree * 0.6);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Setting max usage to 60% of this: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("Setting max usage to 60% of this: {0}mb"' memoryFree / 1024 / 1024));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: ImageInfo imi = new ImageInfo(this.Width - 1' this.Height - 1' 8' false);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: png.GetMetadata().SetDpi(100.0);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: png.CompLevel = 4;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: g = (byte)(255 - curPathPos.RelativePos);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: lineSavingProgress(y + yChunkStart' this.Height - 2);
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,SaveMazeAsImageDeluxePngWithDynamicallyGeneratedPathWithAnalysis,The following statement contains a magic number: debugMessageCallback(string.Format("{0}: YChunkStart: {1}' YChunkEnd: {2}' Rows written: {3}' Count: {4}' Time to generate this part: {5} sec' Time to sort this part: {6} sec' Time to put this part in memory: {7}' Time to save this part in the image: {8} sec' Combined time: {9} sec' Size: {10}mb"'                      partNumber'                      yChunkStart'                      yChunkEnd'                      stepsThisLoop'                      pathPointsHere.Count'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds' 2)'                      Math.Round(wSort.Elapsed.TotalSeconds' 2)'                      Math.Round(wGmemorifiedPieceOpMap.Elapsed.TotalSeconds' 2)'                      Math.Round(wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(wObtainPathPart.Elapsed.TotalSeconds + wSort.Elapsed.TotalSeconds + wGmemorifiedPieceOpMap.Elapsed.TotalSeconds + wSaveAsImage.Elapsed.TotalSeconds' 2)'                      Math.Round(pathPointsHere.Count * 9.0 / 1024.0 / 1024.0' 3)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: int rowsPerPathDeterminingCycle = 16;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: int newTestSize = rowsPerPathDeterminingCycle * 2;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: var expectedMemoryUsageForPath = maxSizeCur * 9;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: var expectedMemoryUsageForChunks = (newTestSize * newTestSize / 8) * chunksInWidth;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMinimalRowsToWriteForPng,The following statement contains a magic number: debugMessageCallback(string.Format("Max size of the minimal rows to write would be: {0}' taking up {1}mb of memory."' max' Math.Round(max * 9.0 / 1024.0 / 1024.0' 2)));
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMaxPathRowsThatWouldFitInMemoryFromHerePng,The following statement contains a magic number: var expectedMemoryUsageForPath = curSize * 9;
Magic Number,DeveMazeGenerator,Maze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Maze.cs,FindTheMaxPathRowsThatWouldFitInMemoryFromHerePng,The following statement contains a magic number: var expectedMemoryUsageForChunks = (newTestSize * newTestSize / 8) * chunksInWidth;
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,QuatroList,The following statement contains a magic number: innerData = new int[128];
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IncreaseSize,The following statement contains a magic number: v |= v >> 2;
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IncreaseSize,The following statement contains a magic number: v |= v >> 4;
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IncreaseSize,The following statement contains a magic number: v |= v >> 8;
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IncreaseSize,The following statement contains a magic number: v |= v >> 16;
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,BitStringToInt,The following statement contains a magic number: return Convert.ToInt32(bits' 2);
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IntToBitString,The following statement contains a magic number: string brrr = Convert.ToString(x' 2);
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IntToBitString,The following statement contains a magic number: build.Length < 32
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IntToBitString,The following statement contains a magic number: build.Insert(8' " ");
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IntToBitString,The following statement contains a magic number: build.Insert(17' " ");
Magic Number,DeveMazeGenerator,QuatroList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\QuatroList.cs,IntToBitString,The following statement contains a magic number: build.Insert(26' " ");
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: x + 2 < maze.Width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: x + 2 < maze.Width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: y + 2 < maze.Height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutAction,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutAction.cs,GoGenerate,The following statement contains a magic number: y + 2 < maze.Height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: int[] stackjex = new int[width * height / 4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: int[] stackjey = new int[width * height / 4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2][y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2][y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2][y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2][y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x][y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x][y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x][y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray3.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x][y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: int[] stackjex = new int[width * height / 4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: int[] stackjey = new int[width * height / 4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[y * width + x - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[y * width + x - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[y * width + x + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[y * width + x + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[(y - 2) * width + x]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[(y - 2) * width + x]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[(y + 2) * width + x]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray2.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[(y + 2) * width + x]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: List<int> stackjex = new List<int>(10000);
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: List<int> stackjey = new List<int>(10000);
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackList.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: int[] stackjex = new int[width * height / 4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: int[] stackjey = new int[width * height / 4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMazeAndFastRandomFastStackArray.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackFastWithoutActionAndMaze,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackFastWithoutActionAndMaze.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: x + 2 < maze.Width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: x + 2 < maze.Width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: y + 2 < maze.Height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators.Tests,AlgorithmBacktrackTest,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\Tests\AlgorithmBacktrackTest.cs,GoGenerate,The following statement contains a magic number: y + 2 < maze.Height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: (x + 1) % 2 == 0 && (y + 1) % 2 == 0 && x != map.Width - 1 && y != map.Height - 1
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: (x + 1) % 2 == 0 && (y + 1) % 2 == 0 && x != map.Width - 1 && y != map.Height - 1
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: startje = 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: y % 2 == 1
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: x < map.Width - 2
Magic Number,DeveMazeGenerator.Generators,AlgorithmKruskal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmKruskal.cs,GoGenerate,The following statement contains a magic number: y < map.Height - 2
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The following statement contains a magic number: targetCount <= 2
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: x == 0 || x == maze.Width - 1 || x == maze.Width - 2 || y == 0 || y == maze.Height - 1 || y == maze.Height - 2
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: x == 0 || x == maze.Width - 1 || x == maze.Width - 2 || y == 0 || y == maze.Height - 1 || y == maze.Height - 2
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: int splitnumber = 2 + r.Next((curRect.Height - 2) / 2) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: int splitnumber = 2 + r.Next((curRect.Height - 2) / 2) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: int splitnumber = 2 + r.Next((curRect.Height - 2) / 2) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: int splitnumber = 2 + r.Next((curRect.Height - 2) / 2) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: int opening = 1 + r.Next((curRect.Width) / 2) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: int opening = 1 + r.Next((curRect.Width) / 2) * 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: curRect.Width > 3 && curRect.Height > 3
Magic Number,DeveMazeGenerator.Generators,AlgorithmDivision,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmDivision.cs,GoGenerate,The following statement contains a magic number: curRect.Width > 3 && curRect.Height > 3
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: long totSteps = (((long)maze.Width - 1L) / 2L) * (((long)maze.Height - 1L) / 2L);
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: MazePoint[] targets = new MazePoint[4];
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x - 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: x - 2 > 0 && !map[x - 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].X = x + 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: x + 2 < width - 1 && !map[x + 2' y]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y - 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: y - 2 > 0 && !map[x' y - 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: targets[targetCount].Y = y + 2;
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.Generators,AlgorithmBacktrack,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrack.cs,GoGenerate,The following statement contains a magic number: y + 2 < height - 1 && !map[x' y + 2]
Magic Number,DeveMazeGenerator.InnerMaps,BitArrayMappedOnHardDiskInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\BitArrayMappedOnHardDiskInnerMap.cs,BitArrayMappedOnHardDiskInnerMap,The following statement contains a magic number: inthdarray = new IntHDArray(totalLength / 8 + 1);
Magic Number,DeveMazeGenerator.InnerMaps,BitArrayMappedOnHardDiskInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\BitArrayMappedOnHardDiskInnerMap.cs,SetRealPos,The following statement contains a magic number: int thePositionForBitShift = (int)(pos % 32);
Magic Number,DeveMazeGenerator.InnerMaps,BitArrayMappedOnHardDiskInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\BitArrayMappedOnHardDiskInnerMap.cs,SetRealPos,The following statement contains a magic number: inthdarray[pos / 32] |= a;
Magic Number,DeveMazeGenerator.InnerMaps,BitArrayMappedOnHardDiskInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\BitArrayMappedOnHardDiskInnerMap.cs,GetRealPos,The following statement contains a magic number: int thePositionForBitShift = (int)(pos % 32);
Magic Number,DeveMazeGenerator.InnerMaps,BitArrayMappedOnHardDiskInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\BitArrayMappedOnHardDiskInnerMap.cs,GetRealPos,The following statement contains a magic number: return (inthdarray[pos / 32] & (1 << thePositionForBitShift)) != 0;
Magic Number,DeveMazeGenerator.InnerMaps,BitArreintjeFastInnerMapArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\BitArreintjeFastInnerMapArray.cs,BitArreintjeFastInnerMapArray,The following statement contains a magic number: innerData = new int[height / 32 + 1];
Magic Number,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,HybridInnerMap,The following statement contains a magic number: completeHDArray = new CompleteHDArray((width / 8L) * (height / 8L));
Magic Number,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,HybridInnerMap,The following statement contains a magic number: completeHDArray = new CompleteHDArray((width / 8L) * (height / 8L));
Magic Number,DeveMazeGenerator.InnerMaps,HybridInnerMap,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,LoadNewMapPart,The following statement contains a magic number: const long sizeinbytes = (GridSize * GridSize) / 8;
Magic Number,DeveMazeGenerator.InnerMaps,HybridInnerMapPart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\HybridInnerMap.cs,Load,The following statement contains a magic number: innerMapInPart.innerData = hdArray.ReadIntArray(pos' (width * height) / 8);
Magic Number,DeveMazeGenerator.InnerMaps.InnerMapHelpers,CompleteHDArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\InnerMapHelpers\CompleteHDArray.cs,CompleteHDArray,The following statement contains a magic number: fileStream = new FileStream(innerFileName' FileMode.Create' FileAccess.ReadWrite' FileShare.Read' 4096' GlobalVars.FileFlagNoBuffering | FileOptions.WriteThrough);
Magic Number,DeveMazeGenerator.InnerMaps.InnerMapHelpers,CompleteHDArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\InnerMapHelpers\CompleteHDArray.cs,WriteIntArray,The following statement contains a magic number: byte[] toWrite = new byte[array.Length * 4];
Magic Number,DeveMazeGenerator.InnerMaps.InnerMapHelpers,CompleteHDArray,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\InnerMaps\InnerMapHelpers\CompleteHDArray.cs,ReadIntArray,The following statement contains a magic number: int[] intArray = new int[count / 4];
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: var possibleDirections = new MazePoint[4];
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: (possibleDirectionsCount >= 2 && !backtracking && (x != start.X || y != start.Y)) || (possibleDirectionsCount >= 1 && x == end.X && y == end.Y)
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: switch (foundJunction)                              {                                  case 0:                                      previousDirectionY = -1;                                      break;                                  case 1:                                      previousDirectionX = 1;                                      break;                                  case 2:                                      previousDirectionY = 1;                                      break;                                  case 3:                                      previousDirectionX = -1;                                      break;                              }
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: switch (foundJunction)                              {                                  case 0:                                      previousDirectionY = -1;                                      break;                                  case 1:                                      previousDirectionX = 1;                                      break;                                  case 2:                                      previousDirectionY = 1;                                      break;                                  case 3:                                      previousDirectionX = -1;                                      break;                              }
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following statement contains a magic number: possibleDirectionsCount >= 2
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirections,The following statement contains a magic number: return DeterminePathFromDirections(directions' new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirections,The following statement contains a magic number: return DeterminePathFromDirections(directions' new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternalWithCount,The following statement contains a magic number: byte formulathing = (byte)((double)current / (double)maxCount * 255.0);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,The following statement contains a magic number: var possibleDirections = new MazePointPos[4];
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartWithPos,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartWithPos.cs,GoFind,The following statement contains a magic number: byte formulathing = (byte)((double)i / (double)stackje.Count * 255.0);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmart,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmart.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirst,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirst.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Magic Number,DeveMazeGenerator.PathFinders,PathFinderDepthFirst,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirst.cs,GoFind,The following statement contains a magic number: return GoFind(new MazePoint(1' 1)' new MazePoint(map.Width - 3' map.Height - 3)' map' callBack);
Duplicate Code,DeveMazeGenerator.Generators,AlgorithmBacktrackSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\Generators\AlgorithmBacktrackSmartMemory.cs,GoGenerate,The method contains a code clone-set at the following line numbers (starting from the method definition): ((65' 90)' (165' 190))
Missing Default,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,GoFind,The following switch statement is missing a default case: switch (foundJunction)                              {                                  case 0:                                      previousDirectionY = -1;                                      break;                                  case 1:                                      previousDirectionX = 1;                                      break;                                  case 2:                                      previousDirectionY = 1;                                      break;                                  case 3:                                      previousDirectionX = -1;                                      break;                              }
Missing Default,DeveMazeGenerator.PathFinders,PathFinderDepthFirstSmartAndSmartMemory,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\DeveMazeGenerator\PathFinders\PathFinderDepthFirstSmartAndSmartMemory.cs,DeterminePathFromDirectionsInternal,The following switch statement is missing a default case: switch (directionToGo)                      {                          case 0:                              cur.Y -= 1;                              break;                          case 1:                              cur.X += 1;                              break;                          case 2:                              cur.Y += 1;                              break;                          case 3:                              cur.X -= 1;                              break;                      }
