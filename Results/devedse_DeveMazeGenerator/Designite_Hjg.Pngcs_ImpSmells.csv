Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Hjg.Pngcs.Chunks,ChunksListForWrite,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunksListForWrite.cs,shouldWrite,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,Cyclomatic complexity of the method is 8
Complex Method,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,Cyclomatic complexity of the method is 12
Complex Method,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,Equals,Cyclomatic complexity of the method is 11
Complex Method,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadFirstChunks,Cyclomatic complexity of the method is 10
Complex Method,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadLastChunks,Cyclomatic complexity of the method is 8
Complex Method,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadChunk,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowsInt,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowsByte,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowRaw,Cyclomatic complexity of the method is 10
Complex Method,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,encodeRowFromByte,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,encodeRowFromInt,Cyclomatic complexity of the method is 9
Complex Method,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,CopyChunks,Cyclomatic complexity of the method is 16
Long Parameter List,Hjg.Pngcs.Chunks,PngMetadata,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngMetadata.cs,SetTimeYMDHMS,The method has 6 parameters. Parameters: year' mon' day' hour' min' sec
Long Parameter List,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,SetChromaticities,The method has 8 parameters. Parameters: whitex' whitey' redx' redy' greenx' greeny' bluex' bluey
Long Parameter List,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,SetYMDHMS,The method has 6 parameters. Parameters: yearx' monx' dayx' hourx' minx' secx
Long Parameter List,Hjg.Pngcs,ImageLines,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLines.cs,ImageLines,The method has 6 parameters. Parameters: ImgInfo' sampleType' unpackedMode' rowOffset' nRows' rowStep
Long Parameter List,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,setPreference,The method has 5 parameters. Parameters: none' sub' up' ave' paeth
Long Parameter List,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,fillResultsForFilter,The method has 5 parameters. Parameters: rown' type' sum' histo' tentative
Long Parameter List,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The method has 6 parameters. Parameters: cols' rows' bitdepth' alpha' grayscale' palette
Long Parameter List,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,ImageLine,The method has 5 parameters. Parameters: imgInfo' stype' unpackedMode' sci' scb
Long Parameter List,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,SetPixel,The method has 6 parameters. Parameters: line' col' r' g' b' a
Long Parameter List,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,SetPixel,The method has 5 parameters. Parameters: line' col' r' g' b
Long Parameter List,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,Interpol,The method has 6 parameters. Parameters: a' b' c' d' dx' dy
Long Identifier,Hjg.Pngcs.Chunks,PngChunkSRGB,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSRGB.cs,,The length of the parameter RENDER_INTENT_Relative_colorimetric is 35.
Long Identifier,Hjg.Pngcs.Chunks,PngChunkSRGB,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSRGB.cs,,The length of the parameter RENDER_INTENT_Absolute_colorimetric is 35.
Long Statement,Hjg.Pngcs.Chunks,PngChunk,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunk.cs,mustGoBeforeIDAT,The length of the statement  "            return oc == ChunkOrderingConstraint.BEFORE_IDAT || oc == ChunkOrderingConstraint.BEFORE_PLTE_AND_IDAT || oc == ChunkOrderingConstraint.AFTER_PLTE_BEFORE_IDAT; " is 159.
Long Statement,Hjg.Pngcs.Chunks,PngChunkICCP,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkICCP.cs,CreateRawChunk,The length of the statement  "            System.Array.Copy((Array)(Hjg.Pngcs.Chunks.ChunkHelper.ToBytes(profileName))' 0' (Array)(c.Data)' 0' profileName.Length); " is 121.
Long Statement,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4,The length of the statement  "            //Console.WriteLine("writing int " + n + " b=" + (sbyte)temp[0] + "'" + (sbyte)temp[1] + "'" + (sbyte)temp[2] + "'" + (sbyte)temp[3]); " is 134.
Long Statement,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadChunk,The length of the statement  "                PngHelperInternal.ReadInt4(inputStream); // skip - we dont call PngHelperInternal.skipBytes(inputStream' clen + 4) for risk of overflow  " is 135.
Long Statement,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,init,The length of the statement  "            datStreamDeflated = ZlibStreamFactory.createZlibOutputStream(datStream' this.CompLevel' this.CompressionStrategy' true); " is 120.
Long Statement,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,CopyChunks,The length of the statement  "            if (onlyAfterIdat && reader.CurrentChunkGroup < ChunksList.CHUNK_GROUP_6_END) throw new PngjException("tried to copy last chunks but reader has not ended"); " is 156.
Complex Conditional,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,FilterWriteStrategy,The conditional expression  "(imgInfo.Rows < 8 && imgInfo.Cols < 8) || imgInfo.Indexed                          || imgInfo.BitDepth < 8"  is complex.
Complex Conditional,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4,The conditional expression  "b1 == -1 || b2 == -1 || b3 == -1 || b4 == -1"  is complex.
Complex Conditional,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The conditional expression  "ihdr.Colormodel < 0 || ihdr.Colormodel > 6 || ihdr.Colormodel == 1                      || ihdr.Colormodel == 5"  is complex.
Complex Conditional,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The conditional expression  "ihdr.Bitspc != 1 && ihdr.Bitspc != 2 && ihdr.Bitspc != 4 && ihdr.Bitspc != 8                      && ihdr.Bitspc != 16"  is complex.
Complex Conditional,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowRaw,The conditional expression  "nrow < 0 || nrow > deinterlacer.getRows() || (nrow != 0 && nrow != deinterlacer.getCurrRowSubimg() + 1)"  is complex.
Complex Conditional,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowRaw,The conditional expression  "(rowNum == ImgInfo.Rows - 1 && !interlaced) || (interlaced && deinterlacer.isAtLastRow())"  is complex.
Complex Conditional,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,CopyChunks,The conditional expression  "ChunkHelper.maskMatch(copy_mask' ChunkCopyBehaviour.COPY_ALMOSTALL)                              && !(ChunkHelper.IsUnknown(chunk) || text || chunk.Id.Equals(ChunkHelper.hIST) || chunk.Id                                      .Equals(ChunkHelper.tIME))"  is complex.
Empty Catch Block,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadLastAndClose,The method has an empty catch block.
Empty Catch Block,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,Close,The method has an empty catch block.
Magic Number,Ar.Com.Hjg.Pngcs,ChunkReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ChunkReader.cs,ChunkReader,The following statement contains a magic number: mode == null || id.Length != 4 || clen < 0
Magic Number,Hjg.Pngcs.Chunks,ChunkHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkHelper.cs,IsSafeToCopy,The following statement contains a magic number: return (!Char.IsUpper(id[3]));
Magic Number,Hjg.Pngcs.Chunks,ChunkHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkHelper.cs,shovelInToOut,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,Hjg.Pngcs.Chunks,ChunkHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkHelper.cs,shovelInToOut,The following statement contains a magic number: (len = inx.Read(buffer' 0' 1024)) > 0
Magic Number,Hjg.Pngcs.Chunks,ChunkRaw,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkRaw.cs,ComputeCrc,The following statement contains a magic number: crcengine.Update(IdBytes' 0' 4);
Magic Number,Hjg.Pngcs.Chunks,ChunkRaw,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkRaw.cs,WriteChunk,The following statement contains a magic number: IdBytes.Length != 4
Magic Number,Hjg.Pngcs.Chunks,ChunkRaw,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkRaw.cs,ReadChunkData,The following statement contains a magic number: return Len + 4;
Magic Number,Hjg.Pngcs.Chunks,ChunksListForWrite,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunksListForWrite.cs,shouldWrite,The following statement contains a magic number: currentGroup % 2 == 0
Magic Number,Hjg.Pngcs.Chunks,PngChunkSingle,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSingle.cs,GetHashCode,The following statement contains a magic number: int prime = 31;
Magic Number,Hjg.Pngcs.Chunks,PngChunkOFFS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkOFFS.cs,CreateRawChunk,The following statement contains a magic number: ChunkRaw c = createEmptyChunk(9' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkOFFS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkOFFS.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes((int)posY' c.Data' 4);
Magic Number,Hjg.Pngcs.Chunks,PngChunkOFFS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkOFFS.cs,CreateRawChunk,The following statement contains a magic number: c.Data[8] = (byte)units;
Magic Number,Hjg.Pngcs.Chunks,PngChunkOFFS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkOFFS.cs,ParseFromRaw,The following statement contains a magic number: chunk.Len != 9
Magic Number,Hjg.Pngcs.Chunks,PngChunkOFFS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkOFFS.cs,ParseFromRaw,The following statement contains a magic number: posY = PngHelperInternal.ReadInt4fromBytes(chunk.Data' 4);
Magic Number,Hjg.Pngcs.Chunks,PngChunkOFFS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkOFFS.cs,ParseFromRaw,The following statement contains a magic number: units = PngHelperInternal.ReadInt1fromByte(chunk.Data' 8);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteByte(ba' (byte)Palette[n * 5 + i]);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,CreateRawChunk,The following statement contains a magic number: SampleDepth == 8
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,CreateRawChunk,The following statement contains a magic number: i < 4
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt2(ba' Palette[n * 5 + 4]);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt2(ba' Palette[n * 5 + 4]);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: t <= 0 || t > c.Data.Length - 2
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: t += 2;
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: int nentries = (c.Data.Length - t) / (SampleDepth == 8 ? 6 : 10);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: int nentries = (c.Data.Length - t) / (SampleDepth == 8 ? 6 : 10);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: int nentries = (c.Data.Length - t) / (SampleDepth == 8 ? 6 : 10);
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: Palette = new int[nentries * 5];
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: SampleDepth == 8
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,ParseFromRaw,The following statement contains a magic number: t += 2;
Magic Number,Hjg.Pngcs.Chunks,PngChunkSPLT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSPLT.cs,GetNentries,The following statement contains a magic number: return Palette.Length / 5;
Magic Number,Hjg.Pngcs.Chunks,PngChunkHIST,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkHIST.cs,CreateRawChunk,The following statement contains a magic number: c = createEmptyChunk(hist.Length * 2' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkHIST,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkHIST.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt2tobytes(hist[i]' c.Data' i * 2);
Magic Number,Hjg.Pngcs.Chunks,PngChunkHIST,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkHIST.cs,ParseFromRaw,The following statement contains a magic number: int nentries = c.Data.Length / 2;
Magic Number,Hjg.Pngcs.Chunks,PngChunkHIST,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkHIST.cs,ParseFromRaw,The following statement contains a magic number: hist[i] = PngHelperInternal.ReadInt2fromBytes(c.Data' i * 2);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: c = createEmptyChunk(32' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(whitey)' c.Data' 4);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(redx)' c.Data' 8);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(redy)' c.Data' 12);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(greenx)' c.Data' 16);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(greeny)' c.Data' 20);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(bluex)' c.Data' 24);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,CreateRawChunk,The following statement contains a magic number: PngHelperInternal.WriteInt4tobytes(PngHelperInternal.DoubleToInt100000(bluey)' c.Data' 28);
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: c.Len != 32
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: whitey = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 4));
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: redx = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 8));
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: redy = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 12));
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: greenx = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 16));
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: greeny = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 20));
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: bluex = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 24));
Magic Number,Hjg.Pngcs.Chunks,PngChunkCHRM,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkCHRM.cs,ParseFromRaw,The following statement contains a magic number: bluey = PngHelperInternal.IntToDouble100000(PngHelperInternal.ReadInt4fromBytes(c.Data' 28));
Magic Number,Hjg.Pngcs.Chunks,PngChunkSBIT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkSBIT.cs,GetLen,The following statement contains a magic number: int len = ImgInfo.Greyscale ? 1 : 3;
Magic Number,Hjg.Pngcs.Chunks,PngChunkBKGD,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkBKGD.cs,CreateRawChunk,The following statement contains a magic number: c = createEmptyChunk(2' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkGAMA,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkGAMA.cs,CreateRawChunk,The following statement contains a magic number: ChunkRaw c = createEmptyChunk(4' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkGAMA,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkGAMA.cs,CreateRawChunk,The following statement contains a magic number: int g = (int)(gamma * 100000 + 0.5d);
Magic Number,Hjg.Pngcs.Chunks,PngChunkGAMA,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkGAMA.cs,CreateRawChunk,The following statement contains a magic number: int g = (int)(gamma * 100000 + 0.5d);
Magic Number,Hjg.Pngcs.Chunks,PngChunkGAMA,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkGAMA.cs,ParseFromRaw,The following statement contains a magic number: chunk.Len != 4
Magic Number,Hjg.Pngcs.Chunks,PngChunkGAMA,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkGAMA.cs,ParseFromRaw,The following statement contains a magic number: gamma = ((double)g) / 100000.0d;
Magic Number,Hjg.Pngcs.Chunks,PngChunkICCP,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkICCP.cs,CreateRawChunk,The following statement contains a magic number: ChunkRaw c = createEmptyChunk(profileName.Length + compressedProfile.Length + 2' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkICCP,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkICCP.cs,CreateRawChunk,The following statement contains a magic number: System.Array.Copy((Array)(compressedProfile)' 0' (Array)(c.Data)' profileName.Length + 2' compressedProfile.Length);
Magic Number,Hjg.Pngcs.Chunks,PngChunkICCP,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkICCP.cs,ParseFromRaw,The following statement contains a magic number: int compdatasize = chunk.Data.Length - (pos0 + 2);
Magic Number,Hjg.Pngcs.Chunks,PngChunkICCP,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkICCP.cs,ParseFromRaw,The following statement contains a magic number: System.Array.Copy((Array)(chunk.Data)' pos0 + 2' (Array)(compressedProfile)' 0' compdatasize);
Magic Number,Hjg.Pngcs.Chunks,PngChunkIHDR,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkIHDR.cs,CreateRawChunk,The following statement contains a magic number: ChunkRaw c = new ChunkRaw(13' ChunkHelper.b_IHDR' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkIHDR,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkIHDR.cs,CreateRawChunk,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs.Chunks,PngChunkIHDR,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkIHDR.cs,CreateRawChunk,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs.Chunks,PngChunkIHDR,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkIHDR.cs,ParseFromRaw,The following statement contains a magic number: c.Len != 13
Magic Number,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,The following statement contains a magic number: int[] nullsIdx = new int[3];
Magic Number,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,The following statement contains a magic number: k += 2;
Magic Number,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,The following statement contains a magic number: nullsFound == 3
Magic Number,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,The following statement contains a magic number: nullsFound != 3
Magic Number,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,The following statement contains a magic number: translatedTag = ChunkHelper.ToStringUTF8(c.Data' nullsIdx[1] + 1' nullsIdx[2] - nullsIdx[1] - 1);
Magic Number,Hjg.Pngcs.Chunks,PngChunkITXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkITXT.cs,ParseFromRaw,The following statement contains a magic number: i = nullsIdx[2] + 1;
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,CreateRawChunk,The following statement contains a magic number: ChunkRaw c = createEmptyChunk(9' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,CreateRawChunk,The following statement contains a magic number: Hjg.Pngcs.PngHelperInternal.WriteInt4tobytes((int)PixelsxUnitY' c.Data' 4);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,CreateRawChunk,The following statement contains a magic number: c.Data[8] = (byte)Units;
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,ParseFromRaw,The following statement contains a magic number: chunk.Len != 9
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,ParseFromRaw,The following statement contains a magic number: PixelsxUnitY = Hjg.Pngcs.PngHelperInternal.ReadInt4fromBytes(chunk.Data' 4);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,ParseFromRaw,The following statement contains a magic number: Units = Hjg.Pngcs.PngHelperInternal.ReadInt1fromByte(chunk.Data' 8);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,GetAsDpi,The following statement contains a magic number: return ((double)PixelsxUnitX) * 0.0254d;
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,GetAsDpi2,The following statement contains a magic number: return new double[] { ((double)PixelsxUnitX) * 0.0254' ((double)PixelsxUnitY) * 0.0254 };
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,GetAsDpi2,The following statement contains a magic number: return new double[] { ((double)PixelsxUnitX) * 0.0254' ((double)PixelsxUnitY) * 0.0254 };
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,SetAsDpi,The following statement contains a magic number: PixelsxUnitX = (long)(dpi / 0.0254d + 0.5d);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,SetAsDpi,The following statement contains a magic number: PixelsxUnitX = (long)(dpi / 0.0254d + 0.5d);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,SetAsDpi2,The following statement contains a magic number: PixelsxUnitX = (long)(dpix / 0.0254 + 0.5);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,SetAsDpi2,The following statement contains a magic number: PixelsxUnitX = (long)(dpix / 0.0254 + 0.5);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,SetAsDpi2,The following statement contains a magic number: PixelsxUnitY = (long)(dpiy / 0.0254 + 0.5);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPHYS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPHYS.cs,SetAsDpi2,The following statement contains a magic number: PixelsxUnitY = (long)(dpiy / 0.0254 + 0.5);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,CreateRawChunk,The following statement contains a magic number: int len = 3 * nentries;
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,CreateRawChunk,The following statement contains a magic number: int[] rgb = new int[3];
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,CreateRawChunk,The following statement contains a magic number: c.Data[i++] = (byte)rgb[2];
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,ParseFromRaw,The following statement contains a magic number: SetNentries(chunk.Len / 3);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,SetNentries,The following statement contains a magic number: nentries < 1 || nentries > 256
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,SetEntry,The following statement contains a magic number: entries[n] = ((r << 16) | (g << 8) | b);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,SetEntry,The following statement contains a magic number: entries[n] = ((r << 16) | (g << 8) | b);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,GetEntryRgb,The following statement contains a magic number: rgb[offset ] = ((v & 0xff0000) >> 16);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,GetEntryRgb,The following statement contains a magic number: rgb[offset + 1] = ((v & 0xff00) >> 8);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,GetEntryRgb,The following statement contains a magic number: rgb[offset + 2] = (v & 0xff);
Magic Number,Hjg.Pngcs.Chunks,PngChunkPLTE,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkPLTE.cs,MinBitDepth,The following statement contains a magic number: nentries <= 2
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,CreateRawChunk,The following statement contains a magic number: ChunkRaw c = createEmptyChunk(7' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,CreateRawChunk,The following statement contains a magic number: c.Data[2] = (byte)mon;
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,CreateRawChunk,The following statement contains a magic number: c.Data[3] = (byte)day;
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,CreateRawChunk,The following statement contains a magic number: c.Data[4] = (byte)hour;
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,CreateRawChunk,The following statement contains a magic number: c.Data[5] = (byte)min;
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,CreateRawChunk,The following statement contains a magic number: c.Data[6] = (byte)sec;
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,ParseFromRaw,The following statement contains a magic number: chunk.Len != 7
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,ParseFromRaw,The following statement contains a magic number: mon = Hjg.Pngcs.PngHelperInternal.ReadInt1fromByte(chunk.Data' 2);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,ParseFromRaw,The following statement contains a magic number: day = Hjg.Pngcs.PngHelperInternal.ReadInt1fromByte(chunk.Data' 3);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,ParseFromRaw,The following statement contains a magic number: hour = Hjg.Pngcs.PngHelperInternal.ReadInt1fromByte(chunk.Data' 4);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,ParseFromRaw,The following statement contains a magic number: min = Hjg.Pngcs.PngHelperInternal.ReadInt1fromByte(chunk.Data' 5);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTIME,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTIME.cs,ParseFromRaw,The following statement contains a magic number: sec = Hjg.Pngcs.PngHelperInternal.ReadInt1fromByte(chunk.Data' 6);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTRNS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTRNS.cs,CreateRawChunk,The following statement contains a magic number: c = createEmptyChunk(2' true);
Magic Number,Hjg.Pngcs.Chunks,PngChunkTRNS,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkTRNS.cs,setIndexEntryAsTransparent,The following statement contains a magic number: paletteAlpha[i] = 255;
Magic Number,Hjg.Pngcs.Chunks,PngChunkZTXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkZTXT.cs,ParseFromRaw,The following statement contains a magic number: nullsep < 0 || nullsep > c.Data.Length - 2
Magic Number,Hjg.Pngcs.Chunks,PngChunkZTXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkZTXT.cs,ParseFromRaw,The following statement contains a magic number: byte[] uncomp = ChunkHelper.compressBytes(c.Data' nullsep + 2' c.Data.Length - nullsep - 2' false);
Magic Number,Hjg.Pngcs.Chunks,PngChunkZTXT,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\PngChunkZTXT.cs,ParseFromRaw,The following statement contains a magic number: byte[] uncomp = ChunkHelper.compressBytes(c.Data' nullsep + 2' c.Data.Length - nullsep - 2' false);
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,PngDeinterlacer,The following statement contains a magic number: packedValsPerPixel = 8 / imi.BitDepth;
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,setPass,The following statement contains a magic number: switch (pass) {                  case 1:                      dY = dX = 8;                      oX = oY = 0;                      break;                  case 2:                      dY = dX = 8;                      oX = 4;                      oY = 0;                      break;                  case 3:                      dX = 4;                      dY = 8;                      oX = 0;                      oY = 4;                      break;                  case 4:                      dX = dY = 4;                      oX = 2;                      oY = 0;                      break;                  case 5:                      dX = 2;                      dY = 4;                      oX = 0;                      oY = 2;                      break;                  case 6:                      dX = dY = 2;                      oX = 1;                      oY = 0;                      break;                  case 7:                      dX = 1;                      dY = 2;                      oX = 0;                      oY = 1;                      break;                  default:                      throw new PngjExceptionInternal("bad interlace pass" + pass);              }
Magic Number,Hjg.Pngcs,PngDeinterlacer,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngDeinterlacer.cs,isAtLastRow,The following statement contains a magic number: return pass == 7 && currRowSubimg == rows - 1;
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,FilterWriteStrategy,The following statement contains a magic number: (imgInfo.Rows < 8 && imgInfo.Cols < 8) || imgInfo.Indexed                          || imgInfo.BitDepth < 8
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,FilterWriteStrategy,The following statement contains a magic number: (imgInfo.Rows < 8 && imgInfo.Cols < 8) || imgInfo.Indexed                          || imgInfo.BitDepth < 8
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,FilterWriteStrategy,The following statement contains a magic number: (imgInfo.Rows < 8 && imgInfo.Cols < 8) || imgInfo.Indexed                          || imgInfo.BitDepth < 8
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,fillResultsForFilter,The following statement contains a magic number: alfa = rown == 0 ? 0.0 : 0.3;
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,fillResultsForFilter,The following statement contains a magic number: e += v > 0.00000001 ? v * Math.Log(v) : 0.0;
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,fillResultsForFilter,The following statement contains a magic number: i < 256
Magic Number,Hjg.Pngcs,FilterWriteStrategy,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\FilterWriteStrategy.cs,gimmeFilterType,The following statement contains a magic number: currentType = (FilterType)(((int)currentType + 1) % 5);
Magic Number,Hjg.Pngcs,PngCsUtils,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngCsUtils.cs,arraysEqual4,The following statement contains a magic number: return (ar1[0] == ar2[0]) &&                     (ar1[1] == ar2[1]) &&                     (ar1[2] == ar2[2]) &&                     (ar1[3] == ar2[3]);
Magic Number,Hjg.Pngcs,PngCsUtils,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngCsUtils.cs,arraysEqual4,The following statement contains a magic number: return (ar1[0] == ar2[0]) &&                     (ar1[1] == ar2[1]) &&                     (ar1[2] == ar2[2]) &&                     (ar1[3] == ar2[3]);
Magic Number,Hjg.Pngcs,PngCsUtils,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngCsUtils.cs,arraysEqual4,The following statement contains a magic number: return (ar1[0] == ar2[0]) &&                     (ar1[1] == ar2[1]) &&                     (ar1[2] == ar2[2]) &&                     (ar1[3] == ar2[3]);
Magic Number,Hjg.Pngcs,PngCsUtils,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngCsUtils.cs,arraysEqual4,The following statement contains a magic number: return (ar1[0] == ar2[0]) &&                     (ar1[1] == ar2[1]) &&                     (ar1[2] == ar2[2]) &&                     (ar1[3] == ar2[3]);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.Channels = (grayscale || palette) ? ((alpha) ? 2 : 1) : ((alpha) ? 4 : 3);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.Channels = (grayscale || palette) ? ((alpha) ? 2 : 1) : ((alpha) ? 4 : 3);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.Channels = (grayscale || palette) ? ((alpha) ? 2 : 1) : ((alpha) ? 4 : 3);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.Packed = bitdepth < 8;
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.BytesPixel = (BitspPixel + 7) / 8;
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.BytesPixel = (BitspPixel + 7) / 8;
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.BytesPerRow = (BitspPixel * cols + 7) / 8;
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: this.BytesPerRow = (BitspPixel * cols + 7) / 8;
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: switch (this.BitDepth) {                  case 1:                  case 2:                  case 4:                      if (!(this.Indexed || this.Greyscale))                          throw new PngjException("only indexed or grayscale can have bitdepth="                                  + this.BitDepth);                      break;                  case 8:                      break;                  case 16:                      if (this.Indexed)                          throw new PngjException("indexed can't have bitdepth=" + this.BitDepth);                      break;                  default:                      throw new PngjException("invalid bitdepth=" + this.BitDepth);              }
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: switch (this.BitDepth) {                  case 1:                  case 2:                  case 4:                      if (!(this.Indexed || this.Greyscale))                          throw new PngjException("only indexed or grayscale can have bitdepth="                                  + this.BitDepth);                      break;                  case 8:                      break;                  case 16:                      if (this.Indexed)                          throw new PngjException("indexed can't have bitdepth=" + this.BitDepth);                      break;                  default:                      throw new PngjException("invalid bitdepth=" + this.BitDepth);              }
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: switch (this.BitDepth) {                  case 1:                  case 2:                  case 4:                      if (!(this.Indexed || this.Greyscale))                          throw new PngjException("only indexed or grayscale can have bitdepth="                                  + this.BitDepth);                      break;                  case 8:                      break;                  case 16:                      if (this.Indexed)                          throw new PngjException("indexed can't have bitdepth=" + this.BitDepth);                      break;                  default:                      throw new PngjException("invalid bitdepth=" + this.BitDepth);              }
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,ImageInfo,The following statement contains a magic number: switch (this.BitDepth) {                  case 1:                  case 2:                  case 4:                      if (!(this.Indexed || this.Greyscale))                          throw new PngjException("only indexed or grayscale can have bitdepth="                                  + this.BitDepth);                      break;                  case 8:                      break;                  case 16:                      if (this.Indexed)                          throw new PngjException("indexed can't have bitdepth=" + this.BitDepth);                      break;                  default:                      throw new PngjException("invalid bitdepth=" + this.BitDepth);              }
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: int prime = 31;
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: result = prime * result + ((Alpha) ? 1231 : 1237);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: result = prime * result + ((Alpha) ? 1231 : 1237);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: result = prime * result + ((Greyscale) ? 1231 : 1237);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: result = prime * result + ((Greyscale) ? 1231 : 1237);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: result = prime * result + ((Indexed) ? 1231 : 1237);
Magic Number,Hjg.Pngcs,ImageInfo,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageInfo.cs,GetHashCode,The following statement contains a magic number: result = prime * result + ((Indexed) ? 1231 : 1237);
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,ImageLine,The following statement contains a magic number: maxSampleVal = bitDepth == 16 ? 0xFFFF : GetMaskForPackedFormatsLs(bitDepth);
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceInt,The following statement contains a magic number: bitDepth >= 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceInt,The following statement contains a magic number: int scalefactor = 8 - bitDepth;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceInt,The following statement contains a magic number: int offset0 = 8 * iminfo.SamplesPerRowPacked - bitDepth * iminfo.SamplesPerRow;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceInt,The following statement contains a magic number: offset0 != 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceInt,The following statement contains a magic number: offset == 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceInt,The following statement contains a magic number: bitDepth >= 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceInt,The following statement contains a magic number: int scalefactor = 8 - bitDepth;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceInt,The following statement contains a magic number: int offset0 = 8 - bitDepth;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceInt,The following statement contains a magic number: int offset = 8 - bitDepth;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceByte,The following statement contains a magic number: bitDepth >= 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceByte,The following statement contains a magic number: int scalefactor = 8 - bitDepth;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceByte,The following statement contains a magic number: int offset0 = 8 * iminfo.SamplesPerRowPacked - bitDepth * iminfo.SamplesPerRow;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceByte,The following statement contains a magic number: offset0 != 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,unpackInplaceByte,The following statement contains a magic number: offset == 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceByte,The following statement contains a magic number: bitDepth >= 8
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceByte,The following statement contains a magic number: byte scalefactor = (byte)(8 - bitDepth);
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceByte,The following statement contains a magic number: byte offset0 = (byte)(8 - bitDepth);
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,packInplaceByte,The following statement contains a magic number: int offset = 8 - bitDepth;
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,GetMaskForPackedFormats,The following statement contains a magic number: bitDepth == 4
Magic Number,Hjg.Pngcs,ImageLine,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLine.cs,GetMaskForPackedFormatsLs,The following statement contains a magic number: bitDepth == 4
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,Palette2rgb,The following statement contains a magic number: int channels = isalpha ? 4 : 3;
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,Palette2rgb,The following statement contains a magic number: int channels = isalpha ? 4 : 3;
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,Palette2rgb,The following statement contains a magic number: int alpha = index < nindexesWithAlpha ? trns.GetPalletteAlpha()[index] : 255;
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,Palette2rgb,The following statement contains a magic number: buf[c * channels + 3] = alpha;
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ToARGB8,The following statement contains a magic number: return ((int)(0xFF000000)) | ((r) << 16) | ((g) << 8) | (b);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ToARGB8,The following statement contains a magic number: return ((int)(0xFF000000)) | ((r) << 16) | ((g) << 8) | (b);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ToARGB8,The following statement contains a magic number: return ((a) << 24) | ((r) << 16) | ((g) << 8) | (b);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ToARGB8,The following statement contains a magic number: return ((a) << 24) | ((r) << 16) | ((g) << 8) | (b);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ToARGB8,The following statement contains a magic number: return ((a) << 24) | ((r) << 16) | ((g) << 8) | (b);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,FromARGB8,The following statement contains a magic number: buff[offset++] = ((val >> 16) & 0xFF);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,FromARGB8,The following statement contains a magic number: buff[offset++] = ((val >> 8) & 0xFF);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,FromARGB8,The following statement contains a magic number: buff[offset + 1] = ((val >> 24) & 0xFF);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,FromARGB8,The following statement contains a magic number: buff[offset++] = (byte)((val >> 16) & 0xFF);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,FromARGB8,The following statement contains a magic number: buff[offset++] = (byte)((val >> 8) & 0xFF);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,FromARGB8,The following statement contains a magic number: buff[offset + 1] = (byte)((val >> 24) & 0xFF);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ReadDouble,The following statement contains a magic number: return line.Scanline[pos] / (line.maxSampleVal + 0.9);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,WriteDouble,The following statement contains a magic number: line.Scanline[pos] = (int)(d * (line.maxSampleVal + 0.99));
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,Interpol,The following statement contains a magic number: return (int)(e * (1 - dy) + f * dy + 0.5);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_0_255,The following statement contains a magic number: return i > 255 ? 255 : (i < 0 ? 0 : i);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_0_255,The following statement contains a magic number: return i > 255 ? 255 : (i < 0 ? 0 : i);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampDouble,The following statement contains a magic number: return i < 0 ? 0 : (i >= 1 ? 0.999999 : i);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_0_65535,The following statement contains a magic number: return i > 65535 ? 65535 : (i < 0 ? 0 : i);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_0_65535,The following statement contains a magic number: return i > 65535 ? 65535 : (i < 0 ? 0 : i);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_128_127,The following statement contains a magic number: return x > 127 ? 127 : (x < -128 ? -128 : x);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_128_127,The following statement contains a magic number: return x > 127 ? 127 : (x < -128 ? -128 : x);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_128_127,The following statement contains a magic number: return x > 127 ? 127 : (x < -128 ? -128 : x);
Magic Number,Hjg.Pngcs,ImageLineHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ImageLineHelper.cs,ClampTo_128_127,The following statement contains a magic number: return x > 127 ? 127 : (x < -128 ? -128 : x);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,DoubleToInt100000,The following statement contains a magic number: return (int)(d * 100000.0 + 0.5);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,DoubleToInt100000,The following statement contains a magic number: return (int)(d * 100000.0 + 0.5);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,IntToDouble100000,The following statement contains a magic number: return i / 100000.0;
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt2,The following statement contains a magic number: byte[] temp = { (byte)((n >> 8) & 0xff)' (byte)(n & 0xff) };
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt2,The following statement contains a magic number: return (b1 << 8) + b2;
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4,The following statement contains a magic number: return (b1 << 24) + (b2 << 16) + (b3 << 8) + b4;
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4,The following statement contains a magic number: return (b1 << 24) + (b2 << 16) + (b3 << 8) + b4;
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4,The following statement contains a magic number: return (b1 << 24) + (b2 << 16) + (b3 << 8) + b4;
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt2fromBytes,The following statement contains a magic number: return ((b[offset] & 0xff) << 16) | ((b[offset + 1] & 0xff));
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4fromBytes,The following statement contains a magic number: return ((b[offset] & 0xff) << 24) | ((b[offset + 1] & 0xff) << 16)                      | ((b[offset + 2] & 0xff) << 8) | (b[offset + 3] & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4fromBytes,The following statement contains a magic number: return ((b[offset] & 0xff) << 24) | ((b[offset + 1] & 0xff) << 16)                      | ((b[offset + 2] & 0xff) << 8) | (b[offset + 3] & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4fromBytes,The following statement contains a magic number: return ((b[offset] & 0xff) << 24) | ((b[offset + 1] & 0xff) << 16)                      | ((b[offset + 2] & 0xff) << 8) | (b[offset + 3] & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4fromBytes,The following statement contains a magic number: return ((b[offset] & 0xff) << 24) | ((b[offset + 1] & 0xff) << 16)                      | ((b[offset + 2] & 0xff) << 8) | (b[offset + 3] & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,ReadInt4fromBytes,The following statement contains a magic number: return ((b[offset] & 0xff) << 24) | ((b[offset + 1] & 0xff) << 16)                      | ((b[offset + 2] & 0xff) << 8) | (b[offset + 3] & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt2tobytes,The following statement contains a magic number: b[offset] = (byte)((n >> 8) & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4tobytes,The following statement contains a magic number: b[offset] = (byte)((n >> 24) & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4tobytes,The following statement contains a magic number: b[offset + 1] = (byte)((n >> 16) & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4tobytes,The following statement contains a magic number: b[offset + 2] = (byte)((n >> 8) & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4tobytes,The following statement contains a magic number: b[offset + 2] = (byte)((n >> 8) & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4tobytes,The following statement contains a magic number: b[offset + 3] = (byte)(n & 0xff);
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,WriteInt4,The following statement contains a magic number: byte[] temp = new byte[4];
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,SkipBytes,The following statement contains a magic number: byte[] buf = new byte[8192 * 4];
Magic Number,Hjg.Pngcs,PngHelperInternal,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngHelperInternal.cs,SkipBytes,The following statement contains a magic number: byte[] buf = new byte[8192 * 4];
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,PngIDatChunkInputStream,The following statement contains a magic number: this.idLastChunk = new byte[4];
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,PngIDatChunkInputStream,The following statement contains a magic number: System.Array.Copy((Array)(Hjg.Pngcs.Chunks.ChunkHelper.b_IDAT)' 0' (Array)(idLastChunk)' 0' 4);
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,PngIDatChunkInputStream,The following statement contains a magic number: crcEngine.Update(idLastChunk' 0' 4);
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,PngIDatChunkInputStream,The following statement contains a magic number: foundChunksInfo.Add(new PngIDatChunkInputStream.IdatChunkInfo(lenLastChunk' offset_0 - 8));
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,EndChunkGoForNext,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,EndChunkGoForNext,The following statement contains a magic number: Hjg.Pngcs.PngHelperInternal.ReadBytes(inputStream' idLastChunk' 0' 4);
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,EndChunkGoForNext,The following statement contains a magic number: offset += 8;
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,EndChunkGoForNext,The following statement contains a magic number: foundChunksInfo.Add(new PngIDatChunkInputStream.IdatChunkInfo(lenLastChunk' (offset - 8)));
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,EndChunkGoForNext,The following statement contains a magic number: crcEngine.Update(idLastChunk' 0' 4);
Magic Number,Hjg.Pngcs,PngIDatChunkInputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngIDatChunkInputStream.cs,Read,The following statement contains a magic number: n = -2;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.MaxBytesMetadata = 5 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.MaxBytesMetadata = 5 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.MaxBytesMetadata = 5 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.MaxTotalBytesRead = 200 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.MaxTotalBytesRead = 200 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.MaxTotalBytesRead = 200 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.SkipChunkMaxSize = 2 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.SkipChunkMaxSize = 2 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: this.SkipChunkMaxSize = 2 * 1024 * 1024;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: byte[] pngid = new byte[8];
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: clen != 13
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: byte[] chunkid = new byte[4];
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: PngHelperInternal.ReadBytes(inputStream' chunkid' 0' 4);
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: bool grayscale = (ihdr.Colormodel == 0 || ihdr.Colormodel == 4);
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: ihdr.Colormodel < 0 || ihdr.Colormodel > 6 || ihdr.Colormodel == 1                      || ihdr.Colormodel == 5
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: ihdr.Colormodel < 0 || ihdr.Colormodel > 6 || ihdr.Colormodel == 1                      || ihdr.Colormodel == 5
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: ihdr.Bitspc != 1 && ihdr.Bitspc != 2 && ihdr.Bitspc != 4 && ihdr.Bitspc != 8                      && ihdr.Bitspc != 16
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: ihdr.Bitspc != 1 && ihdr.Bitspc != 2 && ihdr.Bitspc != 4 && ihdr.Bitspc != 8                      && ihdr.Bitspc != 16
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: ihdr.Bitspc != 1 && ihdr.Bitspc != 2 && ihdr.Bitspc != 4 && ihdr.Bitspc != 8                      && ihdr.Bitspc != 16
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,PngReader,The following statement contains a magic number: ihdr.Bitspc != 1 && ihdr.Bitspc != 2 && ihdr.Bitspc != 4 && ihdr.Bitspc != 8                      && ihdr.Bitspc != 16
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,UnfilterRowAverage,The following statement contains a magic number: rowb[i] = (byte)(rowbfilter[i] + (x + (rowbprev[i] & 0xFF)) / 2);
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadFirstChunks,The following statement contains a magic number: byte[] chunkid = new byte[4];
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadFirstChunks,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadFirstChunks,The following statement contains a magic number: PngHelperInternal.ReadBytes(inputStream' chunkid' 0' 4);
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadFirstChunks,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadFirstChunks,The following statement contains a magic number: chunksList.AppendReadChunk(new PngChunkIDAT(ImgInfo' clen' offset - 8)' CurrentChunkGroup);
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadLastChunks,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadLastChunks,The following statement contains a magic number: PngHelperInternal.ReadBytes(inputStream' chunkid' 0' 4);
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadLastChunks,The following statement contains a magic number: offset += 4;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadChunk,The following statement contains a magic number: pngChunk.Offset = offset - 8L;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadChunk,The following statement contains a magic number: offset += clen + 4L;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,decodeLastReadRowToInt,The following statement contains a magic number: ImgInfo.BitDepth <= 8
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,decodeLastReadRowToByte,The following statement contains a magic number: ImgInfo.BitDepth <= 8
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowRaw,The following statement contains a magic number: bytesRead = (ImgInfo.BitspPixel * deinterlacer.getPixelsToRead() + 7) / 8;
Magic Number,Hjg.Pngcs,PngReader,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngReader.cs,ReadRowRaw,The following statement contains a magic number: bytesRead = (ImgInfo.BitspPixel * deinterlacer.getPixelsToRead() + 7) / 8;
Magic Number,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,PngWriter,The following statement contains a magic number: this.CompLevel = 6;
Magic Number,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,encodeRowFromByte,The following statement contains a magic number: ImgInfo.BitDepth <= 8
Magic Number,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,encodeRowFromInt,The following statement contains a magic number: ImgInfo.BitDepth <= 8
Magic Number,Hjg.Pngcs,PngWriter,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\PngWriter.cs,FilterRowAverage,The following statement contains a magic number: rowbfilter[i] = (byte)(rowb[i] - ((rowbprev[i]) + (j > 0 ? rowb[j] : (byte)0)) / 2);
Magic Number,Hjg.Pngcs,ProgressiveOutputStream,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\ProgressiveOutputStream.cs,ProgressiveOutputStream,The following statement contains a magic number: size < 8
Magic Number,Hjg.Pngcs.Zlib,Adler32,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Zlib\Adler32.cs,GetValue,The following statement contains a magic number: return (b << 16) | a;
Magic Number,Hjg.Pngcs.Zlib,CRC32,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Zlib\CRC32.cs,Update,The following statement contains a magic number: hash = (hash >> 8) ^ table[buffer[j] ^ hash & 0xff];
Magic Number,Hjg.Pngcs.Zlib,CRC32,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Zlib\CRC32.cs,InitializeTable,The following statement contains a magic number: UInt32[] createTable = new UInt32[256];
Magic Number,Hjg.Pngcs.Zlib,CRC32,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Zlib\CRC32.cs,InitializeTable,The following statement contains a magic number: j < 8
Magic Number,Hjg.Pngcs.Zlib,CRC32,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Zlib\CRC32.cs,InitializeTable,The following statement contains a magic number: i < 256
Missing Default,Hjg.Pngcs.Chunks,ChunkHelper,D:\research\architectureSmells\repos\devedse_DeveMazeGenerator\Hjg.Pngcs\Chunks\ChunkHelper.cs,ShouldLoad,The following switch statement is missing a default case: switch (behav) {                  case ChunkLoadBehaviour.LOAD_CHUNK_ALWAYS:                      return true;                  case ChunkLoadBehaviour.LOAD_CHUNK_IF_SAFE:                      return kwown || IsSafeToCopy(id);                  case ChunkLoadBehaviour.LOAD_CHUNK_KNOWN:                      return kwown;                  case ChunkLoadBehaviour.LOAD_CHUNK_NEVER:                      return false;              }
