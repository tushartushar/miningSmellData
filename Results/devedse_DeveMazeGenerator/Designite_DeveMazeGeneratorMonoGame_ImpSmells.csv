Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The method has 191 lines of code.
Long Method,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The method has 200 lines of code.
Complex Method,DeveMazeGeneratorMonoGame,Camera,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Camera.cs,ProcessInput,Cyclomatic complexity of the method is 8
Complex Method,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,Cyclomatic complexity of the method is 35
Complex Method,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,Cyclomatic complexity of the method is 10
Long Parameter List,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,CubeModelForPlayer,The method has 5 parameters. Parameters: game' width' height' depth' texturePosInfo
Long Parameter List,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,CubeModel,The method has 6 parameters. Parameters: game' width' height' depth' texturePosInfo' imageSizeFactor
Long Parameter List,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,CubeModelInvertedForSkybox,The method has 5 parameters. Parameters: game' width' height' depth' texturePosInfo
Long Parameter List,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The method has 6 parameters. Parameters: posx' posy' vertices' indices' curVertice' curIndice
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[0] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.First()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[1] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Second()); " is 134.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[2] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Third()); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[3] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[4] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.First()); " is 133.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[5] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Second()); " is 130.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[6] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.Third()); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[7] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Fourth()); " is 125.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[8] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.First()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[9] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second()); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[10] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third()); " is 125.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[11] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth()); " is 122.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[12] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.First()); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[13] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Second()); " is 131.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[14] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.Third()); " is 121.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[15] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Fourth()); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[16] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.First()); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[17] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.Second()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[18] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Third()); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[19] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Fourth()); " is 133.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[20] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.First()); " is 127.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[21] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Second()); " is 132.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[22] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Third()); " is 123.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The length of the statement  "            vertices[23] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Fourth()); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,Draw,The length of the statement  "                game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionNormalTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12); " is 136.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[0] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.First()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[1] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Second()); " is 134.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[2] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Third()); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[3] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[4] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.First()); " is 133.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[5] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Second()); " is 130.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[6] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.Third()); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[7] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Fourth()); " is 125.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[8] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.First()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[9] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second()); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[10] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third()); " is 125.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[11] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth()); " is 122.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[12] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.First()); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[13] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Second()); " is 131.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[14] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.Third()); " is 121.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[15] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Fourth()); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[16] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.First()); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[17] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.Second()); " is 129.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[18] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Third()); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[19] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Fourth()); " is 133.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[20] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.First()); " is 127.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[21] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Second()); " is 132.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[22] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Third()); " is 123.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[23] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Fourth()); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,Draw,The length of the statement  "                game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionNormalTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12); " is 136.
Long Statement,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,Draw,The length of the statement  "                game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12); " is 130.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GenerateMaze,The length of the statement  "            vertexBuffer = new VertexBuffer(GraphicsDevice' VertexPositionNormalTexture.VertexDeclaration' vertices.Length' BufferUsage.WriteOnly); " is 135.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GeneratePath,The length of the statement  "            vertexBufferPath = new VertexBuffer(GraphicsDevice' VertexPositionNormalTexture.VertexDeclaration' vertices.Length' BufferUsage.WriteOnly); " is 139.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GeneratePath,The length of the statement  "            indexBufferPath = new IndexBuffer(GraphicsDevice' IndexElementSize.ThirtyTwoBits' indices.Length' BufferUsage.WriteOnly); " is 121.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The length of the statement  "                camera.cameraPosition = new Vector3(curChaseCameraPoint.CameraPoint.X * 10.0f' 7.5f' curChaseCameraPoint.CameraPoint.Y * 10.0f); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The length of the statement  "                var newRot = (float)Math.Atan2(playerPos.Y - curChaseCameraPoint.CameraPoint.Y' playerPos.X - curChaseCameraPoint.CameraPoint.X) * -1f - (MathHelper.Pi / 2.0f); " is 160.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The length of the statement  "                var newRot = (float)Math.Atan2(posposnext.Y - posposbefore.Y' posposnext.X - posposbefore.X) * -1f - (MathHelper.Pi / 2.0f); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            CubeModelInvertedForSkybox skybox = new CubeModelInvertedForSkybox(this' skyboxSize' skyboxSize' skyboxSize' TexturePosInfoGenerator.FullImage); " is 144.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            Matrix skyboxMatrix = Matrix.CreateTranslation(camera.cameraPosition) * Matrix.CreateTranslation(new Vector3(-skyboxSize / 2' -skyboxSize / 2' -skyboxSize / 2)); " is 161.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            //WallModel wallmodel = new WallModel(this' curmazeheight * 10' curmazeheight * 10' TexturePosInfoGenerator.FullImageWithSize(15)' Matrix.Identity); " is 148.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            //wallmodel.Draw(Matrix.CreateRotationX(-MathHelper.PiOver2) * Matrix.CreateTranslation(0' 0' curmazeheight * 10)' effect); " is 123.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            CubeModel ground = new CubeModel(this' curMazeWidth - 2' 0.1f' curMazeHeight - 2' TexturePosInfoGenerator.FullImage' 2f / 3f); " is 126.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "                CubeModel roof = new CubeModel(this' curMazeWidth - 2' 0.1f' curMazeHeight - 2' TexturePosInfoGenerator.FullImage' 2f / 3f); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            finish.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(curMazeWidth - 4' 0' curMazeHeight - 4) * growingScaleMatrix' effect); " is 158.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "                var newHeadTurn = (float)Math.Atan2(posposnextHeadTurn.Y - posposHeadTurn.Y' posposnextHeadTurn.X - posposHeadTurn.X) * -1f + (MathHelper.Pi / 2.0f); " is 149.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "                    GraphicsDevice.DrawIndexedPrimitives(PrimitiveType.TriangleList' 0' 0' vertexBuffer.VertexCount' 0' indexBuffer.IndexCount / 3); " is 128.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "                    GraphicsDevice.DrawIndexedPrimitives(PrimitiveType.TriangleList' 0' 0' vertexBufferPath.VertexCount' 0' indexBufferPath.IndexCount / 3); " is 136.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "                possibleCubeje.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(curChaseCameraPoint.CameraPoint.X - 1' 0' curChaseCameraPoint.CameraPoint.Y - 1) * growingScaleMatrix' effect); " is 207.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "                        losPointCube.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(losPoint.X - 1' 0' losPoint.Y - 1) * growingScaleMatrix' effect); " is 159.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            //    possibleCubeje.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(poss.X - 1' 0' poss.Y - 1) * growingScaleMatrix' effect); " is 159.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            //    possibleCubeje.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(pathnode.X - 1' 0' pathnode.Y - 1) * growingScaleMatrix' effect); " is 167.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            String stringToDraw = "Size: " + curMazeWidth + "' Walls: " + wallsCount + "' Path length: " + pathCount + "' Speed: " + speedFactor + "' Current: " + (int)Math.Max((numbertje - 1f) * speedFactor' 0) + "' Algorithm: " + lastAlgorithm; " is 234.
Long Statement,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The length of the statement  "            spriteBatch.Draw(ContentDing.semiTransparantTexture' new Rectangle(5' 5' (int)meassured.X + 10' (int)meassured.Y + 10)' Color.White); " is 133.
Long Statement,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The length of the statement  "            armLeftTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9) / 8 - 1.0f / 8.0f); " is 124.
Long Statement,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The length of the statement  "            Matrix armRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5 - Math.PI) / 2); " is 127.
Long Statement,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The length of the statement  "            armRightTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9 - Math.PI) / 8 + 1.0f / 8.0f); " is 135.
Long Statement,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The length of the statement  "            Matrix legRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7 - Math.PI) / 1); " is 127.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 0] = new VertexPositionNormalTexture(new Vector3(posx - amount' height' posy - amount)' new Vector3(0' 0' 1)' texturePosInfo.front.First()); " is 162.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 1] = new VertexPositionNormalTexture(new Vector3(posx + amount' height' posy - amount)' new Vector3(0' 0' 1)' texturePosInfo.front.Second()); " is 163.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 2] = new VertexPositionNormalTexture(new Vector3(posx - amount' height' posy + amount)' new Vector3(0' 0' 1)' texturePosInfo.front.Third()); " is 162.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 3] = new VertexPositionNormalTexture(new Vector3(posx + amount' height' posy + amount)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth()); " is 163.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            //vertices[curVertice + 4] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' height' mazeWall.ystart)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second()); " is 169.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            //vertices[curVertice + 5] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' 0' mazeWall.ystart)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth()); " is 164.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            //vertices[curVertice + 6] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' height' mazeWall.yend)' new Vector3(0' 0' -1)' texturePosInfo.rear.First()); " is 164.
Long Statement,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The length of the statement  "            //vertices[curVertice + 7] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' 0' mazeWall.yend)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third()); " is 159.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 0] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' height' mazeWall.ystart)' new Vector3(0' 0' 1)' texturePosInfo.front.First()); " is 166.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 1] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' height' mazeWall.yend)' new Vector3(0' 0' 1)' texturePosInfo.front.Second()); " is 163.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 2] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' 0' mazeWall.ystart)' new Vector3(0' 0' 1)' texturePosInfo.front.Third()); " is 161.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 3] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' 0' mazeWall.yend)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth()); " is 158.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 4] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' height' mazeWall.ystart)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second()); " is 167.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 5] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' 0' mazeWall.ystart)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth()); " is 162.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 6] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' height' mazeWall.yend)' new Vector3(0' 0' -1)' texturePosInfo.rear.First()); " is 162.
Long Statement,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The length of the statement  "            vertices[curVertice + 7] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' 0' mazeWall.yend)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third()); " is 157.
Long Statement,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The length of the statement  "                else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y)) " is 121.
Long Statement,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The length of the statement  "                else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2)) " is 121.
Long Statement,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,HasLos,The length of the statement  "            if (reeksje.Any(x => x.X < 0 || x.Y < 0 || x.X > innerMap.Width || x.Y > innerMap.Height || innerMap[x.X' x.Y] == false)) " is 121.
Complex Conditional,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The conditional expression  "x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y)"  is complex.
Complex Conditional,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The conditional expression  "x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y)"  is complex.
Complex Conditional,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The conditional expression  "y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2)"  is complex.
Complex Conditional,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The conditional expression  "y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2)"  is complex.
Complex Conditional,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,HasLos,The conditional expression  "reeksje.Any(x => x.X < 0 || x.Y < 0 || x.X > innerMap.Width || x.Y > innerMap.Height || innerMap[x.X' x.Y] == false)"  is complex.
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[2] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[3] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[4] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[5] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[6] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[7] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[8] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[9] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[10] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[11] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[12] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[13] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[14] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[15] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[16] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[17] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[18] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[19] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[20] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[21] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[22] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: vertices[23] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,Draw,The following statement contains a magic number: foreach (EffectPass pass in effect.CurrentTechnique.Passes)              {                  pass.Apply();                  game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionNormalTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12);              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelForPlayer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelForPlayer.cs,Draw,The following statement contains a magic number: foreach (EffectPass pass in effect.CurrentTechnique.Passes)              {                  pass.Apply();                  game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionNormalTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12);              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[2] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[3] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[4] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[5] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[6] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(1' 0' 0)' texturePosInfo.right.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[7] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(1' 0' 0)' texturePosInfo.right.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[8] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[9] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[10] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[11] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[12] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[13] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[14] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(-1' 0' 0)' texturePosInfo.left.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[15] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(-1' 0' 0)' texturePosInfo.left.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[16] = new VertexPositionNormalTexture(new Vector3(0' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[17] = new VertexPositionNormalTexture(new Vector3(width' height' 0)' new Vector3(0' 1' 0)' texturePosInfo.top.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[18] = new VertexPositionNormalTexture(new Vector3(0' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[19] = new VertexPositionNormalTexture(new Vector3(width' height' depth)' new Vector3(0' 1' 0)' texturePosInfo.top.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[20] = new VertexPositionNormalTexture(new Vector3(0' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[21] = new VertexPositionNormalTexture(new Vector3(width' 0' depth)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[22] = new VertexPositionNormalTexture(new Vector3(0' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[23] = new VertexPositionNormalTexture(new Vector3(width' 0' 0)' new Vector3(0' -1' 0)' texturePosInfo.bottom.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 0 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 2 + i;                  indices[cur + 3] = 1 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 2 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,Draw,The following statement contains a magic number: foreach (EffectPass pass in effect.CurrentTechnique.Passes)              {                  pass.Apply();                  game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionNormalTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12);              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModel.cs,Draw,The following statement contains a magic number: foreach (EffectPass pass in effect.CurrentTechnique.Passes)              {                  pass.Apply();                  game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionNormalTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12);              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[2] = new VertexPositionTexture(new Vector3(0' 0' depth)' texturePosInfo.front.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[3] = new VertexPositionTexture(new Vector3(width' 0' depth)' texturePosInfo.front.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[4] = new VertexPositionTexture(new Vector3(width' height' depth)' texturePosInfo.right.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[5] = new VertexPositionTexture(new Vector3(width' height' 0)' texturePosInfo.right.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[6] = new VertexPositionTexture(new Vector3(width' 0' depth)' texturePosInfo.right.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[7] = new VertexPositionTexture(new Vector3(width' 0' 0)' texturePosInfo.right.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[8] = new VertexPositionTexture(new Vector3(width' height' 0)' texturePosInfo.rear.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[9] = new VertexPositionTexture(new Vector3(0' height' 0)' texturePosInfo.rear.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[10] = new VertexPositionTexture(new Vector3(width' 0' 0)' texturePosInfo.rear.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[11] = new VertexPositionTexture(new Vector3(0' 0' 0)' texturePosInfo.rear.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[12] = new VertexPositionTexture(new Vector3(0' height' 0)' texturePosInfo.left.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[13] = new VertexPositionTexture(new Vector3(0' height' depth)' texturePosInfo.left.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[14] = new VertexPositionTexture(new Vector3(0' 0' 0)' texturePosInfo.left.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[15] = new VertexPositionTexture(new Vector3(0' 0' depth)' texturePosInfo.left.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[16] = new VertexPositionTexture(new Vector3(0' height' 0)' texturePosInfo.top.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[17] = new VertexPositionTexture(new Vector3(width' height' 0)' texturePosInfo.top.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[18] = new VertexPositionTexture(new Vector3(0' height' depth)' texturePosInfo.top.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[19] = new VertexPositionTexture(new Vector3(width' height' depth)' texturePosInfo.top.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[20] = new VertexPositionTexture(new Vector3(0' 0' depth)' texturePosInfo.bottom.First());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[21] = new VertexPositionTexture(new Vector3(width' 0' depth)' texturePosInfo.bottom.Second());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[22] = new VertexPositionTexture(new Vector3(0' 0' 0)' texturePosInfo.bottom.Third());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: vertices[23] = new VertexPositionTexture(new Vector3(width' 0' 0)' texturePosInfo.bottom.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < 24; i += 4)              {                  indices[cur + 0] = 2 + i;                  indices[cur + 1] = 1 + i;                  indices[cur + 2] = 0 + i;                  indices[cur + 3] = 2 + i;                  indices[cur + 4] = 3 + i;                  indices[cur + 5] = 1 + i;                  cur += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,Draw,The following statement contains a magic number: foreach (EffectPass pass in effect.CurrentTechnique.Passes)              {                  pass.Apply();                  game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12);              }
Magic Number,DeveMazeGeneratorMonoGame,CubeModelInvertedForSkybox,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\CubeModelInvertedForSkybox.cs,Draw,The following statement contains a magic number: foreach (EffectPass pass in effect.CurrentTechnique.Passes)              {                  pass.Apply();                  game.GraphicsDevice.DrawUserIndexedPrimitives<VertexPositionTexture>(PrimitiveType.TriangleList' vertices' 0' 24' indices' 0' 12);              }
Magic Number,DeveMazeGeneratorMonoGame,Camera,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Camera.cs,Camera,The following statement contains a magic number: Mouse.SetPosition(game.GraphicsDevice.Viewport.Width / 2' game.GraphicsDevice.Viewport.Height / 2);
Magic Number,DeveMazeGeneratorMonoGame,Camera,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Camera.cs,Camera,The following statement contains a magic number: Mouse.SetPosition(game.GraphicsDevice.Viewport.Width / 2' game.GraphicsDevice.Viewport.Height / 2);
Magic Number,DeveMazeGeneratorMonoGame,Camera,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Camera.cs,ProcessInput,The following statement contains a magic number: if (currentMouseState != previousMouseState)              {                  float xDifference = currentMouseState.X - previousMouseState.X;                  float yDifference = currentMouseState.Y - previousMouseState.Y;                  leftrightRot -= rotationSpeed * xDifference * amount;                  updownRot -= rotationSpeed * yDifference * amount;                  Mouse.SetPosition(device.Viewport.Width / 2' device.Viewport.Height / 2);                  UpdateViewMatrix();              }
Magic Number,DeveMazeGeneratorMonoGame,Camera,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Camera.cs,ProcessInput,The following statement contains a magic number: if (currentMouseState != previousMouseState)              {                  float xDifference = currentMouseState.X - previousMouseState.X;                  float yDifference = currentMouseState.Y - previousMouseState.Y;                  leftrightRot -= rotationSpeed * xDifference * amount;                  updownRot -= rotationSpeed * yDifference * amount;                  Mouse.SetPosition(device.Viewport.Width / 2' device.Viewport.Height / 2);                  UpdateViewMatrix();              }
Magic Number,DeveMazeGeneratorMonoGame,ContentDing,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\ContentDing.cs,GoLoadContent,The following statement contains a magic number: semiTransparantTexture.SetData(new[] { new Color(0' 0' 0' 128) });
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Game1,The following statement contains a magic number: if (false)              {                  graphics.PreferredBackBufferWidth = 1920;                  graphics.PreferredBackBufferHeight = 1080;              }              else              {                  graphics.PreferredBackBufferWidth = GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Width;                  graphics.PreferredBackBufferHeight = GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Height;                  graphics.IsFullScreen = true;              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Game1,The following statement contains a magic number: if (false)              {                  graphics.PreferredBackBufferWidth = 1920;                  graphics.PreferredBackBufferHeight = 1080;              }              else              {                  graphics.PreferredBackBufferWidth = GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Width;                  graphics.PreferredBackBufferHeight = GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Height;                  graphics.IsFullScreen = true;              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GenerateMaze,The following statement contains a magic number: int randomnumber = curMazeWidth < 2048 ? random.Next(3) : random.Next(2);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GenerateMaze,The following statement contains a magic number: int randomnumber = curMazeWidth < 2048 ? random.Next(3) : random.Next(2);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GenerateMaze,The following statement contains a magic number: int randomnumber = curMazeWidth < 2048 ? random.Next(3) : random.Next(2);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GenerateMaze,The following statement contains a magic number: VertexPositionNormalTexture[] vertices = new VertexPositionNormalTexture[walls.Count * 8];
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GenerateMaze,The following statement contains a magic number: int[] indices = new int[walls.Count * 12];
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GeneratePath,The following statement contains a magic number: VertexPositionNormalTexture[] vertices = new VertexPositionNormalTexture[path.Count * 4];
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,GeneratePath,The following statement contains a magic number: int[] indices = new int[path.Count * 6];
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.OemPlus) || InputDing.KeyDownUp(Keys.Add))              {                  speedFactor *= 2;                  numbertje = (numbertje - 1f) / 2f + 1f;                    if (speedFactor <= 0)                  {                      numbertje = 0;                      speedFactor = 1;                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.OemMinus))              {                  if (speedFactor >= 2)                  {                      speedFactor /= 2;                      numbertje = (numbertje - 1f) * 2f + 1f;                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.OemMinus))              {                  if (speedFactor >= 2)                  {                      speedFactor /= 2;                      numbertje = (numbertje - 1f) * 2f + 1f;                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.Up))              {                  numbertje = 0;                  curMazeWidth *= 2;                  curMazeHeight *= 2;                  GenerateMaze();              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.Up))              {                  numbertje = 0;                  curMazeWidth *= 2;                  curMazeHeight *= 2;                  GenerateMaze();              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.Down))              {                  if (curMazeWidth > 4 && curMazeHeight > 4)                  {                      numbertje = 0;                      curMazeWidth /= 2;                      curMazeHeight /= 2;                      if (curMazeWidth < 1)                          curMazeWidth = 1;                      if (curMazeHeight < 1)                          curMazeHeight = 1;                      GenerateMaze();                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.Down))              {                  if (curMazeWidth > 4 && curMazeHeight > 4)                  {                      numbertje = 0;                      curMazeWidth /= 2;                      curMazeHeight /= 2;                      if (curMazeWidth < 1)                          curMazeWidth = 1;                      if (curMazeHeight < 1)                          curMazeHeight = 1;                      GenerateMaze();                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.Down))              {                  if (curMazeWidth > 4 && curMazeHeight > 4)                  {                      numbertje = 0;                      curMazeWidth /= 2;                      curMazeHeight /= 2;                      if (curMazeWidth < 1)                          curMazeWidth = 1;                      if (curMazeHeight < 1)                          curMazeHeight = 1;                      GenerateMaze();                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Update,The following statement contains a magic number: if (InputDing.KeyDownUp(Keys.Down))              {                  if (curMazeWidth > 4 && curMazeHeight > 4)                  {                      numbertje = 0;                      curMazeWidth /= 2;                      curMazeHeight /= 2;                      if (curMazeWidth < 1)                          curMazeWidth = 1;                      if (curMazeHeight < 1)                          curMazeHeight = 1;                      GenerateMaze();                  }              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: int skyboxSize = 1000000;
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: Matrix skyboxMatrix = Matrix.CreateTranslation(camera.cameraPosition) * Matrix.CreateTranslation(new Vector3(-skyboxSize / 2' -skyboxSize / 2' -skyboxSize / 2));
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: Matrix skyboxMatrix = Matrix.CreateTranslation(camera.cameraPosition) * Matrix.CreateTranslation(new Vector3(-skyboxSize / 2' -skyboxSize / 2' -skyboxSize / 2));
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: Matrix skyboxMatrix = Matrix.CreateTranslation(camera.cameraPosition) * Matrix.CreateTranslation(new Vector3(-skyboxSize / 2' -skyboxSize / 2' -skyboxSize / 2));
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: int mazeScale = 10;
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: CubeModel ground = new CubeModel(this' curMazeWidth - 2' 0.1f' curMazeHeight - 2' TexturePosInfoGenerator.FullImage' 2f / 3f);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: CubeModel ground = new CubeModel(this' curMazeWidth - 2' 0.1f' curMazeHeight - 2' TexturePosInfoGenerator.FullImage' 2f / 3f);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (drawRoof)              {                  effect.Texture = ContentDing.win98RoofTexture;                    CubeModel roof = new CubeModel(this' curMazeWidth - 2' 0.1f' curMazeHeight - 2' TexturePosInfoGenerator.FullImage' 2f / 3f);                  roof.Draw(Matrix.CreateTranslation(0' 4f / 3f' 0) * scaleMatrix' effect);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (drawRoof)              {                  effect.Texture = ContentDing.win98RoofTexture;                    CubeModel roof = new CubeModel(this' curMazeWidth - 2' 0.1f' curMazeHeight - 2' TexturePosInfoGenerator.FullImage' 2f / 3f);                  roof.Draw(Matrix.CreateTranslation(0' 4f / 3f' 0) * scaleMatrix' effect);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: finish.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(curMazeWidth - 4' 0' curMazeHeight - 4) * growingScaleMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: finish.Draw(Matrix.CreateTranslation(0.625f' 0.375f' 0.625f) * Matrix.CreateTranslation(curMazeWidth - 4' 0' curMazeHeight - 4) * growingScaleMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (!followCamera)              {                    var vvv = GetPosAtThisNumer(numbertje);                    var vvvv2 = new Vector3(vvv.X * 10f' 0' vvv.Y * 10f);                    //var translationmatrix = Matrix.CreateTranslation(vvvv2);                    //effect.Texture = ContentDing.redTexture;                  //targetCamera.Draw(translationmatrix' effect);                      var pospos = GetPosAtThisNumer(numbertje - (1f / (float)speedFactor));                  var posposnext = GetPosAtThisNumer(Math.Max(numbertje + (1f / (float)speedFactor)' 1.1f));                    var newRot = (float)Math.Atan2(posposnext.Y - pospos.Y' posposnext.X - pospos.X) * -1f + (MathHelper.Pi / 2.0f);                      Matrix totMatrix = MatrixExtensions.CreateRotationY(new Vector3(4' 0' 2)' newRot);                  totMatrix *= Matrix.CreateTranslation(-4' 12' -2); //Put him in the middle of a tile                  totMatrix *= Matrix.CreateScale(1f / 3f);                  totMatrix *= Matrix.CreateTranslation(vvvv2);                      var posposHeadTurn = GetPosAtThisNumer(numbertje);                  var posposnextHeadTurn = GetPosAtThisNumer(Math.Max(numbertje + (2f / (float)speedFactor)' 1.1f));                  var newHeadTurn = (float)Math.Atan2(posposnextHeadTurn.Y - posposHeadTurn.Y' posposnextHeadTurn.X - posposHeadTurn.X) * -1f + (MathHelper.Pi / 2.0f);                      effect.Texture = ContentDing.minecraftTexture;                      playerModel.Draw(totMatrix' effect' numbertje / 2.0f * speedFactor' newHeadTurn - newRot);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (!followCamera)              {                    var vvv = GetPosAtThisNumer(numbertje);                    var vvvv2 = new Vector3(vvv.X * 10f' 0' vvv.Y * 10f);                    //var translationmatrix = Matrix.CreateTranslation(vvvv2);                    //effect.Texture = ContentDing.redTexture;                  //targetCamera.Draw(translationmatrix' effect);                      var pospos = GetPosAtThisNumer(numbertje - (1f / (float)speedFactor));                  var posposnext = GetPosAtThisNumer(Math.Max(numbertje + (1f / (float)speedFactor)' 1.1f));                    var newRot = (float)Math.Atan2(posposnext.Y - pospos.Y' posposnext.X - pospos.X) * -1f + (MathHelper.Pi / 2.0f);                      Matrix totMatrix = MatrixExtensions.CreateRotationY(new Vector3(4' 0' 2)' newRot);                  totMatrix *= Matrix.CreateTranslation(-4' 12' -2); //Put him in the middle of a tile                  totMatrix *= Matrix.CreateScale(1f / 3f);                  totMatrix *= Matrix.CreateTranslation(vvvv2);                      var posposHeadTurn = GetPosAtThisNumer(numbertje);                  var posposnextHeadTurn = GetPosAtThisNumer(Math.Max(numbertje + (2f / (float)speedFactor)' 1.1f));                  var newHeadTurn = (float)Math.Atan2(posposnextHeadTurn.Y - posposHeadTurn.Y' posposnextHeadTurn.X - posposHeadTurn.X) * -1f + (MathHelper.Pi / 2.0f);                      effect.Texture = ContentDing.minecraftTexture;                      playerModel.Draw(totMatrix' effect' numbertje / 2.0f * speedFactor' newHeadTurn - newRot);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (!followCamera)              {                    var vvv = GetPosAtThisNumer(numbertje);                    var vvvv2 = new Vector3(vvv.X * 10f' 0' vvv.Y * 10f);                    //var translationmatrix = Matrix.CreateTranslation(vvvv2);                    //effect.Texture = ContentDing.redTexture;                  //targetCamera.Draw(translationmatrix' effect);                      var pospos = GetPosAtThisNumer(numbertje - (1f / (float)speedFactor));                  var posposnext = GetPosAtThisNumer(Math.Max(numbertje + (1f / (float)speedFactor)' 1.1f));                    var newRot = (float)Math.Atan2(posposnext.Y - pospos.Y' posposnext.X - pospos.X) * -1f + (MathHelper.Pi / 2.0f);                      Matrix totMatrix = MatrixExtensions.CreateRotationY(new Vector3(4' 0' 2)' newRot);                  totMatrix *= Matrix.CreateTranslation(-4' 12' -2); //Put him in the middle of a tile                  totMatrix *= Matrix.CreateScale(1f / 3f);                  totMatrix *= Matrix.CreateTranslation(vvvv2);                      var posposHeadTurn = GetPosAtThisNumer(numbertje);                  var posposnextHeadTurn = GetPosAtThisNumer(Math.Max(numbertje + (2f / (float)speedFactor)' 1.1f));                  var newHeadTurn = (float)Math.Atan2(posposnextHeadTurn.Y - posposHeadTurn.Y' posposnextHeadTurn.X - posposHeadTurn.X) * -1f + (MathHelper.Pi / 2.0f);                      effect.Texture = ContentDing.minecraftTexture;                      playerModel.Draw(totMatrix' effect' numbertje / 2.0f * speedFactor' newHeadTurn - newRot);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (!followCamera)              {                    var vvv = GetPosAtThisNumer(numbertje);                    var vvvv2 = new Vector3(vvv.X * 10f' 0' vvv.Y * 10f);                    //var translationmatrix = Matrix.CreateTranslation(vvvv2);                    //effect.Texture = ContentDing.redTexture;                  //targetCamera.Draw(translationmatrix' effect);                      var pospos = GetPosAtThisNumer(numbertje - (1f / (float)speedFactor));                  var posposnext = GetPosAtThisNumer(Math.Max(numbertje + (1f / (float)speedFactor)' 1.1f));                    var newRot = (float)Math.Atan2(posposnext.Y - pospos.Y' posposnext.X - pospos.X) * -1f + (MathHelper.Pi / 2.0f);                      Matrix totMatrix = MatrixExtensions.CreateRotationY(new Vector3(4' 0' 2)' newRot);                  totMatrix *= Matrix.CreateTranslation(-4' 12' -2); //Put him in the middle of a tile                  totMatrix *= Matrix.CreateScale(1f / 3f);                  totMatrix *= Matrix.CreateTranslation(vvvv2);                      var posposHeadTurn = GetPosAtThisNumer(numbertje);                  var posposnextHeadTurn = GetPosAtThisNumer(Math.Max(numbertje + (2f / (float)speedFactor)' 1.1f));                  var newHeadTurn = (float)Math.Atan2(posposnextHeadTurn.Y - posposHeadTurn.Y' posposnextHeadTurn.X - posposHeadTurn.X) * -1f + (MathHelper.Pi / 2.0f);                      effect.Texture = ContentDing.minecraftTexture;                      playerModel.Draw(totMatrix' effect' numbertje / 2.0f * speedFactor' newHeadTurn - newRot);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (!followCamera)              {                    var vvv = GetPosAtThisNumer(numbertje);                    var vvvv2 = new Vector3(vvv.X * 10f' 0' vvv.Y * 10f);                    //var translationmatrix = Matrix.CreateTranslation(vvvv2);                    //effect.Texture = ContentDing.redTexture;                  //targetCamera.Draw(translationmatrix' effect);                      var pospos = GetPosAtThisNumer(numbertje - (1f / (float)speedFactor));                  var posposnext = GetPosAtThisNumer(Math.Max(numbertje + (1f / (float)speedFactor)' 1.1f));                    var newRot = (float)Math.Atan2(posposnext.Y - pospos.Y' posposnext.X - pospos.X) * -1f + (MathHelper.Pi / 2.0f);                      Matrix totMatrix = MatrixExtensions.CreateRotationY(new Vector3(4' 0' 2)' newRot);                  totMatrix *= Matrix.CreateTranslation(-4' 12' -2); //Put him in the middle of a tile                  totMatrix *= Matrix.CreateScale(1f / 3f);                  totMatrix *= Matrix.CreateTranslation(vvvv2);                      var posposHeadTurn = GetPosAtThisNumer(numbertje);                  var posposnextHeadTurn = GetPosAtThisNumer(Math.Max(numbertje + (2f / (float)speedFactor)' 1.1f));                  var newHeadTurn = (float)Math.Atan2(posposnextHeadTurn.Y - posposHeadTurn.Y' posposnextHeadTurn.X - posposHeadTurn.X) * -1f + (MathHelper.Pi / 2.0f);                      effect.Texture = ContentDing.minecraftTexture;                      playerModel.Draw(totMatrix' effect' numbertje / 2.0f * speedFactor' newHeadTurn - newRot);              }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (vertexBuffer != null && indexBuffer != null)              {                  GraphicsDevice.Indices = indexBuffer;                  GraphicsDevice.SetVertexBuffer(vertexBuffer);                    effect.Texture = ContentDing.win98WallTexture;                    foreach (EffectPass pass in effect.CurrentTechnique.Passes)                  {                      pass.Apply();                      GraphicsDevice.DrawIndexedPrimitives(PrimitiveType.TriangleList' 0' 0' vertexBuffer.VertexCount' 0' indexBuffer.IndexCount / 3);                  }                }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: if (drawPath && vertexBufferPath != null && vertexBufferPath != null)              {                  GraphicsDevice.Indices = indexBufferPath;                  GraphicsDevice.SetVertexBuffer(vertexBufferPath);                    effect.Texture = ContentDing.win98LegoTexture;                    foreach (EffectPass pass in effect.CurrentTechnique.Passes)                  {                      pass.Apply();                      GraphicsDevice.DrawIndexedPrimitives(PrimitiveType.TriangleList' 0' 0' vertexBufferPath.VertexCount' 0' indexBufferPath.IndexCount / 3);                  }                }
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(ContentDing.semiTransparantTexture' new Rectangle(5' 5' (int)meassured.X + 10' (int)meassured.Y + 10)' Color.White);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(ContentDing.semiTransparantTexture' new Rectangle(5' 5' (int)meassured.X + 10' (int)meassured.Y + 10)' Color.White);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(ContentDing.semiTransparantTexture' new Rectangle(5' 5' (int)meassured.X + 10' (int)meassured.Y + 10)' Color.White);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.Draw(ContentDing.semiTransparantTexture' new Rectangle(5' 5' (int)meassured.X + 10' (int)meassured.Y + 10)' Color.White);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(ContentDing.spriteFont' stringToDraw' new Vector2(10' 10)' Color.White);
Magic Number,DeveMazeGeneratorMonoGame,Game1,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(ContentDing.spriteFont' stringToDraw' new Vector2(10' 10)' Color.White);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: headModel = new CubeModelForPlayer(game' 8' 8' 8' TexturePosInfoGenerator.Head);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: headModel = new CubeModelForPlayer(game' 8' 8' 8' TexturePosInfoGenerator.Head);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: headModel = new CubeModelForPlayer(game' 8' 8' 8' TexturePosInfoGenerator.Head);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: bodyModel = new CubeModelForPlayer(game' 8' 12' 4' TexturePosInfoGenerator.Body);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: bodyModel = new CubeModelForPlayer(game' 8' 12' 4' TexturePosInfoGenerator.Body);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: bodyModel = new CubeModelForPlayer(game' 8' 12' 4' TexturePosInfoGenerator.Body);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: armModelLeft = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.ArmLeft);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: armModelLeft = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.ArmLeft);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: armModelLeft = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.ArmLeft);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: armModelRight = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.ArmRight);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: armModelRight = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.ArmRight);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: armModelRight = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.ArmRight);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: legModelLeft = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.LegLeft);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: legModelLeft = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.LegLeft);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: legModelLeft = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.LegLeft);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: legModelRight = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.LegRight);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: legModelRight = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.LegRight);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,PlayerModel,The following statement contains a magic number: legModelRight = new CubeModelForPlayer(game' 4' 12' 4' TexturePosInfoGenerator.LegRight);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix headTranslation = Matrix.CreateTranslation(new Vector3(-4' 0' -4));
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix headTranslation = Matrix.CreateTranslation(new Vector3(-4' 0' -4));
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: headTranslation *= Matrix.CreateFromYawPitchRoll(headTurn' (float)Math.Sin(value * 8) / 10' 0);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: headTranslation *= Matrix.CreateFromYawPitchRoll(headTurn' (float)Math.Sin(value * 8) / 10' 0);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: headTranslation *= Matrix.CreateTranslation(new Vector3(4' 0' 4));
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: headTranslation *= Matrix.CreateTranslation(new Vector3(4' 0' 4));
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: headModel.Draw(headTranslation * Matrix.CreateTranslation(0' 12' -2) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: headModel.Draw(headTranslation * Matrix.CreateTranslation(0' 12' -2) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armLeftTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9) / 8 - 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armLeftTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9) / 8 - 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armLeftTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9) / 8 - 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armLeftTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9) / 8 - 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armLeftTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9) / 8 - 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armModelLeft.Draw(armLeftTranslation * Matrix.CreateTranslation(-4' 0' 0) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5 - Math.PI) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5 - Math.PI) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5 - Math.PI) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5 - Math.PI) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix armRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 10' 2)' (float)Math.Sin(value * 5 - Math.PI) / 2);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armRightTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9 - Math.PI) / 8 + 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armRightTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9 - Math.PI) / 8 + 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armRightTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9 - Math.PI) / 8 + 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armRightTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9 - Math.PI) / 8 + 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armRightTranslation *= MatrixExtensions.CreateRotationZ(new Vector3(2' 10' 2)' (float)Math.Sin(value * 9 - Math.PI) / 8 + 1.0f / 8.0f);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: armModelRight.Draw(armRightTranslation * Matrix.CreateTranslation(8' 0' 0) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legLeftTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: legModelLeft.Draw(legLeftTranslation * Matrix.CreateTranslation(0' -12' 0) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7 - Math.PI) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7 - Math.PI) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7 - Math.PI) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: Matrix legRightTranslation = MatrixExtensions.CreateRotationX(new Vector3(2' 12' 2)' (float)Math.Sin(value * 7 - Math.PI) / 1);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: legModelRight.Draw(legRightTranslation * Matrix.CreateTranslation(4' -12' 0) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,PlayerModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\PlayerModel.cs,Draw,The following statement contains a magic number: legModelRight.Draw(legRightTranslation * Matrix.CreateTranslation(4' -12' 0) * parentMatrix' effect);
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: int howmuchvertices = 4;
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 2] = new VertexPositionNormalTexture(new Vector3(posx - amount' height' posy + amount)' new Vector3(0' 0' 1)' texturePosInfo.front.Third());
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 3] = new VertexPositionNormalTexture(new Vector3(posx + amount' height' posy + amount)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,VierkantjeModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\VierkantjeModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: int howmuchvertices = 8;
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 2] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' 0' mazeWall.ystart)' new Vector3(0' 0' 1)' texturePosInfo.front.Third());
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 3] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' 0' mazeWall.yend)' new Vector3(0' 0' 1)' texturePosInfo.front.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 4] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' height' mazeWall.ystart)' new Vector3(0' 0' -1)' texturePosInfo.rear.Second());
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 5] = new VertexPositionNormalTexture(new Vector3(mazeWall.xstart' 0' mazeWall.ystart)' new Vector3(0' 0' -1)' texturePosInfo.rear.Fourth());
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 6] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' height' mazeWall.yend)' new Vector3(0' 0' -1)' texturePosInfo.rear.First());
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: vertices[curVertice + 7] = new VertexPositionNormalTexture(new Vector3(mazeWall.xend' 0' mazeWall.yend)' new Vector3(0' 0' -1)' texturePosInfo.rear.Third());
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame,WallModel,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\WallModel.cs,GoGenerateVertices,The following statement contains a magic number: for (int i = 0; i < howmuchvertices; i += 4)              {                  indices[curIndice + 0] = curVertice + 0 + i;                  indices[curIndice + 1] = curVertice + 1 + i;                  indices[curIndice + 2] = curVertice + 2 + i;                  indices[curIndice + 3] = curVertice + 1 + i;                  indices[curIndice + 4] = curVertice + 3 + i;                  indices[curIndice + 5] = curVertice + 2 + i;                  curIndice += 6;              }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetNextLosObject,The following statement contains a magic number: while (current < path.Count)              {                  List<MazePoint> adjacentPoints = new List<MazePoint>();                  var curMazePoint = path[current];                    int x = curMazePoint.X;                  int y = curMazePoint.Y;                    if (x - 2 > 0 && innerMap[x - 1' y] && innerMap[x - 2' y] && !path.Any(t => t.X == x - 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x - 2' y));                  }                  else if (x + 2 < innerMap.Height && innerMap[x + 1' y] && innerMap[x + 2' y] && !path.Any(t => t.X == x + 2 && t.Y == y))                  {                      adjacentPoints.Add(new MazePoint(x + 2' y));                  }                  else if (y - 2 > 0 && innerMap[x' y - 1] && innerMap[x' y - 2] && !path.Any(t => t.X == x && t.Y == y - 2))                  {                      adjacentPoints.Add(new MazePoint(x' y - 2));                  }                  else if (y + 2 < innerMap.Height && innerMap[x' y + 1] && innerMap[x' y + 2] && !path.Any(t => t.X == x && t.Y == y + 2))                  {                      adjacentPoints.Add(new MazePoint(x' y + 2));                  }                    current += 2;                    if (adjacentPoints.Any())                  {                      LineOfSightObject losobject = new LineOfSightObject() { CameraPoint = adjacentPoints.First() };                        losobject.LosPoints = GetAdjacentPoints(losobject.CameraPoint' current);                        return losobject;                  }                  }
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetAdjacentPoints,The following statement contains a magic number: return path.AsParallel().Skip(curPathStep - 300).Take(600).Where(t => HasLosSmart(t' curMazePoint)).ToList();
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,GetAdjacentPoints,The following statement contains a magic number: return path.AsParallel().Skip(curPathStep - 300).Take(600).Where(t => HasLosSmart(t' curMazePoint)).ToList();
Magic Number,DeveMazeGeneratorMonoGame.LineOfSight,LineOfSightDeterminer,C:\repos\devedse_DeveMazeGenerator\DeveMazeGeneratorMonoGame\LineOfSight\LineOfSightDeterminer.cs,Line,The following statement contains a magic number: int dX = (x1 - x0)' dY = Math.Abs(y1 - y0)' err = (dX / 2)' ystep = (y0 < y1 ? 1 : -1)' y = y0;
