Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NServiceBus.Transport.RabbitMQ.Tests.DelayedDelivery,When_routing_topology_supports_delayed_delivery,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\DelayedDelivery\When_routing_topology_supports_delayed_delivery.cs,,The length of the parameter coreExternalTimeoutManagerAddressKey is 36.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,APIApprovals,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\APIApprovals.cs,Approve,The length of the statement  "            var publicApi = ApiGenerator.GeneratePublicApi(typeof(RabbitMQTransport).Assembly' excludeAttributes: new[] { "System.Runtime.Versioning.TargetFrameworkAttribute" }); " is 166.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleTablesListHeader,The length of the statement  "                    {"Foo"' new List<object>{new Dictionary<string' object>{{"key1"' Encoding.UTF8.GetBytes("value1")}' {"key2"' Encoding.UTF8.GetBytes("value2")}}}} " is 145.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,OutgoingMessageBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\OutgoingMessageBuilder.cs,Build,The length of the statement  "                    transportOperations.Add(new TransportOperation(message' new MulticastAddressTag(eventType)' dispatchConsistency' constraints)); " is 127.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,OutgoingMessageBuilder,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\OutgoingMessageBuilder.cs,Build,The length of the statement  "                    transportOperations.Add(new TransportOperation(message' new UnicastAddressTag(destination)' dispatchConsistency' constraints)); " is 127.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,RabbitMqContext,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\RabbitMqContext.cs,SetUp,The length of the statement  "            messagePump = new MessagePump(connectionFactory' new MessageConverter()' "Unit test"' channelProvider' purger' TimeSpan.FromMinutes(2)' 3' 0); " is 142.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,RabbitMqContext,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\RabbitMqContext.cs,SetUp,The length of the statement  "            routingTopology.Reset(connectionFactory' new[] { ReceiverQueue }.Concat(AdditionalReceiverQueues)' new[] { ErrorQueue }); " is 121.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_consuming_messages,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_consuming_messages.cs,Should_block_until_a_message_is_available,The length of the statement  "            var transportOperations = new TransportOperations(new TransportOperation(message' new UnicastAddressTag(ReceiverQueue))); " is 121.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_populate_the_body,The length of the statement  "            return Verify(new OutgoingMessageBuilder().WithBody(body)' (IncomingMessage received) => Assert.AreEqual(body' received.Body)); " is 127.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_set_the_content_type,The length of the statement  "            return Verify(new OutgoingMessageBuilder().WithHeader(Headers.ContentType' "application/json")' received => Assert.AreEqual("application/json"' received.BasicProperties.ContentType)); " is 183.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_default_the_content_type_to_octet_stream_when_no_content_type_is_specified,The length of the statement  "            return Verify(new OutgoingMessageBuilder()' received => Assert.AreEqual("application/octet-stream"' received.BasicProperties.ContentType)); " is 139.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_set_the_message_type_based_on_the_encoded_message_types_header,The length of the statement  "            return Verify(new OutgoingMessageBuilder().WithHeader(Headers.EnclosedMessageTypes' messageType.AssemblyQualifiedName)' received => Assert.AreEqual(messageType.FullName' received.BasicProperties.Type)); " is 202.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_set_the_time_to_be_received,The length of the statement  "            return Verify(new OutgoingMessageBuilder().TimeToBeReceived(timeToBeReceived)' received => Assert.AreEqual(timeToBeReceived.TotalMilliseconds.ToString()' received.BasicProperties.Expiration)); " is 192.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_set_correlation_id_if_present,The length of the statement  "            return Verify(new OutgoingMessageBuilder().CorrelationId(correlationId)' result => Assert.AreEqual(correlationId' result.Headers[Headers.CorrelationId])); " is 154.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_preserve_the_recoverable_setting_if_set_to_durable,The length of the statement  "            return Verify(new OutgoingMessageBuilder()' result => Assert.True(result.Headers[Headers.NonDurableMessage] == "False")); " is 121.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Should_preserve_the_recoverable_setting_if_set_to_non_durable,The length of the statement  "            return Verify(new OutgoingMessageBuilder().NonDurable()' result => Assert.True(result.Headers[Headers.NonDurableMessage] == "True")); " is 133.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Verify,The length of the statement  "            var messageId = operations.MulticastTransportOperations.FirstOrDefault()?.Message.MessageId ?? operations.UnicastTransportOperations.FirstOrDefault()?.Message.MessageId; " is 169.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_sending_a_message_over_rabbitmq,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_sending_a_message_over_rabbitmq.cs,Consume,The length of the statement  "                return new BasicDeliverEventArgs(""' message.DeliveryTag' message.Redelivered' message.Exchange' message.RoutingKey' message.BasicProperties' message.Body); " is 156.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests,When_subscribed_to_a_event,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_subscribed_to_a_event.cs,Publish,The length of the statement  "            var message = new OutgoingMessageBuilder().WithBody(new byte[0]).CorrelationId(type.FullName).PublishType(type).Build(); " is 120.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_fail_if_host_is_not_present,The length of the statement  "            Assert.Throws<NotSupportedException>(() => ConnectionConfiguration.Create("virtualHost=Copa;username=Copa;password=abc_xyz;port=12345;requestedHeartbeat=3"' endpointName)); " is 172.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_the_cert_path,The length of the statement  "            var connectionConfiguration = ConnectionConfiguration.Create("host=localhost;certPath=/path/keyfile.p12"' endpointName); " is 120.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_throw_on_malformed_string,The length of the statement  "            Assert.Throws<ArgumentException>(() => ConnectionConfiguration.Create("not a well formed name value pair;"' endpointName)); " is 123.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_list_all_invalid_options,The length of the statement  "            Assert.That(exception.Message' Does.Contain("'notaport1' is not a valid Int32 value for the port in the 'host' connection string option.")); " is 140.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_list_all_invalid_options,The length of the statement  "            Assert.That(exception.Message' Does.Contain("'notaport2' is not a valid Int32 value for the 'port' connection string option.")); " is 128.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_list_all_invalid_options,The length of the statement  "            Assert.That(exception.Message' Does.Contain("'notusetls' is not a valid Boolean value for the 'useTls' connection string option.")); " is 132.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_list_all_invalid_options,The length of the statement  "            Assert.That(exception.Message' Does.Contain("'notaheartbeat' is not a valid UInt16 value for the 'requestedHeartbeat' connection string option.")); " is 147.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_list_all_invalid_options,The length of the statement  "            Assert.That(exception.Message' Does.Contain("'notaretrydelay' is not a valid TimeSpan value for the 'retryDelay' connection string option.")); " is 142.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.DelayedDelivery,When_routing_topology_supports_delayed_delivery,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\DelayedDelivery\When_routing_topology_supports_delayed_delivery.cs,Should_prevent_startup_if_EnableTimeoutManager_setting_is_set_and_timeout_feature_is_disabled,The length of the statement  "            Assert.AreEqual("The transport has been configured to enable the timeout manager' but the timeout manager is not active." + " is 123.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.DelayedDelivery,When_routing_topology_supports_delayed_delivery,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\DelayedDelivery\When_routing_topology_supports_delayed_delivery.cs,Should_prevent_startup_if_EnableTimeoutManager_setting_is_set_and_timeout_feature_is_disabled,The length of the statement  "                        "Ensure that the timeout manager is active or remove the call to 'EndpointConfiguration.UseTransport<RabbitMQTransport>().DelayedDelivery().EnableTimeoutManager()'."' result.ErrorMessage); " is 188.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.DelayedDelivery,When_routing_topology_supports_delayed_delivery,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\DelayedDelivery\When_routing_topology_supports_delayed_delivery.cs,Should_prevent_startup_if_EnableTimeoutManager_setting_is_set_and_timeout_feature_is_deactivated,The length of the statement  "            Assert.AreEqual("The transport has been configured to enable the timeout manager' but the timeout manager is not active." + " is 123.
Long Statement,NServiceBus.Transport.RabbitMQ.Tests.DelayedDelivery,When_routing_topology_supports_delayed_delivery,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\DelayedDelivery\When_routing_topology_supports_delayed_delivery.cs,Should_prevent_startup_if_EnableTimeoutManager_setting_is_set_and_timeout_feature_is_deactivated,The length of the statement  "                        "Ensure that the timeout manager is active or remove the call to 'EndpointConfiguration.UseTransport<RabbitMQTransport>().DelayedDelivery().EnableTimeoutManager()'."' result.ErrorMessage); " is 188.
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,MessageConverterTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\MessageConverterTests.cs,TestCanHandleHeadersWithAllAmqpFieldValues,The following statement contains a magic number: var message = new BasicDeliverEventArgs              {                  BasicProperties = new BasicProperties                  {                      MessageId = "Blah"'                      Headers = new Dictionary<string' object>                      {                          {"short"' (short)42}'                          {"int"' 42}'                          {"long"' 42L}'                          {"decimal"' 42m}'                          {"sbyte"' (sbyte)42}'                          {"double"' 42d}'                          {"single"' 42f}'                          {"bool"' true }                      }                  }              };
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,RabbitMqContext,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\RabbitMqContext.cs,SetUp,The following statement contains a magic number: messagePump = new MessagePump(connectionFactory' new MessageConverter()' "Unit test"' channelProvider' purger' TimeSpan.FromMinutes(2)' 3' 0);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,RabbitMqContext,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\RabbitMqContext.cs,SetUp,The following statement contains a magic number: messagePump = new MessagePump(connectionFactory' new MessageConverter()' "Unit test"' channelProvider' purger' TimeSpan.FromMinutes(2)' 3' 0);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,When_stopping_endpoint,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_stopping_endpoint.cs,Should_gracefully_shutdown,The following statement contains a magic number: var operations = new OutgoingMessageBuilder().WithBody(new byte[1]).SendTo(ReceiverQueue).Build(10000);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,When_stopping_endpoint,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_stopping_endpoint.cs,Should_gracefully_shutdown,The following statement contains a magic number: messagePump.Start(new PushRuntimeSettings(50));
Magic Number,NServiceBus.Transport.RabbitMQ.Tests,When_stopping_endpoint,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\When_stopping_endpoint.cs,Should_gracefully_shutdown,The following statement contains a magic number: await Task.Delay(500);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_correctly_parse_full_connection_string,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.Port' 1234);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_correctly_parse_full_connection_string,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.RequestedHeartbeat' 3);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_correctly_parse_full_connection_string,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.RetryDelay' new TimeSpan(1' 2' 3));
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_correctly_parse_full_connection_string,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.RetryDelay' new TimeSpan(1' 2' 3));
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_host,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.Port' 1001);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_host_with_separate_port,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.Port' 1234);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_host_without_port,The following statement contains a magic number: Assert.AreEqual(connectionConfiguration.Port' 5672);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_the_port,The following statement contains a magic number: Assert.AreEqual(8181' connectionConfiguration.Port);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_the_requestedHeartbeat,The following statement contains a magic number: Assert.AreEqual(5' connectionConfiguration.RequestedHeartbeat);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_the_retry_delay,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(10)' connectionConfiguration.RetryDelay);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_parse_use_tls,The following statement contains a magic number: Assert.AreEqual(5671' connectionConfiguration.Port);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_set_default_port,The following statement contains a magic number: Assert.AreEqual(defaults.Port' 5672);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_set_default_requested_heartbeat,The following statement contains a magic number: Assert.AreEqual(defaults.RequestedHeartbeat' 5);
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.ConnectionString,ConnectionConfigurationTests,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\ConnectionString\ConnectionConfigurationTests.cs,Should_set_default_retry_delay,The following statement contains a magic number: Assert.AreEqual(defaults.RetryDelay' TimeSpan.FromSeconds(10));
Magic Number,NServiceBus.Transport.RabbitMQ.Tests.DelayedDelivery,When_calculating_a_routing_key,C:\research\architectureSmells\repos\Particular_NServiceBus.RabbitMQ\src\NServiceBus.Transport.RabbitMQ.Tests\DelayedDelivery\When_calculating_a_routing_key.cs,Should_return_routing_key_with_delay_zero_seconds_for_negative_delay,The following statement contains a magic number: var result = DelayInfrastructure.CalculateRoutingKey(-123' "some-address"' out var startingDelayLevel);
