Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FoundationDB.Layers.Collections,FdbVector<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbVector`1.cs,SwapAsync,Cyclomatic complexity of the method is 8
Long Parameter List,FoundationDB.Layers.Collections,FdbMap<TKey;TValue>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbMap`2.cs,AggregateAsync,The method has 5 parameters. Parameters: db' init' handler' finish' ct
Long Parameter List,FoundationDB.Layers.Collections,FdbMap<TKey;TValue>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbMap`2.cs,ImportAsync,The method has 5 parameters. Parameters: db' items' keySelector' valueSelector' ct
Long Statement,FoundationDB.Layers.Collections,FdbMultiMap<TKey;TValue>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbMultimap`2.cs,SubtractAsync,The length of the statement  "					//note: since we already read 'k'' the AtomicAdd will be optimized into the equivalent of Set(k' v - 1) by the client' unless RYW has been disabled on the transaction " is 166.
Long Statement,FoundationDB.Layers.Collections,FdbVector<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbVector`1.cs,SwapAsync,The length of the statement  "			if (index1 >= currentSize || index2 >= currentSize) throw new IndexOutOfRangeException($"Indices ({index1}' {index2}) are out of range"); " is 137.
Long Statement,FoundationDB.Layers.Counters,FdbHighContentionCounter,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Counters\FdbHighContentionCounter.cs,Coalesce,The length of the statement  "						// note: contrary to the python impl' we will await the commit' and rely on the caller to not wait to the Coalesce task itself to complete. " is 139.
Long Statement,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,FindUidAsync,The length of the statement  "				// note: we diverge from the python sample layer by not expanding the size at each retry' in order to ensure that value size keeps as small as possible " is 151.
Long Statement,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,InternSlowAsync,The length of the statement  "				if (uid.IsNull) throw new InvalidOperationException("Failed to allocate a new uid while attempting to intern a string"); " is 120.
Long Statement,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,LookupSlowAsync,The length of the statement  "			//BUGBUG: if the uid has just been Interned in the current transaction' and if the transaction fails to commit (conflict' ...) we will insert a bad value in the cache! " is 167.
Magic Number,FoundationDB.Layers.Collections,FdbQueue<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbQueue`1.cs,RandId,The following statement contains a magic number: return Slice.Random(this.Rng' 20);
Magic Number,FoundationDB.Layers.Collections,FdbQueue<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbQueue`1.cs,FulfillConflictedPops,The following statement contains a magic number: const int NUM_POPS = 100;
Magic Number,FoundationDB.Layers.Collections,FdbQueue<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbQueue`1.cs,PopHighContentionAsync,The following statement contains a magic number: int backOff = 10;
Magic Number,FoundationDB.Layers.Collections,FdbQueue<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbQueue`1.cs,PopHighContentionAsync,The following statement contains a magic number: backOff = Math.Min(1000' backOff * 2);
Magic Number,FoundationDB.Layers.Collections,FdbQueue<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbQueue`1.cs,PopHighContentionAsync,The following statement contains a magic number: backOff = Math.Min(1000' backOff * 2);
Magic Number,FoundationDB.Layers.Collections,FdbVector<T>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Collections\FdbVector`1.cs,PopAsync,The following statement contains a magic number: var lastTwo = await tr  				.GetRange(keyRange' new FdbRangeOptions { Reverse = true' Limit = 2 })  				.ToListAsync()  				.ConfigureAwait(false);
Magic Number,FoundationDB.Layers.Counters,FdbHighContentionCounter,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Counters\FdbHighContentionCounter.cs,RandomId,The following statement contains a magic number: return Slice.Random(this.Rng' 20);
Magic Number,FoundationDB.Layers.Counters,FdbHighContentionCounter,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Counters\FdbHighContentionCounter.cs,Coalesce,The following statement contains a magic number: right = this.Rng.NextDouble() < 0.5;
Magic Number,FoundationDB.Layers.Counters,FdbHighContentionCounter,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Counters\FdbHighContentionCounter.cs,Add,The following statement contains a magic number: coalesce = this.Rng.NextDouble() < 0.1;
Magic Number,FoundationDB.Layers.Counters,FdbHighContentionCounter,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Counters\FdbHighContentionCounter.cs,Add,The following statement contains a magic number: BackgroundCoalesce(20' CancellationToken.None);
Magic Number,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,EvictCache,The following statement contains a magic number: int size = checked ((value.Length * 2) + uidKey.Slice.Count);
Magic Number,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,AddToCache,The following statement contains a magic number: int size = (value.Length * 2) + uidKey.Slice.Count;
Magic Number,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,FindUidAsync,The following statement contains a magic number: const int MAX_TRIES = 256;
Magic Number,FoundationDB.Layers.Interning,FdbStringIntern,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Layers.Common\Interning\FdbStringIntern.cs,FindUidAsync,The following statement contains a magic number: slice = Slice.Random(m_prng' 4 + (tries >> 1));
