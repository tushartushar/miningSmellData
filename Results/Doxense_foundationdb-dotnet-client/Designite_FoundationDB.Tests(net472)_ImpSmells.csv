Implementation smell,Namespace,Class,File,Method,Description
Long Method,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Only_Values,The method has 116 lines of code.
Long Method,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The method has 123 lines of code.
Long Method,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The method has 118 lines of code.
Long Method,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The method has 103 lines of code.
Long Method,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The method has 113 lines of code.
Long Method,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The method has 119 lines of code.
Long Method,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The method has 174 lines of code.
Long Method,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The method has 103 lines of code.
Long Method,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The method has 134 lines of code.
Long Method,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The method has 165 lines of code.
Complex Method,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,Cyclomatic complexity of the method is 12
Complex Method,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,Cyclomatic complexity of the method is 8
Complex Method,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,Cyclomatic complexity of the method is 9
Complex Method,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,Cyclomatic complexity of the method is 13
Complex Method,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,Dump,Cyclomatic complexity of the method is 8
Complex Method,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,Cyclomatic complexity of the method is 8
Long Parameter List,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,PerformAtomicOperationAndCheck,The method has 5 parameters. Parameters: db' key' x' type' y
Long Parameter List,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The method has 5 parameters. Parameters: label' index' orderBy' comparer' heatMaps
Long Parameter List,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,RunMultiClientTest,The method has 7 parameters. Parameters: db' location' highContention' desc' K' NUM' ct
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The length of the statement  "							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onError {e.SourceException}"); " is 126.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The length of the statement  "								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] thinking {x} on task {Task.CurrentId}"); " is 136.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The length of the statement  "								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] produced {x} on task {Task.CurrentId}"); " is 136.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The length of the statement  "						//Log($"[parent#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] calling OnNextAsync({task.Id}) for {x}..."); " is 142.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The length of the statement  "						//Log($"[parent#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] called OnNextAsync({task.Id}) for {x} : {t.Status}"); " is 151.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The length of the statement  "						//Log($"[parent#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] awaited OnNextAsync({task.Id}) for {x}"); " is 139.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The length of the statement  "				await queue.OnNextAsync(Task.Run<int>(() => { throw new InvalidOperationException("Oops"); return 123; }' this.Cancellation)' token); " is 133.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The length of the statement  "				await queue.OnNextAsync(Task.Run<int>(() => { throw new InvalidOperationException("Epic Fail"); return 456; }' this.Cancellation)' token); " is 138.
Long Statement,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The length of the statement  "				Assert.That(async () => await pumpTask' Throws.InvalidOperationException.With.Message.EqualTo("Oops")' "Pump should rethrow the first exception encountered"); " is 158.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The length of the statement  "				var stored = await db.ReadAsync((tr) => tr.GetRangeStartsWith(location).Select(x => (x.Key' x.Value)).ToArrayAsync()' this.Cancellation); " is 137.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The length of the statement  "				Log($"> Throughput {count / sw.Elapsed.TotalSeconds:N0} key/sec and {totalSize / (1024 * 1024 * sw.Elapsed.TotalSeconds):N3} MB/sec"); " is 134.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} items at offset {ctx.Position:N0} of gen #{ctx.Generation} with step {ctx.Step:N0} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)"); " is 264.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The length of the statement  "						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec " is 130.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The length of the statement  "				Log($"> Throughput {count / sw.Elapsed.TotalSeconds:N0} key/sec and {totalSize / (1024 * 1024 * sw.Elapsed.TotalSeconds):N3} MB/sec"); " is 134.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_WithContextAndState,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)"); " is 254.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})"); " is 217.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The length of the statement  "						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec " is 130.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration.TotalSeconds:N3} sec' totalElapsed={ctx.ElapsedTotal.TotalSeconds:N3} sec)"); " is 257.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration.TotalSeconds:N1}' totalElapsed={ctx.ElapsedTotal.TotalSeconds:N1}s)"); " is 250.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The length of the statement  "						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec " is 130.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The length of the statement  "				Assume.That(sw.Elapsed.TotalSeconds' Is.GreaterThan(5)' "This test has to run more than 5 seconds to trigger past_version internally!"); " is 136.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration.TotalSeconds:N3} sec' totalElapsed={ctx.ElapsedTotal.TotalSeconds:N3} sec)"); " is 257.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The length of the statement  "						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})"); " is 217.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The length of the statement  "						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec " is 130.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The length of the statement  "				Assume.That(sw.Elapsed.TotalSeconds' Is.GreaterThan(5)' "This test has to run more than 5 seconds to trigger past_version internally!"); " is 136.
Long Statement,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The length of the statement  "							Log($"> Called with batch [{pos:N0}..{pos + xs.Length - 1:N0}] ({xs.Length:N0} items' {xs.Sum(kv => kv.Key.Count + kv.Value.Count):N0} bytes)"); " is 144.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Open_Or_CreateCluster_With_Invalid_ClusterFile_Path_Should_Fail,The length of the statement  "			await TestHelpers.AssertThrowsFdbErrorAsync(() => Fdb.OpenAsync(new FdbConnectionOptions { ClusterFile = @".\file_not_found.cluster" }' this.Cancellation)' FdbError.NoClusterFileFound' "Should fail if cluster file is missing"); " is 227.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Open_Or_CreateCluster_With_Invalid_ClusterFile_Path_Should_Fail,The length of the statement  "			await TestHelpers.AssertThrowsFdbErrorAsync(() => Fdb.OpenAsync(new FdbConnectionOptions { ClusterFile = @"C:\..\..\fdb.cluster" }' this.Cancellation)' FdbError.NoClusterFileFound' "Should fail if path is malformed"); " is 217.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Open_Or_CreateCluster_With_Invalid_ClusterFile_Path_Should_Fail,The length of the statement  "			await TestHelpers.AssertThrowsFdbErrorAsync(() => Fdb.OpenAsync(new FdbConnectionOptions { ClusterFile = @"FOO:\invalid$path!/fdb.cluster" }' this.Cancellation)' FdbError.NoClusterFileFound' "Should fail if path is malformed"); " is 227.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Open_Or_CreateCluster_With_Corrupted_ClusterFile_Should_Fail,The length of the statement  "				await TestHelpers.AssertThrowsFdbErrorAsync(() => Fdb.OpenAsync(new FdbConnectionOptions { ClusterFile = path }' this.Cancellation)' FdbError.ConnectionStringInvalid' "Should fail if file is corrupted"); " is 203.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Open_Local_Database,The length of the statement  "			//README: if your test database is remote' and you don't have FDB running locally' this test will fail and you should ignore this one. " is 134.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Get_Coordinators,The length of the statement  "				Assert.That(coordinators.Description' Is.Not.Null.Or.Empty); //note: it should be a long numerical string' but it changes for each installation " is 143.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Get_Coordinators,The length of the statement  "				Assert.That(coordinators.Coordinators[0].Port' Is.GreaterThanOrEqualTo(4500).And.LessThanOrEqualTo(4510)); //HACKHACK: may not work everywhere ! " is 144.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Open_Database_With_Non_Empty_GlobalSpace,The length of the statement  "			using (var db = await Fdb.OpenAsync(new FdbConnectionOptions { GlobalSpace = KeySubspace.FromKey(TuPack.EncodeKey("test")) }' this.Cancellation)) " is 145.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Open_Database_With_Non_Empty_GlobalSpace,The length of the statement  "			using (var db = await Fdb.OpenAsync(new FdbConnectionOptions { GlobalSpace = KeySubspace.FromKey(new byte[] { 42' 255' 0' 90 }.AsSlice()) }' this.Cancellation)) " is 160.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Change_Location_Cache_Size,The length of the statement  "				Assert.That(() => db.SetLocationCacheSize(-123)' Throws.InstanceOf<FdbException>().With.Property("Code").EqualTo(FdbError.InvalidOptionValue).And.Property("Success").False); " is 173.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Serialize_Connection_Options,The length of the statement  "			Assert.That(options.ToString()' Is.EqualTo(@"cluster_file=X:\some\path\to\fdb.cluster; readonly; timeout=42.5; retry_limit=123; dc_id=AC/DC; machine_id=""Marble Machine X""")); " is 176.
Long Statement,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Serialize_Connection_Options,The length of the statement  "			Assert.That(options.ToString()' Is.EqualTo(@"cluster_file=/etc/foundationdb/fdb.cluster; timeout=3.1415926; machine_id=""James \""The Machine\"" Wade""")); " is 155.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_GetErrorMessage,The length of the statement  "			Assert.That(Fdb.GetErrorMessage(FdbError.PastVersion)' Is.EqualTo("Transaction is too old to perform reads or be committed")); " is 126.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_GetErrorMessage,The length of the statement  "			Assert.That(Fdb.GetErrorMessage(FdbError.NotCommitted)' Is.EqualTo("Transaction not committed due to conflict with another transaction")); " is 138.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_GetErrorMessage,The length of the statement  "			Assert.That(Fdb.GetErrorMessage(FdbError.CommitUnknownResult)' Is.EqualTo("Transaction may or may not have committed")); " is 120.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_GetErrorMessage,The length of the statement  "			Assert.That(Fdb.GetErrorMessage(FdbError.TransactionCancelled)' Is.EqualTo("Operation aborted because the transaction was cancelled")); " is 135.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_GetErrorMessage,The length of the statement  "			Assert.That(Fdb.GetErrorMessage(FdbError.TransactionTimedOut)' Is.EqualTo("Operation aborted because the transaction timed out")); " is 130.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.OperationFailed)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.OperationFailed)' "OperationFailed"); " is 163.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.PastVersion)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.PastVersion)' "PastVersion"); " is 151.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.FutureVersion)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.FutureVersion)' "FutureVersion"); " is 157.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.NotCommitted)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.NotCommitted)' "NotCommitted"); " is 154.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.CommitUnknownResult)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.CommitUnknownResult)' "CommitUnknownResult"); " is 175.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.TransactionCancelled)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.TransactionCancelled)' "TrasactionCancelled"); //REVIEW => OperationCancelledException? " is 218.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.TransactionTimedOut)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.TransactionTimedOut)' "TransactionTimedOut"); //REVIEW => TimeoutException ? " is 206.
Long Statement,FoundationDB.Client.Tests,ErrorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ErrorFacts.cs,Test_Fdb_MapToException,The length of the statement  "			Assert.That(Fdb.MapToException(FdbError.ClientInvalidOperation)' Is.InstanceOf<FdbException>().And.Property("Code").EqualTo(FdbError.ClientInvalidOperation)' "ClientInvalidOperation"); //REVIEW => InvalidOperationException? " is 223.
Long Statement,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_9,The length of the statement  "					await db.WriteAsync((tr) => tr.ClearRange(subspace.Keys.Encode("K0000")' subspace.Keys.Encode("K9999Z"))' this.Cancellation); " is 125.
Long Statement,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_14,The length of the statement  "						tr.SetValues(Enumerable.Range(0' 100).Select(i => new KeyValuePair<Slice' Slice>(subspace.Keys.Encode("K" + i.ToString("D4"))' Value("V" + i.ToString("D4"))))); " is 160.
Long Statement,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_17,The length of the statement  "				// "not_committed": start with 5' 10' 15' etc... but after 4 or 5' then transition into a random number between 0 and 1 sec " is 123.
Long Statement,FoundationDB.Client.Tests,FdbTest,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\FdbTest.cs,BeforeAllTests,The length of the statement  "					Assume.That(version' Is.LessThanOrEqualTo(Fdb.GetMaxApiVersion())' "Unit tests require that the native fdb client version be at least equal to the current binding version!"); " is 174.
Long Statement,FoundationDB.Client.Tests,FdbTest,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\FdbTest.cs,BeforeAllTests,The length of the statement  "				Assume.That(Fdb.ApiVersion' Is.EqualTo(OverrideApiVersion)' "The API version selected is not what this test is expecting!"); " is 124.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Increment,The length of the statement  "			Assert.That(() => FdbKey.Increment(Slice.Nil)' Throws.InstanceOf<ArgumentException>().With.Property("ParamName").EqualTo("slice")); " is 131.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The length of the statement  "				if (i > 0) Assert.That(merged[i].Offset' Is.EqualTo(merged[i - 1].Offset + merged[i - 1].Count)' "All slices should be contiguous"); " is 132.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The length of the statement  "			Assert.That(() => FdbKey.Merge(Slice.Empty' default(Slice[]))' Throws.ArgumentNullException.With.Property("ParamName").EqualTo("keys")); " is 136.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The length of the statement  "			Assert.That(() => FdbKey.Merge(Slice.Empty' default(IEnumerable<Slice>))' Throws.ArgumentNullException.With.Property("ParamName").EqualTo("keys")); " is 147.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Contains,The length of the statement  "			Assert.That(KeyRange.Create(Slice.FromByteString("A")' Slice.FromByteString("A")).Contains(Slice.FromByteString("A"))' Is.False' "Equal bounds"); " is 145.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>")); " is 122.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>")); " is 138.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(Slice.FromByteString("hello")))' Is.EqualTo("(`hello`')")' "ASCII strings should use single back quotes"); " is 147.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey("héllø"))' Is.EqualTo("(\"héllø\"')")' "Unicode strings should use double quotes"); " is 124.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(123' 456))' Is.EqualTo("(123' 456)")' "Elements should be separated with a space' and not end up with '''"); " is 149.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(default(object)' true' false))' Is.EqualTo("(null' true' false)")' "Booleans should be displayed as numbers' and null should be in lowercase"); //note: even though it's tempting to using Python's "Nil"' it's not very ".NETty" " is 266.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(1.0d' Math.PI' Math.E))' Is.EqualTo("(1' 3.1415926535897931' 2.7182818284590451)")' "Doubles should used dot and have full precision (17 digits)"); " is 188.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(1.0f' (float)Math.PI' (float)Math.E))' Is.EqualTo("(1' 3.14159274' 2.71828175)")' "Singles should used dot and have full precision (10 digits)"); " is 186.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(guid))' Is.EqualTo($"({guid:B}')")' "GUIDs should be displayed as a string literal' surrounded by {{...}}' and without quotes"); " is 169.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(uuid128))' Is.EqualTo($"({uuid128:B}')")' "Uuid128s should be displayed as a string literal' surrounded by {{...}}' and without quotes"); " is 178.
Long Statement,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The length of the statement  "			Assert.That(FdbKey.Dump(TuPack.EncodeKey(uuid64))' Is.EqualTo($"({uuid64:B}')")' "Uuid64s should be displayed as a string literal' surrounded by {{...}}' and without quotes"); " is 175.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_Simple,The length of the statement  "				Assert.That(foo2.GetPrefix()' Is.EqualTo(foo.GetPrefix())' "Second call to CreateOrOpen should return the same subspace"); " is 122.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_With_Layer,The length of the statement  "				Assert.That(foo2.GetPrefix()' Is.EqualTo(foo.GetPrefix())' "Second call to CreateOrOpen should return the same subspace"); " is 122.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_With_Layer,The length of the statement  "				Assert.That(async () => await directory.OpenAsync(logged' new[] { "Foo" }' Slice.FromString("OtherLayer")' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()' "Opening with invalid layer id should fail"); " is 220.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_With_Layer,The length of the statement  "				Assert.DoesNotThrow(() => foo3.CheckLayer(Slice.FromString("AcmeLayer"))' "CheckLayer should not throw if the layer id is correct"); " is 132.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_With_Layer,The length of the statement  "				Assert.That(() => foo3.CheckLayer(Slice.FromString("OtherLayer"))' Throws.InstanceOf<InvalidOperationException>()' "CheckLayer should throw if the layer id is not correct"); " is 173.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_SubFolders,The length of the statement  "				for (int i = 0; i < 10; i++) await directory.CreateOrOpenAsync(logged' new[] { "numbers"' i.ToString() }' this.Cancellation); " is 125.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Move_Folder,The length of the statement  "				Assert.That(async () => await directory.OpenAsync(logged' "Foo"' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 133.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Move_Folder,The length of the statement  "				Assert.That(async () => await folder.MoveToAsync(logged' new[] { "Bar"' "Baz" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 149.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Remove_Folder,The length of the statement  "				Assert.That(async () => await directory.RemoveAsync(logged' path' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()' "Removing a non-existent directory should fail"); " is 183.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Remove_Folder,The length of the statement  "				Assert.That(async () => await directory.RemoveAsync(logged' new string[0]' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()' "Attempting to remove the root directory should fail"); " is 198.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Can_Change_Layer_Of_Existing_Directory,The length of the statement  "				Assert.That(async () => await directory.OpenAsync(logged' "Test"' layer: Slice.FromString("foo")' ct: this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 170.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions,The length of the statement  "				Assert.That(partition.DirectoryLayer.ContentSubspace.GetPrefix()' Is.EqualTo(partitionKey)' "Partition's content should be under the partition's prefix"); " is 154.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions,The length of the statement  "				Assert.That(partition.DirectoryLayer.NodeSubspace.GetPrefix()' Is.EqualTo(partitionKey + FdbKey.Directory)' "Partition's nodes should be under the partition's prefix"); " is 168.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_Another_Partition,The length of the statement  "				Assert.That(async () => await bar.MoveToAsync(db' new[] { "Bar" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 135.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_Another_Partition,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' new[] { "Foo"' "Bar" }' new[] { "Bar" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 163.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				Assert.That(async () => await foo.MoveToAsync(db' new[] { "Outer"' "Inner"' "Foo" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 153.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' new[] { "Outer"' "Foo" }' new[] { "Outer"' "Inner"' "Foo" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 183.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				Assert.That(async () => await bar.MoveToAsync(db' new[] { "Outer"' "Bar" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 144.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' new[] { "Outer"' "Inner"' "Bar" }' new[] { "Outer"' "Bar" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 183.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				await directory.CreateAsync(db' new[] { "Outer"' "SubFolder" }' this.Cancellation); // parent of destination folder must already exist when moving... " is 149.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				var foo2 = await directory.MoveAsync(db' new[] { "Outer"' "Foo" }' new[] { "Outer"' "SubFolder"' "Foo" }' this.Cancellation); " is 125.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				await directory.CreateAsync(db' new[] { "Outer"' "Inner"' "SubFolder" }' this.Cancellation); // parent of destination folder must already exist when moving... " is 158.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Cannot_Move_To_A_Sub_Partition,The length of the statement  "				var bar2 = await directory.MoveAsync(db' new[] { "Outer"' "Inner"' "Bar" }' new[] { "Outer"' "Inner"' "SubFolder"' "Bar" }' this.Cancellation); " is 143.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.CreateOrOpenAsync(db' default(string[])' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 145.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.CreateOrOpenAsync(db' new string[0]' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 145.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.CreateOrOpenAsync(db' default(string)' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 143.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.CreateAsync(db' default(string[])' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 139.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.CreateAsync(db' new string[0]' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 139.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.CreateAsync(db' default(string)' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 137.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.OpenAsync(db' default(string[])' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 137.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.OpenAsync(db' new string[0]' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 137.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.OpenAsync(db' default(string)' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 135.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' default(string[])' new[] { "foo" }' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 154.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' new[] { "foo" }' default(string[])' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 154.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' new string[0]' new[] { "foo" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 154.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.MoveAsync(db' new[] { "foo" }' new string[0]' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 154.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.RemoveAsync(db' default(string[])' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 139.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.RemoveAsync(db' new string[0]' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 139.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.RemoveAsync(db' new string[] { "Foo"' " "' "Bar" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 160.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.RemoveAsync(db' default(string)' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 137.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.ListAsync(db' default(string[])' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 137.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.ListAsync(db' new string[] { "Foo"' ""' "Bar" }' this.Cancellation)' Throws.InstanceOf<InvalidOperationException>()); " is 157.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Methods_Should_Fail_With_Empty_Paths,The length of the statement  "				Assert.That(async () => await directory.ListAsync(db' default(string)' this.Cancellation)' Throws.InstanceOf<ArgumentNullException>()); " is 135.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The length of the statement  "			// an instance of FdbDirectoryPartition should throw when attempting to create keys directly under it' and should only be used to create/open sub directories " is 157.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The length of the statement  "					Assert.That(del' Throws.InstanceOf<InvalidOperationException>().With.Message.Contains("root of a directory partition")); " is 120.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The length of the statement  "				ShouldPass(() => partition.Copy().GetPrefix()); // EXCEPTION: we need this to work' because that's the only way that the unit tests above can see the partition key! " is 164.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The length of the statement  "				ShouldPass(() => partition.DumpKey(barKey)); // EXCEPTION: this should always work' because this can be used for debugging and logging... " is 137.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The length of the statement  "				ShouldPass(() => partition.BoundCheck(barKey' true)); // EXCEPTION: needs to work because it is used by GetRange() and GetKey() " is 127.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Concurrent_Directory_Creation_With_Custom_Prefix,The length of the statement  "								// Current implementation of the DirectoryLayer conflicts with other transactions when checking if the custom key prefix has already been used in the DL " is 152.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Concurrent_Directory_Creation_With_Custom_Prefix,The length of the statement  "								// cf: http://community.foundationdb.com/questions/4493/im-seeing-conflicts-when-creating-directory-subspa.html#answer-4497 " is 123.
Long Statement,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Concurrent_Directory_Creation_With_Custom_Prefix,The length of the statement  "								Assert.Inconclusive("FIXME: Current implementation of DirectoryLayer creates read conflict when registering directories with custom key prefix"); " is 145.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Chunk,The length of the statement  "					Assert.That(chunk.Count' Is.EqualTo(N)' "Reading a small chunk in WantAll should return all results in one page! If this changes' you may need to tweak the parameters of the test!"); " is 182.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Only_Keys,The length of the statement  "					var query = tr.GetRange(location.Keys.Encode(0)' location.Keys.Encode(N)' new FdbRangeOptions { Read = FdbReadMode.Keys }); " is 123.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Only_Values,The length of the statement  "					Assert.That(chunk.First' Is.EqualTo(location.Keys.Encode(0))' "The chunk should still read the first key (even in Values only mode)"); " is 134.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Only_Values,The length of the statement  "					Assert.That(chunk.Last' Is.EqualTo(location.Keys.Encode(chunk.Count - 1))' "The chunk should still read the last key (even in Values only mode)"); " is 146.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The length of the statement  "					Assert.That(async () => await query.SingleOrDefaultAsync()' Throws.InstanceOf<InvalidOperationException>()' "SingleOrDefaultAsync should throw if the range returns more than 1 result"); " is 185.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The length of the statement  "					Assert.That(async () => await query.SingleAsync()' Throws.InstanceOf<InvalidOperationException>()' "SingleAsync should throw if the range returns more than 1 result"); " is 167.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The length of the statement  "					Assert.That(async () => await query.FirstAsync()' Throws.InstanceOf<InvalidOperationException>()' "FirstAsync should throw if the range returns nothing"); " is 154.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The length of the statement  "					Assert.That(async () => await query.LastAsync()' Throws.InstanceOf<InvalidOperationException>()' "LastAsync should throw if the range returns nothing"); " is 152.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The length of the statement  "					Assert.That(async () => await query.SingleAsync()' Throws.InstanceOf<InvalidOperationException>()' "SingleAsync should throw if the range returns nothing"); " is 156.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The length of the statement  "				var data = Enumerable.Range(0' 100).Select(x => new KeyValuePair<Slice' Slice>(location.Keys.Encode(x)' Slice.FromFixed32(x))); " is 127.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_MergeSort,The length of the statement  "					Assert.That(merge' Is.InstanceOf<MergeSortAsyncIterator<KeyValuePair<Slice' Slice>' int' KeyValuePair<Slice' Slice>>>()); " is 121.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Intersect,The length of the statement  "					Assert.That(merge' Is.InstanceOf<IntersectAsyncIterator<KeyValuePair<Slice' Slice>' int' KeyValuePair<Slice' Slice>>>()); " is 121.
Long Statement,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The length of the statement  "						(kv) => TuPack.Unpack(kv.Key).Substring(-2)' // note: keys come from any of the two ranges' so we must only keep the last 2 elements of the tuple " is 145.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadAsync_Should_Normally_Execute_Only_Once,The length of the statement  "				Assert.That(called' Is.EqualTo(1)); // note: if this assert fails' first ensure that you did not get a transient error while running this test! " is 143.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Rethrows_Regular_Exceptions,The length of the statement  "				Assert.That(async () => await task' Throws.InstanceOf<InvalidOperationException>()' "ReadAsync should rethrow any regular exceptions"); " is 135.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_On_Transient_Errors,The length of the statement  "							Assert.That(tr.Context.Retries' Is.EqualTo(called - 1)' "tr.Context.Retries should equal the number of calls to the handler' minus one"); " is 137.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The length of the statement  "			// => in versions of fdb_c.dll up to 2.0.7' this leaks memory because the internal cache is not cleared after each reset. " is 121.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The length of the statement  "				await Fdb.Bulk.WriteAsync(db' Enumerable.Range(0' 100 * 1000).Select(i => (location.Keys.Encode(i)' Slice.Random(rnd' 4096)))' this.Cancellation); " is 146.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The length of the statement  "				using (var timer = new System.Threading.Timer((_) => { Log($"WorkingSet: {Environment.WorkingSet:N0}' Managed: {GC.GetTotalMemory(false):N0}"); }' null' 1000' 1000)) " is 165.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The length of the statement  "				// to help see the effect in a profiler' dispose the transaction first' wait 5 sec then do a full GC' and then wait a bit before exiting the process " is 148.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_ReadOnly_Should_Deny_Write_Attempts,The length of the statement  "				Assert.That(async () => await t' Throws.InstanceOf<InvalidOperationException>()' "Forcing writes on a read-only transaction should fail"); " is 138.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The length of the statement  "			// A read-only transaction will never see changes that have been committed after its read-version' whether it uses Snapshot reads or not. " is 137.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The length of the statement  "				// simulate a slow scan that will sequentially read the values' while they are modified by other transactions in the background " is 127.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Mutating_Transaction_In_Success_Handler_Should_Fail,The length of the statement  "			// Verify that attempting to keep using the transaction instance in the success handler will throw and InvalidOperationException " is 128.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Mutating_Transaction_In_Success_Handler_Should_Fail,The length of the statement  "				Assert.That(await db.ReadAsync(tr => tr.GetAsync(key)' this.Cancellation)' Is.EqualTo(Slice.FromString("GetCommitVersion"))); " is 125.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Mutating_Transaction_In_Success_Handler_Should_Fail,The length of the statement  "						Assert.That(rvt.Status' Is.EqualTo(TaskStatus.RanToCompletion)' "GetReadVersionAsync() should complete immediately after commit"); " is 130.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Mutating_Transaction_In_Success_Handler_Should_Fail,The length of the statement  "				Assert.That(await db.ReadAsync(tr => tr.GetAsync(key)' this.Cancellation)' Is.EqualTo(Slice.FromString("GetReadVersion"))); " is 123.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_GetVersionStamp_Pattern,The length of the statement  "				Assert.That(await db.ReadAsync(tr => tr.GetAsync(key)' this.Cancellation)' Is.EqualTo(Slice.FromString("GetVersionStamp"))); " is 124.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_GetVersionStamp_Pattern,The length of the statement  "						return new { Stamp = tr.GetVersionStampAsync() }; //REVIEW: "return tr.GetVersionStampAsync()" will deadlock because 'ReadWrite' will try to await it! " is 150.
Long Statement,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_GetVersionStamp_Pattern,The length of the statement  "				Assert.That(await db.ReadAsync(tr => tr.GetAsync(key)' this.Cancellation)' Is.EqualTo(Slice.FromString("GetVersionStamp2"))); " is 125.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The length of the statement  "			Assert.That(subspace.Keys.Pack(("hello"' 123' "world")).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{<02>world<00>")); " is 128.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The length of the statement  "			Assert.That(subspace.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{<02>world<00><16><01><C8>")); " is 145.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_Copy_Does_Not_Share_Key_Buffer,The length of the statement  "			Assert.That(copy.ToString()' Is.EqualTo(original.ToString())' "Copy and original should have the same string representation"); " is 126.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Encode("hello"' 123' "world").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>")); " is 121.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Encode("hello"' 123' "world"' 456).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 138.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>")); " is 152.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!"' 789).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>")); " is 169.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{")); " is 124.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>")); " is 146.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 163.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>")); " is 177.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>")); " is 194.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack(("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>")); " is 121.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 138.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>")); " is 152.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>")); " is 169.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"))); " is 141.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456))); " is 158.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!"))); " is 172.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!"' 789))); " is 189.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Decode<string' int' string>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>"))' Is.EqualTo(("hello"' 123' "world"))); " is 149.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Decode<string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(("hello"' 123' "world"' 456))); " is 171.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Decode<string' int' string' int' string>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!"))); " is 193.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.Decode<string' int' string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!"' 789))); " is 215.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.DecodeFirst<string>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo("hello")); " is 158.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The length of the statement  "			Assert.That(location.Keys.DecodeLast<int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(789)); " is 150.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{")); " is 124.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The length of the statement  "			Assert.That(location.Keys.Encode("hello"' 123' "world").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>")); " is 121.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>")); " is 146.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The length of the statement  "			Assert.That(location.Keys.Pack(("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>")); " is 121.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The length of the statement  "			Assert.That(location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>"))' Is.EqualTo(("hello"' 123' "world"))); " is 128.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The length of the statement  "			location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>")' out string x1' out int x2' out string x3); " is 120.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			Assert.That(location.Keys["hello"' 123' "world"' 456].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 131.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			Assert.That(location.Keys[("hello"' 123' "world"' 456)].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 133.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			Assert.That(location.Keys.Encode("hello"' 123' "world"' 456).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 138.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 163.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")); " is 138.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			Assert.That(location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(("hello"' 123' "world"' 456))); " is 145.
Long Statement,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The length of the statement  "			location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>")' out string x1' out int x2' out string x3' out int x4); " is 144.
Long Statement,FoundationDB.Client.Tests,TestHelpers,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TestHelpers.cs,DumpSubspace,The length of the statement  "			Assert.That(db.GlobalSpace.Contains(subspace.GetPrefix())' Is.True' "Using a location outside of the test database partition!!! This is probably a bug in the test..."); " is 168.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_A_Snapshot_Version_Of_A_Transaction,The length of the statement  "					Assert.That(snapshot.Context' Is.SameAs(tr.Context)' "Snapshot transaction should have the same context as its parent"); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Creating_A_ReadOnly_Transaction_Throws_When_Writing,The length of the statement  "					Assert.That(() => tr2.ClearRange(location.Keys.Encode("ABC")' location.Keys.Encode("DEF"))' Throws.InvalidOperationException); " is 126.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Creating_Concurrent_Transactions_Are_Independent,The length of the statement  "					Assert.That(((FdbTransaction)tr1).Handler' Is.Not.EqualTo(((FdbTransaction)tr2).Handler)' "Should have different FDB_FUTURE* handles"); " is 135.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Token_During_Commit_Should_Abort_Task,The length of the statement  "			// we need to simulate some load on the db' to be able to cancel the token passed to Commit after it started' but before it completes " is 133.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Token_During_Commit_Should_Abort_Task,The length of the statement  "					Assert.That(async () => await t' Throws.InstanceOf<TaskCanceledException>()' "Cancelling a token passed to CommitAsync that is still pending should cancel the task"); " is 166.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The length of the statement  "				Assert.That(readVersion' Is.GreaterThanOrEqualTo(writeVersion)' "Read version should not be before previous committed version"); " is 128.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector_Outside_Boundaries,The length of the statement  "					Assert.That(async () => await tr.GetKeyAsync(KeySelector.FirstGreaterThan(FdbKey.MaxValue + FdbKey.MaxValue))' Throws.InstanceOf<FdbException>().With.Property("Code").EqualTo(FdbError.KeyOutsideLegalRange)); " is 207.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector_Outside_Boundaries,The length of the statement  "					Assert.That(async () => await tr.GetKeyAsync(KeySelector.LastLessThan(Fdb.System.MinValue))' Throws.InstanceOf<FdbException>().With.Property("Code").EqualTo(FdbError.KeyOutsideLegalRange)); " is 189.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Keys,The length of the statement  "					var selectors = Enumerable.Range(0' N).Select((i) => KeySelector.FirstGreaterOrEqual(location.Keys.Encode(i))).ToArray(); " is 121.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The length of the statement  "						Assert.That(() => tr.Atomic(key' Slice.FromFixed32(42)' FdbMutationType.Max)' Throws.InstanceOf<FdbException>().With.Property("Code").EqualTo(FdbError.InvalidMutationType)); " is 173.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The length of the statement  "					Assert.That(() => tr.Atomic(key' Slice.FromFixed32(42)' (FdbMutationType) 42)' Throws.InstanceOf<NotSupportedException>()); " is 123.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AppendIfFits,The length of the statement  "					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC")))' Is.EqualTo(Slice.Repeat('C'' 90_000) + Slice.Repeat('c'' 10_000))); " is 129.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_CommittedVersion_On_ReadOnly_Transactions,The length of the statement  "			//note: until CommitAsync() is called' the value of the committed version is unspecified' but current implementation returns -1 " is 127.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_CommittedVersion_On_Write_Transactions,The length of the statement  "			//note: until CommitAsync() is called' the value of the committed version is unspecified' but current implementation returns -1 " is 127.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_CommittedVersion_On_Write_Transactions,The length of the statement  "					Assert.That(ver' Is.GreaterThanOrEqualTo(readVersion)' "Committed version of write transaction should be >= the read version"); " is 127.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_CommittedVersion_After_Reset,The length of the statement  "			//note: until CommitAsync() is called' the value of the committed version is unspecified' but current implementation returns -1 " is 127.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_CommittedVersion_After_Reset,The length of the statement  "					Assert.That(cv2' Is.EqualTo(-1)' "Committed version of read-only transaction should be -1 even the transaction was previously used to write something"); " is 152.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The length of the statement  "					await TestHelpers.AssertThrowsFdbErrorAsync(() => tr1.CommitAsync()' FdbError.NotCommitted' "The Set(42) in TR2 should have conflicted with the GetRange(0' 100) in TR1"); " is 170.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The length of the statement  "				// if the other transaction insert something AFTER 50' then the result of our GetRange would not change (because of the implied limit = 1) " is 138.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The length of the statement  "				// note that if we write something in the range (0' 100) but AFTER 50' it should not conflict because we are doing a limit=1 " is 124.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "				// we will ask for the first key from >= 0' expecting 50' but if another transaction inserts something BEFORE 50' our key selector would have returned a different result' causing a conflict " is 189.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "					await TestHelpers.AssertThrowsFdbErrorAsync(() => tr1.CommitAsync()' FdbError.NotCommitted' "The Set(42) in TR2 should have conflicted with the GetKey(fGE{0}) in TR1"); " is 168.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "				// if the other transaction insert something AFTER 50' our key selector would have still returned the same result' and we would have any conflict " is 145.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "				// but if we have an large offset in the key selector' and another transaction insert something inside the offset window' the result would be different' and it should conflict " is 175.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "					await TestHelpers.AssertThrowsFdbErrorAsync(() => tr1.CommitAsync()' FdbError.NotCommitted' "The Set(77) in TR2 should have conflicted with the GetKey(fGE{50} + 1) in TR1"); " is 173.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "					// another transaction changes the VALUE of 50 and 100 (but does not change the fact that they exist nor add keys in between) " is 125.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "					await TestHelpers.AssertThrowsFdbErrorAsync(() => tr1.CommitAsync()' FdbError.NotCommitted' "The Set(100) in TR2 should have conflicted with the GetKey(fGT{50}) in TR1"); " is 170.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The length of the statement  "					// another transaction changes the VALUE of 50 and 100 (but does not change the fact that they exist nor add keys in between) " is 125.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation,The length of the statement  "					// make sure that T1 has seen the db BEFORE T2 gets executed' or else it will not really be initialized until after the first read or commit " is 140.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation,The length of the statement  "				// If we do the same thing' but this time without get GetReadVersion()' then T1 should see the change made by T2 because it's actual start is delayed " is 149.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes,The length of the statement  "			// - Regular reads see the writes made by the transaction itself' but not the writes made by other transactions that committed in between " is 137.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes,The length of the statement  "			// - Snapshot reads never see the writes made since the transaction read version' but will see the writes made by the transaction itself " is 136.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes,The length of the statement  "					Assert.That((await tr.GetAsync(A)).ToStringUtf8()' Is.EqualTo("aa")' "The transaction own writes should change the value of regular reads"); " is 140.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes,The length of the statement  "					Assert.That((await tr.GetAsync(B)).ToStringUtf8()' Is.EqualTo("b")' "Other transaction writes should not change the value of regular reads"); " is 141.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes,The length of the statement  "					Assert.That((await tr.Snapshot.GetAsync(C)).ToStringUtf8()' Is.EqualTo("cc")' "The transaction own writes should be visible in snapshot reads"); " is 144.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes,The length of the statement  "					Assert.That((await tr.Snapshot.GetAsync(D)).ToStringUtf8()' Is.EqualTo("d")' "Other transaction writes should not change the value of snapshot reads"); " is 151.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes_Pre_300,The length of the statement  "			// - Regular reads see the writes made by the transaction itself' but not the writes made by other transactions that committed in between " is 137.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes_Pre_300,The length of the statement  "			// - Snapshot reads never see the writes made since the transaction read version' but will see the writes made by the transaction itself " is 136.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes_Pre_300,The length of the statement  "					Assert.That((await tr.GetAsync(A)).ToStringUtf8()' Is.EqualTo("aa")' "The transaction own writes should change the value of regular reads"); " is 140.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes_Pre_300,The length of the statement  "					Assert.That((await tr.GetAsync(B)).ToStringUtf8()' Is.EqualTo("b")' "Other transaction writes should not change the value of regular reads"); " is 141.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes_Pre_300,The length of the statement  "					Assert.That((await tr.Snapshot.GetAsync(C)).ToStringUtf8()' Is.EqualTo("c")' "The transaction own writes should not change the value of snapshot reads"); " is 153.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation_From_Writes_Pre_300,The length of the statement  "					Assert.That((await tr.Snapshot.GetAsync(D)).ToStringUtf8()' Is.EqualTo("d")' "Other transaction writes should not change the value of snapshot reads"); " is 151.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The length of the statement  "					Assert.That(res' Is.EqualTo(new[] { "PRINT \"HELLO\""' "PRINT \"WORLD\""' "GOTO 10" })' "The transaction own writes should be visible by default"); " is 147.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The length of the statement  "					Assert.That(data.ToUnicode()' Is.EqualTo("a")' "The transaction own writes should not be seen with ReadYourWritesDisable option enabled"); " is 138.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The length of the statement  "					Assert.That(res' Is.EqualTo(new[] { "PRINT \"HELLO\""' "GOTO 10" })' "The transaction own writes should not be seen with ReadYourWritesDisable option enabled"); " is 160.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Has_Access_To_System_Keys,The length of the statement  "						() => tr.GetRange(Slice.FromByteString("\xFF")' Slice.FromByteString("\xFF\xFF")' new FdbRangeOptions { Limit = 10 }).ToListAsync()' " is 132.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Has_Access_To_System_Keys,The length of the statement  "					var keys = await tr.GetRange(Slice.FromByteString("\xFF")' Slice.FromByteString("\xFF\xFF")' new FdbRangeOptions { Limit = 10 }).ToListAsync(); " is 143.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The length of the statement  "				// By default' a transaction that gets reset or retried' clears the RetryLimit and Timeout settings' which needs to be reset everytime. " is 135.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The length of the statement  "				// But if the DefaultRetryLimit and DefaultTimeout are set on the database instance' they should automatically be re-applied inside transaction loops! " is 150.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Resets_RetryLimit_And_Timeout,The length of the statement  "					Assert.That(async () => await tr.OnErrorAsync(FdbError.PastVersion)' Throws.InstanceOf<FdbException>().With.Property("Code").EqualTo(FdbError.PastVersion)); " is 156.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The length of the statement  "					Assert.That(w1.Task.Status' Is.EqualTo(TaskStatus.WaitingForActivation)' "w1 should survive the transaction without being triggered"); " is 134.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The length of the statement  "					Assert.That(w2.Task.Status' Is.EqualTo(TaskStatus.WaitingForActivation)' "w2 should survive the transaction without being triggered"); " is 134.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The length of the statement  "					Assert.That(w1.Task.Status' Is.EqualTo(TaskStatus.RanToCompletion)' "w1 should have been triggered because key1 was changed"); " is 126.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The length of the statement  "					Assert.That(w2.Task.Status' Is.EqualTo(TaskStatus.WaitingForActivation)' "w2 should still be pending because key2 was untouched"); " is 130.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cannot_Use_Transaction_CancellationToken_With_Watch,The length of the statement  "					Assert.That(() => tr.Watch(key' tr.Cancellation)' Throws.Exception' "Watch(...) should reject the transaction's own cancellation"); " is 131.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Addresses_For_Key,The length of the statement  "						Assert.That(System.Net.IPAddress.TryParse(addresses[i]' out addr)' Is.True' "Result address {0} does not seem to be a valid IP address"' addresses[i]); " is 151.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Addresses_For_Key,The length of the statement  "						Assert.That(System.Net.IPAddress.TryParse(addresses[i]' out addr)' Is.True' "Result address {0} does not seem to be a valid IP address"' addresses[i]); " is 151.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The length of the statement  "					Log($"Cluster topology: {distinctNodes.Count} process(es) with {(replicationFactor == 1 ? "single" : replicationFactor == 2 ? "double" : replicationFactor == 3 ? "triple" : replicationFactor.ToString())} replication"); " is 218.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Simple_Read_Transaction,The length of the statement  "					//var slice = await tr.GetRange(location.Concat(Slice.FromString("A"))' location.Concat(Slice.FromString("Z"))).FirstOrDefaultAsync(); " is 134.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Simple_Read_Transaction,The length of the statement  "					//tr.AddReadConflictRange(new KeyRange(location.Concat(Slice.FromString("D"))' location.Concat(Slice.FromString("E")))); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Simple_Read_Transaction,The length of the statement  "					//tr.AddReadConflictRange(new KeyRange(location.Concat(Slice.FromString("C"))' location.Concat(Slice.FromString("G")))); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Simple_Read_Transaction,The length of the statement  "					//tr.AddReadConflictRange(new KeyRange(location.Concat(Slice.FromString("B"))' location.Concat(Slice.FromString("F")))); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Simple_Read_Transaction,The length of the statement  "					//tr.AddReadConflictRange(new KeyRange(location.Concat(Slice.FromString("A"))' location.Concat(Slice.FromString("Z")))); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(x0.TransactionVersion' Is.EqualTo(x.TransactionVersion)' "All generated stamps by one transaction should share the random token value "); " is 149.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(x0.TransactionOrder' Is.EqualTo(x.TransactionOrder)' "All generated stamps by one transaction should share the random token value "); " is 145.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(x1.TransactionVersion' Is.EqualTo(x.TransactionVersion)' "All generated stamps by one transaction should share the random token value "); " is 149.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(x1.TransactionOrder' Is.EqualTo(x.TransactionOrder)' "All generated stamps by one transaction should share the random token value "); " is 145.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(x42.TransactionVersion' Is.EqualTo(x.TransactionVersion)' "All generated stamps by one transaction should share the random token value "); " is 150.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(x42.TransactionOrder' Is.EqualTo(x.TransactionOrder)' "All generated stamps by one transaction should share the random token value "); " is 146.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(y42.TransactionVersion' Is.EqualTo(y.TransactionVersion)' "All generated stamps by one transaction should share the random token value "); " is 150.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The length of the statement  "					Assert.That(y42.TransactionOrder' Is.EqualTo(y.TransactionOrder)' "All generated stamps by one transaction should share the random token value "); " is 146.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The length of the statement  "					val = Slice.FromString("Hello'") + vs.ToSlice() + Slice.FromString("' World!"); // the middle of the value should be replaced with the VersionStamp " is 147.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The length of the statement  "						Assert.That(baz.Substring(10)' Is.EqualTo(Slice.FromString("Hello World!"))' "The rest of the slice should be untouched"); " is 122.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The length of the statement  "						Assert.That(jazz.Substring(6' 10)' Is.EqualTo(vsActual.ToSlice())' "The bytes 6 to 15 should match the resolved stamp"); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The length of the statement  "						Assert.That(jazz.Substring(0' 6)' Is.EqualTo(Slice.FromString("Hello'"))' "The start of the slice should be left intact"); " is 122.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The length of the statement  "						Assert.That(jazz.Substring(16)' Is.EqualTo(Slice.FromString("' World!"))' "The end of the slice should be left intact"); " is 120.
Long Statement,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The length of the statement  "							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion); " is 145.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The length of the statement  "			Assert.That(() => VersionStamp.Incomplete(65536)' Throws.ArgumentException' "User version cannot be larger than 0xFFFF"); " is 121.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The length of the statement  "			Assert.That(() => VersionStamp.Complete(0x0123456789ABCDEFUL' 0' -1)' Throws.ArgumentException' "User version cannot be negative"); " is 131.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The length of the statement  "			Assert.That(() => VersionStamp.Complete(0x0123456789ABCDEFUL' 0' 65536)' Throws.ArgumentException' "User version cannot be larger than 0xFFFF"); " is 144.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA))); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.Not.EqualTo(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC))); " is 142.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.Not.EqualTo(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA))); " is 142.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC))); " is 146.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.Not.EqualTo(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x3C3C))); " is 150.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.Not.EqualTo(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x5A5A' 0x33CC))); " is 150.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) == VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) == VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.False); " is 138.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) == VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.False); " is 138.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) == VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.True); " is 145.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) == VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x3C3C)' Is.False); " is 146.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) == VersionStamp.Complete(0x0123456789ABCDEFUL' 0x5A5A' 0x33CC)' Is.False); " is 146.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) != VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) != VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.True); " is 137.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) != VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.True); " is 137.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) != VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC)' Is.False); " is 146.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) != VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x3C3C)' Is.True); " is 145.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA' 0x33CC) != VersionStamp.Complete(0x0123456789ABCDEFUL' 0x5A5A' 0x33CC)' Is.True); " is 145.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) < VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) < VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AB)' Is.True); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) < VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55A9)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA) < VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.True); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) < VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF) < VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000)' Is.True); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000) < VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) <= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) <= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AB)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) <= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55A9)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA) <= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) <= VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF) <= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000) <= VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) > VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) > VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AB)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) > VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55A9)' Is.True); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA) > VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) > VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA)' Is.True); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF) > VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000)' Is.False); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000) > VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF)' Is.True); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) >= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) >= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AB)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) >= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55A9)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA) >= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA) >= VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF) >= VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000)' Is.False); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000) >= VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF)' Is.True); " is 129.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.LessThan(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AB))); " is 131.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.GreaterThan(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55A9))); " is 134.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA)' Is.LessThan(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA))); " is 131.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x55AA)' Is.GreaterThan(VersionStamp.Complete(0x0123456789ABCDEEUL' 0x55AA))); " is 134.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF)' Is.LessThan(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000))); " is 131.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_Equality,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEFUL' 0x0000)' Is.GreaterThan(VersionStamp.Complete(0x0123456789ABCDEEUL' 0xFFFF))); " is 134.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid80,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA).ToUuid80()' Is.EqualTo(new Uuid80(0x0123' 0x456789ABCDEF55AA))); " is 126.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid80,The length of the statement  "			Assert.That(VersionStamp.FromUuid80(new Uuid80(0x0123' 0x456789ABCDEF55AA))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA))); " is 140.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid80,The length of the statement  "			Assert.That((Uuid80) VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA)' Is.EqualTo(new Uuid80(0x0123' 0x456789ABCDEF55AA))); " is 124.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid80,The length of the statement  "			Assert.That((VersionStamp) new Uuid80(0x0123' 0x456789ABCDEF55AA)' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA))); " is 130.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid96,The length of the statement  "			Assert.That(VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA' 0x33CC).ToUuid96()' Is.EqualTo(new Uuid96(0x01234567U' 0x89ABCDEF55AA33CCUL))); " is 141.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid96,The length of the statement  "			Assert.That(VersionStamp.FromUuid96(new Uuid96(0xFFFFFFFF' 0xFFFFFFFFFFFF1234UL))' Is.EqualTo(VersionStamp.Incomplete(0x1234))); " is 128.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid96,The length of the statement  "			Assert.That(VersionStamp.FromUuid96(new Uuid96(0x01234567U' 0x89ABCDEF55AA33CCUL))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA' 0x33CC))); " is 155.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid96,The length of the statement  "			Assert.That((Uuid96) VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA' 0x33CC)' Is.EqualTo(new Uuid96(0x01234567U' 0x89ABCDEF55AA33CCUL))); " is 139.
Long Statement,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_VersionStamp_To_Uuid96,The length of the statement  "			Assert.That((VersionStamp) new Uuid96(0x01234567U' 0x89ABCDEF55AA33CCUL)' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 0x55AA' 0x33CC))); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Ordered_BinaryEncoder,The length of the statement  "			Assert.That(encoder.EncodeKey(new byte[] { 0' 0xFF' 0 }.AsSlice())' Is.EqualTo(Slice.Unescape("<01><00><FF><FF><00><FF><00>"))); " is 128.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Bytes,The length of the statement  "			// Byte arrays are stored with prefix '01' followed by the bytes' and terminated by '00'. All occurrences of '00' in the byte array are escaped with '00 FF' " is 156.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Bytes,The length of the statement  "			Assert.That(TuPack.EncodeKey(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }).ToString()' Is.EqualTo("<01><12>4Vx<9A><BC><DE><F0><00>")); " is 151.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Bytes,The length of the statement  "			Assert.That(TuPack.Pack(ValueTuple.Create(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 })).ToString()' Is.EqualTo("<01><12>4Vx<9A><BC><DE><F0><00>")); " is 165.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Bytes,The length of the statement  "			Assert.That(TuPack.EncodeKey(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }.AsSlice()).ToString()' Is.EqualTo("<01><12>4Vx<9A><BC><DE><F0><00>")); " is 161.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Bytes,The length of the statement  "			Assert.That(TuPack.Pack(ValueTuple.Create(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }.AsSlice())).ToString()' Is.EqualTo("<01><12>4Vx<9A><BC><DE><F0><00>")); " is 175.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Bytes,The length of the statement  "			Assert.That(TuPack.EncodeKey(new byte[] { 0x42' 0x00' 0x00' 0x42 }).ToString()' Is.EqualTo("<01>B<00><FF><00><FF>B<00>")); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Bytes,The length of the statement  "			Assert.That(TuPack.DecodeKey<byte[]>(Slice.Unescape("<01><01><23><45><67><89><AB><CD><EF><00>"))' Is.EqualTo(new byte[] { 0x01' 0x23' 0x45' 0x67' 0x89' 0xAB' 0xCD' 0xEF })); " is 173.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Bytes,The length of the statement  "			Assert.That(TuPack.DecodeKey<Slice>(Slice.Unescape("<01><01><23><45><67><89><AB><CD><EF><00>"))' Is.EqualTo(new byte[] { 0x01' 0x23' 0x45' 0x67' 0x89' 0xAB' 0xCD' 0xEF }.AsSlice())); " is 182.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Unicode_Strings,The length of the statement  "			// Unicode strings are stored with prefix '02' followed by the utf8 bytes' and terminated by '00'. All occurrences of '00' in the UTF8 bytes are escaped with '00 FF' " is 165.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Unicode_Strings,The length of the statement  "			Assert.That(TuPack.EncodeKey("こんにちは世界").ToString()' Is.EqualTo("<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")); " is 160.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Unicode_Strings,The length of the statement  "			t = TuPack.Unpack(Slice.Unescape("<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")); " is 130.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Guids,The length of the statement  "			// System.Guid are stored in Little-Endian' but RFC 4122's UUIDs are stored in Big Endian' so per convention we will swap them " is 126.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Guids,The length of the statement  "			Assert.That(TuPack.EncodeKey(Guid.Parse("00010203-0405-0607-0809-0a0b0c0d0e0f")).ToString()' Is.EqualTo("0<00><01><02><03><04><05><06><07><08><09><0A><0B><0C><0D><0E><0F>")); " is 174.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Guids,The length of the statement  "			Assert.That(TuPack.Pack(ValueTuple.Create(Guid.Parse("00010203-0405-0607-0809-0a0b0c0d0e0f"))).ToString()' Is.EqualTo("0<00><01><02><03><04><05><06><07><08><09><0A><0B><0C><0D><0E><0F>")); " is 188.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Guids,The length of the statement  "			Assert.That(TuPack.EncodeKey(Guid.Empty).ToString()' Is.EqualTo("0<00><00><00><00><00><00><00><00><00><00><00><00><00><00><00><00>")); " is 134.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Guids,The length of the statement  "			Assert.That(TuPack.DecodeKey<Guid>(Slice.Unescape("<30><00><01><02><03><04><05><06><07><08><09><0A><0B><0C><0D><0E><0F>"))' Is.EqualTo(Guid.Parse("00010203-0405-0607-0809-0a0b0c0d0e0f"))); " is 188.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Uuid128s,The length of the statement  "			Assert.That(TuPack.EncodeKey(Uuid128.Parse("00010203-0405-0607-0809-0a0b0c0d0e0f")).ToString()' Is.EqualTo("0<00><01><02><03><04><05><06><07><08><09><0A><0B><0C><0D><0E><0F>")); " is 177.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Uuid128s,The length of the statement  "			Assert.That(TuPack.Pack(ValueTuple.Create(Uuid128.Parse("00010203-0405-0607-0809-0a0b0c0d0e0f"))).ToString()' Is.EqualTo("0<00><01><02><03><04><05><06><07><08><09><0A><0B><0C><0D><0E><0F>")); " is 191.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Uuid128s,The length of the statement  "			Assert.That(TuPack.EncodeKey(Uuid128.Empty).ToString()' Is.EqualTo("0<00><00><00><00><00><00><00><00><00><00><00><00><00><00><00><00>")); " is 137.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Uuid128s,The length of the statement  "			Assert.That(TuPack.DecodeKey<Uuid128>(Slice.Unescape("<30><00><01><02><03><04><05><06><07><08><09><0A><0B><0C><0D><0E><0F>"))' Is.EqualTo(Uuid128.Parse("00010203-0405-0607-0809-0a0b0c0d0e0f"))); " is 194.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Uuid64s,The length of the statement  "			Assert.That(TuPack.EncodeKey(Uuid64.Parse("00010203-04050607")).ToString()' Is.EqualTo("1<00><01><02><03><04><05><06><07>")); " is 125.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Uuid64s,The length of the statement  "			Assert.That(TuPack.Pack(ValueTuple.Create(Uuid64.Parse("00010203-04050607"))).ToString()' Is.EqualTo("1<00><01><02><03><04><05><06><07>")); " is 139.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Uuid64s,The length of the statement  "			Assert.That(TuPack.EncodeKey(new Uuid64(0xBADC0FFEE0DDF00DUL)).ToString()' Is.EqualTo("1<BA><DC><0F><FE><E0><DD><F0><0D>")); " is 124.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Uuid64s,The length of the statement  "			Assert.That(TuPack.DecodeKey<Uuid64>(Slice.Unescape("<31><01><23><45><67><89><AB><CD><EF>"))' Is.EqualTo(Uuid64.Parse("01234567-89abcdef"))); " is 141.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Integers,The length of the statement  "			// - The prefix is 0x14 + the minimum number of bytes to encode the integer' from 0 to 8' so valid prefixes range from 0x14 to 0x1C " is 131.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<ulong>(() => TuplePackers.DeserializeUInt64(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeUInt64({0})"' encoded); " is 139.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<int>(() => TuplePackers.DeserializeInt32(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeInt32({0})"' encoded); " is 135.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<uint>(() => TuplePackers.DeserializeUInt32(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeUInt32({0})"' encoded); " is 138.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<short>(() => TuplePackers.DeserializeInt16(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeInt16({0})"' encoded); " is 137.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<ushort>(() => TuplePackers.DeserializeUInt16(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeUInt16({0})"' encoded); " is 140.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<sbyte>(() => TuplePackers.DeserializeSByte(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeSByte({0})"' encoded); " is 137.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The length of the statement  "					Assert.That<byte>(() => TuplePackers.DeserializeByte(slice)' Throws.InstanceOf<OverflowException>()' "DeserializeByte({0})"' encoded); " is 134.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Negative_Integers,The length of the statement  "			// - The prefix is 0x14 - the minimum number of bytes to encode the integer' from 0 to 8' so valid prefixes range from 0x0C to 0x13 " is 131.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The length of the statement  "			// 32-bit floats are stored in 5 bytes' using the prefix 0x20 followed by the High-Endian representation of their normalized form " is 129.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The length of the statement  "			Assert.That(TuPack.EncodeKey(float.NegativeInfinity).ToHexaString(' ')' Is.EqualTo("20 00 7F FF FF")' "float.NegativeInfinity"); " is 128.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The length of the statement  "			Assert.That(TuPack.EncodeKey(float.PositiveInfinity).ToHexaString(' ')' Is.EqualTo("20 FF 80 00 00")' "float.PositiveInfinity"); " is 128.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Singles,The length of the statement  "			Assert.That(TuPack.DecodeKey<float>(Slice.FromHexa("20 00 7F FF FF"))' Is.EqualTo(float.NegativeInfinity)' "float.NegativeInfinity"); " is 133.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Singles,The length of the statement  "			Assert.That(TuPack.DecodeKey<float>(Slice.FromHexa("20 FF 80 00 00"))' Is.EqualTo(float.PositiveInfinity)' "float.PositiveInfinity"); " is 133.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			// 64-bit floats are stored in 9 bytes' using the prefix 0x21 followed by the High-Endian representation of their normalized form " is 129.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.EncodeKey(double.MinValue).ToHexaString(' ')' Is.EqualTo("21 00 10 00 00 00 00 00 00")' "double.MinValue"); " is 126.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.EncodeKey(double.MaxValue).ToHexaString(' ')' Is.EqualTo("21 FF EF FF FF FF FF FF FF")' "double.MaxValue"); " is 126.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.EncodeKey(double.NegativeInfinity).ToHexaString(' ')' Is.EqualTo("21 00 0F FF FF FF FF FF FF")' "double.NegativeInfinity"); " is 142.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.EncodeKey(double.PositiveInfinity).ToHexaString(' ')' Is.EqualTo("21 FF F0 00 00 00 00 00 00")' "double.PositiveInfinity"); " is 142.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.EncodeKey(double.Epsilon).ToHexaString(' ')' Is.EqualTo("21 80 00 00 00 00 00 00 01")' "+double.Epsilon"); " is 125.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.EncodeKey(-double.Epsilon).ToHexaString(' ')' Is.EqualTo("21 7F FF FF FF FF FF FF FE")' "-double.Epsilon"); " is 126.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The length of the statement  "			Assert.That(TuPack.Unpack(TuPack.Pack(STuple.Empty.Append(Math.PI).Append(Math.E).Append(Math.Log(1)).Append(Math.Log(2))))' Is.EqualTo(tuple)); " is 144.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 00 10 00 00 00 00 00 00"))' Is.EqualTo(double.MinValue)' "double.MinValue"); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 FF EF FF FF FF FF FF FF"))' Is.EqualTo(double.MaxValue)' "double.MaxValue"); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 00 0F FF FF FF FF FF FF"))' Is.EqualTo(double.NegativeInfinity)' "double.NegativeInfinity"); " is 148.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 FF F0 00 00 00 00 00 00"))' Is.EqualTo(double.PositiveInfinity)' "double.PositiveInfinity"); " is 148.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 80 00 00 00 00 00 00 01"))' Is.EqualTo(double.Epsilon)' "+double.Epsilon"); " is 131.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 7F FF FF FF FF FF FF FE"))' Is.EqualTo(-double.Epsilon)' "-double.Epsilon"); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 00 07 FF FF FF FF FF FF"))' Is.EqualTo(double.NaN)' "double.NaN"); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The length of the statement  "			Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 00 07 FF FF FF FF FF 84"))' Is.EqualTo(double.NaN)' "double.NaN"); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Booleans,The length of the statement  "			// note: even though it would be tempting to convert the string "false" to False' it is not a standard behavior accross all bindings " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.Unpack(Slice.FromHexa("32 FF FF FF FF FF FF FF FF FF FF")).Get<VersionStamp>(0)' Is.EqualTo(VersionStamp.Incomplete())' "Incomplete()"); " is 155.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.Unpack(Slice.FromHexa("32 01 23 45 67 89 AB CD EF 04 D2")).Get<VersionStamp>(0)' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234))' "Complete(...' 1234)"); " is 184.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("32 FF FF FF FF FF FF FF FF FF FF"))' Is.EqualTo(VersionStamp.Incomplete())' "Incomplete()"); " is 151.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF 00 00"))' Is.EqualTo(VersionStamp.Incomplete(0))' "Incomplete(0)"); " is 159.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF 00 2A"))' Is.EqualTo(VersionStamp.Incomplete(42))' "Incomplete(42)"); " is 161.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF 01 C8"))' Is.EqualTo(VersionStamp.Incomplete(456))' "Incomplete(456)"); " is 163.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF FF FF"))' Is.EqualTo(VersionStamp.Incomplete(65535))' "Incomplete(65535)"); " is 167.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("32 01 23 45 67 89 AB CD EF 04 D2"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234))' "Complete(...' 1234)"); " is 180.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 00 00"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 0))' "Complete(...' 1234' 0)"); " is 192.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 00 2A"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 42))' "Complete(...' 1234' 42)"); " is 194.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF FF FF 00 2A"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 65535' 42))' "Complete(...' 65535' 42)"); " is 196.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The length of the statement  "			Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 FF FF"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 65535))' "Complete(...' 1234' 65535)"); " is 200.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The length of the statement  "			// 64-bit floats are stored in 9 bytes' using the prefix 0x21 followed by the High-Endian representation of their normalized form " is 129.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The length of the statement  "			Assert.That(TuPack.EncodeKey(TuPackUserType.Directory' 42' "Hello").ToHexaString(' ')' Is.EqualTo("FE 15 2A 02 48 65 6C 6C 6F 00")); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The length of the statement  "			Assert.That(TuPack.EncodeKey(42' TuPackUserType.Directory' "Hello").ToHexaString(' ')' Is.EqualTo("15 2A FE 02 48 65 6C 6C 6F 00")); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The length of the statement  "			Assert.That(TuPack.Pack((42' TuPackUserType.Directory' "Hello")).ToHexaString(' ')' Is.EqualTo("15 2A FE 02 48 65 6C 6C 6F 00")); " is 129.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Custom_Types,The length of the statement  "			Assert.That(TuPack.DecodeKey<int' TuPackUserType' string>(Slice.FromHexa("15 2A FE 02 48 65 6C 6C 6F 00"))' Is.EqualTo(STuple.Create(42' TuPackUserType.Directory' "Hello"))); " is 174.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Custom_Types,The length of the statement  "			Assert.That(TuPack.Unpack(Slice.FromHexa("15 2A FE 02 48 65 6C 6C 6F 00"))' Is.EqualTo(STuple.Create(42' TuPackUserType.Directory' "Hello"))); " is 142.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_IPAddress,The length of the statement  "			Assert.That(TuPack.Unpack(Slice.Unescape("<01><7F><00><FF><00><FF><01><00>")).Get<IPAddress>(0)' Is.EqualTo(IPAddress.Parse("127.0.0.1"))); " is 139.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_IPAddress,The length of the statement  "			Assert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape("<01><7F><00><FF><00><FF><01><00>"))' Is.EqualTo(IPAddress.Parse("127.0.0.1"))); " is 135.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_IPAddress,The length of the statement  "			Assert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape("<01><00><FF><00><FF><00><FF><00><FF><00>"))' Is.EqualTo(IPAddress.Parse("0.0.0.0"))); " is 141.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_IPAddress,The length of the statement  "			Assert.That(TuPack.DecodeKey<IPAddress>(Slice.Unescape("<01><01><02><03><04><00>"))' Is.EqualTo(IPAddress.Parse("1.2.3.4"))); " is 125.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The length of the statement  "			Assert.That(TuPack.EncodeKey<Guid?>(Guid.Empty)' Is.EqualTo(Slice.Unescape("0<00><00><00><00><00><00><00><00><00><00><00><00><00><00><00><00>"))); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The length of the statement  "			Assert.That(TuPack.EncodeKey<TimeSpan?>(TimeSpan.Zero)' Is.EqualTo(Slice.Unescape("!<80><00><00><00><00><00><00><00>"))); " is 121.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The length of the statement  "			Assert.That(TuPack.DecodeKey<Guid?>(Slice.Unescape("0<00><00><00><00><00><00><00><00><00><00><00><00><00><00><00><00>"))' Is.EqualTo(Guid.Empty)); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The length of the statement  "				STuple<int' STuple<int' int' int>' string' bool> t = TuPack.DecodeKey<STuple<int' STuple<int' int' int>' string' bool>>(packed); " is 128.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The length of the statement  "				Assert.That(TuPack.Unpack(Slice.Unescape("<05><05><00><05><00><00><05><00>"))' Is.EqualTo(STuple.Create(STuple.Create(STuple.Empty' STuple.Empty)' STuple.Empty))' "((()'())'())"); " is 179.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Numbers_Are_Sorted_Lexicographically,The length of the statement  "			// pick two numbers 'x' and 'y' at random' and check that the order of 'x' compared to 'y' is the same as 'pack(tuple(x))' compared to 'pack(tuple(y))' " is 151.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Numbers_Are_Sorted_Lexicographically,The length of the statement  "					Assert.Fail($"Tuples for x={x} and y={y} are not sorted properly ({dint} / {dtup}): t(x)='{t1.ToString()}' and t(y)='{t2.ToString()}'"); " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The length of the statement  "				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()' " is 127.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The length of the statement  "				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>") " is 184.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The length of the statement  "				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()' " is 133.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The length of the statement  "				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'") " is 185.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The length of the statement  "				TuPack.Pack(STuple.FromArray(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}}' 1' 2)).ToString()' " is 121.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The length of the statement  "				TuPack.Pack(STuple.FromEnumerable(new List<object> {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()' " is 124.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()' " is 124.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()' " is 135.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>") " is 187.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()' " is 141.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'") " is 188.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				TuPack.Pack(prefix' STuple.Create(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()' " is 124.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				TuPack.Pack(prefix' STuple.FromArray(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } }' 1' 2)).ToString()' " is 133.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The length of the statement  "				TuPack.Pack(prefix' STuple.FromEnumerable(new List<object> { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()' " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The length of the statement  "				Assert.That(packed[2].ToString()' Is.EqualTo("<02>baz<00><16><03><15>&<02>no<00><15><09>!<BF><E5><1E><B8>Q<EB><85><1F>")); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The length of the statement  "				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>") " is 184.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The length of the statement  "				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()' " is 123.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The length of the statement  "				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'") " is 185.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The length of the statement  "				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()' " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The length of the statement  "				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()' " is 133.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The length of the statement  "				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>") " is 187.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The length of the statement  "				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()' " is 139.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The length of the statement  "				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'") " is 188.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The length of the statement  "				TuPack.DecodeKey<string' int' bool' Slice' double>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>"))' " is 140.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The length of the statement  "				TuPack.DecodeKey<string' int' bool' Slice' double' long>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-"))' " is 155.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The length of the statement  "			//	TuPack.DecodeKey<string' int' bool' Slice' double' long' string>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>"))' " is 258.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The length of the statement  "			//	Is.EqualTo(STuple.Create("hello world"' 123' false' Slice.Create(new byte[] { 123' 1' 66' 0' 42 })' Math.PI' -1234L' "こんにちは世界")) " is 131.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The length of the statement  "			//	TuPack.DecodeKey<string' int' bool' Slice' double' long' string' bool>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00><15><01>"))' " is 272.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The length of the statement  "			//	Is.EqualTo(STuple.Create("hello world"' 123' false' Slice.Create(new byte[] { 123' 1' 66' 0' 42 })' Math.PI' -1234L' "こんにちは世界"' true)) " is 137.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Of_T,The length of the statement  "				if (i > 0) Assert.That(merged[i].Offset' Is.EqualTo(merged[i - 1].Offset + merged[i - 1].Count)' "All slices should be contiguous"); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The length of the statement  "			Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>()); " is 121.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00><00>")); " is 176.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00><FF>")); " is 174.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18><00>")); " is 197.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18><FF>")); " is 195.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<00>")); " is 198.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<FF>")); " is 196.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<02>TheEnd<00><00>")); " is 212.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<02>TheEnd<00><FF>")); " is 210.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00><00>")); " is 179.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00><FF>")); " is 177.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18><00>")); " is 200.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18><FF>")); " is 198.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<00>")); " is 201.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<FF>")); " is 199.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.Begin.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<02>TheEnd<00><00>")); " is 215.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The length of the statement  "			Assert.That(range.End.ToString()' Is.EqualTo("ABC<02>Hello<00><15>{'<12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>!<C0><09>!<FB>TD-<18>&<02>TheEnd<00><FF>")); " is 213.
Long Statement,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The length of the statement  "				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()' " is 120.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The length of the statement  "			Assert.That(STuple.Create(123).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123).Tail.GetHashCode())' "Hashcode should be stable"); " is 135.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The length of the statement  "			Assert.That(STuple.Create(123).GetHashCode()' Is.EqualTo(STuple.Create(123L).GetHashCode())' "Hashcode should be stable"); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true).Tail.GetHashCode())' "Hashcode should be stable"); " is 147.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1).GetHashCode())' "Hashcode should be stable"); " is 131.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true) == STuple.Create(123' true)' Is.True' "op_Equality should work for struct tuples"); " is 120.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true) != STuple.Create(123' true)' Is.False' "op_Inequality should work for struct tuples"); " is 123.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true) == STuple.Create(456' true)' Is.False' "op_Equality should work for struct tuples"); " is 121.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true) != STuple.Create(456' true)' Is.True' "op_Inequality should work for struct tuples"); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true) == STuple.Create(123' false)' Is.False' "op_Equality should work for struct tuples"); " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The length of the statement  "			Assert.That(STuple.Create(123' true) != STuple.Create(123' false)' Is.True' "op_Inequality should work for struct tuples"); " is 123.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo").GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo").Tail.GetHashCode())' "Hashcode should be stable"); " is 161.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo").GetHashCode())' "Hashcode should be stable"); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' true' "foo")' Is.True' "op_Equality should work for struct tuples"); " is 134.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' true' "foo")' Is.False' "op_Inequality should work for struct tuples"); " is 137.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") == STuple.Create(456' true' "foo")' Is.False' "op_Equality should work for struct tuples"); " is 135.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") != STuple.Create(456' true' "foo")' Is.True' "op_Inequality should work for struct tuples"); " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' false' "foo")' Is.False' "op_Equality should work for struct tuples"); " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' false' "foo")' Is.True' "op_Inequality should work for struct tuples"); " is 137.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' true' "bar")' Is.False' "op_Equality should work for struct tuples"); " is 135.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' true' "bar")' Is.True' "op_Inequality should work for struct tuples"); " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666).Tail.GetHashCode())' "Hashcode should be stable"); " is 171.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL).GetHashCode())' "Hashcode should be stable"); " is 157.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 666)' Is.True' "op_Equality should work for struct tuples"); " is 144.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 666)' Is.False' "op_Inequality should work for struct tuples"); " is 147.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(456' true' "foo"' 666)' Is.False' "op_Equality should work for struct tuples"); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(456' true' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples"); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' false' "foo"' 666)' Is.False' "op_Equality should work for struct tuples"); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' false' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples"); " is 147.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "bar"' 666)' Is.False' "op_Equality should work for struct tuples"); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "bar"' 666)' Is.True' "op_Inequality should work for struct tuples"); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 667)' Is.False' "op_Equality should work for struct tuples"); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 667)' Is.True' "op_Inequality should work for struct tuples"); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666' false).Tail.GetHashCode())' "Hashcode should be stable"); " is 185.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0).GetHashCode())' "Hashcode should be stable"); " is 167.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123' true' "foo"' 666' false).Append("bar").GetHashCode())' "Hashcode should be stable"); " is 192.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The length of the statement  "			Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0' "bar").GetHashCode())' "Hashcode should be stable"); " is 181.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "			// - .NET Core now returns the shortest string that will roundtrip back to the original' while NETFX may use more characters " is 124.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "			// - Both strings' once parsed back into a double' will return the exacte same double which will be == Math.PI' so the differences is only "costmetic"! " is 151.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "			// => this still mean that depending on the framework used by the unit test' we have to tweak the expected textual representation at runtime " is 140.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "			Assume.That(double.Parse(pi' CultureInfo.InvariantCulture)' Is.EqualTo(Math.PI)' "Something is wrong with double roundtripping on the selected framework!"); " is 156.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "				Assert.That(() => tn.Deconstruct(out item1' out item2' out item3' out item4' out item5)' Throws.InvalidOperationException); " is 123.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "				Assert.That(() => tn.Deconstruct(out item1' out item2' out item3' out item4' out item5' out item6)' Throws.InvalidOperationException); " is 134.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The length of the statement  "				Assert.That(() => tn.Deconstruct(out item1' out item2' out item3' out item4' out item5' out item6' out item7)' Throws.InvalidOperationException); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The length of the statement  "			//note: important to always cast to (ITuple) to be sure that we don't call specialized instance methods (tested elsewhere) " is 122.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The length of the statement  "			Assert.That(() => t.With((int a) => throw new InvalidOperationException("BOOM"))' Throws.InvalidOperationException.With.Message.EqualTo("BOOM")); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The length of the statement  "			Assert.That(t.As<string' int' bool' TimeSpan' string>()' Is.EqualTo(("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World"))); " is 126.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The length of the statement  "			Assert.That(STuple.Create<Guid>(Guid.Parse("102cb0aa-2151-4c72-9e9d-61cf2980cbd0")).ToString()' Is.EqualTo("({102cb0aa-2151-4c72-9e9d-61cf2980cbd0}')")); " is 153.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The length of the statement  "			Assert.That(STuple.Create<Uuid128>(Uuid128.Parse("102cb0aa-2151-4c72-9e9d-61cf2980cbd0")).ToString()' Is.EqualTo("({102cb0aa-2151-4c72-9e9d-61cf2980cbd0}')")); " is 159.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The length of the statement  "			Assert.That(STuple.Create<byte[]>(new byte[] { 0x02' 0x41' 0x42' 0x43' 0x00 }).ToString()' Is.EqualTo("(`<02>ABC<00>`')")); " is 123.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The length of the statement  "			Assert.That(STuple.Create<Slice>(new byte[] { 0x02' 0x41' 0x42' 0x43' 0x00 }.AsSlice()).ToString()' Is.EqualTo("(`<02>ABC<00>`')")); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The length of the statement  "			Assert.That(STuple.Create("Hello"' 123' "World"' '!'' false).ToString()' Is.EqualTo(@"(""Hello""' 123' ""World""' '!'' false)")); " is 129.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,The length of the statement  "				Assert.Fail("{0}: Count mismatch between observed {1} and expected {2} for tuple of type {3}"' message' t' STuple.Formatter.ToString(expected)' t.GetType().Name); " is 162.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,The length of the statement  "				Assert.That(ComparisonHelper.AreSimilar(obj' expected[p])' Is.True' "{0}: Iterator[{1}]' {2} ~= {3}"' message' p' obj' expected[p]); " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,The length of the statement  "			Assert.That(p' Is.EqualTo(expected.Length)' "{0}: t.GetEnumerator() returned only {1} elements out of {2} exected"' message' p' expected.Length); " is 145.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,The length of the statement  "				Assert.That(ComparisonHelper.AreSimilar(tmp[i]' expected[i])' Is.True' "{0}: CopyTo[{1}]' {2} ~= {3}"' message' i' tmp[i]' expected[i]); " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,The length of the statement  "			//	Assert.That(ComparisonHelper.AreSimilar(tmp[i]' expected[i])' Is.True' "{0}: Memoize.Items[{1}]' {2} ~= {3}"' message' i' tmp[i]' expected[i]); " is 146.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,VerifyTuple,The length of the statement  "					Assert.That(ComparisonHelper.AreSimilar(tmp[i]' expected[i])' Is.True' "{0}: Appended[{1}]' {2} ~= {3}"' message' i' tmp[i]' expected[i]); " is 138.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Substring_Equality,The length of the statement  "			// this is very unfortunate' but 'a == b' does NOT work because ITuple is an interface' and there is no known way to make it work :( " is 132.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Substring_Equality,The length of the statement  "			Assert.That(a == b' Is.False' "Tuples A and B' even if they contain the same values' are pointers to two different instances on the heap' and should not ReferenceEquals !"); " is 173.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Substring_Equality,The length of the statement  "			STuple<string> cc = STuple.Create<string>(new string('A'' 1)); // make sure we have an "A" string that is not the same pointers as the others " is 141.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Substring_Equality,The length of the statement  "			Assert.That(aa.Item1' Is.Not.SameAs(cc.Item1)' "Did your compiler optimize the new string('A'' 1). If so' need to find another way"); " is 133.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' true' 123))' Is.True' "('foo''true'123) == ('foo''true'123)"); " is 139.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("bar"' true' 123))' Is.False' "('foo''true'123) != ('bar''true'123)"); " is 140.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' false' 123))' Is.False' "('foo''true'123) != ('foo''false'123)"); " is 142.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' true' 456))' Is.False' "('foo''true'123) != ('foo''true'456)"); " is 140.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123))' Is.EqualTo(STuple.Create("foo"' true' 123).GetHashCode())); " is 121.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123))' Is.Not.EqualTo(STuple.Create("foo"' true' 456).GetHashCode())); " is 125.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -1L))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1)"); " is 155.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("bar"' true' 123' -1L))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1)"); " is 156.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' false' 123' -1L))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1)"); " is 158.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 456' -1L))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1)"); " is 156.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -2L))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2)"); " is 156.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L).GetHashCode())); " is 131.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' 123L).GetHashCode())); " is 136.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -1L' "narf"))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1''narf')"); " is 178.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("bar"' true' 123' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1''narf')"); " is 179.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' false' 123' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1''narf')"); " is 181.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 456' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1''narf')"); " is 179.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -2L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf')"); " is 179.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -1L' "zort"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''zort')"); " is 179.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf").GetHashCode())); " is 147.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' -1L' "narf").GetHashCode())); " is 151.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1''narf''PI)"); " is 199.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("bar"' true' 123' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1''narf''PI)"); " is 200.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' false' 123' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1''narf''PI)"); " is 202.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 456' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1''narf''PI)"); " is 200.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -2L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf''PI)"); " is 200.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "zort"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''zort''PI)"); " is 200.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "narf"' Math.E))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''narf''E)"); " is 198.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI).GetHashCode())); " is 165.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The length of the statement  "				Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.Not.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf"' Math.E).GetHashCode())); " is 168.
Long Statement,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The length of the statement  "			Check("('M''123456789'{4626466c-fdac-4230-af3a-4029fab668ab})"' STuple.Create('M'' 123456789' Guid.Parse("4626466c-fdac-4230-af3a-4029fab668ab"))); " is 147.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The length of the statement  "			Log("| Indexed Value           |  Count | Total % | Words |  Lit%  | 1-Bits |  Word% |   Bitmap | ratio % |   Legacy  | ratio % |" + (heatMaps ? " HeatMap |" : "")); " is 165.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The length of the statement  "			Log("|:------------------------|-------:|--------:|------:|-------:|-------:|-------:|---------:|--------:|----------:|--------:|" + (heatMaps ? ":-----------------------------------------------------------------------|" : "")); " is 228.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The length of the statement  "					"| {0'-24}| {1'6:N0} | {2'6:N2}% | {3'5:N0} | {4'5:N1}% | {5'6:N0} | {6'6:N2} | {7'8:N0} | {8'6:N2}% | {9'9:N0} | {10'6:N2}% |" + (heatMaps ? " `{11}` |" : "")' " is 160.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndexQueryResult,The length of the statement  "				Log($"- {docId}: {character.Name} {(character.Gender == "Male" ? "\u2642" : character.Gender == "Female" ? "\u2640" : character.Gender)}{(character.Dead ? " (\u271D)" : "")}"); " is 176.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The length of the statement  "				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }' " is 146.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The length of the statement  "				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }' " is 124.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The length of the statement  "				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }' " is 136.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The length of the statement  "				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }' " is 124.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Logical_Binary_Operations,The length of the statement  "			Assert.That(new SuperSlowUncompressedBitmap(and).ToBitString()' Is.EqualTo("0001000000000000000000000000000")' "a AND b"); " is 122.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Logical_Binary_Operations,The length of the statement  "			Assert.That(new SuperSlowUncompressedBitmap(or).ToBitString()' Is.EqualTo("0111000000000000000000000000000")' "a OR b"); " is 120.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Logical_Binary_Operations,The length of the statement  "			Assert.That(new SuperSlowUncompressedBitmap(xor).ToBitString()' Is.EqualTo("0110000000000000000000000000000")' "a XOR b"); " is 122.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Logical_Binary_Operations,The length of the statement  "			Assert.That(new SuperSlowUncompressedBitmap(andNot).ToBitString()' Is.EqualTo("0100000000000000000000000000000")' "a AND NOT b"); " is 129.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Logical_Binary_Operations,The length of the statement  "			Assert.That(new SuperSlowUncompressedBitmap(orNot).ToBitString()' Is.EqualTo("1101111111111111111111111111111")' "a OR NOT b"); " is 127.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The length of the statement  "			Func<int> makeHeadsOrTails = () => rnd.NextDouble() < 0.01 ? CoinToss.EDGE : rnd.NextDouble() <= 0.5 ? CoinToss.HEAD : CoinToss.TAIL; // biased! " is 144.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The length of the statement  "				Log("================================================================================================================================================================================================================================="); " is 233.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The length of the statement  "				Log("================================================================================================================================================================================================================================="); " is 233.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The length of the statement  "					MakeInserter<KeyValuePair<int' CoinToss>' double>(indexElevation' (kv) => kv.Key' (kv) => Math.Round(kv.Value.Elevation' 1' MidpointRounding.AwayFromZero))' " is 156.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The length of the statement  "			// simulate a dataset where 50'000 users create a stream of 10'000'000  events' with a non uniform distribution' ie: few users making the bulk' and a long tail of mostly inactive users " is 184.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The length of the statement  "			Log($"> PDF: P25={100.0 * p25 / K:G2} %' P50={100.0 * p50 / K:G2} %' P75={100.0 * p75 / K:G2} %' P95={100.0 * p95 / K:G2} %"); " is 126.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The length of the statement  "			// a user will be selected randomly' and will be able to produce a random number of consecutive events' until we reach the desired amount of events " is 147.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The length of the statement  "				Assert.That(index.TryGetValue(kv.Value' out CompressedBitmapBuilder builder)' Is.True' "{0} is missing from index"' kv.Value); " is 126.
Long Statement,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The length of the statement  "				log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits)); " is 220.
Long Statement,FoundationDB.Types.Json,JsonNetCodec<TDocument>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\JsonNetCodec.cs,EncodeInternal,The length of the statement  "				// Overflow protection (should never happen since a MemoryStream won't let us write more than 2G' but just to be sure ...) " is 122.
Long Statement,FoundationDB.Types.Json,JsonNetCodec<TDocument>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\JsonNetCodec.cs,EncodeInternal,The length of the statement  "				if (ms.Length > int.MaxValue) throw new OutOfMemoryException("The serialized JSON document exceeds the maximum allowed size"); " is 126.
Long Statement,FoundationDB.Types.ProtocolBuffers,ProtobufCodec<TDocument>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\ProtobufCodec.cs,EncodeInternal,The length of the statement  "				// Overflow protection (should never happen since a MemoryStream won't let us write more than 2G' but just to be sure ...) " is 122.
Long Statement,FoundationDB.Types.ProtocolBuffers,ProtobufCodec<TDocument>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\ProtobufCodec.cs,EncodeInternal,The length of the statement  "				if (ms.Length > int.MaxValue) throw new OutOfMemoryException("The serialized JSON document exceeds the maximum allowed size"); " is 126.
Long Statement,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The length of the statement  "						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false); " is 146.
Long Statement,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The length of the statement  "						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false); " is 123.
Long Statement,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The length of the statement  "						if (s.Array[i + s.Offset] != (byte)((1234567 + i) % data.Length)) Assert.Fail("Corrupted blob chunk at " + i + ": " + s[i' i + 128].ToString()); " is 144.
Long Statement,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Sequentially,The length of the statement  "				Log("> " + N + " completed in " + sw.Elapsed.TotalMilliseconds.ToString("N1") + " ms (" + (sw.Elapsed.TotalMilliseconds * 1000 / N).ToString("N0") + " µs/add)"); " is 161.
Long Statement,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The length of the statement  "					Log("> " + N + " completed in " + sw.Elapsed.TotalMilliseconds.ToString("N1") + " ms (" + (sw.Elapsed.TotalMilliseconds * 1000 / B).ToString("N0") + " µs/add)"); " is 161.
Long Statement,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,Test_Can_Insert_And_Retrieve_ProtoBuf_Documents,The length of the statement  "				// quickly define the metatype for Books' because I'm too lazy to write a .proto for this' or add [ProtoMember] attributes everywhere " is 133.
Long Statement,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The length of the statement  "			// Use a table as a backing store for the rules of a Poor Man's firewall' where each keys are the IPEndPoint (tcp only!)' and the values are "pass" or "block" " is 158.
Long Statement,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The length of the statement  "				var map = new FdbMap<IPEndPoint' string>("Firewall"' location.Partition.ByKey("Hosts").UsingEncoder(keyEncoder)' BinaryEncoding.StringEncoder); " is 143.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_SingleOrDefault,The length of the statement  "			Assert.That(() => source.SingleOrDefaultAsync().GetAwaiter().GetResult()' Throws.InstanceOf<InvalidOperationException>()); " is 122.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The length of the statement  "			Assert.That(() => source.ElementAtAsync(-1).GetAwaiter().GetResult()' Throws.InstanceOf<ArgumentOutOfRangeException>()); " is 120.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The length of the statement  "			Assert.That(() => source.ElementAtOrDefaultAsync(-1).GetAwaiter().GetResult()' Throws.InstanceOf<ArgumentOutOfRangeException>()); " is 129.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The length of the statement  "			Assert.That(async () => await (new[] {int.MaxValue' int.MaxValue}.ToAsyncEnumerable()).SumAsync()' Throws.InstanceOf<OverflowException>()); " is 139.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The length of the statement  "			Assert.That(async () => await (new[] {uint.MaxValue' uint.MaxValue}.ToAsyncEnumerable()).SumAsync()' Throws.InstanceOf<OverflowException>()); " is 141.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The length of the statement  "			Assert.That(async () => await (new[] {long.MaxValue' long.MaxValue}.ToAsyncEnumerable()).SumAsync()' Throws.InstanceOf<OverflowException>()); " is 141.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The length of the statement  "			Assert.That(async () => await (new[] {ulong.MaxValue' ulong.MaxValue}.ToAsyncEnumerable()).SumAsync()' Throws.InstanceOf<OverflowException>()); " is 143.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The length of the statement  "			var items = Enumerable.Range(0' 100).Select(idx => new { Index = idx' Integer = rnd.Next(0' 1000)' Decimal = rnd.NextDouble() }).ToList(); " is 138.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The length of the statement  "			Assert.That(async () => await (new[] { "FOO"' "BAR" }.ToAsyncEnumerable()).SumAsync(x => int.MaxValue)' Throws.InstanceOf<OverflowException>()); " is 144.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The length of the statement  "			Assert.That(async () => await (new[] { "FOO"' "BAR" }.ToAsyncEnumerable()).SumAsync(x => uint.MaxValue)' Throws.InstanceOf<OverflowException>()); " is 145.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The length of the statement  "			Assert.That(async () => await (new[] { "FOO"' "BAR" }.ToAsyncEnumerable()).SumAsync(x => long.MaxValue)' Throws.InstanceOf<OverflowException>()); " is 145.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The length of the statement  "			Assert.That(async () => await (new[] { "FOO"' "BAR" }.ToAsyncEnumerable()).SumAsync(x => ulong.MaxValue)' Throws.InstanceOf<OverflowException>()); " is 146.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The length of the statement  "			//REVIEW: right now the Window operator will produce small windows at the end of a period which may not be the most efficient... " is 128.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The length of the statement  "			//TODO: optimize the implementation to try to squeeze out small buffers with only a couple items' and update this unit test! " is 124.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The length of the statement  "			// pre-fetching more than 1 item on a consumer that is not buffered should not change the picture (since we can only read one ahead anyway) " is 139.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The length of the statement  "			//REVIEW: maybe we should change the implementation of the operator so that it still prefetch items in the background if the rest of the query is lagging a bit? " is 160.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The length of the statement  "			//REVIEW: maybe we should change the implementation of the operator so that it still prefetch items in the background if the rest of the query is lagging a bit? " is 160.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The length of the statement  "			Assert.That(withPrefetching5[0].Item2' Is.EqualTo(5)' "Generator must have only 4 calls in advance because it only produces 4 items at a time!"); " is 145.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The length of the statement  "			Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 })); " is 146.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The length of the statement  "			Assert.That(results.Select(t => t.Y).ToArray()' Is.EqualTo(new [] { 'B'' 'D'' 'D'' 'D'' 'F'' 'F'' 'F'' 'F'' 'F'' 'H'' 'H'' 'H'' 'H'' 'H'' 'H'' 'H'' 'J'' 'J'' 'J'' 'J'' 'J'' 'J'' 'J'' 'J'' 'J' })); " is 196.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Exceptions_Are_Propagated_To_Caller,The length of the statement  "				Assert.That(async () => await iterator.MoveNextAsync()' Throws.InstanceOf<FormatException>().With.Message.EqualTo("KABOOM")' "Should have failed"); " is 147.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The length of the statement  "					Log("[PRODUCER] publishing " + x + " at " + sw.Elapsed.TotalMilliseconds + " on #" + Thread.CurrentThread.ManagedThreadId); " is 123.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The length of the statement  "						Log("[consumer] onNextAsync(" + x + ") at " + sw.Elapsed.TotalMilliseconds + " on #" + Thread.CurrentThread.ManagedThreadId); " is 125.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,VerifyResult,The length of the statement  "				if (referenceError == null) Assert.Fail("{0}(): The async query failed but not there reference query {1} : {2}"' label' witness.Expression' asyncError); " is 152.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,VerifyResult,The length of the statement  "				Assert.Fail("{0}(): The referency query {1} failed ({2}) but the async query returned: {3}"' label' witness.Expression' referenceError.Message' asyncResult); " is 157.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,VerifySequence,The length of the statement  "				if (referenceError == null) Assert.Fail("{0}(): The async query failed but not there reference query {1} : {2}"' label' witness.Expression' asyncError); " is 152.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,VerifySequence,The length of the statement  "				Assert.Fail("{0}(): The referency query {1} failed ({2}) but the async query returned: {3}"' label' witness.Expression' referenceError.Message' asyncResult); " is 157.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The length of the statement  "			// Construct a random async query in parallel with the equivalent LINQ-to-Object and ensure that they produce the same result " is 125.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The length of the statement  "			// Then we call each of these methods: Count()' ToList()' ToArray()' First()' FirstOrDefault()' Single()' SingleOrDefault()' All()' None()' Any() " is 145.
Long Statement,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The length of the statement  "			// note: we will also create a third LINQ query using lambda expressions' just to be able to have a nicer ToString() in case of errors " is 134.
Long Statement,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The length of the statement  "					Assert.Fail("({0}) {1} ~= ({2}) {3}"' x == null ? "object" : x.GetType().Name' x' y == null ? "object" : y.GetType().Name' y); " is 126.
Long Statement,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The length of the statement  "					Assert.Fail("({0}) {1} !~= ({2}) {3}"' x == null ? "object" : x.GetType().Name' x' y == null ? "object" : y.GetType().Name' y); " is 127.
Long Statement,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The length of the statement  "			Assert.That(cmp.Compare(MutableSlice.Nil' MutableSlice.Empty)' Is.Zero' "Nil and Empty are considered similar regarding ordering"); " is 131.
Long Statement,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The length of the statement  "			Assert.That(cmp.Compare(MutableSlice.Empty' MutableSlice.Nil)' Is.Zero' "Nil and Empty are considered similar regarding ordering"); " is 131.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Empty,The length of the statement  "			Assert.That(MutableSlice.Empty.Array.Length' Is.GreaterThan(0)' "The backing array for MutableSlice.Empty should not be empty' in order to work properly with the fixed() operator!"); " is 182.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The length of the statement  "			Assert.That(() => MutableSlice.Random(default(System.Security.Cryptography.RandomNumberGenerator)' 16)' Throws.ArgumentNullException); " is 134.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringAscii,The length of the statement  "			Assert.That(MutableSlice.FromStringAscii("\xFF/ABC").GetBytes()' Is.EqualTo(new byte[] { 0xFF' 0x2F' 0x41' 0x42' 0x43 })); " is 122.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringAscii,The length of the statement  "			Assert.That(MutableSlice.FromStringAscii("héllô").GetBytes()' Is.EqualTo(new byte[] { (byte)'h'' 0xE9' (byte)'l'' (byte)'l'' 0xF4 })); " is 134.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringAscii,The length of the statement  "			Assert.That(MutableSlice.FromStringAscii("This is a test of the emergency encoding system").GetBytes()' Is.EqualTo(Encoding.ASCII.GetBytes("This is a test of the emergency encoding system"))); " is 192.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringAscii,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringAscii,The length of the statement  "			Assert.That(() => MutableSlice.FromStringAscii("hello 世界")' Throws.Exception' "String that contains code points >= 0x80 should throw"); " is 135.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAscii,The length of the statement  "			Assert.That(Encoding.ASCII.GetBytes("This is a test of the emergency encoding system").AsSlice().ToStringAscii()' Is.EqualTo("This is a test of the emergency encoding system")); " is 177.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAscii,The length of the statement  "			Assert.That(() => new byte[] { 0xFF' 0x41' 0x42' 0x43 }.AsSlice().ToStringAscii()' Throws.Exception' "\\xFF is not valid in 7-bit ASCII strings!"); " is 147.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAscii,The length of the statement  "			Assert.That(() => Encoding.Default.GetBytes("héllô").AsSlice().ToStringAscii()' Throws.Exception' "String that contain code points >= 0x80 should trow"); " is 153.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAscii,The length of the statement  "			Assert.That(() => Encoding.UTF8.GetBytes("héllo 世界").AsSlice().ToStringAscii()' Throws.Exception' "String that contains code points >= 0x80 should throw"); " is 155.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromByteString,The length of the statement  "			Assert.That(MutableSlice.FromByteString("\xFF/ABC").GetBytes()' Is.EqualTo(new [] { (byte) 0xFF' (byte) '/'' (byte) 'A'' (byte) 'B'' (byte) 'C' })); " is 148.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromByteString,The length of the statement  "			Assert.That(MutableSlice.FromByteString("héllô").GetBytes()' Is.EqualTo(new byte[] { (byte)'h'' 0xE9' (byte)'l'' (byte)'l'' 0xF4 })); " is 133.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringAnsi,The length of the statement  "			Assert.That(MutableSlice.FromStringAnsi("héllô").GetBytes()' Is.EqualTo(Encoding.Default.GetBytes("héllô"))); //note: this depends on your OS locale! " is 149.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAnsi,The length of the statement  "			Assert.That(Encoding.Default.GetBytes("héllô").AsSlice().ToStringAnsi()' Is.EqualTo("héllô")); //note: this depends on your OS locale! " is 134.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAnsi,The length of the statement  "			Assert.That(new[] { (byte) 0xFF' (byte) '/'' (byte) 'A'' (byte) 'B'' (byte) 'C' }.AsSlice().ToStringAnsi()' Is.EqualTo(Encoding.Default.GetString(new[] { (byte) 0xFF' (byte) '/'' (byte) 'A'' (byte) 'B'' (byte) 'C' }))); " is 219.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromString_Uses_UTF8,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(Encoding.UTF8.GetBytes("héllô").AsSlice().ToStringUtf8()' Is.EqualTo("héllô")); //note: this depends on your OS locale! " is 131.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(new byte[] { 0xEF' 0xBB' 0xBF' (byte) 'A'' (byte) 'B'' (byte) 'C' }.AsSlice().ToStringUtf8()' Is.EqualTo("ABC")' "BOM should be removed"); " is 150.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(new byte[] { 0xEF' 0xBB' 0xBF }.AsSlice().ToStringUtf8()' Is.EqualTo(String.Empty)' "BOM should also be removed for empty string"); " is 143.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(new byte[] { 0xEF' 0xBB' 0xBF' 0xEF' 0xBB' 0xBF' (byte) 'A'' (byte) 'B'' (byte) 'C' }.AsSlice().ToStringUtf8()' Is.EqualTo("\uFEFFABC")' "Only one BOM should be removed"); " is 183.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { 0xEF' 0xBB }.AsSlice().ToStringUtf8()' Throws.Exception' "Partial BOM should fail to decode"); " is 125.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xc3' 0x28' (byte) 'B' }.AsSlice().ToStringUtf8()' Throws.Exception' "Invalid 2-byte sequence"); " is 139.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xe2' 0x28' 0xa1' (byte) 'B' }.AsSlice().ToStringUtf8()' Throws.Exception' "Invalid 3-byte sequence"); " is 145.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xf0' 0x28' 0x8c' 0x28' (byte) 'B' }.AsSlice().ToStringUtf8()' Throws.Exception' "Invalid 4-byte sequence"); " is 151.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xf0' 0x28' /*..SNIP..*/ }.AsSlice().ToStringUtf8()' Throws.Exception' "Truncated 4-byte sequence"); " is 143.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(MutableSlice.FromStringUtf8WithBom("ABC").GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF' 0x41' 0x42' 0x43 })); " is 129.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(MutableSlice.FromStringUtf8WithBom("é").GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF' 0xC3' 0xA9 })); " is 121.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(slice.GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF }.Concat(Encoding.UTF8.GetBytes("héllø 世界")).ToArray())); " is 128.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(MutableSlice.FromStringUtf8WithBom("\xFF").GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF' 0xC3' 0xBF })); " is 124.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(MutableSlice.FromStringUtf8WithBom("\xFE").GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF' 0xC3' 0xBE })); " is 124.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The length of the statement  "			Assert.That(new byte[] { 0xF0' 0xDE' 0xBC' 0x9A' 0x78' 0x56' 0x34' 0x12 }.AsSlice().ToInt64()' Is.EqualTo(0x123456789ABCDEF0)); " is 127.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE }.AsSlice().ToInt64BE()' Is.EqualTo(0x123456789ABCDE)); " is 121.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }.AsSlice().ToInt64BE()' Is.EqualTo(0x123456789ABCDEF0)); " is 129.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The length of the statement  "			Assert.That(new byte[] { 0xDE' 0xBC' 0x9A' 0x78' 0x56' 0x34' 0x12 }.AsSlice().ToUInt64()' Is.EqualTo(0x123456789ABCDE)); " is 120.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The length of the statement  "			Assert.That(new byte[] { 0xF0' 0xDE' 0xBC' 0x9A' 0x78' 0x56' 0x34' 0x12 }.AsSlice().ToUInt64()' Is.EqualTo(0x123456789ABCDEF0)); " is 128.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE }.AsSlice().ToUInt64BE()' Is.EqualTo(0x123456789ABCDE)); " is 122.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }.AsSlice().ToUInt64BE()' Is.EqualTo(0x123456789ABCDEF0)); " is 130.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromSingle,The length of the statement  "				Assert.That(MutableSlice.FromSingle(value).ToHexaString()' Is.EqualTo(expected)' "Invalid encoding for {0} (Little Endian)"' value); " is 132.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromSingle,The length of the statement  "				Assert.That(MutableSlice.FromSingleBE(value).ToHexaString()' Is.EqualTo(SwapHexa(expected))' "Invalid encoding for {0} (Big Endian)"' value); " is 141.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The length of the statement  "				Assert.That(MutableSlice.FromHexa(value).ToSingle()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Little Endian)"' value); " is 128.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The length of the statement  "				Assert.That(MutableSlice.FromHexa(SwapHexa(value)).ToSingleBE()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Big Endian)"' value); " is 137.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDouble,The length of the statement  "				Assert.That(MutableSlice.FromDouble(value).ToHexaString()' Is.EqualTo(expected)' "Invalid encoding for {0} (Little Endian)"' value); " is 132.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDouble,The length of the statement  "				Assert.That(MutableSlice.FromDoubleBE(value).ToHexaString()' Is.EqualTo(SwapHexa(expected))' "Invalid encoding for {0} (Big Endian)"' value); " is 141.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The length of the statement  "				Assert.That(MutableSlice.FromHexa(value).ToDouble()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Little Endian)"' value); " is 128.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The length of the statement  "				Assert.That(MutableSlice.FromHexa(SwapHexa(value)).ToDoubleBE()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Big Endian)"' value); " is 137.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromGuid,The length of the statement  "			Assert.That(slice.ToHexaString()' Is.EqualTo("00112233445566778899AABBCCDDEEFF")' "MutableSlice.FromGuid() should use the RFC 4122 encoding"); " is 142.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToGuid,The length of the statement  "			Assert.That(guid.ToString()' Is.EqualTo("00112233-4455-6677-8899-aabbccddeeff")' "slice.ToGuid() should convert RFC 4122 encoded UUIDs into native System.Guid"); " is 161.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToGuid,The length of the statement  "			Assert.That(MutableSlice.FromStringAscii(guid.ToString()).ToGuid()' Is.EqualTo(guid)' "String literals should also be converted if they match the expected format"); " is 164.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUuid128,The length of the statement  "			Assert.That(slice.ToHexaString()' Is.EqualTo("00112233445566778899AABBCCDDEEFF")' "MutableSlice.FromUuid() should preserve RFC 4122 ordering"); " is 143.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid128,The length of the statement  "			Assert.That(uuid.ToString()' Is.EqualTo("00112233-4455-6677-8899-aabbccddeeff")' "slice.ToUuid() should preserve RFC 4122 ordering"); " is 133.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid128,The length of the statement  "			Assert.That(MutableSlice.FromStringAscii(uuid.ToString()).ToUuid128()' Is.EqualTo(uuid)' "String literals should also be converted if they match the expected format"); " is 167.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUuid64,The length of the statement  "			Assert.That(slice.ToHexaString()' Is.EqualTo("0123456789ABCDEF")' "MutableSlice.FromUuid64() should preserve ordering"); " is 120.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid64,The length of the statement  "			Assert.That(MutableSlice.FromStringAscii(uuid.ToString()).ToUuid64()' Is.EqualTo(uuid)' "String literals should also be converted if they match the expected format"); " is 166.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromBase64,The length of the statement  "			Assert.That(() => MutableSlice.FromBase64(Convert.ToBase64String(Encoding.UTF8.GetBytes("Hello' World!")).Substring(1))' Throws.InstanceOf<FormatException>()); " is 159.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			// That means that if all the asserts in this test fail' you should probably ensure that the expected results are still valid. " is 126.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.FromString("abc").GetHashCode()' Is.EqualTo(MutableSlice.FromString("abc").GetHashCode())' "Hashcode should not depend on the backing array"); " is 167.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.FromString("zabcz").Substring(1' 3).GetHashCode()' Is.EqualTo(MutableSlice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array"); " is 191.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.FromString("abc").GetHashCode()' Is.Not.EqualTo(MutableSlice.FromString("abcd").GetHashCode())' "Hashcode should include all the bytes"); " is 162.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.Comparer.Default.GetHashCode(MutableSlice.Nil)' Is.EqualTo(0)' "Nil hashcode should always be 0"); " is 123.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.Comparer.Default.GetHashCode(MutableSlice.Empty)' Is.Not.EqualTo(0)' "Empty hashcode should not be equal to 0"); " is 137.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.Comparer.Default.GetHashCode(MutableSlice.FromString("abc"))' Is.EqualTo(MutableSlice.FromString("abc").GetHashCode())' "Hashcode should not depend on the backing array"); " is 196.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.Comparer.Default.GetHashCode(MutableSlice.FromString("zabcz").Substring(1' 3))' Is.EqualTo(MutableSlice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array"); " is 220.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The length of the statement  "			Assert.That(MutableSlice.Comparer.Default.GetHashCode(MutableSlice.FromString("abc"))' Is.Not.EqualTo(MutableSlice.FromString("abcd").GetHashCode())' "Hashcode should include all the bytes"); " is 191.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStream,The length of the statement  "			Assert.That(MutableSlice.FromStream(Stream.Null)' Is.EqualTo(MutableSlice.Nil)' "Stream.Null should return MutableSlice.Nil"); " is 126.
Long Statement,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStream,The length of the statement  "				Assert.That(() => MutableSlice.FromStream(ms)' Throws.InstanceOf<InvalidOperationException>()' "Reading from a disposed stream should throw"); " is 142.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Empty,The length of the statement  "			Assert.That(Slice.Empty.Array.Length' Is.GreaterThan(0)' "The backing array for Slice.Empty should not be empty' in order to work properly with the fixed() operator!"); " is 168.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The length of the statement  "			Assert.That(() => Slice.Random(default(System.Security.Cryptography.RandomNumberGenerator)' 16)' Throws.ArgumentNullException); " is 127.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringAscii,The length of the statement  "			Assert.That(Slice.FromStringAscii("héllô").GetBytes()' Is.EqualTo(new byte[] { (byte)'h'' 0xE9' (byte)'l'' (byte)'l'' 0xF4 })); " is 127.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringAscii,The length of the statement  "			Assert.That(Slice.FromStringAscii("This is a test of the emergency encoding system").GetBytes()' Is.EqualTo(Encoding.ASCII.GetBytes("This is a test of the emergency encoding system"))); " is 185.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringAscii,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringAscii,The length of the statement  "			Assert.That(() => Slice.FromStringAscii("hello 世界")' Throws.Exception' "String that contains code points >= 0x80 should throw"); " is 128.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAscii,The length of the statement  "			Assert.That(Encoding.ASCII.GetBytes("This is a test of the emergency encoding system").AsSlice().ToStringAscii()' Is.EqualTo("This is a test of the emergency encoding system")); " is 177.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAscii,The length of the statement  "			Assert.That(() => new byte[] { 0xFF' 0x41' 0x42' 0x43 }.AsSlice().ToStringAscii()' Throws.Exception' "\\xFF is not valid in 7-bit ASCII strings!"); " is 147.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAscii,The length of the statement  "			Assert.That(() => Encoding.Default.GetBytes("héllô").AsSlice().ToStringAscii()' Throws.Exception' "String that contain code points >= 0x80 should trow"); " is 153.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAscii,The length of the statement  "			Assert.That(() => Encoding.UTF8.GetBytes("héllo 世界").AsSlice().ToStringAscii()' Throws.Exception' "String that contains code points >= 0x80 should throw"); " is 155.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromByteString,The length of the statement  "			Assert.That(Slice.FromByteString("\xFF/ABC").GetBytes()' Is.EqualTo(new [] { (byte) 0xFF' (byte) '/'' (byte) 'A'' (byte) 'B'' (byte) 'C' })); " is 141.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromByteString,The length of the statement  "			Assert.That(Slice.FromByteString("héllô").GetBytes()' Is.EqualTo(new byte[] { (byte)'h'' 0xE9' (byte)'l'' (byte)'l'' 0xF4 })); " is 126.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringAnsi,The length of the statement  "			Assert.That(Slice.FromStringAnsi("héllô").GetBytes()' Is.EqualTo(Encoding.Default.GetBytes("héllô"))); //note: this depends on your OS locale! " is 142.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAnsi,The length of the statement  "			Assert.That(Encoding.Default.GetBytes("héllô").AsSlice().ToStringAnsi()' Is.EqualTo("héllô")); //note: this depends on your OS locale! " is 134.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAnsi,The length of the statement  "			Assert.That(new[] { (byte) 0xFF' (byte) '/'' (byte) 'A'' (byte) 'B'' (byte) 'C' }.AsSlice().ToStringAnsi()' Is.EqualTo(Encoding.Default.GetString(new[] { (byte) 0xFF' (byte) '/'' (byte) 'A'' (byte) 'B'' (byte) 'C' }))); " is 219.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromString_Uses_UTF8,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(Encoding.UTF8.GetBytes("héllô").AsSlice().ToStringUtf8()' Is.EqualTo("héllô")); //note: this depends on your OS locale! " is 131.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(new byte[] { 0xEF' 0xBB' 0xBF' (byte) 'A'' (byte) 'B'' (byte) 'C' }.AsSlice().ToStringUtf8()' Is.EqualTo("ABC")' "BOM should be removed"); " is 150.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(new byte[] { 0xEF' 0xBB' 0xBF }.AsSlice().ToStringUtf8()' Is.EqualTo(String.Empty)' "BOM should also be removed for empty string"); " is 143.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(new byte[] { 0xEF' 0xBB' 0xBF' 0xEF' 0xBB' 0xBF' (byte) 'A'' (byte) 'B'' (byte) 'C' }.AsSlice().ToStringUtf8()' Is.EqualTo("\uFEFFABC")' "Only one BOM should be removed"); " is 183.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { 0xEF' 0xBB }.AsSlice().ToStringUtf8()' Throws.Exception' "Partial BOM should fail to decode"); " is 125.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xc3' 0x28' (byte) 'B' }.AsSlice().ToStringUtf8()' Throws.Exception' "Invalid 2-byte sequence"); " is 139.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xe2' 0x28' 0xa1' (byte) 'B' }.AsSlice().ToStringUtf8()' Throws.Exception' "Invalid 3-byte sequence"); " is 145.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xf0' 0x28' 0x8c' 0x28' (byte) 'B' }.AsSlice().ToStringUtf8()' Throws.Exception' "Invalid 4-byte sequence"); " is 151.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringUtf8,The length of the statement  "			Assert.That(() => new byte[] { (byte) 'A'' 0xf0' 0x28' /*..SNIP..*/ }.AsSlice().ToStringUtf8()' Throws.Exception' "Truncated 4-byte sequence"); " is 143.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(Slice.FromStringUtf8WithBom("ABC").GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF' 0x41' 0x42' 0x43 })); " is 122.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8WithBom,The length of the statement  "			// note: the line below should contain two kanjis. If your editor displays '??' or squares' it is probably not able to display unicode chars properly " is 149.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8WithBom,The length of the statement  "			Assert.That(slice.GetBytes()' Is.EqualTo(new byte[] { 0xEF' 0xBB' 0xBF }.Concat(Encoding.UTF8.GetBytes("héllø 世界")).ToArray())); " is 128.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The length of the statement  "			Assert.That(new byte[] { 0xF0' 0xDE' 0xBC' 0x9A' 0x78' 0x56' 0x34' 0x12 }.AsSlice().ToInt64()' Is.EqualTo(0x123456789ABCDEF0)); " is 127.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE }.AsSlice().ToInt64BE()' Is.EqualTo(0x123456789ABCDE)); " is 121.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }.AsSlice().ToInt64BE()' Is.EqualTo(0x123456789ABCDEF0)); " is 129.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The length of the statement  "			Assert.That(new byte[] { 0xDE' 0xBC' 0x9A' 0x78' 0x56' 0x34' 0x12 }.AsSlice().ToUInt64()' Is.EqualTo(0x123456789ABCDE)); " is 120.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The length of the statement  "			Assert.That(new byte[] { 0xF0' 0xDE' 0xBC' 0x9A' 0x78' 0x56' 0x34' 0x12 }.AsSlice().ToUInt64()' Is.EqualTo(0x123456789ABCDEF0)); " is 128.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE }.AsSlice().ToUInt64BE()' Is.EqualTo(0x123456789ABCDE)); " is 122.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The length of the statement  "			Assert.That(new byte[] { 0x12' 0x34' 0x56' 0x78' 0x9A' 0xBC' 0xDE' 0xF0 }.AsSlice().ToUInt64BE()' Is.EqualTo(0x123456789ABCDEF0)); " is 130.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromSingle,The length of the statement  "				Assert.That(Slice.FromSingle(value).ToHexaString()' Is.EqualTo(expected)' "Invalid encoding for {0} (Little Endian)"' value); " is 125.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromSingle,The length of the statement  "				Assert.That(Slice.FromSingleBE(value).ToHexaString()' Is.EqualTo(SwapHexa(expected))' "Invalid encoding for {0} (Big Endian)"' value); " is 134.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The length of the statement  "				Assert.That(Slice.FromHexa(value).ToSingle()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Little Endian)"' value); " is 121.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The length of the statement  "				Assert.That(Slice.FromHexa(SwapHexa(value)).ToSingleBE()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Big Endian)"' value); " is 130.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDouble,The length of the statement  "				Assert.That(Slice.FromDouble(value).ToHexaString()' Is.EqualTo(expected)' "Invalid encoding for {0} (Little Endian)"' value); " is 125.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDouble,The length of the statement  "				Assert.That(Slice.FromDoubleBE(value).ToHexaString()' Is.EqualTo(SwapHexa(expected))' "Invalid encoding for {0} (Big Endian)"' value); " is 134.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The length of the statement  "				Assert.That(Slice.FromHexa(value).ToDouble()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Little Endian)"' value); " is 121.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The length of the statement  "				Assert.That(Slice.FromHexa(SwapHexa(value)).ToDoubleBE()' Is.EqualTo(expected)' "Invalid decoding for '{0}' (Big Endian)"' value); " is 130.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromGuid,The length of the statement  "			Assert.That(slice.ToHexaString()' Is.EqualTo("00112233445566778899AABBCCDDEEFF")' "Slice.FromGuid() should use the RFC 4122 encoding"); " is 135.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToGuid,The length of the statement  "			Assert.That(guid.ToString()' Is.EqualTo("00112233-4455-6677-8899-aabbccddeeff")' "slice.ToGuid() should convert RFC 4122 encoded UUIDs into native System.Guid"); " is 161.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToGuid,The length of the statement  "			Assert.That(Slice.FromStringAscii(guid.ToString()).ToGuid()' Is.EqualTo(guid)' "String literals should also be converted if they match the expected format"); " is 157.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUuid128,The length of the statement  "			Assert.That(slice.ToHexaString()' Is.EqualTo("00112233445566778899AABBCCDDEEFF")' "Slice.FromUuid() should preserve RFC 4122 ordering"); " is 136.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid128,The length of the statement  "			Assert.That(uuid.ToString()' Is.EqualTo("00112233-4455-6677-8899-aabbccddeeff")' "slice.ToUuid() should preserve RFC 4122 ordering"); " is 133.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid128,The length of the statement  "			Assert.That(Slice.FromStringAscii(uuid.ToString()).ToUuid128()' Is.EqualTo(uuid)' "String literals should also be converted if they match the expected format"); " is 160.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid64,The length of the statement  "			Assert.That(Slice.FromStringAscii(uuid.ToString()).ToUuid64()' Is.EqualTo(uuid)' "String literals should also be converted if they match the expected format"); " is 159.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromBase64,The length of the statement  "			Assert.That(() => Slice.FromBase64(Convert.ToBase64String(Encoding.UTF8.GetBytes("Hello' World!")).Substring(1))' Throws.InstanceOf<FormatException>()); " is 152.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			// That means that if all the asserts in this test fail' you should probably ensure that the expected results are still valid. " is 126.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.FromString("abc").GetHashCode()' Is.EqualTo(Slice.FromString("abc").GetHashCode())' "Hashcode should not depend on the backing array"); " is 153.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.FromString("zabcz").Substring(1' 3).GetHashCode()' Is.EqualTo(Slice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array"); " is 177.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.FromString("abc").GetHashCode()' Is.Not.EqualTo(Slice.FromString("abcd").GetHashCode())' "Hashcode should include all the bytes"); " is 148.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.Comparer.Default.GetHashCode(Slice.Empty)' Is.Not.EqualTo(0)' "Empty hashcode should not be equal to 0"); " is 123.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.Comparer.Default.GetHashCode(Slice.FromString("abc"))' Is.EqualTo(Slice.FromString("abc").GetHashCode())' "Hashcode should not depend on the backing array"); " is 175.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.Comparer.Default.GetHashCode(Slice.FromString("zabcz").Substring(1' 3))' Is.EqualTo(Slice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array"); " is 199.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The length of the statement  "			Assert.That(Slice.Comparer.Default.GetHashCode(Slice.FromString("abc"))' Is.Not.EqualTo(Slice.FromString("abcd").GetHashCode())' "Hashcode should include all the bytes"); " is 170.
Long Statement,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStream,The length of the statement  "				Assert.That(() => Slice.FromStream(ms)' Throws.InstanceOf<InvalidOperationException>()' "Reading from a disposed stream should throw"); " is 135.
Long Statement,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,PerformWriterTest,The length of the statement  "			Assert.That(writer.ToSlice().ToHexaString(' ')' Is.EqualTo(expectedResult)' "Value {0} ({1}) was not properly packed. {2}"' value == null ? "<null>" : value is string ? Clean(value as string) : value.ToString()' (value == null ? "null" : value.GetType().Name)' message); " is 270.
Long Statement,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The length of the statement  "			Assert.That(slice.Offset' Is.EqualTo(0)); //REVIEW: should we return (Buffer' Position' 0) instead of (EmptyArray' 0' 0) ? " is 122.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("BADC0FFE-E0DDF00D").ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)' "Should be case-insensitive"); " is 122.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("BADC0FFEE0DDF00D").ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)' "Should be case-insensitive"); " is 121.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("{BADC0FFE-E0DDF00D}").ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)' "Should be case-insensitive"); " is 124.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("{BADC0FFEE0DDF00D}").ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)' "should be case-insensitive"); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid64.Parse("12345678-9ABCDEFG")' Throws.InstanceOf<FormatException>()' "Invalid hexa character 'G'"); " is 121.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid64.Parse(" badc0ffe-e0ddf00d")' Throws.InstanceOf<FormatException>()' "Extra space at the start"); " is 120.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("hello badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("hello badc0ffee0ddf00d world!".AsSpan().Slice(6' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)); " is 126.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("hello badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)); " is 141.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid64.Parse("hello badc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL)); " is 140.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The length of the statement  "			Assert.That(() => Uuid64.FromBase62("LygHa16AHYG")' Throws.InstanceOf<OverflowException>()' "ulong.MaxValue + 1 => OVERFLOW"); " is 126.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Ordering,The length of the statement  "			Assert.That(uids.Select(x => x.ToString())' Is.Ordered.Using<string>(StringComparer.Ordinal)' "order should be preserved when ordering by text (hexa)"); " is 152.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Ordering,The length of the statement  "			Assert.That(uids.Select(x => x.ToString("Z"))' Is.Ordered.Using<string>(StringComparer.Ordinal)' "order should be preserved when ordering by text (base62)"); " is 157.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The length of the statement  "			byte[] buf = { 0x55' 0x55' 0x55' 0x55' /* start */ 0x01' 0x23' 0x45' 0x67' 0x89' 0xAB' 0xCD' 0xEF' /* stop */ 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA }; " is 159.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The length of the statement  "			Assert.That(() => original.WriteTo(Span<byte>.Empty)' Throws.InstanceOf<ArgumentException>()' "Target buffer is empty"); " is 120.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The length of the statement  "			Assert.That(() => original.WriteTo(scratch.Span.Slice(0' 7))' Throws.InstanceOf<ArgumentException>()' "Target buffer is too small"); " is 132.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The length of the statement  "			Assert.That(scratch.ToString("X")' Is.EqualTo("AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA")' "Buffer should not have been overwritten!"); " is 142.
Long Statement,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The length of the statement  "			Assert.That(scratch.ToString("X")' Is.EqualTo("AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA")' "Buffer should not have been overwritten!"); " is 142.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("ABCD-BADC0FFE-E0DDF00D")' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))' "Should be case-insensitive"); " is 136.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("ABCDBADC0FFEE0DDF00D")' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))' "Should be case-insensitive"); " is 134.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("{ABCD-BADC0FFE-E0DDF00D}")' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))' "Should be case-insensitive"); " is 138.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("{ABCDBADC0FFEE0DDF00D}")' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))' "should be case-insensitive"); " is 136.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse("abcd-12345678-9ABCDEFG")' Throws.InstanceOf<FormatException>()' "Invalid hexa character 'G'"); " is 126.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse("0000-00000000-0000000 ")' Throws.InstanceOf<FormatException>()' "Two short + extra space"); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse("abcdbaadc0ffe-e0ddf00")' Throws.InstanceOf<FormatException>()' "'-' at invalid position"); " is 122.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse("abcd-badc0fe-ee0ddf00d")' Throws.InstanceOf<FormatException>()' "'-' at invalid position"); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse("abcdb-adc0ffe-e0ddf00d")' Throws.InstanceOf<FormatException>()' "'-' at invalid position"); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse("abcd-badc0ffe-e0ddf00d ")' Throws.InstanceOf<FormatException>()' "Extra space at the end"); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid80.Parse(" abcd-badc0ffe-e0ddf00d")' Throws.InstanceOf<FormatException>()' "Extra space at the start"); " is 125.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("hello abcd-badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))); " is 141.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("hello abcdbadc0ffee0ddf00d world!".AsSpan().Slice(6' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))); " is 139.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("abcd-badc0ffe-e0ddf00d".ToCharArray().AsSpan())' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))); " is 129.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("abcdbadc0ffee0ddf00d".ToCharArray().AsSpan())' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("hello abcd-badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))); " is 155.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid80.Parse("hello abcdbadc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL))); " is 153.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The length of the statement  "			Assert.That(uids.Select(x => x.ToString())' Is.Ordered.Using<string>(StringComparer.Ordinal)' "order should be preserved when ordering by text (hexa)"); " is 152.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The length of the statement  "			byte[] buf = { 0x55' 0x55' 0x55' 0x55' /* start */ 0x1E' 0x2D' 0x01' 0x23' 0x45' 0x67' 0x89' 0xAB' 0xCD' 0xEF' /* stop */ 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA }; " is 171.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The length of the statement  "			Assert.That(() => original.WriteTo(MutableSlice.Empty.Span)' Throws.InstanceOf<ArgumentException>()' "Target buffer is empty"); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The length of the statement  "			Assert.That(() => original.WriteTo(scratch.Substring(0' 9).Span)' Throws.InstanceOf<ArgumentException>()' "Target buffer is too small"); " is 136.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The length of the statement  "			Assert.That(scratch.ToString("X")' Is.EqualTo("AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA")' "Buffer should not have been overwritten!"); " is 142.
Long Statement,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The length of the statement  "			Assert.That(scratch.ToString("X")' Is.EqualTo("AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA")' "Buffer should not have been overwritten!"); " is 154.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("89ABCDEF-BADC0FFE-E0DDF00D")' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))' "Should be case-insensitive"); " is 144.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("89ABCDEFBADC0FFEE0DDF00D")' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))' "Should be case-insensitive"); " is 142.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("{89ABCDEF-BADC0FFE-E0DDF00D}")' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))' "Should be case-insensitive"); " is 146.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("{89ABCDEFBADC0FFEE0DDF00D}")' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))' "should be case-insensitive"); " is 144.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("89abcdef-12345678-9ABCDEFG")' Throws.InstanceOf<FormatException>()' "Invalid hexa character 'G'"); " is 130.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("0000-00000000-0000000 ")' Throws.InstanceOf<FormatException>()' "Two short + extra space"); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("89abcdef-badc0ffe-e0ddf00")' Throws.InstanceOf<FormatException>()' "Missing last char"); " is 120.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("89abcdefbaadc0ffe-e0ddf00")' Throws.InstanceOf<FormatException>()' "'-' at invalid position"); " is 126.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("89abcdef-badc0fe-ee0ddf00d")' Throws.InstanceOf<FormatException>()' "'-' at invalid position"); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("89abcdefb-adc0ffe-e0ddf00d")' Throws.InstanceOf<FormatException>()' "'-' at invalid position"); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse("89abcdef-badc0ffe-e0ddf00d ")' Throws.InstanceOf<FormatException>()' "Extra space at the end"); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(() => Uuid96.Parse(" 89abcdef-badc0ffe-e0ddf00d")' Throws.InstanceOf<FormatException>()' "Extra space at the start"); " is 129.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("89abcdef-badc0ffe-e0ddf00d".AsSpan())' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 123.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("89abcdefbadc0ffee0ddf00d".AsSpan())' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 121.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("hello 89abcdef-badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 149.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("hello 89abcdefbadc0ffee0ddf00d world!".AsSpan().Slice(6' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 147.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("89abcdef-badc0ffe-e0ddf00d".ToCharArray().AsSpan())' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 137.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("89abcdefbadc0ffee0ddf00d".ToCharArray().AsSpan())' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 135.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("hello 89abcdef-badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 163.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The length of the statement  "			Assert.That(Uuid96.Parse("hello 89abcdefbadc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL))); " is 161.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The length of the statement  "			Assert.That(uids.Select(x => x.ToString())' Is.Ordered.Using<string>(StringComparer.Ordinal)' "order should be preserved when ordering by text (hexa)"); " is 152.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The length of the statement  "			byte[] buf = { 0x55' 0x55' 0x55' 0x55' /* start */ 0x1E' 0x2D' 0x3C' 0x4B' 0x01' 0x23' 0x45' 0x67' 0x89' 0xAB' 0xCD' 0xEF' /* stop */ 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA' 0xAA }; " is 183.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The length of the statement  "			Assert.That(() => original.WriteTo(MutableSlice.Empty.Span)' Throws.InstanceOf<ArgumentException>()' "Target buffer is empty"); " is 127.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The length of the statement  "			Assert.That(() => original.WriteTo(scratch.Span.Slice(0' 11))' Throws.InstanceOf<ArgumentException>()' "Target buffer is too small"); " is 133.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The length of the statement  "			Assert.That(scratch.ToString("X")' Is.EqualTo("AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA")' "Buffer should not have been overwritten!"); " is 142.
Long Statement,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The length of the statement  "			Assert.That(scratch.ToString("X")' Is.EqualTo("AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA")' "Buffer should not have been overwritten!"); " is 154.
Empty Catch Block,FoundationDB.Client.Tests,FdbTest,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\FdbTest.cs,AfterEachTest,The method has an empty catch block.
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: const int ITER = 10;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: const int N = 20;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: const int K = 5;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: var task = Task.Run(  							async () =>  							{  								await Task.Delay(10 + rnd.Next(50)' token);  								Log("[source#" + Thread.CurrentThread.ManagedThreadId + "] produced " + x);  								return x;  							}'  							token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: var task = Task.Run(  							async () =>  							{  								await Task.Delay(10 + rnd.Next(50)' token);  								Log("[source#" + Thread.CurrentThread.ManagedThreadId + "] produced " + x);  								return x;  							}'  							token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(15 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Arrival_Order,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(15 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: const int ITER = 10;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: const int N = 20;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: const int K = 5;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: string[] stacks = new string[16];
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var target = AsyncHelpers.CreateTarget<int>(  						onNext: (x' ct) =>  						{  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onNext {x}");  							list.Add(x);  						}'  						onCompleted: () =>  						{  							int n = Interlocked.Increment(ref completeCount);  							stacks[n - 1] = Environment.StackTrace;  							if (n > 1)  							{  								Log("*** OnComplete() CALLED MULTIPLE TIMES!! :(");  								if (System.Diagnostics.Debugger.IsAttached) System.Diagnostics.Debugger.Break();  							}  							didComplete = true;  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onCompleted");  						}'  						onError: (e) =>  						{  							error = e;  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onError {e.SourceException}");  						}  					);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var target = AsyncHelpers.CreateTarget<int>(  						onNext: (x' ct) =>  						{  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onNext {x}");  							list.Add(x);  						}'  						onCompleted: () =>  						{  							int n = Interlocked.Increment(ref completeCount);  							stacks[n - 1] = Environment.StackTrace;  							if (n > 1)  							{  								Log("*** OnComplete() CALLED MULTIPLE TIMES!! :(");  								if (System.Diagnostics.Debugger.IsAttached) System.Diagnostics.Debugger.Break();  							}  							didComplete = true;  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onCompleted");  						}'  						onError: (e) =>  						{  							error = e;  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onError {e.SourceException}");  						}  					);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var target = AsyncHelpers.CreateTarget<int>(  						onNext: (x' ct) =>  						{  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onNext {x}");  							list.Add(x);  						}'  						onCompleted: () =>  						{  							int n = Interlocked.Increment(ref completeCount);  							stacks[n - 1] = Environment.StackTrace;  							if (n > 1)  							{  								Log("*** OnComplete() CALLED MULTIPLE TIMES!! :(");  								if (System.Diagnostics.Debugger.IsAttached) System.Diagnostics.Debugger.Break();  							}  							didComplete = true;  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onCompleted");  						}'  						onError: (e) =>  						{  							error = e;  							Log($"[target#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] onError {e.SourceException}");  						}  					);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var task = Task.Run(  							async () =>  							{  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] thinking {x} on task {Task.CurrentId}");  								// simulate random workload  								await Task.Delay(10 + rnd.Next(50)' token);  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] produced {x} on task {Task.CurrentId}");  								return x;  							}'  							token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var task = Task.Run(  							async () =>  							{  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] thinking {x} on task {Task.CurrentId}");  								// simulate random workload  								await Task.Delay(10 + rnd.Next(50)' token);  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] produced {x} on task {Task.CurrentId}");  								return x;  							}'  							token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var task = Task.Run(  							async () =>  							{  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] thinking {x} on task {Task.CurrentId}");  								// simulate random workload  								await Task.Delay(10 + rnd.Next(50)' token);  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] produced {x} on task {Task.CurrentId}");  								return x;  							}'  							token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: var task = Task.Run(  							async () =>  							{  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] thinking {x} on task {Task.CurrentId}");  								// simulate random workload  								await Task.Delay(10 + rnd.Next(50)' token);  								Log($"[source#{Thread.CurrentThread.ManagedThreadId'-2} @ {clock.Elapsed.TotalMilliseconds:N3}] produced {x} on task {Task.CurrentId}");  								return x;  							}'  							token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(15 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTaskBuffer_In_Completion_Order,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(15 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: const int N = 100;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: const int MAX_CAPACITY = 5;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: var rnd1 = new Random(1234);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: var transform = new AsyncTransform<int' double>(  					async (x' _) =>  					{  						// each element takes a random time to compute  						await Task.Delay(5 + rnd1.Next(25)' this.Cancellation);  						return Math.Sqrt(x);  					}'  					queue'  					TaskScheduler.Default  				);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: var transform = new AsyncTransform<int' double>(  					async (x' _) =>  					{  						// each element takes a random time to compute  						await Task.Delay(5 + rnd1.Next(25)' this.Cancellation);  						return Math.Sqrt(x);  					}'  					queue'  					TaskScheduler.Default  				);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: await Task.Delay(100' this.Cancellation);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: i % 10 == 0
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(10 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncTransform,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(10 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The following statement contains a magic number: const int MAX_CAPACITY = 5;
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The following statement contains a magic number: await queue.OnNextAsync(Task.Run<int>(() => { throw new InvalidOperationException("Oops"); return 123; }' this.Cancellation)' token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The following statement contains a magic number: await queue.OnNextAsync(Task.FromResult(3)' token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The following statement contains a magic number: await queue.OnNextAsync(Task.Run<int>(() => { throw new InvalidOperationException("Epic Fail"); return 456; }' this.Cancellation)' token);
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(10 * 1000' go.Token));
Magic Number,Doxense.Async.Tests,AsyncBufferFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Async\AsyncBufferFacts.cs,Test_AsyncPump_Stops_On_First_Error,The following statement contains a magic number: await Task.WhenAny(pumpTask' Task.Delay(10 * 1000' go.Token));
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The following statement contains a magic number: const int N = 20 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The following statement contains a magic number: const int N = 20 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => (Key: location.Keys.Encode(x.ToString("x8"))' Value: Slice.Random(rnd' 16 + rnd.Next(240))))  					.ToArray();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => (Key: location.Keys.Encode(x.ToString("x8"))' Value: Slice.Random(rnd' 16 + rnd.Next(240))))  					.ToArray();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Raw_Data,The following statement contains a magic number: Thread.Sleep(640);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: const int N = 20 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: const int N = 20 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: db.DefaultTimeout = 60 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: db.DefaultTimeout = 60 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => new KeyValuePair<int' int>(x' 16 + (int)(Math.Pow(rnd.NextDouble()' 4) * 1 * 1000)))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => new KeyValuePair<int' int>(x' 16 + (int)(Math.Pow(rnd.NextDouble()' 4) * 1 * 1000)))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => new KeyValuePair<int' int>(x' 16 + (int)(Math.Pow(rnd.NextDouble()' 4) * 1 * 1000)))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: Thread.Sleep(640);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: Log($"> Throughput {count / sw.Elapsed.TotalSeconds:N0} key/sec and {totalSize / (1024 * 1024 * sw.Elapsed.TotalSeconds):N3} MB/sec");
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Insert_Items,The following statement contains a magic number: Log($"> Throughput {count / sw.Elapsed.TotalSeconds:N0} key/sec and {totalSize / (1024 * 1024 * sw.Elapsed.TotalSeconds):N3} MB/sec");
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					() => (Total: 0L' Count: 0L)'  					async (xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} items at offset {ctx.Position:N0} of gen #{ctx.Generation} with step {ctx.Step:N0} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}    						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) =>  					{  						Interlocked.Add(ref total' state.Total);  						Interlocked.Add(ref count' state.Count);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					() => (Total: 0L' Count: 0L)'  					async (xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} items at offset {ctx.Position:N0} of gen #{ctx.Generation} with step {ctx.Step:N0} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}    						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) =>  					{  						Interlocked.Add(ref total' state.Total);  						Interlocked.Add(ref count' state.Count);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContextAndState,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					() => (Total: 0L' Count: 0L)'  					async (xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} items at offset {ctx.Position:N0} of gen #{ctx.Generation} with step {ctx.Step:N0} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}    						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) =>  					{  						Interlocked.Add(ref total' state.Total);  						Interlocked.Add(ref count' state.Count);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: const int N = 200 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: const int N = 200 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: db.DefaultTimeout = 60 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: db.DefaultTimeout = 60 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => new KeyValuePair<int' int>(x' 16 + (int)(Math.Pow(rnd.NextDouble()' 4) * 1000)))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => new KeyValuePair<int' int>(x' 16 + (int)(Math.Pow(rnd.NextDouble()' 4) * 1000)))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: var data = Enumerable.Range(0' N)  					.Select((x) => new KeyValuePair<int' int>(x' 16 + (int)(Math.Pow(rnd.NextDouble()' 4) * 1000)))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: long count = await Fdb.Bulk.InsertBatchedAsync(  					db'  					data'  					(kvps' tr) =>  					{  						++called;  						batchCounts.Add(kvps.Length);  						foreach (var kv in kvps)  						{  							uniqueKeys.Add(kv.Key);  							tr.Set(  								location.Keys.Encode(kv.Key)'  								Slice.FromString(new string('A'' kv.Value))  							);  						}  						trSizes.Add(tr.Size);  						//Log("> Added {0:N0} items to transaction' yielding {1:N0} bytes"' kvps.Length' tr.Size);  					}'  					new Fdb.Bulk.WriteOptions { BatchCount = 100 }'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: Thread.Sleep(640);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: Log($"> Throughput {count / sw.Elapsed.TotalSeconds:N0} key/sec and {totalSize / (1024 * 1024 * sw.Elapsed.TotalSeconds):N3} MB/sec");
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Bulk_Batched_Insert_Items,The following statement contains a magic number: Log($"> Throughput {count / sw.Elapsed.TotalSeconds:N0} key/sec and {totalSize / (1024 * 1024 * sw.Elapsed.TotalSeconds):N3} MB/sec");
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_WithContextAndState,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_WithContextAndState,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_WithContextAndState,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					() => (Total: 0L' Count: 0L)'  					(xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)");    						var t = ctx.Transaction.GetValuesAsync(xs);  						Thread.Sleep(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = t.Result; // <-- this is bad practice' never do that in real life' 'mkay?    						long sum = 0;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}    						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) =>  					{  						Interlocked.Add(ref total' state.Total);  						Interlocked.Add(ref count' state.Count);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_WithContextAndState,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					() => (Total: 0L' Count: 0L)'  					(xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)");    						var t = ctx.Transaction.GetValuesAsync(xs);  						Thread.Sleep(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = t.Result; // <-- this is bad practice' never do that in real life' 'mkay?    						long sum = 0;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}    						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) =>  					{  						Interlocked.Add(ref total' state.Total);  						Interlocked.Add(ref count' state.Count);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_WithContextAndState,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					() => (Total: 0L' Count: 0L)'  					(xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (generation = {ctx.ElapsedGeneration.TotalSeconds:N3} sec' total = {ctx.ElapsedTotal.TotalSeconds:N3} sec)");    						var t = ctx.Transaction.GetValuesAsync(xs);  						Thread.Sleep(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = t.Result; // <-- this is bad practice' never do that in real life' 'mkay?    						long sum = 0;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}    						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) =>  					{  						Interlocked.Add(ref total' state.Total);  						Interlocked.Add(ref count' state.Count);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					async (xs' ctx) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0;  						for (int i = 0; i < results.Length; i++)  						{  							sum += results[i].ToInt32();  						}  						Interlocked.Add(ref total' sum);  						Interlocked.Add(ref count' results.Length);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					async (xs' ctx) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0;  						for (int i = 0; i < results.Length; i++)  						{  							sum += results[i].ToInt32();  						}  						Interlocked.Add(ref total' sum);  						Interlocked.Add(ref count' results.Length);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_ForEach_AsyncWithContext,The following statement contains a magic number: await Fdb.Bulk.ForEachAsync(  					db'  					Enumerable.Range(1' N).Select(x => location.Keys.Encode(x))'  					async (xs' ctx) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0;  						for (int i = 0; i < results.Length; i++)  						{  							sum += results[i].ToInt32();  						}  						Interlocked.Add(ref total' sum);  						Interlocked.Add(ref count' results.Length);  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate,The following statement contains a magic number: var source = Enumerable.Range(1' N).Select((x) => new KeyValuePair<int' int>(x' rnd.Next(1000))).ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: var source = Enumerable.Range(1' N).Select((x) => new KeyValuePair<int' int>(x' rnd.Next(1000))).ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: long total = await Fdb.Bulk.AggregateAsync(  					db'  					source.Select(x => location.Keys.Encode(x.Key))'  					() => 0L'  					async (xs' ctx' sum) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration.TotalSeconds:N1}' totalElapsed={ctx.ElapsedTotal.TotalSeconds:N1}s)");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						for (int i = 0; i < results.Length; i++)  						{  							sum += results[i].ToInt32();  						}  						return sum;  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: long total = await Fdb.Bulk.AggregateAsync(  					db'  					source.Select(x => location.Keys.Encode(x.Key))'  					() => 0L'  					async (xs' ctx' sum) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration.TotalSeconds:N1}' totalElapsed={ctx.ElapsedTotal.TotalSeconds:N1}s)");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						for (int i = 0; i < results.Length; i++)  						{  							sum += results[i].ToInt32();  						}  						return sum;  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: long total = await Fdb.Bulk.AggregateAsync(  					db'  					source.Select(x => location.Keys.Encode(x.Key))'  					() => 0L'  					async (xs' ctx' sum) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration.TotalSeconds:N1}' totalElapsed={ctx.ElapsedTotal.TotalSeconds:N1}s)");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						for (int i = 0; i < results.Length; i++)  						{  							sum += results[i].ToInt32();  						}  						return sum;  					}'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_Slow_Reader,The following statement contains a magic number: Assume.That(sw.Elapsed.TotalSeconds' Is.GreaterThan(5)' "This test has to run more than 5 seconds to trigger past_version internally!");
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result,The following statement contains a magic number: var source = Enumerable.Range(1' N).Select((x) => new KeyValuePair<int' int>(x' rnd.Next(1000))).ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: var source = Enumerable.Range(1' N).Select((x) => new KeyValuePair<int' int>(x' rnd.Next(1000))).ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: double average = await Fdb.Bulk.AggregateAsync(  					db'  					source.Select(x => location.Keys.Encode(x.Key))'  					() => (Total: 0L' Count: 0L)'  					async (xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0L;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}  						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) => (double) state.Total / state.Count'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: double average = await Fdb.Bulk.AggregateAsync(  					db'  					source.Select(x => location.Keys.Encode(x.Key))'  					() => (Total: 0L' Count: 0L)'  					async (xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0L;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}  						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) => (double) state.Total / state.Count'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: double average = await Fdb.Bulk.AggregateAsync(  					db'  					source.Select(x => location.Keys.Encode(x.Key))'  					() => (Total: 0L' Count: 0L)'  					async (xs' ctx' state) =>  					{  						Interlocked.Increment(ref chunks);  						Log($"> Called with batch of {xs.Length:N0} at offset {ctx.Position:N0} of gen {ctx.Generation} with step {ctx.Step} and cooldown {ctx.Cooldown} (genElapsed={ctx.ElapsedGeneration}' totalElapsed={ctx.ElapsedTotal})");    						var throttle = Task.Delay(TimeSpan.FromMilliseconds(10 + (xs.Length / 25) * 5)); // magic numbers to try to last longer than 5 sec  						var results = await ctx.Transaction.GetValuesAsync(xs);  						await throttle;    						long sum = 0L;  						foreach (var x in results)  						{  							sum += x.ToInt32();  						}  						state.Total += sum;  						state.Count += results.Length;  						return state;  					}'  					(state) => (double) state.Total / state.Count'  					this.Cancellation  				);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Batch_Aggregate_With_Transformed_Result_Slow_Reader,The following statement contains a magic number: Assume.That(sw.Elapsed.TotalSeconds' Is.GreaterThan(5)' "This test has to run more than 5 seconds to trigger past_version internally!");
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The following statement contains a magic number: const int N = 50 * 1000;
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The following statement contains a magic number: var rnd = new Random(2403);
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The following statement contains a magic number: var source = Enumerable  					.Range(1' N)  					.Select((x) => new KeyValuePair<Guid' Slice>(Guid.NewGuid()' Slice.Random(rnd' rnd.Next(8' 256))))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The following statement contains a magic number: var source = Enumerable  					.Range(1' N)  					.Select((x) => new KeyValuePair<Guid' Slice>(Guid.NewGuid()' Slice.Random(rnd' rnd.Next(8' 256))))  					.ToList();
Magic Number,FoundationDB.Client.Tests,DatabaseBulkFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseBulkFacts.cs,Test_Can_Export_To_Disk,The following statement contains a magic number: double average = await Fdb.Bulk.ExportAsync(  						db'  						location.Keys.ToRange()'  						async (xs' pos' ct) =>  						{  							Assert.That(xs' Is.Not.Null);    							Interlocked.Increment(ref chunks);  							Log($"> Called with batch [{pos:N0}..{pos + xs.Length - 1:N0}] ({xs.Length:N0} items' {xs.Sum(kv => kv.Key.Count + kv.Value.Count):N0} bytes)");    							//TO CHECK:  							// => keys are ordered in the batch  							// => no duplicates    							var sb = new StringBuilder(4096);  							foreach(var x in xs)  							{  								sb.AppendFormat("{0} = {1}\r\n"' location.Keys.Decode<Guid>(x.Key)' x.Value.ToBase64());  							}  							await file.WriteAsync(sb.ToString());  						}'  						this.Cancellation  					);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Open_Or_CreateCluster_With_Corrupted_ClusterFile_Should_Fail,The following statement contains a magic number: var bytes = new byte[128];
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Get_Coordinators,The following statement contains a magic number: Assert.That(coordinators.Coordinators[0].Port' Is.GreaterThanOrEqualTo(4500).And.LessThanOrEqualTo(4510));
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Get_Coordinators,The following statement contains a magic number: Assert.That(coordinators.Coordinators[0].Port' Is.GreaterThanOrEqualTo(4500).And.LessThanOrEqualTo(4510));
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Open_Database_With_Non_Empty_GlobalSpace,The following statement contains a magic number: Assert.That(db.IsKeyValid(TuPack.EncodeKey("test"' 123))' Is.True);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Open_Database_With_Non_Empty_GlobalSpace,The following statement contains a magic number: Assert.That(db.IsKeyValid(Slice.FromByte(42))' Is.False);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Open_Database_With_Non_Empty_GlobalSpace,The following statement contains a magic number: Assert.That(db.IsKeyValid(Slice.FromByte(123))' Is.False);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Change_Location_Cache_Size,The following statement contains a magic number: db.SetLocationCacheSize(1000);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Change_Location_Cache_Size,The following statement contains a magic number: db.SetLocationCacheSize(9001);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Change_Location_Cache_Size,The following statement contains a magic number: Assert.That(() => db.SetLocationCacheSize(-123)' Throws.InstanceOf<FdbException>().With.Property("Code").EqualTo(FdbError.InvalidOptionValue).And.Property("Success").False);
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Database_Instance_Should_Have_Default_Root_Directory,The following statement contains a magic number: Assert.That(dl.NodeSubspace.GetPrefix()' Is.EqualTo(db.GlobalSpace[Slice.FromByte(254)]));
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Check_Timeout_On_Non_Existing_Database,The following statement contains a magic number: tr.Timeout = 250;
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Serialize_Connection_Options,The following statement contains a magic number: options = new FdbConnectionOptions  			{  				ClusterFile = "X:\\some\\path\\to\\fdb.cluster"'  				ReadOnly = true'  				DefaultTimeout = TimeSpan.FromSeconds(42.5)'  				DefaultRetryLimit = 123'  				DataCenterId = "AC/DC"'  				MachineId = "Marble Machine X"  			};
Magic Number,FoundationDB.Client.Tests,DatabaseFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\DatabaseFacts.cs,Test_Can_Serialize_Connection_Options,The following statement contains a magic number: options = new FdbConnectionOptions  			{  				ClusterFile = "X:\\some\\path\\to\\fdb.cluster"'  				ReadOnly = true'  				DefaultTimeout = TimeSpan.FromSeconds(42.5)'  				DefaultRetryLimit = 123'  				DataCenterId = "AC/DC"'  				MachineId = "Marble Machine X"  			};
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_4,The following statement contains a magic number: tr.Set(subspace.Keys.Encode("CCC")' Slice.FromFixed32(255));
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_4,The following statement contains a magic number: tr.Set(subspace.Keys.Encode("DDD")' Slice.FromFixed32(5));
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_6b,The following statement contains a magic number: var init = Slice.Repeat(0xCC' 9);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_6b,The following statement contains a magic number: var mask = Slice.Repeat(0xAA' 9);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_8,The following statement contains a magic number: await db.WriteAsync((tr) =>  					{  						tr.ClearRange(subspace.Keys.Encode("K0000")' subspace.Keys.Encode("K9999\x00"));  						for (int i = 0; i < 1000; i++)  						{  							tr.Set(subspace.Keys.Encode("K" + i.ToString("D4"))' Slice.FromFixedU32BE((uint)i));  						}  					}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_10,The following statement contains a magic number: await db.WriteAsync((tr) =>  					{  						tr.ClearRange(subspace.Keys.Encode("K0000")' subspace.Keys.Encode("K9999Z"));  						for (int i = 0; i < 100; i++)  						{  							tr.Set(subspace.Keys.Encode("K" + i.ToString("D4"))' Value("V" + i.ToString("D4")));  						}  					}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_11,The following statement contains a magic number: await db.WriteAsync((tr) =>  					{  						tr.ClearRange(subspace.Keys.Encode("K0000")' subspace.Keys.Encode("K9999Z"));  						for (int i = 0; i < 100; i++)  						{  							tr.Set(subspace.Keys.Encode("K" + i.ToString("D4"))' Value("V" + i.ToString("D4")));  						}  					}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_11,The following statement contains a magic number: await tr.GetKeyAsync(KeySelector.FirstGreaterOrEqual(subspace.Keys.Encode("K0040")) + 1000);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_11,The following statement contains a magic number: await tr.GetKeyAsync(KeySelector.LastLessThan(subspace.Keys.Encode("K0050")) + 1000);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_13,The following statement contains a magic number: await db.WriteAsync((tr) =>  					{  						tr.ClearRange(subspace.Keys.Encode("K0000")' subspace.Keys.Encode("K~~~~"));  						tr.Set(subspace.Keys.Encode("K000")' Value("BEGIN"));  						for (int i = 0; i < 5; i++)  						{  							tr.Set(subspace.Keys.Encode("K" + i + "A")' Value("V111"));  							tr.Set(subspace.Keys.Encode("K" + i + "B")' Value("V222"));  							tr.Set(subspace.Keys.Encode("K" + i + "C")' Value("V333"));  							tr.Set(subspace.Keys.Encode("K" + i + "D")' Value("V444"));  							tr.Set(subspace.Keys.Encode("K" + i + "E")' Value("V555"));  							tr.Set(subspace.Keys.Encode("K" + i + "F")' Value("V666"));  							tr.Set(subspace.Keys.Encode("K" + i + "G")' Value("V777"));  							tr.Set(subspace.Keys.Encode("K" + i + "H")' Value("V888"));  						}  						tr.Set(subspace.Keys.Encode("K~~~")' Value("END"));  					}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_14,The following statement contains a magic number: await db.WriteAsync((tr) =>  					{  						tr.ClearRange(subspace.Keys.Encode("K0000")' subspace.Keys.Encode("K~~~~"));  						tr.SetValues(Enumerable.Range(0' 100).Select(i => new KeyValuePair<Slice' Slice>(subspace.Keys.Encode("K" + i.ToString("D4"))' Value("V" + i.ToString("D4")))));  						tr.Set(subspace.Keys.Encode("K~~~")' Value("END"));  					}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_16,The following statement contains a magic number: await Task.Delay(500);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_16,The following statement contains a magic number: await Task.Delay(500);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_16,The following statement contains a magic number: await Task.Delay(500);
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_17,The following statement contains a magic number: var code = i > 1 && i < 10 ? FdbError.PastVersion : FdbError.CommitUnknownResult;
Magic Number,FoundationDB.Client.Tests,ExoticTestCases,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\ExoticTestCases.cs,Test_Case_17,The following statement contains a magic number: i < 20
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Constants,The following statement contains a magic number: Assert.That(FdbKey.MaxValue.GetBytes()' Is.EqualTo(new byte[] { 255 }));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Constants,The following statement contains a magic number: Assert.That(FdbKey.System.GetBytes()' Is.EqualTo(new byte[] { 255 }));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Constants,The following statement contains a magic number: Assert.That(FdbKey.Directory.GetBytes()' Is.EqualTo(new byte[] { 254 }));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The following statement contains a magic number: var slices = Enumerable.Range(0' 16).Select(x => Slice.Random(rnd' 4 + rnd.Next(32))).ToArray();
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The following statement contains a magic number: var slices = Enumerable.Range(0' 16).Select(x => Slice.Random(rnd' 4 + rnd.Next(32))).ToArray();
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The following statement contains a magic number: var slices = Enumerable.Range(0' 16).Select(x => Slice.Random(rnd' 4 + rnd.Next(32))).ToArray();
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The following statement contains a magic number: var merged = FdbKey.Merge(Slice.FromByte(42)' slices);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Merge,The following statement contains a magic number: var expected = Slice.FromByte(42) + slices[i];
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_BatchedRange,The following statement contains a magic number: var query = FdbKey.BatchedRange(0' 100' 20);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_BatchedRange,The following statement contains a magic number: var query = FdbKey.BatchedRange(0' 100' 20);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_BatchedRange,The following statement contains a magic number: Assert.That(batches.Length' Is.EqualTo(5));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_BatchedRange,The following statement contains a magic number: Assert.That(items' Is.Not.Null.And.Length.EqualTo(20));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_BatchedRange,The following statement contains a magic number: Assert.That(items[j]' Is.EqualTo(j + i * 20));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Batched,The following statement contains a magic number: const int N = 1000;
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Batched,The following statement contains a magic number: const int B = 20;
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_Batched,The following statement contains a magic number: const int W = 5;
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(Slice.FromByte(255))' Is.EqualTo("<FF>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }.AsSlice())' Is.EqualTo("<00><01><02><03><04><05><06><07>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(new byte[] { 255' 254' 253' 252' 251' 250' 249' 248 }.AsSlice())' Is.EqualTo("<FF><FE><FD><FC><FB><FA><F9><F8>"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(TuPack.EncodeKey(123))' Is.EqualTo("(123')")' "Singleton tuples should end with a '''");
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(TuPack.EncodeKey(new byte[] { 1' 2' 3 }.AsSlice()))' Is.EqualTo("(`<01><02><03>`')"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(TuPack.EncodeKey(new byte[] { 1' 2' 3 }.AsSlice()))' Is.EqualTo("(`<01><02><03>`')"));
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(TuPack.EncodeKey(123' 456))' Is.EqualTo("(123' 456)")' "Elements should be separated with a space' and not end up with '''");
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: Assert.That(FdbKey.Dump(TuPack.EncodeKey(123' 456))' Is.EqualTo("(123' 456)")' "Elements should be separated with a space' and not end up with '''");
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_FdbKey_PrettyPrint,The following statement contains a magic number: var t = TuPack.EncodeKey(123);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Intersects(MakeRange(2' 3))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Intersects(MakeRange(2' 3))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(2' 3).Intersects(MakeRange(0' 1))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(2' 3).Intersects(MakeRange(0' 1))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Intersects(MakeRange(1' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(1' 2).Intersects(MakeRange(0' 1))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Intersects(MakeRange(1' 3))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Intersects(MakeRange(1' 3))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(1' 3).Intersects(MakeRange(0' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(1' 3).Intersects(MakeRange(0' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Intersects(MakeRange(0' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Intersects(MakeRange(0' 1))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Intersects(MakeRange(1' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Intersects(MakeRange(1' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(1' 2).Intersects(MakeRange(0' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Intersects,The following statement contains a magic number: Assert.That(MakeRange(1' 2).Intersects(MakeRange(0' 2))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Disjoint(MakeRange(2' 3))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Disjoint(MakeRange(2' 3))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(2' 3).Disjoint(MakeRange(0' 1))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(2' 3).Disjoint(MakeRange(0' 1))' Is.True);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Disjoint(MakeRange(1' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(1' 2).Disjoint(MakeRange(0' 1))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Disjoint(MakeRange(1' 3))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Disjoint(MakeRange(1' 3))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(1' 3).Disjoint(MakeRange(0' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(1' 3).Disjoint(MakeRange(0' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 1).Disjoint(MakeRange(0' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Disjoint(MakeRange(0' 1))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Disjoint(MakeRange(1' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(0' 2).Disjoint(MakeRange(1' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(1' 2).Disjoint(MakeRange(0' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,KeyFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\KeyFacts.cs,Test_KeyRange_Disjoint,The following statement contains a magic number: Assert.That(MakeRange(1' 2).Disjoint(MakeRange(0' 2))' Is.False);
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Allocator,The following statement contains a magic number: i < 100
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_Simple,The following statement contains a magic number: Assert.That(directory.NodeSubspace.GetPrefix()' Is.EqualTo(location.GetPrefix() + Slice.FromByte(254)));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_CreateOrOpen_With_Layer,The following statement contains a magic number: Assert.That(directory.NodeSubspace.GetPrefix()' Is.EqualTo(location.GetPrefix() + Slice.FromByte(254)));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_SubFolders,The following statement contains a magic number: i < 10
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_SubFolders,The following statement contains a magic number: Assert.That(subdirs.Count' Is.EqualTo(10));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_SubFolders,The following statement contains a magic number: Assert.That(subdirs' Is.EquivalentTo(Enumerable.Range(0' 10).Select(x => x.ToString()).ToList()));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_Folders_Should_Be_Sorted_By_Name,The following statement contains a magic number: var letters = Enumerable.Range(65' 10).Select(x => new string((char)x' 1)).ToList();
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_Folders_Should_Be_Sorted_By_Name,The following statement contains a magic number: var letters = Enumerable.Range(65' 10).Select(x => new string((char)x' 1)).ToList();
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_Folders_Should_Be_Sorted_By_Name,The following statement contains a magic number: Assert.That(subdirs.Count' Is.EqualTo(10));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_List_Folders_Should_Be_Sorted_By_Name,The following statement contains a magic number: Assert.That(subdirs[i]' Is.EqualTo(new string((char)(65 + i)' 1)));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Partition.ByKey(123));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Partition.ByKey(123' "hello"));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Partition.ByKey(123' "hello"' false));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Partition.ByKey(123' "hello"' false' "world"));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition[STuple.Create("hello"' 123)]);
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.Encode(123));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.Encode(123' "hello"));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.Encode(123' "hello"' false));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.Encode(123' "hello"' false' "world"));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.Encode<object>(123));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<int>(new[] { 123' 456' 789 }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<int>(new[] { 123' 456' 789 }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<int>(new[] { 123' 456' 789 }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<int>((IEnumerable<int>)new[] { 123' 456' 789 }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<int>((IEnumerable<int>)new[] { 123' 456' 789 }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<int>((IEnumerable<int>)new[] { 123' 456' 789 }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<object>(new object[] { 123' "hello"' true }));
Magic Number,FoundationDB.Client.Tests,DirectoryLayerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DirectoryFacts.cs,Test_Directory_Partitions_Should_Disallow_Creation_Of_Direct_Keys,The following statement contains a magic number: ShouldFail(() => partition.Keys.EncodeMany<object>((IEnumerable<object>)new object[] { 123' "hello"' true }));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Chunk,The following statement contains a magic number: const int N = 100;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range,The following statement contains a magic number: const int N = 1000;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range,The following statement contains a magic number: i % 128 == 0
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Transformed,The following statement contains a magic number: const int N = 1000;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Transformed,The following statement contains a magic number: var query = tr.GetRange(  						location.Keys.Encode(0)'  						location.Keys.Encode(N)'  						(kv) => (Index: location.Keys.DecodeLast<int>(kv.Key)' Score: kv.Value.ToInt32())'  						new FdbRangeOptions { Limit = N / 2 }  					);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Transformed,The following statement contains a magic number: Assert.That(items.Count' Is.EqualTo(N / 2));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_Transformed,The following statement contains a magic number: i < N / 2
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					for (int i = 0; i < 10; i++)  					{  						tr.Set(a.Keys.Encode(i)' Slice.FromInt32(i));  					}  					tr.Set(b.Keys.Encode(0)' Slice.FromInt32(42));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					for (int i = 0; i < 10; i++)  					{  						tr.Set(a.Keys.Encode(i)' Slice.FromInt32(i));  					}  					tr.Set(b.Keys.Encode(0)' Slice.FromInt32(42));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Key' Is.EqualTo(a.Keys.Encode(9)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(9)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Key' Is.EqualTo(a.Keys.Encode(9)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(9)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(42)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(42)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(42)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(42)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(42)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(42)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: var query = tr.GetRange(a.Keys.ToRange()).Take(5);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Key' Is.EqualTo(a.Keys.Encode(4)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(4)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Key' Is.EqualTo(a.Keys.Encode(4)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(4)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: var query = tr.GetRange(a.Keys.ToRange()).Skip(5);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Key' Is.EqualTo(a.Keys.Encode(5)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(5)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Key' Is.EqualTo(a.Keys.Encode(5)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_First_Single_And_Last,The following statement contains a magic number: Assert.That(res.Value' Is.EqualTo(Slice.FromInt32(5)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					for (int i = 0; i < 10; i++)  					{  						tr.Set(a.Keys.Encode(i)' Slice.FromInt32(i));  					}  					// add guard keys  					tr.Set(location.GetPrefix()' Slice.FromInt32(-1));  					tr.Set(location.GetPrefix() + (byte)255' Slice.FromInt32(-1));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					for (int i = 0; i < 10; i++)  					{  						tr.Set(a.Keys.Encode(i)' Slice.FromInt32(i));  					}  					// add guard keys  					tr.Set(location.GetPrefix()' Slice.FromInt32(-1));  					tr.Set(location.GetPrefix() + (byte)255' Slice.FromInt32(-1));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: var query = tr.GetRange(a.Keys.ToRange()).Take(5);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: Assert.That(query.Limit' Is.EqualTo(5));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: Assert.That(elements.Count' Is.EqualTo(5));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: i < 5
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: var query = tr.GetRange(a.Keys.ToRange()).Take(12);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: Assert.That(query.Limit' Is.EqualTo(12));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: Assert.That(elements.Count' Is.EqualTo(10));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Get_Range_With_Limit,The following statement contains a magic number: i < 10
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: var data = Enumerable.Range(0' 100).Select(x => new KeyValuePair<Slice' Slice>(location.Keys.Encode(x)' Slice.FromFixed32(x)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: var res = await query.Skip(50).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(50).ToList())' "50 --> 99");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(50).Skip(10).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(50).Skip(10).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(60).ToList())' "60 --> 99");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(99).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(99).ToList())' "99 --> 99");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(100).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(150).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: var res = await query.Reverse().Skip(50).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Reverse().Skip(50).ToList())' "0 <-- 49");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Reverse().Skip(50).Skip(10).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Reverse().Skip(50).Skip(10).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Reverse().Skip(60).ToList())' "0 <-- 39");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Reverse().Skip(99).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Reverse().Skip(99).ToList())' "0 <-- 0");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Reverse().Skip(100).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Reverse().Skip(100).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: var res = await query.Skip(25).Reverse().Skip(25).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: var res = await query.Skip(25).Reverse().Skip(25).ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(25).Reverse().Skip(25).ToList())' "25 <-- 74");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(25).Reverse().Skip(25).ToList())' "25 <-- 74");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(25).Reverse().Skip(25).Reverse().ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: res = await query.Skip(25).Reverse().Skip(25).Reverse().ToListAsync();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(25).Reverse().Skip(25).Reverse().ToList())' "25 --> 74");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_Skip,The following statement contains a magic number: Assert.That(res' Is.EqualTo(data.Skip(25).Reverse().Skip(25).Reverse().ToList())' "25 --> 74");
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var data = Enumerable.Range(0' 30).Select(x => (location.Keys.Encode(x)' Slice.FromFixed32(x)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var query = tr  						.GetRange(location.Keys.Encode(10)' location.Keys.Encode(20)) // 10 -> 19  						.Take(20) // 10 -> 19 (limit 20)  						.Reverse();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var query = tr  						.GetRange(location.Keys.Encode(10)' location.Keys.Encode(20)) // 10 -> 19  						.Take(20) // 10 -> 19 (limit 20)  						.Reverse();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var query = tr  						.GetRange(location.Keys.Encode(10)' location.Keys.Encode(20)) // 10 -> 19  						.Take(20) // 10 -> 19 (limit 20)  						.Reverse();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: Assert.That(res.Count' Is.EqualTo(10));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var query = tr  						.GetRange(location.Keys.Encode(10)' location.Keys.Encode(20)) // 10 -> 19  						.Reverse() // 19 -> 10  						.Take(20)  // 19 -> 10 (limit 20)  						.Reverse();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var query = tr  						.GetRange(location.Keys.Encode(10)' location.Keys.Encode(20)) // 10 -> 19  						.Reverse() // 19 -> 10  						.Take(20)  // 19 -> 10 (limit 20)  						.Reverse();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: var query = tr  						.GetRange(location.Keys.Encode(10)' location.Keys.Encode(20)) // 10 -> 19  						.Reverse() // 19 -> 10  						.Take(20)  // 19 -> 10 (limit 20)  						.Reverse();
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Original_Range_Does_Not_Overflow,The following statement contains a magic number: Assert.That(res.Count' Is.EqualTo(10));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_MergeSort,The following statement contains a magic number: int K = 3;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Can_MergeSort,The following statement contains a magic number: int N = 100;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Intersect,The following statement contains a magic number: int K = 3;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Intersect,The following statement contains a magic number: int N = 100;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except,The following statement contains a magic number: int K = 3;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except,The following statement contains a magic number: int N = 100;
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					// Items  					tr.Set(locItems.Keys["userA"' 10093]' Slice.Empty);  					tr.Set(locItems.Keys["userA"' 19238]' Slice.Empty);  					tr.Set(locItems.Keys["userB"' 20003]' Slice.Empty);  					// Processed  					tr.Set(locProcessed.Keys["userA"' 19238]' Slice.Empty);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					// Items  					tr.Set(locItems.Keys["userA"' 10093]' Slice.Empty);  					tr.Set(locItems.Keys["userA"' 19238]' Slice.Empty);  					tr.Set(locItems.Keys["userB"' 20003]' Slice.Empty);  					// Processed  					tr.Set(locProcessed.Keys["userA"' 19238]' Slice.Empty);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					// Items  					tr.Set(locItems.Keys["userA"' 10093]' Slice.Empty);  					tr.Set(locItems.Keys["userA"' 19238]' Slice.Empty);  					tr.Set(locItems.Keys["userB"' 20003]' Slice.Empty);  					// Processed  					tr.Set(locProcessed.Keys["userA"' 19238]' Slice.Empty);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					// Items  					tr.Set(locItems.Keys["userA"' 10093]' Slice.Empty);  					tr.Set(locItems.Keys["userA"' 19238]' Slice.Empty);  					tr.Set(locItems.Keys["userB"' 20003]' Slice.Empty);  					// Processed  					tr.Set(locProcessed.Keys["userA"' 19238]' Slice.Empty);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: var results = await db.QueryAsync((tr) =>  				{  					var query = tr.Except(  						new[] { locItems.Keys.ToRange()' locProcessed.Keys.ToRange() }'  						(kv) => TuPack.Unpack(kv.Key).Substring(-2)' // note: keys come from any of the two ranges' so we must only keep the last 2 elements of the tuple  						TupleComparisons.Composite<string' int>() // compares t[0] as a string' and t[1] as an int  					);    					// problem: Except() still returns the original (Slice' Slice) pairs from the first range'  					// meaning that we still need to unpack again the key (this time knowing the location)  					return query.Select(kv => locItems.Keys.Decode(kv.Key));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: Assert.That(results[0]' Is.EqualTo(("userA"' 10093)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(("userB"' 20003)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: Assert.That(results[0]' Is.EqualTo(("userA"' 10093)));
Magic Number,FoundationDB.Client.Tests,RangeQueryFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RangeQueryFacts.cs,Test_Range_Except_Composite_Key,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(("userB"' 20003)));
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_On_Transient_Errors,The following statement contains a magic number: var res = await db.ReadAsync((tr) =>  					{  						try  						{  							++called;    							Assert.That(tr' Is.Not.Null);  							Assert.That(tr.Context' Is.Not.Null' "tr.Context should not be null");  							Assert.That(tr.Context.Retries' Is.EqualTo(called - 1)' "tr.Context.Retries should equal the number of calls to the handler' minus one");    							if (id == null) id = tr.Id;  							Assert.That(tr.Id' Is.EqualTo(id.Value)' "The same transaction should be passed multiple times");    							if (called < 3)  							{ // fool the retry loop into thinking that a retryable error occurred  								throw new FdbException(FdbError.PastVersion' "Fake error");  							}  							Assert.That(called' Is.GreaterThanOrEqualTo(3)' "The handler should not be called again if it completed previously");  							return Task.FromResult(123);  						}  						catch(AssertionException)  						{ // protection against infinite loops  							go.Cancel();  							throw;  						}  					}' go.Token);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_On_Transient_Errors,The following statement contains a magic number: var res = await db.ReadAsync((tr) =>  					{  						try  						{  							++called;    							Assert.That(tr' Is.Not.Null);  							Assert.That(tr.Context' Is.Not.Null' "tr.Context should not be null");  							Assert.That(tr.Context.Retries' Is.EqualTo(called - 1)' "tr.Context.Retries should equal the number of calls to the handler' minus one");    							if (id == null) id = tr.Id;  							Assert.That(tr.Id' Is.EqualTo(id.Value)' "The same transaction should be passed multiple times");    							if (called < 3)  							{ // fool the retry loop into thinking that a retryable error occurred  								throw new FdbException(FdbError.PastVersion' "Fake error");  							}  							Assert.That(called' Is.GreaterThanOrEqualTo(3)' "The handler should not be called again if it completed previously");  							return Task.FromResult(123);  						}  						catch(AssertionException)  						{ // protection against infinite loops  							go.Cancel();  							throw;  						}  					}' go.Token);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_On_Transient_Errors,The following statement contains a magic number: var res = await db.ReadAsync((tr) =>  					{  						try  						{  							++called;    							Assert.That(tr' Is.Not.Null);  							Assert.That(tr.Context' Is.Not.Null' "tr.Context should not be null");  							Assert.That(tr.Context.Retries' Is.EqualTo(called - 1)' "tr.Context.Retries should equal the number of calls to the handler' minus one");    							if (id == null) id = tr.Id;  							Assert.That(tr.Id' Is.EqualTo(id.Value)' "The same transaction should be passed multiple times");    							if (called < 3)  							{ // fool the retry loop into thinking that a retryable error occurred  								throw new FdbException(FdbError.PastVersion' "Fake error");  							}  							Assert.That(called' Is.GreaterThanOrEqualTo(3)' "The handler should not be called again if it completed previously");  							return Task.FromResult(123);  						}  						catch(AssertionException)  						{ // protection against infinite loops  							go.Cancel();  							throw;  						}  					}' go.Token);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_On_Transient_Errors,The following statement contains a magic number: Assert.That(res' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_On_Transient_Errors,The following statement contains a magic number: Assert.That(called' Is.EqualTo(3));
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The following statement contains a magic number: db.DefaultRetryLimit = 10;
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The following statement contains a magic number: await Fdb.Bulk.WriteAsync(db' Enumerable.Range(0' 100 * 1000).Select(i => (location.Keys.Encode(i)' Slice.Random(rnd' 4096)))' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The following statement contains a magic number: await Fdb.Bulk.WriteAsync(db' Enumerable.Range(0' 100 * 1000).Select(i => (location.Keys.Encode(i)' Slice.Random(rnd' 4096)))' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The following statement contains a magic number: await Fdb.Bulk.WriteAsync(db' Enumerable.Range(0' 100 * 1000).Select(i => (location.Keys.Encode(i)' Slice.Random(rnd' 4096)))' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_Retries_Do_Not_Leak_When_Reading_Too_Much,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_Retryable_ReadOnly_Should_Deny_Write_Attempts,The following statement contains a magic number: var t = db.ReadAsync((IFdbReadOnlyTransaction tr) =>  				{  					Assert.That(tr' Is.Not.Null);    					// force the read-only into a writable interface  					var hijack = tr as IFdbTransaction;  					Assume.That(hijack' Is.Not.Null' "This test requires the transaction to implement IFdbTransaction !");    					// this call should fail !  					hijack.Set(location.Keys.Encode("Hello")' Value("Hijacked"));    					Assert.Fail("Calling Set() on a read-only transaction should fail");  					return Task.FromResult(123);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					for (int i = 0; i < 10; i++)  					{  						tr.Set(location.Keys.Encode(i)' Slice.FromInt32(i));  					}  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: var results = await db.ReadAsync(async (tr) =>  				{  					int[] values = new int[10];    					// read 0..2  					for (int i = 0; i < 3; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 3 before we read it  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(3)' Slice.FromInt32(42))' this.Cancellation);    					// read 3 to 7  					for (int i = 3; i < 7; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					// another transaction commits a change to 6 after it has been read  					await db.WriteAsync((tr2) => tr2.Set(location.Keys.Encode(6)' Slice.FromInt32(66))' this.Cancellation);    					// read 7 to 9  					for (int i = 7; i < 10; i++)  					{  						values[i] = (await tr.GetAsync(location.Keys.Encode(i))).ToInt32();  					}    					return values;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,RetryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\RetryableFacts.cs,Test_ReadOnly_Retryable_Do_Not_See_Changes_From_Other_Transactions,The following statement contains a magic number: Assert.That(results' Is.EqualTo(Enumerable.Range(0' 10).ToList()));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: var subspace = KeySubspace.CreateDynamic(new byte[] { 42' 255' 0' 127 }.AsSlice());
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: var subspace = KeySubspace.CreateDynamic(new byte[] { 42' 255' 0' 127 }.AsSlice());
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: var subspace = KeySubspace.CreateDynamic(new byte[] { 42' 255' 0' 127 }.AsSlice());
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Encode(123).ToString()' Is.EqualTo("*<FF><00><7F><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Pack(STuple.Create("hello"' 123)).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Pack(("hello"' 123)).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: var k = subspace.Keys.Pack(("world"' 123' false));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(t2.Count' Is.EqualTo(3));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(t2.Get<int>(1)' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(t2.Get<bool>(2)' Is.False);
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Pack(("hello"' 123)).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Pack(("hello"' 123' "world")).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Binary_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("*<FF><00><7F><02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Tuple_Prefix,The following statement contains a magic number: Assert.That(subspace.Keys.Encode(123).ToString()' Is.EqualTo("<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Tuple_Prefix,The following statement contains a magic number: var k = subspace.Keys.Pack(("world"' 123' false));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Tuple_Prefix,The following statement contains a magic number: Assert.That(t2.Count' Is.EqualTo(3));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Tuple_Prefix,The following statement contains a magic number: Assert.That(t2.Get<int>(1)' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_Subspace_With_Tuple_Prefix,The following statement contains a magic number: Assert.That(t2.Get<bool>(2)' Is.False);
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!"' 789).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!"' 789).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456' "!"' 789).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456' "!"' 789)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{"))' Is.EqualTo(STuple.Create("hello"' 123)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>"))' Is.EqualTo(STuple.Create("hello"' 123' "world")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!"' 789)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!"' 789)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Unpack(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(STuple.Create("hello"' 123' "world"' 456' "!"' 789)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{"))' Is.EqualTo(("hello"' 123)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>"))' Is.EqualTo(("hello"' 123' "world")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(("hello"' 123' "world"' 456)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(("hello"' 123' "world"' 456)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int' string>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int' string>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!"' 789)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!"' 789)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.Decode<string' int' string' int' string' int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(("hello"' 123' "world"' 456' "!"' 789)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_DynamicKeySpace_API,The following statement contains a magic number: Assert.That(location.Keys.DecodeLast<int>(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8><02>!<00><16><03><15>"))' Is.EqualTo(789));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(location.Keys["hello"' 123].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(location.Keys[("hello"' 123)].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{"))' Is.EqualTo(("hello"' 123)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T2,The following statement contains a magic number: Assert.That(x2' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(location.Keys["hello"' 123' "world"].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(location.Keys[("hello"' 123' "world")].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world").ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world")).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00>"))' Is.EqualTo(("hello"' 123' "world")));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T3,The following statement contains a magic number: Assert.That(x2' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys["hello"' 123' "world"' 456].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys["hello"' 123' "world"' 456].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys[("hello"' 123' "world"' 456)].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys[("hello"' 123' "world"' 456)].ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Encode("hello"' 123' "world"' 456).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Pack((IVarTuple) STuple.Create("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Pack(("hello"' 123' "world"' 456)).ToString()' Is.EqualTo("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(("hello"' 123' "world"' 456)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(location.Keys.Decode(Slice.Unescape("PREFIX<02>hello<00><15>{<02>world<00><16><01><C8>"))' Is.EqualTo(("hello"' 123' "world"' 456)));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(x2' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,KeySubspaceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\SubspaceFacts.cs,Test_TypedKeySpace_T4,The following statement contains a magic number: Assert.That(x4' Is.EqualTo(456));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Transaction_During_Commit_Should_Abort_Task,The following statement contains a magic number: tr.Set(location.Keys.Encode(i)' Slice.Random(rnd' 100 * 1000));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Transaction_During_Commit_Should_Abort_Task,The following statement contains a magic number: tr.Set(location.Keys.Encode(i)' Slice.Random(rnd' 100 * 1000));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Transaction_During_Commit_Should_Abort_Task,The following statement contains a magic number: i < 50
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Token_During_Commit_Should_Abort_Task,The following statement contains a magic number: tr.Set(location.Keys.Encode(i)' Slice.Random(rnd' 100 * 1000));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Cancelling_Token_During_Commit_Should_Abort_Task,The following statement contains a magic number: tr.Set(location.Keys.Encode(i)' Slice.Random(rnd' 100 * 1000));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The following statement contains a magic number: tr.Set(location.Keys.Encode("blob")' new byte[] { 42' 123' 7 }.AsSlice());
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The following statement contains a magic number: tr.Set(location.Keys.Encode("blob")' new byte[] { 42' 123' 7 }.AsSlice());
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The following statement contains a magic number: tr.Set(location.Keys.Encode("blob")' new byte[] { 42' 123' 7 }.AsSlice());
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The following statement contains a magic number: Assert.That(bytes.Array' Is.EqualTo(new byte[] { 42' 123' 7 }));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The following statement contains a magic number: Assert.That(bytes.Array' Is.EqualTo(new byte[] { 42' 123' 7 }));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Write_And_Read_Simple_Keys,The following statement contains a magic number: Assert.That(bytes.Array' Is.EqualTo(new byte[] { 42' 123' 7 }));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: i < 20
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel + 1)' Is.EqualTo(location.Keys.Encode(2))' "fGT(0)+1 should return 2");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: sel = KeySelector.LastLessOrEqual(location.Keys.Encode(10));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel)' Is.EqualTo(location.Keys.Encode(10))' "lLE(10) should return 10");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel - 1)' Is.EqualTo(location.Keys.Encode(9))' "lLE(10)-1 should return 9");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel + 1)' Is.EqualTo(location.Keys.Encode(11))' "lLE(10)+1 should return 11");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: sel = KeySelector.LastLessThan(location.Keys.Encode(10));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel)' Is.EqualTo(location.Keys.Encode(9))' "lLT(10) should return 9");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel - 1)' Is.EqualTo(location.Keys.Encode(8))' "lLT(10)-1 should return 8");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel + 1)' Is.EqualTo(location.Keys.Encode(10))' "lLT(10)+1 should return 10");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: sel = KeySelector.FirstGreaterOrEqual(location.Keys.Encode(20));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel - 1)' Is.EqualTo(location.Keys.Encode(19))' "fGE(20)-1 should return 19");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: sel = KeySelector.FirstGreaterThan(location.Keys.Encode(19));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Resolve_Key_Selector,The following statement contains a magic number: Assert.That(await tr.GetKeyAsync(sel - 1)' Is.EqualTo(location.Keys.Encode(19))' "fGT(19)-1 should return 19");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Values,The following statement contains a magic number: int[] ids = new int[] { 8' 7' 2' 9' 5' 0' 3' 4' 6' 1 };
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Keys,The following statement contains a magic number: const int N = 20;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Keys,The following statement contains a magic number: i < 20
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Get_Multiple_Keys,The following statement contains a magic number: Assert.That(results.Length' Is.EqualTo(20));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,PerformAtomicOperationAndCheck,The following statement contains a magic number: Assert.That(data.Count' Is.EqualTo(4)' "data.Count");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' -2' FdbMutationType.Add' 1);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 123456789' FdbMutationType.Add' 987654321);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 123456789' FdbMutationType.Add' 987654321);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 2' FdbMutationType.Max' 1);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 123456789' FdbMutationType.Max' 987654321);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 123456789' FdbMutationType.Max' 987654321);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 2' FdbMutationType.Min' 1);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 123456789' FdbMutationType.Min' 987654321);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: await PerformAtomicOperationAndCheck(db' key' 123456789' FdbMutationType.Min' 987654321);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: Fdb.ApiVersion >= 300
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: Assert.That(() => tr.Atomic(key' Slice.FromFixed32(42)' (FdbMutationType) 42)' Throws.InstanceOf<NotSupportedException>());
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Perform_Atomic_Operations,The following statement contains a magic number: Assert.That(() => tr.Atomic(key' Slice.FromFixed32(42)' (FdbMutationType) 42)' Throws.InstanceOf<NotSupportedException>());
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed32(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed32(43));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed32(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed32(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed32(43));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed32(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicAdd32(location.Keys.Encode("AAA")' 1);  					tr.AtomicAdd32(location.Keys.Encode("BBB")' 42);  					tr.AtomicAdd32(location.Keys.Encode("CCC")' -1);  					tr.AtomicAdd32(location.Keys.Encode("DDD")' 42);  					tr.AtomicAdd32(location.Keys.Encode("EEE")' 42);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicAdd32(location.Keys.Encode("AAA")' 1);  					tr.AtomicAdd32(location.Keys.Encode("BBB")' 42);  					tr.AtomicAdd32(location.Keys.Encode("CCC")' -1);  					tr.AtomicAdd32(location.Keys.Encode("DDD")' 42);  					tr.AtomicAdd32(location.Keys.Encode("EEE")' 42);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicAdd32(location.Keys.Encode("AAA")' 1);  					tr.AtomicAdd32(location.Keys.Encode("BBB")' 42);  					tr.AtomicAdd32(location.Keys.Encode("CCC")' -1);  					tr.AtomicAdd32(location.Keys.Encode("DDD")' 42);  					tr.AtomicAdd32(location.Keys.Encode("EEE")' 42);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd32,The following statement contains a magic number: _ = await db.ReadAsync(async (tr) =>  				{  					Assert.That((await tr.GetAsync(location.Keys.Encode("AAA"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("BBB"))).ToHexaString(' ')' Is.EqualTo("2B 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC"))).ToHexaString(' ')' Is.EqualTo("2A 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("DDD"))).ToHexaString(' ')' Is.EqualTo("29 01 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("EEE"))).ToHexaString(' ')' Is.EqualTo("2A 00 00 00"));  					return 123;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicIncrement32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed32(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed32(42));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed32(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicIncrement32,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed32(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed32(42));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed32(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicIncrement32,The following statement contains a magic number: _ = await db.ReadAsync(async (tr) =>  				{  					Assert.That((await tr.GetAsync(location.Keys.Encode("AAA"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("BBB"))).ToHexaString(' ')' Is.EqualTo("02 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC"))).ToHexaString(' ')' Is.EqualTo("2B 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("DDD"))).ToHexaString(' ')' Is.EqualTo("00 01 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("EEE"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00"));  					return 123;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed64(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed64(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed64(43));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed64(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed64(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed64(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed64(43));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed64(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicAdd64(location.Keys.Encode("AAA")' 1);  					tr.AtomicAdd64(location.Keys.Encode("BBB")' 42);  					tr.AtomicAdd64(location.Keys.Encode("CCC")' -1);  					tr.AtomicAdd64(location.Keys.Encode("DDD")' 42);  					tr.AtomicAdd64(location.Keys.Encode("EEE")' 42);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicAdd64(location.Keys.Encode("AAA")' 1);  					tr.AtomicAdd64(location.Keys.Encode("BBB")' 42);  					tr.AtomicAdd64(location.Keys.Encode("CCC")' -1);  					tr.AtomicAdd64(location.Keys.Encode("DDD")' 42);  					tr.AtomicAdd64(location.Keys.Encode("EEE")' 42);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicAdd64(location.Keys.Encode("AAA")' 1);  					tr.AtomicAdd64(location.Keys.Encode("BBB")' 42);  					tr.AtomicAdd64(location.Keys.Encode("CCC")' -1);  					tr.AtomicAdd64(location.Keys.Encode("DDD")' 42);  					tr.AtomicAdd64(location.Keys.Encode("EEE")' 42);  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicAdd64,The following statement contains a magic number: _ = await db.ReadAsync(async (tr) =>  				{  					Assert.That((await tr.GetAsync(location.Keys.Encode("AAA"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("BBB"))).ToHexaString(' ')' Is.EqualTo("2B 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC"))).ToHexaString(' ')' Is.EqualTo("2A 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("DDD"))).ToHexaString(' ')' Is.EqualTo("29 01 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("EEE"))).ToHexaString(' ')' Is.EqualTo("2A 00 00 00 00 00 00 00"));  					return 123;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicIncrement64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed64(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed64(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed64(42));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed64(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicIncrement64,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed64(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed64(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed64(42));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed64(255));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicIncrement64,The following statement contains a magic number: _ = await db.ReadAsync(async (tr) =>  				{  					Assert.That((await tr.GetAsync(location.Keys.Encode("AAA"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("BBB"))).ToHexaString(' ')' Is.EqualTo("02 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC"))).ToHexaString(' ')' Is.EqualTo("2B 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("DDD"))).ToHexaString(' ')' Is.EqualTo("00 01 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("EEE"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00 00 00 00 00"));  					return 123;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicCompareAndClear,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  					tr.Set(location.Keys.Encode("BBB")' Slice.FromFixed32(1));  					tr.Set(location.Keys.Encode("CCC")' Slice.FromFixed32(42));  					tr.Set(location.Keys.Encode("DDD")' Slice.FromFixed64(0));  					tr.Set(location.Keys.Encode("EEE")' Slice.FromFixed64(1));  					//FFF does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicCompareAndClear,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicCompareAndClear(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  // should be cleared  					tr.AtomicCompareAndClear(location.Keys.Encode("BBB")' Slice.FromFixed32(0));  // should not be touched  					tr.AtomicCompareAndClear(location.Keys.Encode("CCC")' Slice.FromFixed32(42)); // should be cleared  					tr.AtomicCompareAndClear(location.Keys.Encode("DDD")' Slice.FromFixed64(0));  // should be cleared  					tr.AtomicCompareAndClear(location.Keys.Encode("EEE")' Slice.FromFixed64(0));  // should not be touched  					tr.AtomicCompareAndClear(location.Keys.Encode("FFF")' Slice.FromFixed64(42)); // should not be created  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicCompareAndClear,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.AtomicCompareAndClear(location.Keys.Encode("AAA")' Slice.FromFixed32(0));  // should be cleared  					tr.AtomicCompareAndClear(location.Keys.Encode("BBB")' Slice.FromFixed32(0));  // should not be touched  					tr.AtomicCompareAndClear(location.Keys.Encode("CCC")' Slice.FromFixed32(42)); // should be cleared  					tr.AtomicCompareAndClear(location.Keys.Encode("DDD")' Slice.FromFixed64(0));  // should be cleared  					tr.AtomicCompareAndClear(location.Keys.Encode("EEE")' Slice.FromFixed64(0));  // should not be touched  					tr.AtomicCompareAndClear(location.Keys.Encode("FFF")' Slice.FromFixed64(42)); // should not be created  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AtomicCompareAndClear,The following statement contains a magic number: _ = await db.ReadAsync(async (tr) =>  				{  					Assert.That((await tr.GetAsync(location.Keys.Encode("AAA")))' Is.EqualTo(Slice.Nil));  					Assert.That((await tr.GetAsync(location.Keys.Encode("BBB"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC")))' Is.EqualTo(Slice.Nil));  					Assert.That((await tr.GetAsync(location.Keys.Encode("DDD")))' Is.EqualTo(Slice.Nil));  					Assert.That((await tr.GetAsync(location.Keys.Encode("EEE"))).ToHexaString(' ')' Is.EqualTo("01 00 00 00 00 00 00 00"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("FFF")))' Is.EqualTo(Slice.Nil));  					return 123;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AppendIfFits,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(location.Keys.Encode("AAA")' Slice.Empty);  					tr.Set(location.Keys.Encode("BBB")' Slice.Repeat('B'' 10));  					tr.Set(location.Keys.Encode("CCC")' Slice.Repeat('C'' 90_000));  					tr.Set(location.Keys.Encode("DDD")' Slice.Repeat('D'' 100_000));  					//EEE does not exist  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_AppendIfFits,The following statement contains a magic number: _ = await db.ReadAsync(async (tr) =>  				{  					Assert.That((await tr.GetAsync(location.Keys.Encode("AAA"))).ToString()' Is.EqualTo("Hello' World!"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("BBB"))).ToString()' Is.EqualTo("BBBBBBBBBBHello' World!"));  					Assert.That((await tr.GetAsync(location.Keys.Encode("CCC")))' Is.EqualTo(Slice.Repeat('C'' 90_000) + Slice.Repeat('c'' 10_000)));  					Assert.That((await tr.GetAsync(location.Keys.Encode("DDD")))' Is.EqualTo(Slice.Repeat('D'' 100_000)));  					Assert.That((await tr.GetAsync(location.Keys.Encode("EEE"))).ToString()' Is.EqualTo("Hello' World!"));  					return 123;  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: var kvp = await tr1  						.GetRange(loc.Keys.Encode("foo")' loc.Keys.Encode("foo"' 100))  						.FirstOrDefaultAsync();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(kvp.Key' Is.EqualTo(loc.Keys.Encode("foo"' 50)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Set(loc.Keys.Encode("foo"' 42)' Value("forty-two"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: var kvp = await tr1  						.GetRange(loc.Keys.Encode("foo")' loc.Keys.Encode("foo"' 100))  						.FirstOrDefaultAsync();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(kvp.Key' Is.EqualTo(loc.Keys.Encode("foo"' 50)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetRange_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Set(loc.Keys.Encode("foo"' 77)' Value("docm"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(key' Is.EqualTo(loc.Keys.Encode("foo"' 50)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Set(loc.Keys.Encode("foo"' 42)' Value("forty-two"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(key' Is.EqualTo(loc.Keys.Encode("foo"' 50)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Set(loc.Keys.Encode("foo"' 77)' Value("docm"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  					tr.Set(loc.Keys.Encode("foo"' 100)' Value("one hundred"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  					tr.Set(loc.Keys.Encode("foo"' 100)' Value("one hundred"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: var key = await tr1.GetKeyAsync(KeySelector.FirstGreaterOrEqual(loc.Keys.Encode("foo"' 50)) + 1);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(key' Is.EqualTo(loc.Keys.Encode("foo"' 100)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Set(loc.Keys.Encode("foo"' 77)' Value("docm"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  					tr.Set(loc.Keys.Encode("foo"' 100)' Value("one hundred"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  					tr.Set(loc.Keys.Encode("foo"' 100)' Value("one hundred"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: var key = await tr1.GetKeyAsync(KeySelector.FirstGreaterThan(loc.Keys.Encode("foo"' 50)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(key' Is.EqualTo(loc.Keys.Encode("foo"' 100)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Set(loc.Keys.Encode("foo"' 100)' Value("cent"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  					tr.Set(loc.Keys.Encode("foo"' 100)' Value("one hundred"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.ClearRange(loc);  					tr.Set(loc.Keys.Encode("foo"' 50)' Value("fifty"));  					tr.Set(loc.Keys.Encode("foo"' 100)' Value("one hundred"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: var key = await tr1.GetKeyAsync(KeySelector.LastLessThan(loc.Keys.Encode("foo"' 100)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: Assert.That(key' Is.EqualTo(loc.Keys.Encode("foo"' 50)));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_GetKey_With_Concurrent_Change_Should_Conflict,The following statement contains a magic number: tr2.Clear(loc.Keys.Encode("foo"' 100));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation,The following statement contains a magic number: await db.WriteAsync((tr) => tr.Set(key' Slice.FromInt32(2))' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation,The following statement contains a magic number: await db.WriteAsync((tr) => tr.Set(key' Slice.FromInt32(2))' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Read_Isolation,The following statement contains a magic number: Assert.That(value.ToInt32()' Is.EqualTo(2)' "T1 should have seen the value modified by T2");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(a' Value("a"));  					tr.Set(b.Keys.Encode(10)' Value("PRINT \"HELLO\""));  					tr.Set(b.Keys.Encode(20)' Value("GOTO 10"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					tr.Set(a' Value("a"));  					tr.Set(b.Keys.Encode(10)' Value("PRINT \"HELLO\""));  					tr.Set(b.Keys.Encode(20)' Value("GOTO 10"));  				}' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The following statement contains a magic number: tr.Set(b.Keys.Encode(15)' Value("PRINT \"WORLD\""));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_ReadYourWritesDisable_Isolation,The following statement contains a magic number: tr.Set(b.Keys.Encode(15)' Value("PRINT \"WORLD\""));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Read_Version,The following statement contains a magic number: tr2.Set(location.Keys.Encode("concurrent")' Slice.FromByte(2));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Has_Access_To_System_Keys,The following statement contains a magic number: await TestHelpers.AssertThrowsFdbErrorAsync(  						() => tr.GetRange(Slice.FromByteString("\xFF")' Slice.FromByteString("\xFF\xFF")' new FdbRangeOptions { Limit = 10 }).ToListAsync()'  						FdbError.KeyOutsideLegalRange'  						"Should not have access to system keys by default"  					);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Has_Access_To_System_Keys,The following statement contains a magic number: var keys = await tr.GetRange(Slice.FromByteString("\xFF")' Slice.FromByteString("\xFF\xFF")' new FdbRangeOptions { Limit = 10 }).ToListAsync();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: Assert.That(tr.Timeout' Is.EqualTo(15000)' "Timeout (default)");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: tr.Timeout = 1000;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: tr.RetryLimit = 5;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: tr.MaxRetryDelay = 500;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: Assert.That(tr.Timeout' Is.EqualTo(1000)' "Timeout");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: Assert.That(tr.RetryLimit' Is.EqualTo(5)' "RetryLimit");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Set_Timeout_And_RetryLimit,The following statement contains a magic number: Assert.That(tr.MaxRetryDelay' Is.EqualTo(500)' "MaxRetryDelay");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(db.DefaultTimeout' Is.EqualTo(15000)' "db.DefaultTimeout (default)");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: db.DefaultTimeout = 500;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: db.DefaultRetryLimit = 3;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: db.DefaultMaxRetryDelay = 600;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(db.DefaultTimeout' Is.EqualTo(500)' "db.DefaultTimeout");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(db.DefaultRetryLimit' Is.EqualTo(3)' "db.DefaultRetryLimit");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(db.DefaultMaxRetryDelay' Is.EqualTo(600)' "db.DefaultMaxRetryDelay");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr.Timeout' Is.EqualTo(500)' "tr.Timeout");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr.RetryLimit' Is.EqualTo(3)' "tr.RetryLimit");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr.MaxRetryDelay' Is.EqualTo(600)' "tr.MaxRetryDelay");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: db.DefaultTimeout = 600;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: db.DefaultRetryLimit = 4;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: db.DefaultMaxRetryDelay = 700;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr2.Timeout' Is.EqualTo(600)' "tr2.Timeout");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr2.RetryLimit' Is.EqualTo(4)' "tr2.RetryLimit");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr2.MaxRetryDelay' Is.EqualTo(700)' "tr2.MaxRetryDelay");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr.Timeout' Is.EqualTo(500)' "tr.Timeout");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr.RetryLimit' Is.EqualTo(3)' "tr.RetryLimit");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Timeout_And_RetryLimit_Inherits_Default_From_Database,The following statement contains a magic number: Assert.That(tr.MaxRetryDelay' Is.EqualTo(600)' "tr.MaxRetryDelay");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The following statement contains a magic number: Assert.That(db.DefaultTimeout' Is.EqualTo(15000)' "db.DefaultTimeout (default)");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The following statement contains a magic number: db.DefaultRetryLimit = 3;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The following statement contains a magic number: var t = db.ReadAsync<int>((tr) =>  				{  					++counter;  					Log($"Called {counter} time(s)");  					if (counter > 4)  					{  						go.Cancel();  						tr.Context.Abort = true;  						Assert.Fail("The retry loop was called too many times!");  					}    					Assert.That(tr.RetryLimit' Is.EqualTo(3));    					// simulate a retryable error condition  					throw new FdbException(FdbError.PastVersion);  				}' go.Token);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The following statement contains a magic number: var t = db.ReadAsync<int>((tr) =>  				{  					++counter;  					Log($"Called {counter} time(s)");  					if (counter > 4)  					{  						go.Cancel();  						tr.Context.Abort = true;  						Assert.Fail("The retry loop was called too many times!");  					}    					Assert.That(tr.RetryLimit' Is.EqualTo(3));    					// simulate a retryable error condition  					throw new FdbException(FdbError.PastVersion);  				}' go.Token);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Respects_DefaultRetryLimit_Value,The following statement contains a magic number: Assert.That(counter' Is.EqualTo(4)' "1 first attempt + 3 retries = 4 executions");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Resets_RetryLimit_And_Timeout,The following statement contains a magic number: tr.RetryLimit = 10;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Resets_RetryLimit_And_Timeout,The following statement contains a magic number: tr.RetryLimit = 10;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Transaction_RetryLoop_Resets_RetryLimit_And_Timeout,The following statement contains a magic number: tr.RetryLimit = 2;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Add_Read_Conflict_Range,The following statement contains a magic number: var key2 = location.Keys.Encode(2);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Add_Write_Conflict_Range,The following statement contains a magic number: var key2 = location.Keys.Encode(2);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The following statement contains a magic number: await Task.Delay(100' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The following statement contains a magic number: await Task.Delay(100' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Setup_And_Cancel_Watches,The following statement contains a magic number: await Task.Delay(100' this.Cancellation);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Addresses_For_Key,The following statement contains a magic number: var key404 = location.Keys.Encode(404);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: var nodeId = key.Value.Substring(8' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: var nodeId = key.Value.Substring(8' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: var machineId = key.Value.Substring(24' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: var machineId = key.Value.Substring(24' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: var dataCenterId = key.Value.Substring(40' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: var dataCenterId = key.Value.Substring(40' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: int n = (key.Value.Count - 16) >> 4;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: int n = (key.Value.Count - 16) >> 4;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: ids[i] = key.Value.Substring(12 + i * 16' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: ids[i] = key.Value.Substring(12 + i * 16' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: ids[i] = key.Value.Substring(12 + i * 16' 16).ToHexaString();
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: Log($"Cluster topology: {distinctNodes.Count} process(es) with {(replicationFactor == 1 ? "single" : replicationFactor == 2 ? "double" : replicationFactor == 3 ? "triple" : replicationFactor.ToString())} replication");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_Can_Get_Boundary_Keys,The following statement contains a magic number: Log($"Cluster topology: {distinctNodes.Count} process(es) with {(replicationFactor == 1 ? "single" : replicationFactor == 2 ? "double" : replicationFactor == 3 ? "triple" : replicationFactor.ToString())} replication");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: Assert.That(x.TransactionVersion >> 56' Is.EqualTo(0xFF)' "Highest 8 bit of Transaction Version should be set to 1");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: Assert.That(x.TransactionOrder >> 12' Is.EqualTo(0xF)' "Highest 4 bits of Transaction Order should be set to 1");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: var x42 = tr.CreateVersionStamp(42);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: Assert.That(x42.UserVersion' Is.EqualTo(42));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: Assert.That(y.TransactionVersion >> 56' Is.EqualTo(0xFF)' "Highest 8 bit of Transaction Version should be set to 1");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: Assert.That(y.TransactionOrder >> 12' Is.EqualTo(0xF)' "Highest 4 bits of Transaction Order should be set to 1");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: var y42 = tr.CreateVersionStamp(42);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamps_Share_The_Same_Token_Per_Transaction_Attempt,The following statement contains a magic number: Assert.That(y42.UserVersion' Is.EqualTo(42));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: tr.SetVersionStampedKey(location.Keys.Encode("foo"' vs' 123)' Value("Hello' World!"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: tr.SetVersionStampedKey(location.Keys.Encode("bar"' tr.CreateVersionStamp(42))' Value("FortyTwo"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(t.Get<int>(2)' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(t.Get<int>(2)' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(items.Count' Is.EqualTo(3)' "Should have found 3 keys under 'foo'");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(items[2].Value.ToString()' Is.EqualTo("FortyTwo"));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: var vs42 = location.Keys.DecodeLast<VersionStamp>(items[2].Key);
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(vs42.UserVersion' Is.EqualTo(42));
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(baz.Substring(10)' Is.EqualTo(Slice.FromString("Hello World!"))' "The rest of the slice should be untouched");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(jazz.Substring(6' 10)' Is.EqualTo(vsActual.ToSlice())' "The bytes 6 to 15 should match the resolved stamp");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(jazz.Substring(6' 10)' Is.EqualTo(vsActual.ToSlice())' "The bytes 6 to 15 should match the resolved stamp");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(jazz.Substring(0' 6)' Is.EqualTo(Slice.FromString("Hello'"))' "The start of the slice should be left intact");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VersionStamp_Operations,The following statement contains a magic number: Assert.That(jazz.Substring(16)' Is.EqualTo(Slice.FromString("' World!"))' "The end of the slice should be left intact");
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: const int DURATION_SEC = 5;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: const int R = 100;
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Magic Number,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following statement contains a magic number: (time++) % 80 == 0
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(vs.GetLength()' Is.EqualTo(10));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(vs.GetLength()' Is.EqualTo(12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Incomplete(123);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(vs.UserVersion' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Incomplete(12345);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(vs.UserVersion' Is.EqualTo(12345));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(() => VersionStamp.Incomplete(65536)' Throws.ArgumentException' "User version cannot be larger than 0xFFFF");
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: VersionStamp.Incomplete(123).WriteTo(ref writer);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: reader.Skip(3);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Parse(reader.ReadBytes(12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(reader.Remaining' Is.EqualTo(3));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: Assert.That(vs.UserVersion' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: var buf = MutableSlice.Repeat(0xAA' 18);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: VersionStamp.Incomplete(123).WriteTo(buf.Substring(3' 12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: VersionStamp.Incomplete(123).WriteTo(buf.Substring(3' 12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Incomplete_VersionStamp,The following statement contains a magic number: VersionStamp.Incomplete(123).WriteTo(buf.Substring(3' 12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Complete(0x0123456789ABCDEFUL' 123);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.TransactionOrder' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 0);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.TransactionOrder' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.TransactionOrder' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.UserVersion' Is.EqualTo(456));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Complete(0x0123456789ABCDEFUL' 12345' 6789);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Complete(0x0123456789ABCDEFUL' 12345' 6789);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.TransactionOrder' Is.EqualTo(12345));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.UserVersion' Is.EqualTo(6789));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(() => VersionStamp.Complete(0x0123456789ABCDEFUL' 0' 65536)' Throws.ArgumentException' "User version cannot be larger than 0xFFFF");
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456).WriteTo(ref writer);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456).WriteTo(ref writer);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: reader.Skip(3);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var vs = VersionStamp.Parse(reader.ReadBytes(12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(reader.Remaining' Is.EqualTo(3));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.TransactionOrder' Is.EqualTo(123));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: Assert.That(vs.UserVersion' Is.EqualTo(456));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: var buf = MutableSlice.Repeat(0xAA' 18);
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456).WriteTo(buf.Substring(3' 12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456).WriteTo(buf.Substring(3' 12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456).WriteTo(buf.Substring(3' 12));
Magic Number,FoundationDB.Client.Tests,VersionStampFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\VersionStampFacts.cs,Test_Complete_VersionStamp,The following statement contains a magic number: VersionStamp.Complete(0x0123456789ABCDEFUL' 123' 456).WriteTo(buf.Substring(3' 12));
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Order_Int32Encoder,The following statement contains a magic number: Assert.That(encoder.EncodeKey(123)' Is.EqualTo(Slice.Unescape("<15><7B>")));
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Order_Int32Encoder,The following statement contains a magic number: Assert.That(encoder.EncodeKey(123456)' Is.EqualTo(Slice.Unescape("<17><01><E2><40>")));
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Order_Int32Encoder,The following statement contains a magic number: Assert.That(encoder.DecodeKey(Slice.Unescape("<15><7B>"))' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Order_Int32Encoder,The following statement contains a magic number: Assert.That(encoder.DecodeKey(Slice.Unescape("<17><01><E2><40>"))' Is.EqualTo(123456));
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Tuple_Composite_Encoder,The following statement contains a magic number: long y = 123;
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Tuple_Composite_Encoder,The following statement contains a magic number: data = encoder.EncodeKeyParts(2' items);
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Tuple_Composite_Encoder,The following statement contains a magic number: items = encoder.DecodeKeyParts(2' TuPack.EncodeKey(x' y));
Magic Number,Doxense.Collections.Tuples.Tests,TupleEncoderFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\EncoderFacts.cs,Test_Tuple_Composite_Encoder,The following statement contains a magic number: Assert.That(() => { encoder.EncodeKeyParts(4' items); }' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.EncodeOrdered(123)' Is.EqualTo(TuPack.EncodeKey(123)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.EncodeOrdered(123)' Is.EqualTo(TuPack.EncodeKey(123)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.EncodeOrdered(123456)' Is.EqualTo(TuPack.EncodeKey(123456)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.EncodeOrdered(123456)' Is.EqualTo(TuPack.EncodeKey(123456)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.DecodeOrdered(TuPack.EncodeKey(123))' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.DecodeOrdered(TuPack.EncodeKey(123))' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.DecodeOrdered(TuPack.EncodeKey(123456))' Is.EqualTo(123456));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_Integer_Codec,The following statement contains a magic number: Assert.That(codec.DecodeOrdered(TuPack.EncodeKey(123456))' Is.EqualTo(123456));
Magic Number,Doxense.Collections.Tuples.Tests,TupleTypeCodecFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Encoders\TypeCodecFacts.cs,Test_Simple_SelfTerms_Codecs,The following statement contains a magic number: long y = 123;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(255).ToString()'  				Is.EqualTo("<15><FF>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(256).ToString()'  				Is.EqualTo("<16><01><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(65535).ToString()'  				Is.EqualTo("<16><FF><FF>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(65536).ToString()'  				Is.EqualTo("<17><01><00><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: value <= 255 && value >= 0
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<15>{"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<15><80>"' 128);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<15><FF>"' 255);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<16><01><00>"' 256);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<16><04><D2>"' 1234);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<16><80><00>"' 32768);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<16><FF><FF>"' 65535);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<17><01><00><00>"' 65536);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<13><00>"' -255);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<12><FE><FF>"' -256);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<12><00><00>"' -65535);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Integers,The following statement contains a magic number: Verify("<11><FE><FF><FF>"' -65536);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Negative_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(-255).ToString()'  				Is.EqualTo("<13><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Negative_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(-256).ToString()'  				Is.EqualTo("<12><FE><FF>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Negative_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(-257).ToString()'  				Is.EqualTo("<12><FE><FE>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Negative_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(-65535).ToString()'  				Is.EqualTo("<12><00><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Negative_Integers,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(-65536).ToString()'  				Is.EqualTo("<11><FE><FF><FF>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The following statement contains a magic number: Assert.That(TuPack.EncodeKey(42f).ToHexaString(' ')' Is.EqualTo("20 C2 28 00 00"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The following statement contains a magic number: Assert.That(TuPack.EncodeKey(-42f).ToHexaString(' ')' Is.EqualTo("20 3D D7 FF FF"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The following statement contains a magic number: Assert.That(TuPack.EncodeKey((float) Math.Sqrt(2)).ToHexaString(' ')' Is.EqualTo("20 BF B5 04 F3"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Singles,The following statement contains a magic number: nan += 123;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Singles,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<float>(Slice.FromHexa("20 C2 28 00 00"))' Is.EqualTo(42f)' "42f");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Singles,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<float>(Slice.FromHexa("20 3D D7 FF FF"))' Is.EqualTo(-42f)' "-42f");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Singles,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<float>(Slice.FromHexa("20 BF B5 04 F3"))' Is.EqualTo((float) Math.Sqrt(2))' "Sqrt(2)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.EncodeKey(42d).ToHexaString(' ')' Is.EqualTo("21 C0 45 00 00 00 00 00 00"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.EncodeKey(-42d).ToHexaString(' ')' Is.EqualTo("21 3F BA FF FF FF FF FF FF"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: nan += 123;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: var tuple = STuple.Create(Math.PI' Math.E' Math.Log(1)' Math.Log(2));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.Unpack(TuPack.EncodeKey(Math.PI' Math.E' Math.Log(1)' Math.Log(2)))' Is.EqualTo(tuple));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.Unpack(TuPack.Pack(STuple.Create(Math.PI' Math.E' Math.Log(1)' Math.Log(2))))' Is.EqualTo(tuple));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.Unpack(TuPack.Pack(STuple.Empty.Append(Math.PI).Append(Math.E).Append(Math.Log(1)).Append(Math.Log(2))))' Is.EqualTo(tuple));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 C0 45 00 00 00 00 00 00"))' Is.EqualTo(42d)' "42d");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Doubles,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<double>(Slice.FromHexa("21 3F BA FF FF FF FF FF FF"))' Is.EqualTo(-42d)' "-42d");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Booleans,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<bool>(TuPack.EncodeKey(123456789))' Is.True' "random int => True");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Incomplete(42)).ToHexaString(' ')'  				Is.EqualTo("33 FF FF FF FF FF FF FF FF FF FF 00 2A")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Incomplete(456)).ToHexaString(' ')'  				Is.EqualTo("33 FF FF FF FF FF FF FF FF FF FF 01 C8")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Incomplete(65535)).ToHexaString(' ')'  				Is.EqualTo("33 FF FF FF FF FF FF FF FF FF FF FF FF")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 1234)).ToHexaString(' ')'  				Is.EqualTo("32 01 23 45 67 89 AB CD EF 04 D2")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create(VersionStamp.Complete(0x0123456789ABCDEF' 1234))).ToHexaString(' ')'  				Is.EqualTo("32 01 23 45 67 89 AB CD EF 04 D2")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 0)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF 04 D2 00 00")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 42)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF 04 D2 00 2A")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 42)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF 04 D2 00 2A")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 65535' 42)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF FF FF 00 2A")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 65535' 42)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF FF FF 00 2A")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 65535)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF 04 D2 FF FF")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_VersionStamps,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 65535)).ToHexaString(' ')'  				Is.EqualTo("33 01 23 45 67 89 AB CD EF 04 D2 FF FF")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.Unpack(Slice.FromHexa("32 01 23 45 67 89 AB CD EF 04 D2")).Get<VersionStamp>(0)' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234))' "Complete(...' 1234)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF 00 2A"))' Is.EqualTo(VersionStamp.Incomplete(42))' "Incomplete(42)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF 01 C8"))' Is.EqualTo(VersionStamp.Incomplete(456))' "Incomplete(456)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 FF FF FF FF FF FF FF FF FF FF FF FF"))' Is.EqualTo(VersionStamp.Incomplete(65535))' "Incomplete(65535)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("32 01 23 45 67 89 AB CD EF 04 D2"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234))' "Complete(...' 1234)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 00 00"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 0))' "Complete(...' 1234' 0)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 00 2A"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 42))' "Complete(...' 1234' 42)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 00 2A"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 42))' "Complete(...' 1234' 42)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF FF FF 00 2A"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 65535' 42))' "Complete(...' 65535' 42)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF FF FF 00 2A"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 65535' 42))' "Complete(...' 65535' 42)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 FF FF"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 65535))' "Complete(...' 1234' 65535)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserailize_VersionStamps,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<VersionStamp>(Slice.FromHexa("33 01 23 45 67 89 AB CD EF 04 D2 FF FF"))' Is.EqualTo(VersionStamp.Complete(0x0123456789ABCDEF' 1234' 65535))' "Complete(...' 1234' 65535)");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The following statement contains a magic number: Assert.That(TuPack.EncodeKey(TuPackUserType.Directory' 42' "Hello").ToHexaString(' ')' Is.EqualTo("FE 15 2A 02 48 65 6C 6C 6F 00"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The following statement contains a magic number: Assert.That(TuPack.EncodeKey(42' TuPackUserType.Directory' "Hello").ToHexaString(' ')' Is.EqualTo("15 2A FE 02 48 65 6C 6C 6F 00"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Custom_Types,The following statement contains a magic number: Assert.That(TuPack.Pack((42' TuPackUserType.Directory' "Hello")).ToHexaString(' ')' Is.EqualTo("15 2A FE 02 48 65 6C 6C 6F 00"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Custom_Types,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<int' TuPackUserType' string>(Slice.FromHexa("15 2A FE 02 48 65 6C 6C 6F 00"))' Is.EqualTo(STuple.Create(42' TuPackUserType.Directory' "Hello")));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Custom_Types,The following statement contains a magic number: Assert.That(TuPack.Unpack(Slice.FromHexa("15 2A FE 02 48 65 6C 6C 6F 00"))' Is.EqualTo(STuple.Create(42' TuPackUserType.Directory' "Hello")));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.EncodeKey<int?>(123)' Is.EqualTo(Slice.Unescape("<15>{")));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.EncodeKey<long?>(123L)' Is.EqualTo(Slice.Unescape("<15>{")));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.Pack(ValueTuple.Create<int?>(123))' Is.EqualTo(Slice.Unescape("<15>{")));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.Pack(ValueTuple.Create<long?>(123))' Is.EqualTo(Slice.Unescape("<15>{")));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<int?>(Slice.Unescape("<15>{"))' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.Unpack(Slice.Unescape("<15>{")).Get<int?>(0)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.DecodeKey<long?>(Slice.Unescape("<15>{"))' Is.EqualTo(123L));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_NullableTypes,The following statement contains a magic number: Assert.That(TuPack.Unpack(Slice.Unescape("<15>{")).Get<long?>(0)' Is.EqualTo(123L));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: IVarTuple value = STuple.Create(2014' 11' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: IVarTuple value = STuple.Create(2014' 11' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: IVarTuple value = STuple.Create(2014' 11' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(42' value' docId)'  				"15 2A 05 16 07 DE 15 0B 15 06 00 02 44 6F 63 31 32 33 00"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(new object[] {42' value' docId})'  				"15 2A 05 16 07 DE 15 0B 15 06 00 02 44 6F 63 31 32 33 00"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(42).Append(value).Append(docId)'  				"15 2A 05 16 07 DE 15 0B 15 06 00 02 44 6F 63 31 32 33 00"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(42).Append(value' docId)'  				"15 2A 05 16 07 DE 15 0B 15 06 00 02 44 6F 63 31 32 33 00"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(1' STuple.Create(2' 3)' STuple.Create(STuple.Create(4' 5' 6))' 7)'  				"15 01 05 15 02 15 03 00 05 05 15 04 15 05 15 06 00 00 15 07"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(1' STuple.Create(2' 3)' STuple.Create(STuple.Create(4' 5' 6))' 7)'  				"15 01 05 15 02 15 03 00 05 05 15 04 15 05 15 06 00 00 15 07"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(1' STuple.Create(2' 3)' STuple.Create(STuple.Create(4' 5' 6))' 7)'  				"15 01 05 15 02 15 03 00 05 05 15 04 15 05 15 06 00 00 15 07"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(1' STuple.Create(2' 3)' STuple.Create(STuple.Create(4' 5' 6))' 7)'  				"15 01 05 15 02 15 03 00 05 05 15 04 15 05 15 06 00 00 15 07"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(1' STuple.Create(2' 3)' STuple.Create(STuple.Create(4' 5' 6))' 7)'  				"15 01 05 15 02 15 03 00 05 05 15 04 15 05 15 06 00 00 15 07"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Serialize_Embedded_Tuples,The following statement contains a magic number: Verify(  				STuple.Create(1' STuple.Create(2' 3)' STuple.Create(STuple.Create(4' 5' 6))' 7)'  				"15 01 05 15 02 15 03 00 05 05 15 04 15 05 15 06 00 00 15 07"  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: var packed = TuPack.EncodeKey(STuple.Create(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: var packed = TuPack.EncodeKey(STuple.Create(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: var packed = TuPack.EncodeKey(STuple.Create(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: var packed = TuPack.EncodeKey(STuple.Create(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Get<int>(0)' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Get<IVarTuple>(1)' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Get<IVarTuple>(1)' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Get<IVarTuple>(1)' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Get<string>(2)' Is.EqualTo("Hello"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t1.Get<bool>(3)' Is.True);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Get<int>(0)' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Get<IVarTuple>(1)' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Get<IVarTuple>(1)' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Get<IVarTuple>(1)' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Get<string>(2)' Is.EqualTo("Hello"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Get<bool>(3)' Is.True);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' STuple.Create(2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' STuple.Create(2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' STuple.Create(2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' STuple.Create(2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: packed = TuPack.EncodeKey(TuPack.EncodeKey(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: packed = TuPack.EncodeKey(TuPack.EncodeKey(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: packed = TuPack.EncodeKey(TuPack.EncodeKey(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: packed = TuPack.EncodeKey(TuPack.EncodeKey(42' STuple.Create(2014' 11' 6)' "Hello"' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(STuple.Create(2014' 11' 6)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Deserialize_Embedded_Tuples,The following statement contains a magic number: Assert.That(t' Is.EqualTo((42' (2014' 11' 6)' "Hello"' true)));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234).Substring(0' 1))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: var expected = TuPack.EncodeKey("Hello World"' 1234);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(("Hello World"' 1234))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(((IVarTuple) STuple.Create("Hello World"' 1234)))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World").Append(1234))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(((IVarTuple) STuple.Create("Hello World")).Append(1234))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create(new object[] {"Hello World"' 1234}))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234' "Foo").Substring(0' 2))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234' "Foo").Substring(0' 2))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: var expected = TuPack.EncodeKey("Hello World"' 1234' "Foo");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(("Hello World"' 1234' "Foo"))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234' "Foo"))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(((IVarTuple) STuple.Create("Hello World"' 1234' "Foo")))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World").Append(1234).Append("Foo"))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(((IVarTuple) STuple.Create("Hello World")).Append(1234).Append("Foo"))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create(new object[] {"Hello World"' 1234' "Foo"}))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234' "Foo"' "Bar").Substring(0' 3))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello World"' 1234' "Foo"' "Bar").Substring(0' 3))' Is.EqualTo(expected));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(("Hello"' 123))' Is.EqualTo(TuPack.Pack(("Hello"' 123L))));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(("Hello"' 123))' Is.EqualTo(TuPack.Pack(("Hello"' 123L))));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello"' 123))' Is.EqualTo(TuPack.Pack(STuple.Create("Hello"' 123L))));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello"' 123))' Is.EqualTo(TuPack.Pack(STuple.Create("Hello"' 123L))));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello"' -123))' Is.EqualTo(TuPack.Pack(STuple.Create("Hello"' -123L))));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SameBytes,The following statement contains a magic number: Assert.That(TuPack.Pack(STuple.Create("Hello"' -123))' Is.EqualTo(TuPack.Pack(STuple.Create("Hello"' -123L))));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Numbers_Are_Sorted_Lexicographically,The following statement contains a magic number: const int N = 1 * 1000 * 1000;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Numbers_Are_Sorted_Lexicographically,The following statement contains a magic number: const int N = 1 * 1000 * 1000;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Numbers_Are_Sorted_Lexicographically,The following statement contains a magic number: int x = rnd.Next() - 1073741824;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Numbers_Are_Sorted_Lexicographically,The following statement contains a magic number: y = rnd.Next() - 1073741824;
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 1234' -1234)).ToString()'  				Is.EqualTo("<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 1234' -1234)).ToString()'  				Is.EqualTo("<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.Create(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromArray(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}}' 1' 2)).ToString()'  				Is.EqualTo("<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromArray(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}}' 1' 2)).ToString()'  				Is.EqualTo("<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromArray(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}}' 1' 2)).ToString()'  				Is.EqualTo("<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromArray(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}}' 1' 2)).ToString()'  				Is.EqualTo("<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromArray(new object[] {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}}' 1' 2)).ToString()'  				Is.EqualTo("<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromEnumerable(new List<object> {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromEnumerable(new List<object> {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromEnumerable(new List<object> {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(STuple.FromEnumerable(new List<object> {"hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}})).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 1234' -1234)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 1234' -1234)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界")).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true)).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.Create(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromArray(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } }' 1' 2)).ToString()'  				Is.EqualTo("ABC<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromArray(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } }' 1' 2)).ToString()'  				Is.EqualTo("ABC<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromArray(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } }' 1' 2)).ToString()'  				Is.EqualTo("ABC<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromArray(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } }' 1' 2)).ToString()'  				Is.EqualTo("ABC<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromArray(new object[] { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } }' 1' 2)).ToString()'  				Is.EqualTo("ABC<15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromEnumerable(new List<object> { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromEnumerable(new List<object> { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromEnumerable(new List<object> { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(prefix' STuple.FromEnumerable(new List<object> { "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 } })).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(Slice.Nil' STuple.Create("hello world"' 123)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Pack_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.Pack(Slice.Empty' STuple.Create("hello world"' 123)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var tuples = new IVarTuple[]  				{  					STuple.Create("hello")'  					STuple.Create(123)'  					STuple.Create(false)'  					STuple.Create("world"' 456' true)  				};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var tuples = new IVarTuple[]  				{  					STuple.Create("hello")'  					STuple.Create(123)'  					STuple.Create(false)'  					STuple.Create("world"' 456' true)  				};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("Hello")'  					STuple.Create(123' true)'  					STuple.Create(Math.PI' -1234L)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("Hello")'  					STuple.Create(123' true)'  					STuple.Create(Math.PI' -1234L)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("!<C0><09>!<FB>TD-<18><12><FB>-"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create(123)'  					STuple.Create(456)'  					STuple.Create(789)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create(123)'  					STuple.Create(456)'  					STuple.Create(789)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create(123)'  					STuple.Create(456)'  					STuple.Create(789)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<16><03><15>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create(123' true)'  					STuple.Create(456' false)'  					STuple.Create(789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create(123' true)'  					STuple.Create(456' false)'  					STuple.Create(789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create(123' true)'  					STuple.Create(456' false)'  					STuple.Create(789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<16><03><15>&"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true)'  					STuple.Create("bar"' 456' false)'  					STuple.Create("baz"' 789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true)'  					STuple.Create("bar"' 456' false)'  					STuple.Create("baz"' 789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true)'  					STuple.Create("bar"' 456' false)'  					STuple.Create("baz"' 789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<02>baz<00><16><03><15>&"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes")'  					STuple.Create("bar"' 456' false' "yes")'  					STuple.Create("baz"' 789' false' "no")  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes")'  					STuple.Create("bar"' 456' false' "yes")'  					STuple.Create("baz"' 789' false' "no")  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes")'  					STuple.Create("bar"' 456' false' "yes")'  					STuple.Create("baz"' 789' false' "no")  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<02>baz<00><16><03><15>&<02>no<00>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7)'  					STuple.Create("bar"' 456' false' "yes"' 42)'  					STuple.Create("baz"' 789' false' "no"' 9)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7)'  					STuple.Create("bar"' 456' false' "yes"' 42)'  					STuple.Create("baz"' 789' false' "no"' 9)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7)'  					STuple.Create("bar"' 456' false' "yes"' 42)'  					STuple.Create("baz"' 789' false' "no"' 9)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7)'  					STuple.Create("bar"' 456' false' "yes"' 42)'  					STuple.Create("baz"' 789' false' "no"' 9)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7)'  					STuple.Create("bar"' 456' false' "yes"' 42)'  					STuple.Create("baz"' 789' false' "no"' 9)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7)'  					STuple.Create("bar"' 456' false' "yes"' 42)'  					STuple.Create("baz"' 789' false' "no"' 9)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<02>baz<00><16><03><15>&<02>no<00><15><09>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: var packed = TuPack.PackTuples(  					STuple.Create("foo"' 123' true' "yes"' 7' 1.5d)'  					STuple.Create("bar"' 456' false' "yes"' 42' 0.7d)'  					STuple.Create("baz"' 789' false' "no"' 9' 0.66d)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<02>baz<00><16><03><15>&<02>no<00><15><09>!<BF><E5><1E><B8>Q<EB><85><1F>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var tuples = new IVarTuple[]  				{  					STuple.Create("hello")'  					STuple.Create(123)'  					STuple.Create(false)'  					STuple.Create("world"' 456' true)  				};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var tuples = new IVarTuple[]  				{  					STuple.Create("hello")'  					STuple.Create(123)'  					STuple.Create(false)'  					STuple.Create("world"' 456' true)  				};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create("Hello")'  					STuple.Create(123' true)'  					STuple.Create(Math.PI' -1234L)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create("Hello")'  					STuple.Create(123' true)'  					STuple.Create(Math.PI' -1234L)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC!<C0><09>!<FB>TD-<18><12><FB>-"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create(123)'  					STuple.Create(456)'  					STuple.Create(789)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create(123)'  					STuple.Create(456)'  					STuple.Create(789)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create(123)'  					STuple.Create(456)'  					STuple.Create(789)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC<16><03><15>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create(123' true)'  					STuple.Create(456' false)'  					STuple.Create(789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create(123' true)'  					STuple.Create(456' false)'  					STuple.Create(789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create(123' true)'  					STuple.Create(456' false)'  					STuple.Create(789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC<16><03><15>&"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create("foo"' 123' true)'  					STuple.Create("bar"' 456' false)'  					STuple.Create("baz"' 789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create("foo"' 123' true)'  					STuple.Create("bar"' 456' false)'  					STuple.Create("baz"' 789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: var packed = TuPack.PackTuples(  					prefix'  					STuple.Create("foo"' 123' true)'  					STuple.Create("bar"' 456' false)'  					STuple.Create("baz"' 789' false)  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC<02>baz<00><16><03><15>&"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_PackTuples_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123).ToString()'  				Is.EqualTo("<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 1234' -1234).ToString()'  				Is.EqualTo("<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 1234' -1234).ToString()'  				Is.EqualTo("<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] {123' 1' 66' 0' 42}).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey,The following statement contains a magic number: Assert.That(  				TuPack.EncodeKey("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 1234' -1234).ToString()'  				Is.EqualTo("ABC<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 1234' -1234).ToString()'  				Is.EqualTo("ABC<02>hello world<00><16><04><D2><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界").ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_With_Prefix,The following statement contains a magic number: Assert.That(  				TuPack.EncodePrefixedKey(prefix' "hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L' "こんにちは世界"' true).ToString()'  				Is.EqualTo("ABC<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-<02><E3><81><93><E3><82><93><E3><81><AB><E3><81><A1><E3><81><AF><E4><B8><96><E7><95><8C><00>'")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_Boxed,The following statement contains a magic number: slice = TuPack.EncodeKey<object>(new byte[] {4' 5' 6});
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_Boxed,The following statement contains a magic number: slice = TuPack.EncodeKey<object>(new byte[] {4' 5' 6});
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKey_Boxed,The following statement contains a magic number: slice = TuPack.EncodeKey<object>(new byte[] {4' 5' 6});
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<02>baz<00>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: var packed = TuPack.EncodeKeys(  					123'  					456'  					789  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: var packed = TuPack.EncodeKeys(  					123'  					456'  					789  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: var packed = TuPack.EncodeKeys(  					123'  					456'  					789  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<16><03><15>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: var packed = TuPack.EncodeKeys(Enumerable.Range(0' 3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<15><02>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("<15><05>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC<02>baz<00>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: var packed = TuPack.EncodePrefixedKeys(  					prefix'  					123'  					456'  					789  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: var packed = TuPack.EncodePrefixedKeys(  					prefix'  					123'  					456'  					789  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: var packed = TuPack.EncodePrefixedKeys(  					prefix'  					123'  					456'  					789  				);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC<16><03><15>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed' Is.Not.Null.And.Length.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].ToString()' Is.EqualTo("ABC<15><05>"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_With_Prefix,The following statement contains a magic number: Assert.That(packed[2].Array' Is.SameAs(packed[0].Array)' "Should share same bufer");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SerializersOfT,The following statement contains a magic number: var t = STuple.Create(123);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SerializersOfT,The following statement contains a magic number: var t = STuple.Create("foo"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SerializersOfT,The following statement contains a magic number: var t = STuple.Create("foo"' false' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SerializersOfT,The following statement contains a magic number: var t = STuple.Create("foo"' false' 123' -1L);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SerializersOfT,The following statement contains a magic number: var t = STuple.Create("foo"' false' 123' -1L' "narf");
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_SerializersOfT,The following statement contains a magic number: var t = STuple.Create("foo"' false' 123' -1L' "narf"' Math.PI);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey("hello world"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 256' 257' 65536' int.MaxValue' long.MaxValue);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 256' 257' 65536' int.MaxValue' long.MaxValue);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 256' 257' 65536' int.MaxValue' long.MaxValue);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Count' Is.EqualTo(6));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(1)' Is.EqualTo(256));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(2)' Is.EqualTo(257)' ((SlicedTuple) tuple).GetSlice(2).ToString());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(2)' Is.EqualTo(257)' ((SlicedTuple) tuple).GetSlice(2).ToString());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(2)' Is.EqualTo(257)' ((SlicedTuple) tuple).GetSlice(2).ToString());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(3)' Is.EqualTo(65536));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(3)' Is.EqualTo(65536));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(4)' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<long>(5)' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey(-1' -256' -257' -65536' int.MinValue' long.MinValue);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey(-1' -256' -257' -65536' int.MinValue' long.MinValue);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: packed = TuPack.EncodeKey(-1' -256' -257' -65536' int.MinValue' long.MinValue);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Count' Is.EqualTo(6));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(1)' Is.EqualTo(-256));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(2)' Is.EqualTo(-257)' "Slice is " + ((SlicedTuple) tuple).GetSlice(2).ToString());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(2)' Is.EqualTo(-257)' "Slice is " + ((SlicedTuple) tuple).GetSlice(2).ToString());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(2)' Is.EqualTo(-257)' "Slice is " + ((SlicedTuple) tuple).GetSlice(2).ToString());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(3)' Is.EqualTo(-65536));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(3)' Is.EqualTo(-65536));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<int>(4)' Is.EqualTo(int.MinValue));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack,The following statement contains a magic number: Assert.That(tuple.Get<long>(5)' Is.EqualTo(long.MinValue));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<int>(Slice.Unescape("<15>{"))'  				Is.EqualTo(123)  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int>(Slice.Unescape("<02>hello world<00><15>{"))'  				Is.EqualTo(STuple.Create("hello world"' 123))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' long>(Slice.Unescape("<02>hello world<00><16><04><D2><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 1234' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' long>(Slice.Unescape("<02>hello world<00><16><04><D2><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 1234' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool>(Slice.Unescape("<02>hello world<00><15>{&"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double' long>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double' long>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double' long>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double' long>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_DecodeKey,The following statement contains a magic number: Assert.That(  				TuPack.DecodeKey<string' int' bool' Slice' double' long>(Slice.Unescape("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-"))'  				Is.EqualTo(STuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }.AsSlice()' Math.PI' -1234L))  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Of_T,The following statement contains a magic number: int[] items = new int[] {1' 2' 3' 123' -1' int.MaxValue};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Of_T,The following statement contains a magic number: int[] items = new int[] {1' 2' 3' 123' -1' int.MaxValue};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Of_T,The following statement contains a magic number: int[] items = new int[] {1' 2' 3' 123' -1' int.MaxValue};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Of_T,The following statement contains a magic number: var merged = TuPack.EncodePrefixedKeys(Slice.FromByte(42)' words);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Of_T,The following statement contains a magic number: var expected = Slice.FromByte(42) + TuPack.EncodeKey(words[i]);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_EncodeKeys_Boxed,The following statement contains a magic number: object[] items = {"world"' 123' false' Guid.NewGuid()' long.MinValue};
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(6));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(7));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: packed = TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_Unpack_First_And_Last,The following statement contains a magic number: Assert.That(TuPack.DecodeLast<int>(packed)' Is.EqualTo(8));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_UnpackSingle,The following statement contains a magic number: Assert.That(() => TuPack.DecodeKey<int>(TuPack.EncodeKey(1' 2' 3' 4' 5' 6' 7' 8))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false' "TheEnd"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange,The following statement contains a magic number: range = TuPack.ToRange(STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false' "TheEnd"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false' "TheEnd"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(prefix' STuple.Create("Hello"' 123' true' -1234L' "こんにちは世界"' Math.PI' false' "TheEnd"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(Slice.Nil' STuple.Create("Hello"' 123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuplePack_ToRange_With_Prefix,The following statement contains a magic number: range = TuPack.ToRange(Slice.Empty' STuple.Create("Hello"' 123));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 })).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18>")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(  				TuPack.Pack(ValueTuple.Create("hello world"' 123' false' new byte[] { 123' 1' 66' 0' 42 }' Math.PI' -1234L)).ToString()'  				Is.EqualTo("<02>hello world<00><15>{&<01>{<01>B<00><FF>*<00>!<C0><09>!<FB>TD-<18><12><FB>-")  			);
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: var packed = TuPack.Pack(("hello"' (123' false)' "world"));
Magic Number,Doxense.Collections.Tuples.Tests,TuPackFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TuPackFacts.cs,Test_TuPack_ValueTuple_Pack,The following statement contains a magic number: Assert.That(t' Is.EqualTo(("hello"' (123' false)' "world")));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123).GetHashCode()' Is.EqualTo(STuple.Create(123L).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123).GetHashCode()' Is.EqualTo(STuple.Create(123L).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) == STuple.Create(123)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) == STuple.Create(123)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) != STuple.Create(123)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) != STuple.Create(123)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) == STuple.Create(456)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) == STuple.Create(456)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) != STuple.Create(456)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_1,The following statement contains a magic number: Assert.That(STuple.Create(123) != STuple.Create(456)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: var t2 = STuple.Create("hello world"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(t2.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(t2.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(t2.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(((IVarTuple) t2)[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(t2.ToArray()' Is.EqualTo(new object[] { "hello world"' 123 }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(t2.Tail.Item1' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) == STuple.Create(123' true)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) == STuple.Create(123' true)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) != STuple.Create(123' true)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) != STuple.Create(123' true)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) == STuple.Create(456' true)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) == STuple.Create(456' true)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) != STuple.Create(456' true)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) != STuple.Create(456' true)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) == STuple.Create(123' false)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) == STuple.Create(123' false)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) != STuple.Create(123' false)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(STuple.Create(123' true) != STuple.Create(123' false)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_2,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: var t3 = STuple.Create("hello world"' 123' false);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.Count' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.Get<bool>(2)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(((IVarTuple) t3)[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(((IVarTuple) t3)[2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.Tail.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(t3.Tail.Item1' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo").GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo").Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo").GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo").Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' true' "foo")' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' true' "foo")' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' true' "foo")' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' true' "foo")' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(456' true' "foo")' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(456' true' "foo")' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(456' true' "foo")' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(456' true' "foo")' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' false' "foo")' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' false' "foo")' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' false' "foo")' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' false' "foo")' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' true' "bar")' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") == STuple.Create(123' true' "bar")' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' true' "bar")' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo") != STuple.Create(123' true' "bar")' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_3,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: var t4 = STuple.Create("hello world"' 123' false' 1234L);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: var t4 = STuple.Create("hello world"' 123' false' 1234L);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Get<bool>(2)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Get<long>(3)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Get<long>(3)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[3]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[3]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L}));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L}));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Tail.Count' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Tail.Item1' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(t4.Tail.Item3' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 666)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 666)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 666)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 666)' Is.True' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 666)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 666)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 666)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 666)' Is.False' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(456' true' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(456' true' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(456' true' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(456' true' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(456' true' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(456' true' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(456' true' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(456' true' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' false' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' false' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' false' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' false' "foo"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' false' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' false' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' false' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' false' "foo"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "bar"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "bar"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "bar"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "bar"' 666)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "bar"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "bar"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "bar"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "bar"' 666)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 667)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 667)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 667)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) == STuple.Create(123' true' "foo"' 667)' Is.False' "op_Equality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 667)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 667)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 667)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666) != STuple.Create(123' true' "foo"' 667)' Is.True' "op_Inequality should work for struct tuples");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_4,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: var t5 = STuple.Create("hello world"' 123' false' 1234L' -1234);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: var t5 = STuple.Create("hello world"' 123' false' 1234L' -1234);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: var t5 = STuple.Create("hello world"' 123' false' 1234L' -1234);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Count' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Item5' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Get<bool>(2)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Get<long>(3)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Get<long>(3)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Get<int>(4)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Get<int>(4)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[3]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[3]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[4]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[4]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234 }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234 }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234 }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Tail.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Tail.Item1' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Tail.Item3' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(t5.Tail.Item4' Is.EqualTo(-1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666' false).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666' false).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666' false).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create("Hello"' 123' true' "foo"' 666' false).Tail.GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false).GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0).GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(item5' Is.EqualTo(-1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_5,The following statement contains a magic number: Assert.That(item5' Is.EqualTo(-1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: var t6 = STuple.Create("hello world"' 123' false' 1234L' -1234' "six");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: var t6 = STuple.Create("hello world"' 123' false' 1234L' -1234' "six");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: var t6 = STuple.Create("hello world"' 123' false' 1234L' -1234' "six");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Count' Is.EqualTo(6));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Item5' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<bool>(2)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<long>(3)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<long>(3)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<int>(4)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<int>(4)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Get<string>(5)' Is.EqualTo("six"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[3]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[3]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[4]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[4]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(((IVarTuple) t6)[5]' Is.EqualTo("six"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234' "six" }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234' "six" }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234' "six" }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Tail.Count' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Tail.Item1' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Tail.Item3' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(t6.Tail.Item4' Is.EqualTo(-1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123' true' "foo"' 666' false).Append("bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123' true' "foo"' 666' false).Append("bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123' true' "foo"' 666' false).Append("bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123' true' "foo"' 666' false).Append("bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0' "bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0' "bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0' "bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(STuple.Create(123' true' "foo"' 666' false' "bar").GetHashCode()' Is.EqualTo(STuple.Create(123L' 1' "foo"' 666UL' 0' "bar").GetHashCode())' "Hashcode should be stable");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(item5' Is.EqualTo(-1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_6,The following statement contains a magic number: Assert.That(item5' Is.EqualTo(-1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: IVarTuple tn = STuple.Create(new object[] { "hello world"' 123' false' 1234L' -1234' "six"' true' Math.PI });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: IVarTuple tn = STuple.Create(new object[] { "hello world"' 123' false' 1234L' -1234' "six"' true' Math.PI });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: IVarTuple tn = STuple.Create(new object[] { "hello world"' 123' false' 1234L' -1234' "six"' true' Math.PI });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Count' Is.EqualTo(8));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<int>(1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<bool>(2)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<int>(3)' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<int>(3)' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<long>(4)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<long>(4)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<string>(5)' Is.EqualTo("six"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<bool>(6)' Is.True);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.Get<double>(7)' Is.EqualTo(Math.PI));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234' "six"' true' Math.PI }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234' "six"' true' Math.PI }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(tn.ToArray()' Is.EqualTo(new object[] { "hello world"' 123' false' 1234L' -1234' "six"' true' Math.PI }));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Many,The following statement contains a magic number: Assert.That(item5' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: var arr = new object[] { "Hello"' 123' false' TimeSpan.FromSeconds(5) };
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: var arr = new object[] { "Hello"' 123' false' TimeSpan.FromSeconds(5) };
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t[2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t[3]' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t[3]' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: t = STuple.Wrap(arr' 1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t[0]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: arr[1] = 456;
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: arr[2] = true;
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(t[0]' Is.EqualTo(456));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Wrap,The following statement contains a magic number: Assert.That(item1' Is.EqualTo(456));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: var arr = new object[] { "Hello"' 123' false' TimeSpan.FromSeconds(5) };
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: var arr = new object[] { "Hello"' 123' false' TimeSpan.FromSeconds(5) };
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t[2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t[3]' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t[3]' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(item4' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: t = STuple.FromObjects(arr' 1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t[0]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(item1' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: arr[1] = 456;
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: arr[2] = true;
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromObjects,The following statement contains a magic number: Assert.That(t[0]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromArray,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromArray,The following statement contains a magic number: Assert.That(t[2]' Is.EqualTo("Monde"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromArray,The following statement contains a magic number: t = STuple.FromArray(items' 1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_FromArray,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t2 = STuple.Create("hello world"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t2.Get<int>(-1)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t2.Get<string>(-2)' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t2)[-1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t2)[-2]' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t3 = STuple.Create("hello world"' 123' false);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t3.Get<int>(-2)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t3.Get<int>(-2)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t3.Get<String>(-3)' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t3)[-2]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t3)[-2]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t3)[-3]' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t4 = STuple.Create("hello world"' 123' false' 1234L);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t4 = STuple.Create("hello world"' 123' false' 1234L);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t4.Get<long>(-1)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t4.Get<bool>(-2)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t4.Get<int>(-3)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t4.Get<int>(-3)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t4.Get<String>(-4)' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[-1]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[-2]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[-3]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[-3]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t4)[-4]' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t5 = STuple.Create("hello world"' 123' false' 1234L' -1234);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t5 = STuple.Create("hello world"' 123' false' 1234L' -1234);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var t5 = STuple.Create("hello world"' 123' false' 1234L' -1234);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<long>(-1)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<long>(-2)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<long>(-2)' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<bool>(-3)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<int>(-4)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<int>(-4)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(t5.Get<String>(-5)' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-1]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-2]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-2]' Is.EqualTo(1234L));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-3]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-4]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-4]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(((IVarTuple) t5)[-5]' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var tn = STuple.Create(new object[] { "hello world"' 123' false' 1234' -1234' "six" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var tn = STuple.Create(new object[] { "hello world"' 123' false' 1234' -1234' "six" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: var tn = STuple.Create(new object[] { "hello world"' 123' false' 1234' -1234' "six" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<int>(-2)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<int>(-2)' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<long>(-3)' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<long>(-3)' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<bool>(-4)' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<int>(-5)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<int>(-5)' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn.Get<string>(-6)' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-2]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-2]' Is.EqualTo(-1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-3]' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-3]' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-4]' Is.False);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-5]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-5]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Negative_Indexing,The following statement contains a magic number: Assert.That(tn[-6]' Is.EqualTo("hello world"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t2 = STuple.Create(1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(t2.Last' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(((IVarTuple)t2).Last<int>()' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t3 = STuple.Create(1' 2' 3);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t3 = STuple.Create(1' 2' 3);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(t3.Last' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(((IVarTuple)t3).Last<int>()' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t4 = STuple.Create(1' 2' 3' 4);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t4 = STuple.Create(1' 2' 3' 4);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t4 = STuple.Create(1' 2' 3' 4);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(t4.Last' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(((IVarTuple)t4).Last<int>()' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t5 = STuple.Create(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t5 = STuple.Create(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t5 = STuple.Create(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var t5 = STuple.Create(1' 2' 3' 4' 5);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(t5.Last' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(((IVarTuple)t5).Last<int>()' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var tn = STuple.Create(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var tn = STuple.Create(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var tn = STuple.Create(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var tn = STuple.Create(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: var tn = STuple.Create(1' 2' 3' 4' 5' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_First_And_Last,The following statement contains a magic number: Assert.That(tn.Last<int>()' Is.EqualTo(6));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_CreateBoxed,The following statement contains a magic number: tuple = STuple.CreateBoxed(new byte[] { 1' 2' 3 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_CreateBoxed,The following statement contains a magic number: tuple = STuple.CreateBoxed(new byte[] { 1' 2' 3 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_CreateBoxed,The following statement contains a magic number: Assert.That(tuple[0]' Is.EqualTo(new byte[] { 1' 2' 3 }.AsSlice()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_CreateBoxed,The following statement contains a magic number: Assert.That(tuple[0]' Is.EqualTo(new byte[] { 1' 2' 3 }.AsSlice()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(z.Count' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(z[2]' Is.EqualTo(y));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: var t = z.Get<IVarTuple>(2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(z.Count' Is.EqualTo(3));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(z[2]' Is.EqualTo(y));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: t = z.Get<IVarTuple>(2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(t.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: IVarTuple subspace = STuple.Create(123' 42);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: IVarTuple subspace = STuple.Create(123' 42);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: IVarTuple value = STuple.Create(2014' 11' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: IVarTuple value = STuple.Create(2014' 11' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: IVarTuple value = STuple.Create(2014' 11' 6);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Embedded_Tuples,The following statement contains a magic number: Assert.That(z.Count' Is.EqualTo(4));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t = STuple.Create(123);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a) =>  			{  				Assert.That(a' Is.EqualTo(123));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a) =>  			{  				Assert.That(a' Is.EqualTo(123));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a) =>  			{  				Assert.That(a' Is.EqualTo(123));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t = t.Append(3.14f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e' double f) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e' double f) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e' double f' IPAddress g) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e' double f' IPAddress g) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e' double f' IPAddress g' DateTime h) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				Assert.That(h' Is.EqualTo(DateTime.MaxValue));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: t.With((int a' string b' float c' bool d' char e' double f' IPAddress g' DateTime h) =>  			{  				called = true;  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				Assert.That(h' Is.EqualTo(DateTime.MaxValue));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g' DateTime h) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				Assert.That(h' Is.EqualTo(DateTime.MaxValue));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g' DateTime h) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				Assert.That(h' Is.EqualTo(DateTime.MaxValue));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g' DateTime h) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				Assert.That(h' Is.EqualTo(DateTime.MaxValue));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With,The following statement contains a magic number: Assert.That(t.With((int a' string b' float c' bool d' char e' double f' IPAddress g' DateTime h) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				Assert.That(f' Is.EqualTo(Math.PI));  				Assert.That(g' Is.EqualTo(IPAddress.Loopback));  				Assert.That(h' Is.EqualTo(DateTime.MaxValue));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int> t1 = STuple.Create(123);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t1.With((a) =>  			{  				Assert.That(a' Is.EqualTo(123));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t1.With((a) =>  			{  				Assert.That(a' Is.EqualTo(123));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t1.With((a) =>  			{  				Assert.That(a' Is.EqualTo(123));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t1.With((a) =>  			{  				Assert.That(a' Is.EqualTo(123));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string> t2 = STuple.Create(123' "abc");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t2.With((a' b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t2.With((a' b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t2.With((a' b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t2.With((a' b) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string' float> t3 = STuple.Create(123' "abc"' 3.14f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string' float> t3 = STuple.Create(123' "abc"' 3.14f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t3.With((a' b' c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t3.With((a' b' c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t3.With((a' b' c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t3.With((a' b' c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t3.With((a' b' c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t3.With((a' b' c) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string' float' bool> t4 = STuple.Create(123' "abc"' 3.14f' true);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string' float' bool> t4 = STuple.Create(123' "abc"' 3.14f' true);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t4.With((a' b' c' d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t4.With((a' b' c' d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t4.With((a' b' c' d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t4.With((a' b' c' d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t4.With((a' b' c' d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t4.With((a' b' c' d) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string' float' bool' char> t5 = STuple.Create(123' "abc"' 3.14f' true' 'z');
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: STuple<int' string' float' bool' char> t5 = STuple.Create(123' "abc"' 3.14f' true' 'z');
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t5.With((a' b' c' d' e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: t5.With((a' b' c' d' e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  			});
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t5.With((a' b' c' d' e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t5.With((a' b' c' d' e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t5.With((a' b' c' d' e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_With_Struct,The following statement contains a magic number: Assert.That(t5.With((a' b' c' d' e) =>  			{  				Assert.That(a' Is.EqualTo(123));  				Assert.That(b' Is.EqualTo("abc"));  				Assert.That(c' Is.EqualTo(3.14f));  				Assert.That(d' Is.True);  				Assert.That(e' Is.EqualTo('z'));  				return 42;  			})' Is.EqualTo(42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: i <= 10
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z'));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z'));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.FromEnumerable(Enumerable.Range(0' 10)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z')[0' 2]);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z')[0' 2]);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z')[0' 2]);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z')[1' 4]);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z')[1' 4]);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.Create(123' "abc"' 3.14f' true' 'z')[1' 4]);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.FromEnumerable(Enumerable.Range(0' 50)).Substring(15' 6));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.FromEnumerable(Enumerable.Range(0' 50)).Substring(15' 6));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Of_Size,The following statement contains a magic number: Verify(STuple.FromEnumerable(Enumerable.Range(0' 50)).Substring(15' 6));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: IVarTuple t = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: IVarTuple t = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: head = t.Truncate(2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(head.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(head[1]' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: head = t.Truncate(5);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: tail = t.Truncate(-2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(tail.Count' Is.EqualTo(2));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(tail[0]' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: tail = t.Truncate(-5);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(() => t.Truncate(6)' Throws.InstanceOf<InvalidOperationException>());
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(() => t.Truncate(-6)' Throws.InstanceOf<InvalidOperationException>());
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(() => STuple.Create("Hello"' "World").Truncate(3)' Throws.InstanceOf<InvalidOperationException>());
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Truncate,The following statement contains a magic number: Assert.That(() => STuple.Create("Hello"' "World").Truncate(-3)' Throws.InstanceOf<InvalidOperationException>());
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: t = STuple.Create("Hello"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: Assert.That(t.As<string' int>()' Is.EqualTo(("Hello"' 123)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: t = STuple.Create("Hello"' 123' false);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: Assert.That(t.As<string' int' bool>()' Is.EqualTo(("Hello"' 123' false)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: t = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: t = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: Assert.That(t.As<string' int' bool' TimeSpan>()' Is.EqualTo(("Hello"' 123' false' TimeSpan.FromSeconds(5))));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: Assert.That(t.As<string' int' bool' TimeSpan>()' Is.EqualTo(("Hello"' 123' false' TimeSpan.FromSeconds(5))));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: t = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: t = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: Assert.That(t.As<string' int' bool' TimeSpan' string>()' Is.EqualTo(("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World")));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_As,The following statement contains a magic number: Assert.That(t.As<string' int' bool' TimeSpan' string>()' Is.EqualTo(("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World")));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: var t2 = STuple.Create("Hello"' 123);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(b2.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(r2.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: var t3 = STuple.Create("Hello"' 123' false);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(b3.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(r3.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: var t4 = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: var t4 = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(b4.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(b4.Item4' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(r4.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(r4.Item4' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: var t5 = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: var t5 = STuple.Create("Hello"' 123' false' TimeSpan.FromSeconds(5)' "World");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(b5.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(b5.Item4' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(r5.Item2' Is.EqualTo(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Cast_To_BCL_Tuples,The following statement contains a magic number: Assert.That(r5.Item4' Is.EqualTo(TimeSpan.FromSeconds(5)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create<int>(123).ToString()' Is.EqualTo("(123')"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create<uint>(123U).ToString()' Is.EqualTo("(123')"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create<long>(123L).ToString()' Is.EqualTo("(123')"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create<ulong>(123UL).ToString()' Is.EqualTo("(123')"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create<double>(123.4d).ToString()' Is.EqualTo("(123.4')"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create<float>(123.4f).ToString()' Is.EqualTo("(123.4')"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Stringify,The following statement contains a magic number: Assert.That(STuple.Create("Hello"' 123' "World"' '!'' false).ToString()' Is.EqualTo(@"(""Hello""' 123' ""World""' '!'' false)"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: var items = new object[] { "hello"' "world"' 123' "foo"' 456' "bar" };
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: var items = new object[] { "hello"' "world"' 123' "foo"' 456' "bar" };
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: Assert.That(tuple.Count' Is.EqualTo(6));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:]"' tuple[null' 6]' items);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:]"' tuple[0' 6]' items);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:]"' tuple[-6' null]' items);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:]"' tuple[-6' 6]' items);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:]"' tuple[-6' 6]' items);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[n:]"' tuple[4' null]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[n:]"' tuple[4' null]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[n:+]"' tuple[4' 6]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[n:+]"' tuple[4' 6]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[n:+]"' tuple[4' 6]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-n:+]"' tuple[-2' 6]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-n:+]"' tuple[-2' 6]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-n:+]"' tuple[-2' 6]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-n:-]"' tuple[-2' null]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-n:-]"' tuple[-2' null]' new object[] { 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:n]"' tuple[null' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:n]"' tuple[null' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:n]"' tuple[0' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:n]"' tuple[0' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:-n]"' tuple[0' -3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:-n]"' tuple[0' -3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-:n]"' tuple[-6' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-:n]"' tuple[-6' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-:n]"' tuple[-6' 3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-:-n]"' tuple[-6' -3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-:-n]"' tuple[-6' -3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-:-n]"' tuple[-6' -3]' new object[] { "hello"' "world"' 123 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-6:-5]"' tuple[-6' -5]' new object[] { "hello" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-6:-5]"' tuple[-6' -5]' new object[] { "hello" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[1:2]"' tuple[1' 2]' new object[] { "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:-4]"' tuple[-5' -4]' new object[] { "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:-4]"' tuple[-5' -4]' new object[] { "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[5:6]"' tuple[5' 6]' new object[] { "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[5:6]"' tuple[5' 6]' new object[] { "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:4]"' tuple[2' 4]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:4]"' tuple[2' 4]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:4]"' tuple[2' 4]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:-2]"' tuple[2' -2]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:-2]"' tuple[2' -2]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:-2]"' tuple[2' -2]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-4:4]"' tuple[-4' 4]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-4:4]"' tuple[-4' 4]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-4:4]"' tuple[-4' 4]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-4:-2]"' tuple[-4' -2]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-4:-2]"' tuple[-4' -2]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-4:-2]"' tuple[-4' -2]' new object[] { 123' "foo" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[1:]"' tuple[1' null]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[1:]"' tuple[1' null]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[1:+]"' tuple[1' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[1:+]"' tuple[1' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[1:+]"' tuple[1' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:]"' tuple[-5' null]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:]"' tuple[-5' null]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:]"' tuple[-5' null]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:+]"' tuple[-5' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:+]"' tuple[-5' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:+]"' tuple[-5' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-5:+]"' tuple[-5' 6]' new object[] { "world"' 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:5]"' tuple[null' 5]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:5]"' tuple[null' 5]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:5]"' tuple[null' 5]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:-1]"' tuple[null' -1]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[:-1]"' tuple[null' -1]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:5]"' tuple[0' 5]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:5]"' tuple[0' 5]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:5]"' tuple[0' 5]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:-1]"' tuple[0' -1]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[0:-1]"' tuple[0' -1]' new object[] { "hello"' "world"' 123' "foo"' 456 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:7]"' tuple[2' 7]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:7]"' tuple[2' 7]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:7]"' tuple[2' 7]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:7]"' tuple[2' 7]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:42]"' tuple[2' 42]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:42]"' tuple[2' 42]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:42]"' tuple[2' 42]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:42]"' tuple[2' 42]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:123456]"' tuple[2' 123456]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:123456]"' tuple[2' 123456]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:123456]"' tuple[2' 123456]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[2:123456]"' tuple[2' 123456]' new object[] { 123' "foo"' 456' "bar" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-7:2]"' tuple[-7' 2]' new object[] { "hello"' "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-7:2]"' tuple[-7' 2]' new object[] { "hello"' "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-42:2]"' tuple[-42' 2]' new object[] { "hello"' "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Splice_ListTuple,The following statement contains a magic number: VerifyTuple("[-42:2]"' tuple[-42' 2]' new object[] { "hello"' "world" });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,GetRange,The following statement contains a magic number: tmp[i] = new string((char) (65 + fromIncluded + i)' 1);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: const int N = 100 * 1000;
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: const int N = 100 * 1000;
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: var tuples = new IVarTuple[14];
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[2] = STuple.Create("A"' "B");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[3] = STuple.Create("A"' "B"' "C");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[4] = STuple.Create("A"' "B"' "C"' "D");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[5] = STuple.Create("A"' "B"' "C"' "D"' "E");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[6] = STuple.Create("A"' "B"' "C"' "D"' "E"' "F");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[7] = STuple.Create("A"' "B"' "C"' "D"' "E"' "F"' "G");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[8] = STuple.Create("A"' "B"' "C"' "D"' "E"' "F"' "G"' "H");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[9] = STuple.Create("A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[10]= STuple.Create("A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I"' "J");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[11] = new JoinedTuple(tuples[6]' STuple.Create("G"' "H"' "I"' "J"' "K"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[11] = new JoinedTuple(tuples[6]' STuple.Create("G"' "H"' "I"' "J"' "K"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[12] = new LinkedTuple<string>(tuples[11]' "L");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[12] = new LinkedTuple<string>(tuples[11]' "L");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: tuples[13] = new LinkedTuple<string>(STuple.Create("A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I"' "J"' "K"' "L")' "M");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: var rnd = new Random(123456);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: Log($"- {100.0 * i / N:N1} %");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: i % 1000 == 0
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // [:+rnd]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' x' len));  						break;  					}  					case 1:  					{ // [+rnd:]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(x' int.MaxValue' len));  						break;  					}  					case 2:  					{ // [:-rnd]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' len + x' len));  						break;  					}  					case 3:  					{ // [-rnd:]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(len + x' int.MaxValue' len));  						break;  					}  					case 4:  					{ // [rnd:rnd]  						int x = rnd.Next(len);  						int y;  						do { y = rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(x' y' len));  						break;  					}  					case 5:  					{ // [-rnd:-rnd]  						int x = -1 - rnd.Next(len);  						int y;  						do { y = -1 - rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(len + x' len + y' len));  						break;  					}  				}
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // [:+rnd]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' x' len));  						break;  					}  					case 1:  					{ // [+rnd:]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(x' int.MaxValue' len));  						break;  					}  					case 2:  					{ // [:-rnd]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' len + x' len));  						break;  					}  					case 3:  					{ // [-rnd:]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(len + x' int.MaxValue' len));  						break;  					}  					case 4:  					{ // [rnd:rnd]  						int x = rnd.Next(len);  						int y;  						do { y = rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(x' y' len));  						break;  					}  					case 5:  					{ // [-rnd:-rnd]  						int x = -1 - rnd.Next(len);  						int y;  						do { y = -1 - rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(len + x' len + y' len));  						break;  					}  				}
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // [:+rnd]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' x' len));  						break;  					}  					case 1:  					{ // [+rnd:]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(x' int.MaxValue' len));  						break;  					}  					case 2:  					{ // [:-rnd]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' len + x' len));  						break;  					}  					case 3:  					{ // [-rnd:]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(len + x' int.MaxValue' len));  						break;  					}  					case 4:  					{ // [rnd:rnd]  						int x = rnd.Next(len);  						int y;  						do { y = rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(x' y' len));  						break;  					}  					case 5:  					{ // [-rnd:-rnd]  						int x = -1 - rnd.Next(len);  						int y;  						do { y = -1 - rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(len + x' len + y' len));  						break;  					}  				}
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // [:+rnd]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' x' len));  						break;  					}  					case 1:  					{ // [+rnd:]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(x' int.MaxValue' len));  						break;  					}  					case 2:  					{ // [:-rnd]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' len + x' len));  						break;  					}  					case 3:  					{ // [-rnd:]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(len + x' int.MaxValue' len));  						break;  					}  					case 4:  					{ // [rnd:rnd]  						int x = rnd.Next(len);  						int y;  						do { y = rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(x' y' len));  						break;  					}  					case 5:  					{ // [-rnd:-rnd]  						int x = -1 - rnd.Next(len);  						int y;  						do { y = -1 - rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(len + x' len + y' len));  						break;  					}  				}
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // [:+rnd]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' x' len));  						break;  					}  					case 1:  					{ // [+rnd:]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(x' int.MaxValue' len));  						break;  					}  					case 2:  					{ // [:-rnd]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' len + x' len));  						break;  					}  					case 3:  					{ // [-rnd:]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(len + x' int.MaxValue' len));  						break;  					}  					case 4:  					{ // [rnd:rnd]  						int x = rnd.Next(len);  						int y;  						do { y = rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(x' y' len));  						break;  					}  					case 5:  					{ // [-rnd:-rnd]  						int x = -1 - rnd.Next(len);  						int y;  						do { y = -1 - rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(len + x' len + y' len));  						break;  					}  				}
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Equals,The following statement contains a magic number: var t1 = STuple.Create(1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Equals,The following statement contains a magic number: var t2 = STuple.Create(1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Equals,The following statement contains a magic number: var t3 = STuple.Create(new object[] { 1' 2 });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Equals,The following statement contains a magic number: var t4 = STuple.Create(1).Append(2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Similar,The following statement contains a magic number: var t1 = STuple.Create(1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Similar,The following statement contains a magic number: var t2 = STuple.Create((long)1' (short)2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Similar,The following statement contains a magic number: var t4 = STuple.Create(new object[] { 1' 2L });
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Not_Equal,The following statement contains a magic number: var t1 = STuple.Create(1' 2);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Not_Equal,The following statement contains a magic number: var x1 = STuple.Create(2' 1);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Not_Equal,The following statement contains a magic number: var x3 = STuple.Create(1' 2' 3);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Not_Equal,The following statement contains a magic number: var x3 = STuple.Create(1' 2' 3);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Substring_Equality,The following statement contains a magic number: Assert.That(x.Substring(1' 1)' Is.EqualTo(y.Substring(2' 1)));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create(123)' STuple.Create(123))' Is.True' "(123') == (123')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create(123)' STuple.Create(123))' Is.True' "(123') == (123')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create(123)' STuple.Create(456))' Is.False' "(123') != (456')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create(123)' STuple.Create(456))' Is.False' "(123') != (456')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create(123))' Is.EqualTo(STuple.Create(123).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create(123))' Is.EqualTo(STuple.Create(123).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create(123))' Is.Not.EqualTo(STuple.Create(456).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create(123))' Is.Not.EqualTo(STuple.Create(456).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' 123)' STuple.Create("foo"' 123))' Is.True' "('foo''123) == ('foo''123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' 123)' STuple.Create("foo"' 123))' Is.True' "('foo''123) == ('foo''123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' 123)' STuple.Create("bar"' 123))' Is.False' "('foo''123) != ('bar''123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' 123)' STuple.Create("bar"' 123))' Is.False' "('foo''123) != ('bar''123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' 123)' STuple.Create("foo"' 456))' Is.False' "('foo''123) != ('foo''456)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' 123)' STuple.Create("foo"' 456))' Is.False' "('foo''123) != ('foo''456)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' 123))' Is.EqualTo(STuple.Create("foo"' 123).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' 123))' Is.EqualTo(STuple.Create("foo"' 123).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' 123))' Is.Not.EqualTo(STuple.Create("foo"' 456).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' 123))' Is.Not.EqualTo(STuple.Create("foo"' 456).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' true' 123))' Is.True' "('foo''true'123) == ('foo''true'123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' true' 123))' Is.True' "('foo''true'123) == ('foo''true'123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("bar"' true' 123))' Is.False' "('foo''true'123) != ('bar''true'123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("bar"' true' 123))' Is.False' "('foo''true'123) != ('bar''true'123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' false' 123))' Is.False' "('foo''true'123) != ('foo''false'123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' false' 123))' Is.False' "('foo''true'123) != ('foo''false'123)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' true' 456))' Is.False' "('foo''true'123) != ('foo''true'456)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123)' STuple.Create("foo"' true' 456))' Is.False' "('foo''true'123) != ('foo''true'456)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123))' Is.EqualTo(STuple.Create("foo"' true' 123).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123))' Is.EqualTo(STuple.Create("foo"' true' 123).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123))' Is.Not.EqualTo(STuple.Create("foo"' true' 456).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123))' Is.Not.EqualTo(STuple.Create("foo"' true' 456).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -1L))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -1L))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("bar"' true' 123' -1L))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("bar"' true' 123' -1L))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' false' 123' -1L))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' false' 123' -1L))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 456' -1L))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 456' -1L))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -2L))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -2L))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L)' STuple.Create("foo"' true' 123' -2L))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' 123L).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' 123L).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' 123L).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -1L' "narf"))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -1L' "narf"))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("bar"' true' 123' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("bar"' true' 123' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' false' 123' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' false' 123' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 456' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 456' -1L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -2L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -2L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -2L' "narf"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -1L' "zort"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''zort')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf")' STuple.Create("foo"' true' 123' -1L' "zort"))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''zort')");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf").GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf").GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' -1L' "narf").GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"))' Is.Not.EqualTo(STuple.Create("foo"' true' 456' -1L' "narf").GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.True' "('foo''true'123'-1) == ('foo''true'123'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("bar"' true' 123' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("bar"' true' 123' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('bar''true'123'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' false' 123' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' false' 123' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''false'123'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 456' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 456' -1L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'456'-1''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -2L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -2L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -2L' "narf"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-2''narf''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "zort"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''zort''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "zort"' Math.PI))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''zort''PI)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "narf"' Math.E))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''narf''E)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.Equals(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI)' STuple.Create("foo"' true' 123' -1L' "narf"' Math.E))' Is.False' "('foo''true'123'-1) != ('foo''true'123'-1''narf''E)");
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.Not.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf"' Math.E).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Tuple_Comparers,The following statement contains a magic number: Assert.That(cmp.GetHashCode(STuple.Create("foo"' true' 123' -1L' "narf"' Math.PI))' Is.Not.EqualTo(STuple.Create("foo"' true' 123' -1L' "narf"' Math.E).GetHashCode()));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(123)"' STuple.Create(123));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(-42)"' STuple.Create(-42));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(123.4)"' STuple.Create(123.4d));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(1E10)"' STuple.Create(1E10));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(\"Hello\"'123'false)"' STuple.Create("Hello"' 123' false));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("('M''123456789'{4626466c-fdac-4230-af3a-4029fab668ab})"' STuple.Create('M'' 123456789' Guid.Parse("4626466c-fdac-4230-af3a-4029fab668ab")));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(123' true ' \"Hello\")"' STuple.Create(123' true' "Hello"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(\"Hello\"'(123'true)'\"World!\")"' STuple.Create("Hello"' STuple.Create(123' true)' "World!"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(123E45'-123E-45)"' STuple.Create(123E45' -123E-45));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(123E45'-123E-45)"' STuple.Create(123E45' -123E-45));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_Deformat_Simple_Tuples,The following statement contains a magic number: Check("(|Directory|'42'\"Hello\")"' STuple.Create(TuPackUserType.Directory' 42' "Hello"));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: ValueTuple<int> t = STuple.Create(11);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int) t = STuple.Create(11' 22);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int) t = STuple.Create(11' 22);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int) t = STuple.Create(11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int) t = STuple.Create(11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int) t = STuple.Create(11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int) t = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int) t = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int) t = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int) t = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item4' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item4' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item5' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: (int' int' int' int' int' int) t = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item4' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item5' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_STuple_To_ValueTuple,The following statement contains a magic number: Assert.That(t.Item6' Is.EqualTo(66));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int> t = ValueTuple.Create(11);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int> t = (11' 22);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int> t = (11' 22);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int> t = (11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int> t = (11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int> t = (11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int> t = (11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int> t = (11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int> t = (11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int> t = (11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item4' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int> t = (11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int> t = (11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int> t = (11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int> t = (11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int> t = (11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item4' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item5' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int' int> t = (11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int' int> t = (11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int' int> t = (11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int' int> t = (11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int' int> t = (11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: STuple<int' int' int' int' int' int> t = (11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item1' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item2' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item3' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item4' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item5' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Implicit_Cast_ValueTuple_To_STuple,The following statement contains a magic number: Assert.That(t.Item6' Is.EqualTo(66));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: var res = ConsumeSTuple(ProduceValueTuple(1234' 5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: var res = ConsumeSTuple(ProduceValueTuple(1234' 5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: Assert.That(res[0]' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: Assert.That(res[1]' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: var res = ConsumeSTuple((1234' 5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: var res = ConsumeSTuple((1234' 5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: Assert.That(res[0]' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: Assert.That(res[1]' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: var res = ConsumeValueTuple(ProduceSTuple(1234' 5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: var res = ConsumeValueTuple(ProduceSTuple(1234' 5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: Assert.That(res[0]' Is.EqualTo(1234));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Can_AutoCast_Transparently,The following statement contains a magic number: Assert.That(res[1]' Is.EqualTo(5));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22).Deconstruct(out int a' out int b);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22).Deconstruct(out int a' out int b);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33).Deconstruct(out int a' out int b' out int c);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33).Deconstruct(out int a' out int b' out int c);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33).Deconstruct(out int a' out int b' out int c);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44).Deconstruct(out int a' out int b' out int c' out int d);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44).Deconstruct(out int a' out int b' out int c' out int d);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44).Deconstruct(out int a' out int b' out int c' out int d);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44).Deconstruct(out int a' out int b' out int c' out int d);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(d' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55).Deconstruct(out int a' out int b' out int c' out int d' out int e);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55).Deconstruct(out int a' out int b' out int c' out int d' out int e);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55).Deconstruct(out int a' out int b' out int c' out int d' out int e);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55).Deconstruct(out int a' out int b' out int c' out int d' out int e);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55).Deconstruct(out int a' out int b' out int c' out int d' out int e);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(d' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(e' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55' 66).Deconstruct(out int a' out int b' out int c' out int d' out int e' out int f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55' 66).Deconstruct(out int a' out int b' out int c' out int d' out int e' out int f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55' 66).Deconstruct(out int a' out int b' out int c' out int d' out int e' out int f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55' 66).Deconstruct(out int a' out int b' out int c' out int d' out int e' out int f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55' 66).Deconstruct(out int a' out int b' out int c' out int d' out int e' out int f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: STuple.Create(11' 22' 33' 44' 55' 66).Deconstruct(out int a' out int b' out int c' out int d' out int e' out int f);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(d' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(e' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple,The following statement contains a magic number: Assert.That(f' Is.EqualTo(66));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b) = STuple.Create(11' 22);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b) = STuple.Create(11' 22);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c) = STuple.Create(11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c) = STuple.Create(11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c) = STuple.Create(11' 22' 33);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d) = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d) = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d) = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d) = STuple.Create(11' 22' 33' 44);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(d' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e) = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e) = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e) = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e) = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e) = STuple.Create(11' 22' 33' 44' 55);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(d' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(e' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e' var f) = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e' var f) = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e' var f) = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e' var f) = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e' var f) = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: (var a' var b' var c' var d' var e' var f) = STuple.Create(11' 22' 33' 44' 55' 66);
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(a' Is.EqualTo(11));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(b' Is.EqualTo(22));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(c' Is.EqualTo(33));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(d' Is.EqualTo(44));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(e' Is.EqualTo(55));
Magic Number,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Deconstruct_STuple_TupleSyntax,The following statement contains a magic number: Assert.That(f' Is.EqualTo(66));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_EmptyBitmap,The following statement contains a magic number: Assert.That(empty.Test(31)' Is.False);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_EmptyBitmap,The following statement contains a magic number: Assert.That(empty.Test(32)' Is.False);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_EmptyBitmap,The following statement contains a magic number: Assert.That(empty.Test(1234)' Is.False);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Verify,The following statement contains a magic number: Log($"> B: {bmpBuilder.Bounds'12} ({bmpBuilder.CountBits()'3}) {bmpBuilder.ToSlice().ToHexaString()}");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Verify,The following statement contains a magic number: Log($"> B: {bmpBuilder.Bounds'12} ({bmpBuilder.CountBits()'3}) {bmpBuilder.ToSlice().ToHexaString()}");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Verify,The following statement contains a magic number: Log($"> W: {bmpWitness.Bounds'12} ({bmpWitness.CountBits()'3}) {bmpWitness.ToSlice().ToHexaString()}");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Verify,The following statement contains a magic number: Log($"> W: {bmpWitness.Bounds'12} ({bmpWitness.CountBits()'3}) {bmpWitness.ToSlice().ToHexaString()}");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 17)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 17)' Is.False);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 31)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 1234)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 777)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 62)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 774)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 124)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Set_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 93)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Clear_Bits,The following statement contains a magic number: Assert.That(ClearBitAndVerify(builder' witness' 42)' Is.False);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Clear_Bits,The following statement contains a magic number: Assert.That(SetBitAndVerify(builder' witness' 42)' Is.True);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Clear_Bits,The following statement contains a magic number: Assert.That(ClearBitAndVerify(builder' witness' 42)' Is.True' "Clear just after set");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Clear_Bits,The following statement contains a magic number: Assert.That(ClearBitAndVerify(builder' witness' 42)' Is.False' "Clear just after clear");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Linear_Sets,The following statement contains a magic number: int N = 5 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Linear_Sets,The following statement contains a magic number: int N = 5 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Linear_Sets,The following statement contains a magic number: int P = 100;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Linear_Sets,The following statement contains a magic number: var rnd = new Random(12345678);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Linear_Sets,The following statement contains a magic number: rnd.Next(P) == 42
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets,The following statement contains a magic number: int N = 5 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets,The following statement contains a magic number: int N = 5 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets,The following statement contains a magic number: int K = 100;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets,The following statement contains a magic number: var rnd = new Random(12345678);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets_And_Clears,The following statement contains a magic number: int K = 20;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets_And_Clears,The following statement contains a magic number: int S = 100;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets_And_Clears,The following statement contains a magic number: int C = 100;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets_And_Clears,The following statement contains a magic number: int N = 5 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets_And_Clears,The following statement contains a magic number: int N = 5 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_CompressedBitmapBuilder_Random_Sets_And_Clears,The following statement contains a magic number: var rnd = new Random(12345678);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Repeat(0' 62));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Repeat(0' 42));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Repeat(255' 62));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Repeat(255' 62));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Repeat(255' 42));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Repeat(255' 42));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Random(rnd' 42));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(Slice.Random(rnd' 42));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: b[p >> 3] |= (byte) (1 << (p & 7));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: b[p >> 3] |= (byte) (1 << (p & 7));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: var buf = new byte[1024];
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: SetBit(buf' rnd.Next(buf.Length * 8));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(MostlyZeroes(10).AsSlice());
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(MostlyZeroes(42).AsSlice());
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(MostlyZeroes(100).AsSlice());
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: b[p >> 3] &= (byte) ~(1 << (p & 7));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: b[p >> 3] &= (byte) ~(1 << (p & 7));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: var buf = new byte[1024];
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: ClearBit(buf' rnd.Next(buf.Length * 8));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: i < 10
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(MostlyOnes(10).AsSlice());
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(MostlyOnes(42).AsSlice());
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: Compress(MostlyOnes(100).AsSlice());
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: bool TestBit(byte[] b' int p) => (b[p >> 3] & (1 << (p & 7))) != 0;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: bool TestBit(byte[] b' int p) => (b[p >> 3] & (1 << (p & 7))) != 0;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: const int VALUES = 8192;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: var buffer = new byte[VALUES / 8];
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,TestFoo,The following statement contains a magic number: i < VALUES / 8
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: int[] map = new int[100];
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: legacyIndexSize += 3 + tk.Count + 17;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: legacyIndexSize += 3 + tk.Count + 17;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: Log(string.Format(  					CultureInfo.InvariantCulture'  					"| {0'-24}| {1'6:N0} | {2'6:N2}% | {3'5:N0} | {4'5:N1}% | {5'6:N0} | {6'6:N2} | {7'8:N0} | {8'6:N2}% | {9'9:N0} | {10'6:N2}% |" + (heatMaps ? " `{11}` |" : "")'  					/*0*/ t'  					/*1*/ index.Count(kv.Key)'  					/*2*/ 100.0 * index.Frequency(kv.Key)'  					/*3*/ words'  					/*4*/ (100.0 * literals) / words'  					/*5*/ bits'  					/*6*/ 1.0 * bits / words'  					/*7*/ bytes'  					/*8*/ 100.0 * ratio'  					/*9*/ legacyIndexSize'  					/*A*/ (100.0 * bytes) / legacyIndexSize'  					/*B*/ heatMaps ? MakeHeatMap(map) : ""  				));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: Log(string.Format(  					CultureInfo.InvariantCulture'  					"| {0'-24}| {1'6:N0} | {2'6:N2}% | {3'5:N0} | {4'5:N1}% | {5'6:N0} | {6'6:N2} | {7'8:N0} | {8'6:N2}% | {9'9:N0} | {10'6:N2}% |" + (heatMaps ? " `{11}` |" : "")'  					/*0*/ t'  					/*1*/ index.Count(kv.Key)'  					/*2*/ 100.0 * index.Frequency(kv.Key)'  					/*3*/ words'  					/*4*/ (100.0 * literals) / words'  					/*5*/ bits'  					/*6*/ 1.0 * bits / words'  					/*7*/ bytes'  					/*8*/ 100.0 * ratio'  					/*9*/ legacyIndexSize'  					/*A*/ (100.0 * bytes) / legacyIndexSize'  					/*B*/ heatMaps ? MakeHeatMap(map) : ""  				));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: Log(string.Format(  					CultureInfo.InvariantCulture'  					"| {0'-24}| {1'6:N0} | {2'6:N2}% | {3'5:N0} | {4'5:N1}% | {5'6:N0} | {6'6:N2} | {7'8:N0} | {8'6:N2}% | {9'9:N0} | {10'6:N2}% |" + (heatMaps ? " `{11}` |" : "")'  					/*0*/ t'  					/*1*/ index.Count(kv.Key)'  					/*2*/ 100.0 * index.Frequency(kv.Key)'  					/*3*/ words'  					/*4*/ (100.0 * literals) / words'  					/*5*/ bits'  					/*6*/ 1.0 * bits / words'  					/*7*/ bytes'  					/*8*/ 100.0 * ratio'  					/*9*/ legacyIndexSize'  					/*A*/ (100.0 * bytes) / legacyIndexSize'  					/*B*/ heatMaps ? MakeHeatMap(map) : ""  				));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,DumpIndex,The following statement contains a magic number: Log(string.Format(  					CultureInfo.InvariantCulture'  					"| {0'-24}| {1'6:N0} | {2'6:N2}% | {3'5:N0} | {4'5:N1}% | {5'6:N0} | {6'6:N2} | {7'8:N0} | {8'6:N2}% | {9'9:N0} | {10'6:N2}% |" + (heatMaps ? " `{11}` |" : "")'  					/*0*/ t'  					/*1*/ index.Count(kv.Key)'  					/*2*/ 100.0 * index.Frequency(kv.Key)'  					/*3*/ words'  					/*4*/ (100.0 * literals) / words'  					/*5*/ bits'  					/*6*/ 1.0 * bits / words'  					/*7*/ bytes'  					/*8*/ 100.0 * ratio'  					/*9*/ legacyIndexSize'  					/*A*/ (100.0 * bytes) / legacyIndexSize'  					/*B*/ heatMaps ? MakeHeatMap(map) : ""  				));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Merging_Multiple_Bitmaps,The following statement contains a magic number: var dataSet = new List<Character>()  			{  				new Character { Id = 1' Name = "Spike Spiegel"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2044' 6' 26)' Dead = true /* bang! */ }'  				new Character { Id = 2' Name = "Jet Black"' Gender = "Male"' Job="Bounty_Hunter"' Born = new DateTime(2035' 12' 13) }'  				new Character { Id = 3' Name = "Faye Valentine"' Gender = "Female"' Job="Bounty_Hunter"' Born = new DateTime(1994' 8' 14) }'  				new Character { Id = 4' Name = "Edward Wong Hau Pepelu Tivruski IV"' Gender = "Female"' Job="Hacker"' Born = new DateTime(2058' 1' 1) }'  				new Character { Id = 5' Name = "Ein"' Gender = "Male"' Job="Dog" }'  				new Character { Id = 6' Name = "Vicious"' Gender = "Male"' Job = "Vilain"' Dead = true }'  				new Character { Id = 7' Name = "Julia"' Gender = "Female"' Job = "Damsel_In_Distress"' Dead = true /* It's all a dream */ }'  				new Character { Id = 8' Name = "Victoria Tepsichore"' Gender = "Female"' Job = "Space_Trucker" }'  				new Character { Id = 9' Name = "Punch"' Gender = "Male"' Job = "TV_Host" }'  				new Character { Id = 10' Name = "Judy"' Gender = "Female"' Job = "TV_Host" }'  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: var dfFlips = new Cauchy(10' 4' rnd);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: var dfFlips = new Cauchy(10' 4' rnd);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<int> makeFlips = () =>  			{  				int x = 0;  				while (x <= 0 || x >= 30) { x = (int)Math.Floor(dfFlips.Sample()); }  				return x;  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: var dfElev = new Cauchy(10' 1' rnd);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<double> makeElevation = () =>  			{  				double x = 0;  				while (x <= 0.0 || x >= 30) { x = dfElev.Sample(); }  				return x;  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<bool> makeFlipFlop = () =>  			{  				if (rnd.NextDouble() < 0.01) flipFlop = !flipFlop;  				return flipFlop;  			};
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: var dfLoc = new Cauchy(0' 1.25' rnd);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<int> makeHeadsOrTails = () => rnd.NextDouble() < 0.01 ? CoinToss.EDGE : rnd.NextDouble() <= 0.5 ? CoinToss.HEAD : CoinToss.TAIL;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<int> makeHeadsOrTails = () => rnd.NextDouble() < 0.01 ? CoinToss.EDGE : rnd.NextDouble() <= 0.5 ? CoinToss.HEAD : CoinToss.TAIL;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<bool> makeValid = () => rnd.Next(1000) != 666;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: Func<bool> makeValid = () => rnd.Next(1000) != 666;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: const int N = 10 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: const int N = 10 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_Randomized_Data,The following statement contains a magic number: rnd = new Random(123456);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: const int N = 10 * 1000 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: const int N = 10 * 1000 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: const int N = 10 * 1000 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: const int K = 50 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: const int K = 50 * 1000;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: var rnd = new Random(123456);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: pk[i] = Math.Pow(rnd.NextDouble()' 10);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: delta *= 1.0001;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: int p25 = Array.BinarySearch(pk' 0.25 * sum);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: int p50 = Array.BinarySearch(pk' 0.50 * sum);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: int p75 = Array.BinarySearch(pk' 0.75 * sum);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: int p95 = Array.BinarySearch(pk' 0.95 * sum);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: Log($"> PDF: P25={100.0 * p25 / K:G2} %' P50={100.0 * p50 / K:G2} %' P75={100.0 * p75 / K:G2} %' P95={100.0 * p95 / K:G2} %");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: Log($"> PDF: P25={100.0 * p25 / K:G2} %' P50={100.0 * p50 / K:G2} %' P75={100.0 * p75 / K:G2} %' P95={100.0 * p95 / K:G2} %");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: Log($"> PDF: P25={100.0 * p25 / K:G2} %' P50={100.0 * p50 / K:G2} %' P75={100.0 * p75 / K:G2} %' P95={100.0 * p95 / K:G2} %");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: Log($"> PDF: P25={100.0 * p25 / K:G2} %' P50={100.0 * p50 / K:G2} %' P75={100.0 * p75 / K:G2} %' P95={100.0 * p95 / K:G2} %");
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: int n = 1 + (int)(Math.Pow(rnd.NextDouble()' 2) * 10);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: int n = 1 + (int)(Math.Pow(rnd.NextDouble()' 2) * 10);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: rnd.NextDouble() * sum * 1.005 >= pk[user]
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,CompressedBitmapsFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\CompressedBitmapsFacts.cs,Test_BigBadIndexOfTheDead,The following statement contains a magic number: log.WriteLine("{0'8} : {1'5} bits' {2} words ({3} lit. / {4} fil.)' {5:N0} bytes' {6:N3} bytes/doc' {7:N2}% compression"' kv.Value' bits' words' a' b' sz' 1.0 * sz / bits' 100.0 * (4 + 17 + sz) / (17 + (4 + 17) * bits));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,SuperSlowUncompressedBitmap,The following statement contains a magic number: var bits = new bool[bitmap.Bounds.Highest + 32];
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,SuperSlowUncompressedBitmap,The following statement contains a magic number: int n = 31;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,GetLiteralAt,The following statement contains a magic number: i < 31
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,ToBitmap,The following statement contains a magic number: p += 31;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,ToBitString,The following statement contains a magic number: var sb = new StringBuilder(bits.Length + 30);
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,ToBitString,The following statement contains a magic number: int m = ((hsb + 30) / 31) * 31;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,ToBitString,The following statement contains a magic number: int m = ((hsb + 30) / 31) * 31;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,ToBitString,The following statement contains a magic number: int m = ((hsb + 30) / 31) * 31;
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,Dump,The following statement contains a magic number: i < 31
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,Dump,The following statement contains a magic number: sb.Remove(sb.Length - 31' 31).Append(new string('.'' 31));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,Dump,The following statement contains a magic number: sb.Remove(sb.Length - 31' 31).Append(new string('.'' 31));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,Dump,The following statement contains a magic number: sb.Remove(sb.Length - 31' 31).Append(new string('.'' 31));
Magic Number,FoundationDB.Layers.Experimental.Indexing.Tests,SuperSlowUncompressedBitmap,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\Indexing\SuperSlowUncompressedBitmap.cs,GetHashCode,The following statement contains a magic number: h = (h * 31) ^ i;
Magic Number,FoundationDB.Types.Json,JsonNetCodec<TDocument>,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Experimental\JsonNetCodec.cs,EncodeInternal,The following statement contains a magic number: var ms = new MemoryStream(256);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: const int N = 10;
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.ReadWriteAsync(async (tr) =>  				{  					await tr.GetReadVersionAsync();  					tr.Set(location.Encode("Warmup"' 0)' Slice.FromInt32(1));  					tr.Clear(location.Encode("Warmup"' 1));  					await tr.GetAsync(location.Encode("Warmup"' 2));  					await tr.GetRange(KeyRange.StartsWith(location.Encode("Warmup"' 3))).ToListAsync();  					tr.ClearRange(location.Encode("Warmup"' 4)' location.Encode("Warmup"' 5));  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.ReadWriteAsync(async (tr) =>  				{  					await tr.GetReadVersionAsync();  					tr.Set(location.Encode("Warmup"' 0)' Slice.FromInt32(1));  					tr.Clear(location.Encode("Warmup"' 1));  					await tr.GetAsync(location.Encode("Warmup"' 2));  					await tr.GetRange(KeyRange.StartsWith(location.Encode("Warmup"' 3))).ToListAsync();  					tr.ClearRange(location.Encode("Warmup"' 4)' location.Encode("Warmup"' 5));  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.ReadWriteAsync(async (tr) =>  				{  					await tr.GetReadVersionAsync();  					tr.Set(location.Encode("Warmup"' 0)' Slice.FromInt32(1));  					tr.Clear(location.Encode("Warmup"' 1));  					await tr.GetAsync(location.Encode("Warmup"' 2));  					await tr.GetRange(KeyRange.StartsWith(location.Encode("Warmup"' 3))).ToListAsync();  					tr.ClearRange(location.Encode("Warmup"' 4)' location.Encode("Warmup"' 5));  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.ReadWriteAsync(async (tr) =>  				{  					await tr.GetReadVersionAsync();  					tr.Set(location.Encode("Warmup"' 0)' Slice.FromInt32(1));  					tr.Clear(location.Encode("Warmup"' 1));  					await tr.GetAsync(location.Encode("Warmup"' 2));  					await tr.GetRange(KeyRange.StartsWith(location.Encode("Warmup"' 3))).ToListAsync();  					tr.ClearRange(location.Encode("Warmup"' 4)' location.Encode("Warmup"' 5));  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					var rnd = new Random();  					tr.Set(location.Encode("One")' Value("111111"));  					tr.Set(location.Encode("Two")' Value("222222"));  					for (int j = 0; j < 4; j++)  					{  						for (int i = 0; i < 100; i++)  						{  							tr.Set(location.Encode("Range"' j' rnd.Next(1000))' Slice.Empty);  						}  					}  					for (int j = 0; j < N; j++)  					{  						tr.Set(location.Encode("X"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("Y"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("Z"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("W"' j)' Slice.FromInt32(j));  					}  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					var rnd = new Random();  					tr.Set(location.Encode("One")' Value("111111"));  					tr.Set(location.Encode("Two")' Value("222222"));  					for (int j = 0; j < 4; j++)  					{  						for (int i = 0; i < 100; i++)  						{  							tr.Set(location.Encode("Range"' j' rnd.Next(1000))' Slice.Empty);  						}  					}  					for (int j = 0; j < N; j++)  					{  						tr.Set(location.Encode("X"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("Y"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("Z"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("W"' j)' Slice.FromInt32(j));  					}  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					var rnd = new Random();  					tr.Set(location.Encode("One")' Value("111111"));  					tr.Set(location.Encode("Two")' Value("222222"));  					for (int j = 0; j < 4; j++)  					{  						for (int i = 0; i < 100; i++)  						{  							tr.Set(location.Encode("Range"' j' rnd.Next(1000))' Slice.Empty);  						}  					}  					for (int j = 0; j < N; j++)  					{  						tr.Set(location.Encode("X"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("Y"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("Z"' j)' Slice.FromInt32(j));  						tr.Set(location.Encode("W"' j)' Slice.FromInt32(j));  					}  				}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Filters.Logging.Tests,LoggingFilterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Filters\LoggingFilterFacts.cs,Test_Can_Log_A_Transaction,The following statement contains a magic number: await logged.ReadWriteAsync(async (tr) =>  					{  						Assert.That(tr' Is.InstanceOf<FdbLoggedTransaction>());    						//tr.SetOption(FdbTransactionOption.CausalReadRisky);    						long ver = await tr.GetReadVersionAsync().ConfigureAwait(false);    						await tr.GetAsync(location.Encode("One")).ConfigureAwait(false);  						await tr.GetAsync(location.Encode("NotFound")).ConfigureAwait(false);    						tr.Set(location.Encode("Write")' Value("abcdef" + k.ToString()));    						//tr.Annotate("BEFORE");  						//await Task.Delay(TimeSpan.FromMilliseconds(10));  						//tr.Annotate("AFTER");    						//await tr.Snapshot.GetAsync(location.Pack("Snap")).ConfigureAwait(false);    						tr.Annotate("This is a comment");    						//await tr.GetRangeAsync(KeySelector.LastLessOrEqual(location.Pack("A"))' KeySelector.FirstGreaterThan(location.Pack("Z"))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetRange(KeyRange.StartsWith(location.Encode("Range"' 0))).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 1' 0)' location.Encode("Range"' 1' 200)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 2' 400)' location.Encode("Range"' 2' 600)).ToListAsync()'  							tr.GetRange(location.Encode("Range"' 3' 800)' location.Encode("Range"' 3' 1000)).ToListAsync()  						).ConfigureAwait(false);    						await tr.GetAsync(location.Encode("Two")).ConfigureAwait(false);    						await tr.GetValuesAsync(Enumerable.Range(0' N).Select(x => location.Encode("X"' x))).ConfigureAwait(false);    						for (int i = 0; i < N; i++)  						{  							await tr.GetAsync(location.Encode("Z"' i)).ConfigureAwait(false);  						}    						await Task.WhenAll(Enumerable.Range(0' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);  						await Task.WhenAll(Enumerable.Range(N / 2' N / 2).Select(x => tr.GetAsync(location.Encode("Y"' x)))).ConfigureAwait(false);    						await Task.WhenAll(  							tr.GetAsync(location.Encode("W"' 1))'  							tr.GetAsync(location.Encode("W"' 2))'  							tr.GetAsync(location.Encode("W"' 3))  						).ConfigureAwait(false);    						tr.Set(location.Encode("Write2")' Value("ghijkl" + k.ToString()));  						tr.Clear(location.Encode("Clear"' "0"));  						tr.ClearRange(location.Encode("Clear"' "A")' location.Encode("Clear"' "Z"));    						if (tr.Context.Retries == 0)  						{  							// make it fail  							//throw new FdbException(FdbError.PastVersion' "fake timeout");  						}    					}' this.Cancellation);
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_Can_AppendToBlob,The following statement contains a magic number: Assert.That(size' Is.EqualTo(20));
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: var data = new byte[100 * 1000];
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: var data = new byte[100 * 1000];
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: i < 50
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: Assert.That(size' Is.EqualTo(50 * data.Length));
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: var s = await blob.ReadAsync(tr' 1234567' 1 * 1000 * 1000);
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: var s = await blob.ReadAsync(tr' 1234567' 1 * 1000 * 1000);
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: var s = await blob.ReadAsync(tr' 1234567' 1 * 1000 * 1000);
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(1 * 1000 * 1000));
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(1 * 1000 * 1000));
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: Assert.Fail("Corrupted blob chunk at " + i + ": " + s[i' i + 128].ToString());
Magic Number,FoundationDB.Layers.Blobs.Tests,BlobFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\BlobFacts.cs,Test_FdbBlob_CanAppendLargeChunks,The following statement contains a magic number: s.Array[i + s.Offset] != (byte)((1234567 + i) % data.Length)
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Test_FdbCounter_Can_Increment_And_SetTotal,The following statement contains a magic number: await counter.AddAsync(100' this.Cancellation);
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Test_FdbCounter_Can_Increment_And_SetTotal,The following statement contains a magic number: Assert.That(await counter.GetSnapshotAsync(this.Cancellation)' Is.EqualTo(100));
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Test_FdbCounter_Can_Increment_And_SetTotal,The following statement contains a magic number: await counter.AddAsync(-10' this.Cancellation);
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Test_FdbCounter_Can_Increment_And_SetTotal,The following statement contains a magic number: Assert.That(await counter.GetSnapshotAsync(this.Cancellation)' Is.EqualTo(90));
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Test_FdbCounter_Can_Increment_And_SetTotal,The following statement contains a magic number: await counter.SetTotalAsync(500' this.Cancellation);
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Test_FdbCounter_Can_Increment_And_SetTotal,The following statement contains a magic number: Assert.That(await counter.GetSnapshotAsync(this.Cancellation)' Is.EqualTo(500));
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Sequentially,The following statement contains a magic number: const int N = 100;
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Sequentially,The following statement contains a magic number: Log("> " + N + " completed in " + sw.Elapsed.TotalMilliseconds.ToString("N1") + " ms (" + (sw.Elapsed.TotalMilliseconds * 1000 / N).ToString("N0") + " µs/add)");
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: const int B = 100;
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: Log("> " + N + " completed in " + sw.Elapsed.TotalMilliseconds.ToString("N1") + " ms (" + (sw.Elapsed.TotalMilliseconds * 1000 / B).ToString("N0") + " µs/add)");
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: await Task.Delay(200);
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: new [] { 1' 2' 5' 10' 20' 50' 100 }
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: new [] { 1' 2' 5' 10' 20' 50' 100 }
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: new [] { 1' 2' 5' 10' 20' 50' 100 }
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: new [] { 1' 2' 5' 10' 20' 50' 100 }
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: new [] { 1' 2' 5' 10' 20' 50' 100 }
Magic Number,FoundationDB.Layers.Counters.Tests,CounterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\CounterFacts.cs,Bench_FdbCounter_Increment_Concurrently,The following statement contains a magic number: new [] { 1' 2' 5' 10' 20' 50' 100 }
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,GetBooks,The following statement contains a magic number: return new Book[]  			{  				new Book  				{  					Id = 42'  					Title = "On the Origin of Species"'  					Author = "Charles Darwin"'  					Published = new DateTime(1859' 11' 24)'  					Pages = 502'  				}'  				new Book  				{  					Id = 43'  					Title = "Foundation and Empire"'  					Author = "Isaac Asimov"'  					Published = new DateTime(1952' 1' 1)'  					Pages = 247  				}  			};
Magic Number,FoundationDB.Layers.Documents.Tests,DocumentCollectionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\DocumentCollectionFacts.cs,Test_Can_Insert_And_Retrieve_ProtoBuf_Documents,The following statement contains a magic number: var copy = await db.ReadAsync((tr) => docs.LoadAsync(tr' 42)' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "green");  					index.Add(tr' 5' "yellow");  				}' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "green");  					index.Add(tr' 5' "yellow");  				}' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "green");  					index.Add(tr' 5' "yellow");  				}' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "green");  					index.Add(tr' 5' "yellow");  				}' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(greens' Is.EqualTo(new int[] { 2' 4 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(greens' Is.EqualTo(new int[] { 2' 4 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(blues' Is.EqualTo(new int[] { 3 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(yellows' Is.EqualTo(new int[] { 5 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Update(tr' 3' "indigo"' "blue");  					index.Remove(tr' 5' "yellow");  				}' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Update(tr' 3' "indigo"' "blue");  					index.Remove(tr' 5' "yellow");  				}' this.Cancellation);
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(greens' Is.EqualTo(new int[] { 2' 4 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(greens' Is.EqualTo(new int[] { 2' 4 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Task_Can_Add_Update_Remove_From_Index,The following statement contains a magic number: Assert.That(indigos' Is.EqualTo(new int[] { 3 }));
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Test_Can_Combine_Indexes,The following statement contains a magic number: var characters = new List<Character>()  				{  					new Character { Id = 1' Name = "Super Man"' Brand="DC"' HasSuperPowers = true' IsVilain = false }'  					new Character { Id = 2' Name = "Batman"' Brand="DC"' IsVilain = false }'  					new Character { Id = 3' Name = "Joker"' Brand="DC"' IsVilain = true }'  					new Character { Id = 4' Name = "Iron Man"' Brand="Marvel"' IsVilain = false }'  					new Character { Id = 5' Name = "Magneto"' Brand="Marvel"' HasSuperPowers = true' IsVilain = true }'  					new Character { Id = 6' Name = "Catwoman"' Brand="DC"' IsVilain = default(bool?) }'  				};
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Test_Can_Combine_Indexes,The following statement contains a magic number: var characters = new List<Character>()  				{  					new Character { Id = 1' Name = "Super Man"' Brand="DC"' HasSuperPowers = true' IsVilain = false }'  					new Character { Id = 2' Name = "Batman"' Brand="DC"' IsVilain = false }'  					new Character { Id = 3' Name = "Joker"' Brand="DC"' IsVilain = true }'  					new Character { Id = 4' Name = "Iron Man"' Brand="Marvel"' IsVilain = false }'  					new Character { Id = 5' Name = "Magneto"' Brand="Marvel"' HasSuperPowers = true' IsVilain = true }'  					new Character { Id = 6' Name = "Catwoman"' Brand="DC"' IsVilain = default(bool?) }'  				};
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Test_Can_Combine_Indexes,The following statement contains a magic number: var characters = new List<Character>()  				{  					new Character { Id = 1' Name = "Super Man"' Brand="DC"' HasSuperPowers = true' IsVilain = false }'  					new Character { Id = 2' Name = "Batman"' Brand="DC"' IsVilain = false }'  					new Character { Id = 3' Name = "Joker"' Brand="DC"' IsVilain = true }'  					new Character { Id = 4' Name = "Iron Man"' Brand="Marvel"' IsVilain = false }'  					new Character { Id = 5' Name = "Magneto"' Brand="Marvel"' HasSuperPowers = true' IsVilain = true }'  					new Character { Id = 6' Name = "Catwoman"' Brand="DC"' IsVilain = default(bool?) }'  				};
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Test_Can_Combine_Indexes,The following statement contains a magic number: var characters = new List<Character>()  				{  					new Character { Id = 1' Name = "Super Man"' Brand="DC"' HasSuperPowers = true' IsVilain = false }'  					new Character { Id = 2' Name = "Batman"' Brand="DC"' IsVilain = false }'  					new Character { Id = 3' Name = "Joker"' Brand="DC"' IsVilain = true }'  					new Character { Id = 4' Name = "Iron Man"' Brand="Marvel"' IsVilain = false }'  					new Character { Id = 5' Name = "Magneto"' Brand="Marvel"' HasSuperPowers = true' IsVilain = true }'  					new Character { Id = 6' Name = "Catwoman"' Brand="DC"' IsVilain = default(bool?) }'  				};
Magic Number,FoundationDB.Layers.Tables.Tests,IndexingFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\IndexingFacts.cs,Test_Can_Combine_Indexes,The following statement contains a magic number: var characters = new List<Character>()  				{  					new Character { Id = 1' Name = "Super Man"' Brand="DC"' HasSuperPowers = true' IsVilain = false }'  					new Character { Id = 2' Name = "Batman"' Brand="DC"' IsVilain = false }'  					new Character { Id = 3' Name = "Joker"' Brand="DC"' IsVilain = true }'  					new Character { Id = 4' Name = "Iron Man"' Brand="Marvel"' IsVilain = false }'  					new Character { Id = 5' Name = "Magneto"' Brand="Marvel"' HasSuperPowers = true' IsVilain = true }'  					new Character { Id = 6' Name = "Catwoman"' Brand="DC"' IsVilain = default(bool?) }'  				};
Magic Number,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The following statement contains a magic number: var rules = new Dictionary<IPEndPoint' string>()  			{  				{ new IPEndPoint(IPAddress.Parse("172.16.12.34")' 6667)' "block" }'  				{ new IPEndPoint(IPAddress.Parse("192.168.34.56")' 80)' "pass" }'  				{ new IPEndPoint(IPAddress.Parse("192.168.34.56")' 443)' "pass" }  			};
Magic Number,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The following statement contains a magic number: var rules = new Dictionary<IPEndPoint' string>()  			{  				{ new IPEndPoint(IPAddress.Parse("172.16.12.34")' 6667)' "block" }'  				{ new IPEndPoint(IPAddress.Parse("192.168.34.56")' 80)' "pass" }'  				{ new IPEndPoint(IPAddress.Parse("192.168.34.56")' 443)' "pass" }  			};
Magic Number,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The following statement contains a magic number: var rules = new Dictionary<IPEndPoint' string>()  			{  				{ new IPEndPoint(IPAddress.Parse("172.16.12.34")' 6667)' "block" }'  				{ new IPEndPoint(IPAddress.Parse("192.168.34.56")' 80)' "pass" }'  				{ new IPEndPoint(IPAddress.Parse("192.168.34.56")' 443)' "pass" }  			};
Magic Number,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The following statement contains a magic number: var value = await map.GetAsync(tr' new IPEndPoint(IPAddress.Parse("172.16.12.34")' 6667));
Magic Number,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The following statement contains a magic number: value = await map.GetAsync(tr' new IPEndPoint(IPAddress.Parse("192.168.34.56")' 443));
Magic Number,FoundationDB.Layers.Collections.Tests,MapFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\MapFacts.cs,Test_FdbMap_With_Custom_Key_Encoder,The following statement contains a magic number: var baz = new IPEndPoint(IPAddress.Parse("172.16.12.34")' 80);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: await db.ReadWriteAsync((tr) => queue.PushAsync(tr' 10)' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: await db.ReadWriteAsync((tr) => queue.PushAsync(tr' 8)' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: await db.ReadWriteAsync((tr) => queue.PushAsync(tr' 6)' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: Assert.That(item.Value' Is.EqualTo(10));
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: Assert.That(item.Value' Is.EqualTo(8));
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: Assert.That(item.Value' Is.EqualTo(8));
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: Assert.That(item.Value' Is.EqualTo(6));
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Queue_Fast,The following statement contains a magic number: await db.ReadWriteAsync((tr) => queue.PushAsync(tr' 5)' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Single_Client,The following statement contains a magic number: i < 10
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Single_Client,The following statement contains a magic number: i < 10
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,RunMultiClientTest,The following statement contains a magic number: var popThreads = Enumerable.Range(0' K)  					.Select(async id =>  					{  						try  						{  							// make everyone wait a bit' to ensure that they all start roughly at the same time  							await popLock.Task.ConfigureAwait(false);    							var res = new List<string>(NUM);    							int i = 0;  							while (i < NUM)  							{  								var item = await queue.PopAsync(db' tok).ConfigureAwait(false);  								if (item.HasValue)  								{  									Interlocked.Increment(ref popCount);  									res.Add(item.Value);  									++i;  								}  								else  								{  									Interlocked.Increment(ref stalls);  									await Task.Delay(10).ConfigureAwait(false);  								}  							}    							return res;  						}  						catch (Exception e)  						{  							Log("PopThread[" + id + "] failed: " + e);  							Assert.Fail("PopThread[" + id + "] failed: " + e.Message);  							throw;  						}  					}).ToArray();
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,RunMultiClientTest,The following statement contains a magic number: await Task.Delay(100);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_Simple,The following statement contains a magic number: int NUM = 100;
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_Simple,The following statement contains a magic number: await RunMultiClientTest(db' location' false' "simple queue"' 2' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_Simple,The following statement contains a magic number: await RunMultiClientTest(db' location' false' "simple queue"' 4' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_Simple,The following statement contains a magic number: await RunMultiClientTest(db' location' false' "simple queue"' 10' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_HighContention,The following statement contains a magic number: int NUM = 100;
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_HighContention,The following statement contains a magic number: await RunMultiClientTest(db' location' true' "high contention queue"' 2' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_HighContention,The following statement contains a magic number: await RunMultiClientTest(db' location' true' "high contention queue"' 4' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Multi_Client_HighContention,The following statement contains a magic number: await RunMultiClientTest(db' location' true' "high contention queue"' 10' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Log_Queue,The following statement contains a magic number: int NUM = 100;
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Log_Queue,The following statement contains a magic number: await RunMultiClientTest(logged' location' false' "simple queue"' 4' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,QueuesFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\QueuesFacts.cs,Test_Log_Queue,The following statement contains a magic number: await RunMultiClientTest(logged' location' true' "high contention queue"' 4' NUM' this.Cancellation);
Magic Number,FoundationDB.Layers.Collections.Tests,RankedTestFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\RankedSetFacts.cs,Test_Vector_Fast,The following statement contains a magic number: i < 100
Magic Number,FoundationDB.Layers.Collections.Tests,RankedTestFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\RankedSetFacts.cs,PrintRankedSet,The following statement contains a magic number: l < 6
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: vector.Set(tr' 1' Slice.FromInt32(2));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.PushAsync(tr' Slice.FromInt32(3));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.SwapAsync(tr' 0' 2);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.ResizeAsync(tr' 5);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: vector.Set(tr' 2' Value("whisky"));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: vector.Set(tr' 3' Value("au juge"));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: vector.Set(tr' 4' Value("blond qui"));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: vector.Set(tr' 5' Value("fume"));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: Log("> Index 5: " + await vector.GetAsync(tr' 5));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.ResizeAsync(tr' 3);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.ResizeAsync(tr' 3);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.ResizeAsync(tr' 6);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.ResizeAsync(tr' 4);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: vector.Set(tr' 10' Value("word"));
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.ResizeAsync(tr' 25);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.SwapAsync(tr' 10' 15);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.SwapAsync(tr' 10' 15);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.SwapAsync(tr' 12' 13);
Magic Number,FoundationDB.Layers.Collections.Tests,VectorFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Layers\VectorFacts.cs,Test_Vector_Fast,The following statement contains a magic number: await vector.SwapAsync(tr' 12' 13);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results.Count' Is.LessThan(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable(async (x) =>  			{  				await Task.Delay(10);  				return x + 1;  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable(async (x) =>  			{  				await Task.Delay(10);  				return x + 1;  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results.Count' Is.LessThan(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Convert_Enumerable_To_AsyncEnumerable_With_Async_Transform,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync_Big,The following statement contains a magic number: var source = Enumerable.Range(0' 1000).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToListAsync_Big,The following statement contains a magic number: Assert.That(list' Is.EqualTo(Enumerable.Range(0' 1000).ToList()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new [] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync_Big,The following statement contains a magic number: var source = Enumerable.Range(0' 1000).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ToArrayAsync_Big,The following statement contains a magic number: Assert.That(array' Is.EqualTo(Enumerable.Range(0' 1000).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Singleton,The following statement contains a magic number: var singleton = AsyncEnumerable.Singleton(42);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Singleton,The following statement contains a magic number: Assert.That(iterator.Current' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Singleton,The following statement contains a magic number: Assert.That(results' Is.EqualTo(new [] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: var singleton = AsyncEnumerable.Single(() => 42);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(iterator.Current' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: singleton = AsyncEnumerable.Single(() => Task.Delay(50).ContinueWith(_ => 42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: singleton = AsyncEnumerable.Single(() => Task.Delay(50).ContinueWith(_ => 42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(iterator.Current' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: singleton = AsyncEnumerable.Single((ct) => Task.Delay(50' ct).ContinueWith(_ => 42' ct));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: singleton = AsyncEnumerable.Single((ct) => Task.Delay(50' ct).ContinueWith(_ => 42' ct));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(iterator.Current' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 42 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: i < 10
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Sync,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: var selected = source.Select(async (x) =>  			{  				await Task.Delay(10);  				return x + 1;  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new [] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Async_Multiple_Times,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0.0' 1.0' 2.0' 3.0' 4.0' 5.0' 6.0' 7.0' 8.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: var query = source.Where(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(iterator.Current' Is.EqualTo(i * 2 + 1));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: i < 5
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: var source = Enumerable.Range(0' 42).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: var query = source.Take(10);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: i < 10
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: var source = Enumerable.Range(0' 42).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: var query = source  				.Where(x => x % 2 == 1)  				.Take(10);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: var query = source  				.Where(x => x % 2 == 1)  				.Take(10);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(iterator.Current' Is.EqualTo(i * 2 + 1));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: i < 10
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Take,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9' 11' 13' 15' 17' 19 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: var source = Enumerable.Range(0' 42).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: var query = source  				.Take(10)  				.Where(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: var query = source  				.Take(10)  				.Where(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Take_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: var source = Enumerable.Range(0' 42).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: var query = source  				.Where(x => x % 2 == 1)  				.Where(x => x % 3 == 0);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: var query = source  				.Where(x => x % 2 == 1)  				.Where(x => x % 3 == 0);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Combine_Where_Clauses,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 3' 9' 15' 21' 27' 33' 39 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: var source = Enumerable.Range(0' 42).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: var query = source  				.Skip(21)  				.Where(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: var query = source  				.Skip(21)  				.Where(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Skip_And_Where,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 21' 23' 25' 27' 29' 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: var source = Enumerable.Range(0' 42).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: var query = source  				.Where(x => x % 2 == 1)  				.Skip(15);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: var query = source  				.Where(x => x % 2 == 1)  				.Skip(15);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(list' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Where_And_Skip,The following statement contains a magic number: Assert.That(array' Is.EqualTo(new[] { 31' 33' 35' 37' 39' 41 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany,The following statement contains a magic number: var source = Enumerable.Range(0' 5).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany,The following statement contains a magic number: var query = source.SelectMany((x) => Enumerable.Repeat((char)(65 + x)' x));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_First,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_First,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_First,The following statement contains a magic number: Assert.That(first' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_FirstOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_FirstOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_FirstOrDefault,The following statement contains a magic number: Assert.That(first' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Single,The following statement contains a magic number: var source = Enumerable.Range(42' 1).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Single,The following statement contains a magic number: Assert.That(first' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Single,The following statement contains a magic number: source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Single,The following statement contains a magic number: source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_SingleOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 1).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_SingleOrDefault,The following statement contains a magic number: Assert.That(first' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_SingleOrDefault,The following statement contains a magic number: source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_SingleOrDefault,The following statement contains a magic number: source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Last,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Last,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_Last,The following statement contains a magic number: Assert.That(first' Is.EqualTo(44));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_LastOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_LastOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 3).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_LastOrDefault,The following statement contains a magic number: Assert.That(first' Is.EqualTo(44));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: var source = Enumerable.Range(42' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: var source = Enumerable.Range(42' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: Assert.That(item' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: item = await source.ElementAtAsync(5);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: Assert.That(item' Is.EqualTo(47));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: item = await source.ElementAtAsync(9);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: Assert.That(item' Is.EqualTo(51));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAt,The following statement contains a magic number: Assert.That(() => source.ElementAtAsync(10).GetAwaiter().GetResult()' Throws.InstanceOf<InvalidOperationException>());
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: var source = Enumerable.Range(42' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: Assert.That(item' Is.EqualTo(42));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: item = await source.ElementAtOrDefaultAsync(5);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: Assert.That(item' Is.EqualTo(47));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: item = await source.ElementAtOrDefaultAsync(9);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: Assert.That(item' Is.EqualTo(51));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: item = await source.ElementAtOrDefaultAsync(10);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Get_ElementAtOrDefault,The following statement contains a magic number: item = await source.ElementAtOrDefaultAsync(42);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var items = new[] { 1' 42' 7' 42' 9' 13' 7' 66 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var sequence = Enumerable.Range(0' 100).Select(x => (x * 1049) % 43);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var sequence = Enumerable.Range(0' 100).Select(x => (x * 1049) % 43);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Distinct,The following statement contains a magic number: var sequence = Enumerable.Range(0' 100).Select(x => (x * 1049) % 43);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: await source.ForEachAsync((x) =>  			{  				Assert.That(items.Count' Is.LessThan(10));  				items.Add(x);  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items.Count' Is.EqualTo(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: await source.ForEachAsync(async (x) =>  			{  				Assert.That(items.Count' Is.LessThan(10));  				await Task.Delay(10);  				items.Add(x);  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: await source.ForEachAsync(async (x) =>  			{  				Assert.That(items.Count' Is.LessThan(10));  				await Task.Delay(10);  				items.Add(x);  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items.Count' Is.EqualTo(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ForEach_Async,The following statement contains a magic number: Assert.That(items' Is.EqualTo(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Any,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Any_With_Predicate,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Any_With_Predicate,The following statement contains a magic number: bool any = await source.AnyAsync(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Any_With_Predicate,The following statement contains a magic number: any = await AsyncEnumerable.Empty<int>().AnyAsync(x => x == 42);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_None,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_None_With_Predicate,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_None_With_Predicate,The following statement contains a magic number: bool any = await source.NoneAsync(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_None_With_Predicate,The following statement contains a magic number: any = await AsyncEnumerable.Empty<int>().NoneAsync(x => x == 42);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Count,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Count,The following statement contains a magic number: Assert.That(count' Is.EqualTo(10));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Count_With_Predicate,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Count_With_Predicate,The following statement contains a magic number: var count = await source.CountAsync(x => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Count_With_Predicate,The following statement contains a magic number: Assert.That(count' Is.EqualTo(5));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Min,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Min,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => rnd.Next()).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Max,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Max,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => rnd.Next()).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (uint) rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (uint) rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (long) rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (long) rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (ulong) rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (ulong) rnd.Next(0' 1000)).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => (float) rnd.NextDouble()).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => rnd.NextDouble()).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(idx => new { Index = idx' Integer = rnd.Next(0' 1000)' Decimal = rnd.NextDouble() }).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Sum_Selector,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(idx => new { Index = idx' Integer = rnd.Next(0' 1000)' Decimal = rnd.NextDouble() }).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_OrderBy,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_OrderBy,The following statement contains a magic number: var items = Enumerable.Range(0' 100).Select(_ => rnd.Next()).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ThenBy,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ThenBy,The following statement contains a magic number: var pairs = Enumerable.Range(0' 100).Select(_ => new KeyValuePair<int' int>(rnd.Next(10)' rnd.Next())).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_ThenBy,The following statement contains a magic number: var pairs = Enumerable.Range(0' 100).Select(_ => new KeyValuePair<int' int>(rnd.Next(10)' rnd.Next())).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: var items = Enumerable.Range(0' 100).ToList();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: var query = source.Batch(20);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results' Is.Not.Null.And.Count.EqualTo(5));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[0]' Is.EqualTo(Enumerable.Range(0' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(20' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(20' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(40' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(40' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(40' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(60' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(60' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(60' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[4]' Is.EqualTo(Enumerable.Range(80' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[4]' Is.EqualTo(Enumerable.Range(80' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[4]' Is.EqualTo(Enumerable.Range(80' 20).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: query = source.Batch(32);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results' Is.Not.Null.And.Count.EqualTo(4));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[0]' Is.EqualTo(Enumerable.Range(0' 32).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(32' 32).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(32' 32).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(64' 32).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(64' 32).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(64' 32).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(96' 4).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(96' 4).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(96' 4).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Batch,The following statement contains a magic number: query = AsyncEnumerable.Empty<int>().Batch(20);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				if (index >= 50) return Task.FromResult(Maybe.Nothing<int>());  				if (index % 13 == 0) return Task.Delay(100' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  				return Task.FromResult(Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				if (index >= 50) return Task.FromResult(Maybe.Nothing<int>());  				if (index % 13 == 0) return Task.Delay(100' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  				return Task.FromResult(Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				if (index >= 50) return Task.FromResult(Maybe.Nothing<int>());  				if (index % 13 == 0) return Task.Delay(100' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  				return Task.FromResult(Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: var query = source.Window(20);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results' Is.Not.Null.And.Count.EqualTo(4));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[0]' Is.EqualTo(Enumerable.Range(0' 13).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(13' 13).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(13' 13).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(26' 13).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(26' 13).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(26' 13).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(39' 11).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(39' 11).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(39' 11).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: query = source.Window(10);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results' Is.Not.Null.And.Count.EqualTo(8));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[0]' Is.EqualTo(Enumerable.Range(0' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(10' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[1]' Is.EqualTo(Enumerable.Range(10' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(13' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(13' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[2]' Is.EqualTo(Enumerable.Range(13' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(23' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(23' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[3]' Is.EqualTo(Enumerable.Range(23' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[4]' Is.EqualTo(Enumerable.Range(26' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[4]' Is.EqualTo(Enumerable.Range(26' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[4]' Is.EqualTo(Enumerable.Range(26' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[5]' Is.EqualTo(Enumerable.Range(36' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[5]' Is.EqualTo(Enumerable.Range(36' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[5]' Is.EqualTo(Enumerable.Range(36' 3).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[6]' Is.EqualTo(Enumerable.Range(39' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[6]' Is.EqualTo(Enumerable.Range(39' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[6]' Is.EqualTo(Enumerable.Range(39' 10).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[7]' Is.EqualTo(Enumerable.Range(49' 1).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Window,The following statement contains a magic number: Assert.That(results[7]' Is.EqualTo(Enumerable.Range(49' 1).ToArray()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				Interlocked.Increment(ref called);  				if (index >= 10) return Task.FromResult(Maybe.Nothing<int>());  				return Task.Delay(15' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				Interlocked.Increment(ref called);  				if (index >= 10) return Task.FromResult(Maybe.Nothing<int>());  				return Task.Delay(15' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(results' Is.EqualTo(Enumerable.Range(0' 10).ToList()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withoutPrefetching.Select(x => x.Value)' Is.EqualTo(Enumerable.Range(0' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withoutPrefetching.Select(x => x.Called)' Is.EqualTo(Enumerable.Range(1' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withPrefetching1.Select(x => x.Value)' Is.EqualTo(Enumerable.Range(0' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withPrefetching1.Select(x => x.Called)' Is.EqualTo(Enumerable.Range(2' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withPrefetching1.Select(x => x.Called)' Is.EqualTo(Enumerable.Range(2' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: var withPrefetching2 = await source.Prefetch(2).Select(record).ToListAsync(this.Cancellation);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withPrefetching2.Select(x => x.Value)' Is.EqualTo(Enumerable.Range(0' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withPrefetching2.Select(x => x.Called)' Is.EqualTo(Enumerable.Range(2' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Constant_Latency_Source,The following statement contains a magic number: Assert.That(withPrefetching2.Select(x => x.Called)' Is.EqualTo(Enumerable.Range(2' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				Interlocked.Increment(ref called);  				if (index >= 10) return Task.FromResult(Maybe.Nothing<int>());  				if (index % 4 == 0) return Task.Delay(100' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  				return Task.FromResult(Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				Interlocked.Increment(ref called);  				if (index >= 10) return Task.FromResult(Maybe.Nothing<int>());  				if (index % 4 == 0) return Task.Delay(100' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  				return Task.FromResult(Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: var source = new AnonymousAsyncGenerator<int>((index' ct) =>  			{  				Interlocked.Increment(ref called);  				if (index >= 10) return Task.FromResult(Maybe.Nothing<int>());  				if (index % 4 == 0) return Task.Delay(100' this.Cancellation).ContinueWith((_) => Maybe.Return((int)index));  				return Task.FromResult(Maybe.Return((int)index));  			});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: Assert.That(withoutPrefetching.Select(x => x.Value)' Is.EqualTo(Enumerable.Range(0' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: Assert.That(withPrefetchingK.Select(x => x.Item1)' Is.EqualTo(Enumerable.Range(0' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: Assert.That(withPrefetchingK.Select(x => x.Item2)' Is.All.LessThanOrEqualTo(11));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: K <= 4
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: var withPrefetching5 = await source.Prefetch(5).Select(record).ToListAsync(this.Cancellation);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: Assert.That(withPrefetching5.Select(x => x.Item1)' Is.EqualTo(Enumerable.Range(0' 10)));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: Assert.That(withPrefetching5[0].Item2' Is.EqualTo(5)' "Generator must have only 4 calls in advance because it only produces 4 items at a time!");
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Prefetch_On_Bursty_Source,The following statement contains a magic number: Assert.That(withPrefetching5.Select(x => x.Item2)' Is.All.LessThanOrEqualTo(11));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Anonymous_Types,The following statement contains a magic number: var source = Enumerable.Range(0' 10).ToAsyncEnumerable();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Anonymous_Types,The following statement contains a magic number: var results = await source  				.Select((x) => new { Value = x' Square = x * x' Root = Math.Sqrt(x)' Odd = x % 2 == 1 })  				.Where((t) => t.Odd)  				.ToListAsync();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_Anonymous_Types,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(5));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: var results = await  				(from x in Enumerable.Range(0' 10).ToAsyncEnumerable()  				let t = new { Value = x' Square = x * x' Root = Math.Sqrt(x)' Odd = x % 2 == 1 }  				where t.Odd  				select t)  				.ToListAsync();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: var results = await  				(from x in Enumerable.Range(0' 10).ToAsyncEnumerable()  				let t = new { Value = x' Square = x * x' Root = Math.Sqrt(x)' Odd = x % 2 == 1 }  				where t.Odd  				select t)  				.ToListAsync();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(5));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1' 3' 5' 7' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Square).ToArray()' Is.EqualTo(new [] { 1' 9' 25' 49' 81 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Square).ToArray()' Is.EqualTo(new [] { 1' 9' 25' 49' 81 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Square).ToArray()' Is.EqualTo(new [] { 1' 9' 25' 49' 81 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Square).ToArray()' Is.EqualTo(new [] { 1' 9' 25' 49' 81 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1.0' 3.0' 5.0' 7.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1.0' 3.0' 5.0' 7.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1.0' 3.0' 5.0' 7.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_Select_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.Value).ToArray()' Is.EqualTo(new [] { 1.0' 3.0' 5.0' 7.0' 9.0 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: var results = await  			(from x in Enumerable.Range(0' 10).ToAsyncEnumerable()  			 from y in Enumerable.Repeat((char)(65 + x)' x)  			 let t = new { X = x' Y = y' Odd = x % 2 == 1 }  			 where t.Odd  			 select t)  			 .ToListAsync();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: var results = await  			(from x in Enumerable.Range(0' 10).ToAsyncEnumerable()  			 from y in Enumerable.Repeat((char)(65 + x)' x)  			 let t = new { X = x' Y = y' Odd = x % 2 == 1 }  			 where t.Odd  			 select t)  			 .ToListAsync();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: var results = await  			(from x in Enumerable.Range(0' 10).ToAsyncEnumerable()  			 from y in Enumerable.Repeat((char)(65 + x)' x)  			 let t = new { X = x' Y = y' Odd = x % 2 == 1 }  			 where t.Odd  			 select t)  			 .ToListAsync();
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(25));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Can_SelectMany_With_LINQ_Syntax,The following statement contains a magic number: Assert.That(results.Select(t => t.X).ToArray()' Is.EqualTo(new [] { 1' 3' 3' 3' 5' 5' 5' 5' 5' 7' 7' 7' 7' 7' 7' 7' 9' 9' 9' 9' 9' 9' 9' 9' 9 }));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Exceptions_Are_Propagated_To_Caller,The following statement contains a magic number: var query = Enumerable.Range(0' 10).ToAsyncEnumerable()  				.Select(x =>  				{  					if (x == 1) throw new FormatException("KABOOM");  					Assert.That(x' Is.LessThan(1));  					return x;  				});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Parallel_Select_Async,The following statement contains a magic number: const int MAX_CONCURRENCY = 5;
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Parallel_Select_Async,The following statement contains a magic number: const int N = 20;
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Parallel_Select_Async,The following statement contains a magic number: var query = Enumerable.Range(1' N)  					.ToAsyncEnumerable()  					.Select(async x =>  					{  						int ms;  						lock (rnd) {  ms = 10 + rnd.Next(25); }  						await Task.Delay(ms' this.Cancellation);  						return x;  					})  					.SelectAsync(async (x' ct) =>  					{  						try  						{  							var n = Interlocked.Increment(ref concurrent);  							try  							{  								Assert.That(n' Is.LessThanOrEqualTo(MAX_CONCURRENCY));  								Log("** " + sw.Elapsed + " start " + x + " (" + n + ")");  #if DEBUG_STACK_TRACES  								Log("> " + new StackTrace().ToString().Replace("\r\n"' "\r\n> "));  #endif  								int ms;  								lock (rnd) { ms = rnd.Next(25) + 50; }  								await Task.Delay(ms' this.Cancellation);  								Log("** " + sw.Elapsed + " stop " + x + " (" + Volatile.Read(ref concurrent) + ")");    								return x * x;  							}  							finally  							{  								n = Interlocked.Decrement(ref concurrent);  								Assert.That(n' Is.GreaterThanOrEqualTo(0));  							}  						}  						catch(Exception e)  						{  							Console.Error.WriteLine("Thread #" + x + " failed: " + e.ToString());  							throw;  						}  					}'  					new ParallelAsyncQueryOptions { MaxConcurrency = MAX_CONCURRENCY }  				);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Parallel_Select_Async,The following statement contains a magic number: var query = Enumerable.Range(1' N)  					.ToAsyncEnumerable()  					.Select(async x =>  					{  						int ms;  						lock (rnd) {  ms = 10 + rnd.Next(25); }  						await Task.Delay(ms' this.Cancellation);  						return x;  					})  					.SelectAsync(async (x' ct) =>  					{  						try  						{  							var n = Interlocked.Increment(ref concurrent);  							try  							{  								Assert.That(n' Is.LessThanOrEqualTo(MAX_CONCURRENCY));  								Log("** " + sw.Elapsed + " start " + x + " (" + n + ")");  #if DEBUG_STACK_TRACES  								Log("> " + new StackTrace().ToString().Replace("\r\n"' "\r\n> "));  #endif  								int ms;  								lock (rnd) { ms = rnd.Next(25) + 50; }  								await Task.Delay(ms' this.Cancellation);  								Log("** " + sw.Elapsed + " stop " + x + " (" + Volatile.Read(ref concurrent) + ")");    								return x * x;  							}  							finally  							{  								n = Interlocked.Decrement(ref concurrent);  								Assert.That(n' Is.GreaterThanOrEqualTo(0));  							}  						}  						catch(Exception e)  						{  							Console.Error.WriteLine("Thread #" + x + " failed: " + e.ToString());  							throw;  						}  					}'  					new ParallelAsyncQueryOptions { MaxConcurrency = MAX_CONCURRENCY }  				);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Parallel_Select_Async,The following statement contains a magic number: var query = Enumerable.Range(1' N)  					.ToAsyncEnumerable()  					.Select(async x =>  					{  						int ms;  						lock (rnd) {  ms = 10 + rnd.Next(25); }  						await Task.Delay(ms' this.Cancellation);  						return x;  					})  					.SelectAsync(async (x' ct) =>  					{  						try  						{  							var n = Interlocked.Increment(ref concurrent);  							try  							{  								Assert.That(n' Is.LessThanOrEqualTo(MAX_CONCURRENCY));  								Log("** " + sw.Elapsed + " start " + x + " (" + n + ")");  #if DEBUG_STACK_TRACES  								Log("> " + new StackTrace().ToString().Replace("\r\n"' "\r\n> "));  #endif  								int ms;  								lock (rnd) { ms = rnd.Next(25) + 50; }  								await Task.Delay(ms' this.Cancellation);  								Log("** " + sw.Elapsed + " stop " + x + " (" + Volatile.Read(ref concurrent) + ")");    								return x * x;  							}  							finally  							{  								n = Interlocked.Decrement(ref concurrent);  								Assert.That(n' Is.GreaterThanOrEqualTo(0));  							}  						}  						catch(Exception e)  						{  							Console.Error.WriteLine("Thread #" + x + " failed: " + e.ToString());  							throw;  						}  					}'  					new ParallelAsyncQueryOptions { MaxConcurrency = MAX_CONCURRENCY }  				);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Parallel_Select_Async,The following statement contains a magic number: var query = Enumerable.Range(1' N)  					.ToAsyncEnumerable()  					.Select(async x =>  					{  						int ms;  						lock (rnd) {  ms = 10 + rnd.Next(25); }  						await Task.Delay(ms' this.Cancellation);  						return x;  					})  					.SelectAsync(async (x' ct) =>  					{  						try  						{  							var n = Interlocked.Increment(ref concurrent);  							try  							{  								Assert.That(n' Is.LessThanOrEqualTo(MAX_CONCURRENCY));  								Log("** " + sw.Elapsed + " start " + x + " (" + n + ")");  #if DEBUG_STACK_TRACES  								Log("> " + new StackTrace().ToString().Replace("\r\n"' "\r\n> "));  #endif  								int ms;  								lock (rnd) { ms = rnd.Next(25) + 50; }  								await Task.Delay(ms' this.Cancellation);  								Log("** " + sw.Elapsed + " stop " + x + " (" + Volatile.Read(ref concurrent) + ")");    								return x * x;  							}  							finally  							{  								n = Interlocked.Decrement(ref concurrent);  								Assert.That(n' Is.GreaterThanOrEqualTo(0));  							}  						}  						catch(Exception e)  						{  							Console.Error.WriteLine("Thread #" + x + " failed: " + e.ToString());  							throw;  						}  					}'  					new ParallelAsyncQueryOptions { MaxConcurrency = MAX_CONCURRENCY }  				);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: const int MAX_CAPACITY = 5;
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: await Task.Delay(10' this.Cancellation);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: rnd.Next(10) < 2
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: rnd.Next(10) < 2
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: !token.IsCancellationRequested && i < MAX_CAPACITY * 10
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncBuffer,The following statement contains a magic number: var t = await Task.WhenAny(pump' Task.Delay(TimeSpan.FromSeconds(10)' token));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The following statement contains a magic number: const int N = 20;
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The following statement contains a magic number: var source = Enumerable.Range(0' N)  				.ToAsyncEnumerable()  				.Select(async x =>  				{  					if (rnd.Next(10) < 2)  					{  						await Task.Delay(15);  					}  					Log("[PRODUCER] publishing " + x + " at " + sw.Elapsed.TotalMilliseconds + " on #" + Thread.CurrentThread.ManagedThreadId);  					return x;  				});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The following statement contains a magic number: var source = Enumerable.Range(0' N)  				.ToAsyncEnumerable()  				.Select(async x =>  				{  					if (rnd.Next(10) < 2)  					{  						await Task.Delay(15);  					}  					Log("[PRODUCER] publishing " + x + " at " + sw.Elapsed.TotalMilliseconds + " on #" + Thread.CurrentThread.ManagedThreadId);  					return x;  				});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncIteratorPump,The following statement contains a magic number: var source = Enumerable.Range(0' N)  				.ToAsyncEnumerable()  				.Select(async x =>  				{  					if (rnd.Next(10) < 2)  					{  						await Task.Delay(15);  					}  					Log("[PRODUCER] publishing " + x + " at " + sw.Elapsed.TotalMilliseconds + " on #" + Thread.CurrentThread.ManagedThreadId);  					return x;  				});
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: int[] sourceOfInts = { 1' 7' 42' -456' 123' int.MaxValue' -1' 1023' 0' short.MinValue' 5' 13' -273' 2013' 4534' -999 };
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: const int N = 1000;
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // keep about 50% of the items  						query = query.Where(x => x > 0);  						reference = reference.Where(x => x > 0);  						witness = witness.Where(x => x > 0);  						break;  					}  					case 1:  					{ // keep no items at all  						query = query.Where(x => false);  						reference = reference.Where(x => false);  						witness = witness.Where(x => false);  						break;  					}  					case 2:  					{ // keep only one item  						query = query.Where(x => x == 42);  						reference = reference.Where(x => x == 42);  						witness = witness.Where(x => x == 42);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // keep about 50% of the items  						query = query.Where(x => x > 0);  						reference = reference.Where(x => x > 0);  						witness = witness.Where(x => x > 0);  						break;  					}  					case 1:  					{ // keep no items at all  						query = query.Where(x => false);  						reference = reference.Where(x => false);  						witness = witness.Where(x => false);  						break;  					}  					case 2:  					{ // keep only one item  						query = query.Where(x => x == 42);  						reference = reference.Where(x => x == 42);  						witness = witness.Where(x => x == 42);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // keep about 50% of the items  						query = query.Where(x => x > 0);  						reference = reference.Where(x => x > 0);  						witness = witness.Where(x => x > 0);  						break;  					}  					case 1:  					{ // keep no items at all  						query = query.Where(x => false);  						reference = reference.Where(x => false);  						witness = witness.Where(x => false);  						break;  					}  					case 2:  					{ // keep only one item  						query = query.Where(x => x == 42);  						reference = reference.Where(x => x == 42);  						witness = witness.Where(x => x == 42);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // keep about 50% of the items  						query = query.Where(x => x > 0);  						reference = reference.Where(x => x > 0);  						witness = witness.Where(x => x > 0);  						break;  					}  					case 1:  					{ // keep no items at all  						query = query.Where(x => false);  						reference = reference.Where(x => false);  						witness = witness.Where(x => false);  						break;  					}  					case 2:  					{ // keep only one item  						query = query.Where(x => x == 42);  						reference = reference.Where(x => x == 42);  						witness = witness.Where(x => x == 42);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch (rnd.Next(6))  				{  					case 0:  					{ // keep about 50% of the items  						query = query.Where(x => x > 0);  						reference = reference.Where(x => x > 0);  						witness = witness.Where(x => x > 0);  						break;  					}  					case 1:  					{ // keep no items at all  						query = query.Where(x => false);  						reference = reference.Where(x => false);  						witness = witness.Where(x => false);  						break;  					}  					case 2:  					{ // keep only one item  						query = query.Where(x => x == 42);  						reference = reference.Where(x => x == 42);  						witness = witness.Where(x => x == 42);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: rnd.Next(5) == 0
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: sq = sq.Where(s => s.Length <= 2);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: sr = sr.Where(s => s.Length <= 2);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: sw = sw.Where(s => s.Length <= 2);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: rnd.Next(2) == 0
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: rnd.Next(3) == 0
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch(rnd.Next(10))  				{  					case 0:  					{ // only take a few  						query = query.Take(3);  						reference = reference.Take(3);  						witness = witness.Take(3);  						break;  					}  					case 1:  					{ // only take 1  						query = query.Take(1);  						reference = reference.Take(1);  						witness = witness.Take(1);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch(rnd.Next(10))  				{  					case 0:  					{ // only take a few  						query = query.Take(3);  						reference = reference.Take(3);  						witness = witness.Take(3);  						break;  					}  					case 1:  					{ // only take 1  						query = query.Take(1);  						reference = reference.Take(1);  						witness = witness.Take(1);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch(rnd.Next(10))  				{  					case 0:  					{ // only take a few  						query = query.Take(3);  						reference = reference.Take(3);  						witness = witness.Take(3);  						break;  					}  					case 1:  					{ // only take 1  						query = query.Take(1);  						reference = reference.Take(1);  						witness = witness.Take(1);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following statement contains a magic number: switch(rnd.Next(10))  				{  					case 0:  					{ // only take a few  						query = query.Take(3);  						reference = reference.Take(3);  						witness = witness.Take(3);  						break;  					}  					case 1:  					{ // only take 1  						query = query.Take(1);  						reference = reference.Take(1);  						witness = witness.Take(1);  						break;  					}  				}
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: var items = Enumerable.Range(0' 10);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: var b = a.Where((x) => x % 2 == 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: var query = source  				.Observe((x) => before.Add(x))  				.Where((x) => x % 2 == 1)  				.Observe((x) => after.Add(x))  				.Select((x) => x + 1);
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: Assert.That(before' Is.EqualTo(Enumerable.Range(0' 10).ToList()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: Assert.That(after' Is.EqualTo(Enumerable.Range(0' 10).Where(x => x % 2 == 1).ToList()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: Assert.That(after' Is.EqualTo(Enumerable.Range(0' 10).Where(x => x % 2 == 1).ToList()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: Assert.That(results' Is.EqualTo(Enumerable.Range(1' 5).Select(x => x * 2).ToList()));
Magic Number,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Record_Items,The following statement contains a magic number: Assert.That(results' Is.EqualTo(Enumerable.Range(1' 5).Select(x => x * 2).ToList()));
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_AsyncQueryable_Basics,The following statement contains a magic number: Assert.That(count' Is.EqualTo(2));
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Single,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "red");  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Single,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "red");  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Single,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' 1' "red");  					index.Add(tr' 2' "green");  					index.Add(tr' 3' "blue");  					index.Add(tr' 4' "red");  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: await db.WriteAsync((tr) =>  				{  					index.Add(tr' "alpha"' 10);  					index.Add(tr' "bravo"' 16);  					index.Add(tr' "charly"' 12);  					index.Add(tr' "echo"' 666);  					index.Add(tr' "foxtrot"' 54321);  					index.Add(tr' "golf"' 768);  					index.Add(tr' "tango"' 12345);  					index.Add(tr' "sierra"' 667);  					index.Add(tr' "victor"' 1234);  					index.Add(tr' "whisky"' 9001);  				}' this.Cancellation);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: var lookup = index.Query(db).Lookup(x => x <= 100);
Magic Number,FoundationDB.Linq.Tests,AsyncQueryableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncQueryableFacts.cs,Test_Query_Index_Range,The following statement contains a magic number: lookup = index.Query(db).Lookup(x => x >= 9000);
Magic Number,FoundationDB.Linq.Expressions.Tests,FdbQueryExpressionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\FdbQueryExpressionFacts.cs,Test_FdbQueryIntersectExpression,The following statement contains a magic number: var expr2 = FdbQueryIndexLookupExpression<int' long>.Lookup(  				FooBazIndex'  				(x) => x == 1234L  			);
Magic Number,FoundationDB.Linq.Expressions.Tests,FdbQueryExpressionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\FdbQueryExpressionFacts.cs,Test_FdbQueryIntersectExpression,The following statement contains a magic number: Assert.That(expr.Terms.Count' Is.EqualTo(2));
Magic Number,FoundationDB.Linq.Expressions.Tests,FdbQueryExpressionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\FdbQueryExpressionFacts.cs,Test_FdbQueryUnionExpression,The following statement contains a magic number: var expr2 = FdbQueryIndexLookupExpression<int' long>.Lookup(  				FooBazIndex'  				(x) => x == 1234L  			);
Magic Number,FoundationDB.Linq.Expressions.Tests,FdbQueryExpressionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\FdbQueryExpressionFacts.cs,Test_FdbQueryUnionExpression,The following statement contains a magic number: Assert.That(expr.Terms.Count' Is.EqualTo(2));
Magic Number,FoundationDB.Linq.Expressions.Tests,FdbQueryExpressionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\FdbQueryExpressionFacts.cs,Test_FdbQueryFilterExpression,The following statement contains a magic number: var expr = FdbQueryExpressions.Filter(  				FdbQueryExpressions.RangeStartsWith(TuPack.EncodeKey("Hello"' "World"))'  				(kvp) => kvp.Value.ToInt32() % 2 == 0  			);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123' 123);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123' 123);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123' 456);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123' 456);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123' null);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(null' 456);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123L' 123L);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123L' 123L);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123L' 456L);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123L' 456L);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(123L' null);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Same_Types_Are_Always_Similar,The following statement contains a magic number: test(null' 456L);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: different("hello"' 123);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: different(123' "hello");
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar("123"' 123);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar("123"' 123L);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar("123.4"' 123.4f);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar("123.4"' 123.4d);
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar(123' "123");
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar(123L' "123");
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar(123.4f' "123.4");
Magic Number,Doxense.Runtime.Converters.Tests,ConversionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\ConversionFacts.cs,Test_Values_Of_Similar_Types_Are_Similar,The following statement contains a magic number: similar(123.4d' "123.4");
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' bool>(123)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' bool>(123.0f)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Bool,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' bool>(123.0d)' Is.True);
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte'	int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte'	int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' int>(123)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' int>(123.0f)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' int>(123.0f)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' int>(123.0d)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' int>(123.0d)' Is.EqualTo(123));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' uint>(123)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' uint>(123.0f)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' uint>(123.0f)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' uint>(123.0d)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt32,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' uint>(123.0d)' Is.EqualTo(123U));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' long>(123)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' long>(123.0f)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' long>(123.0f)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' long>(123.0d)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Int64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' long>(123.0d)' Is.EqualTo(123L));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' ulong>(123)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' ulong>(123.0f)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' ulong>(123.0f)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' ulong>(123.0d)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_UInt64,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' ulong>(123.0d)' Is.EqualTo(123UL));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' float>(123)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' float>(123.0f)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' float>(123.0f)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' float>(123.0d)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Single,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' float>(123.0d)' Is.EqualTo(123f));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' double>(123)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' double>(123.0f)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' double>(123.0f)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' double>(123.0d)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_Double,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' double>(123.0d)' Is.EqualTo(123d));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<sbyte' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<byte' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<short' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ushort' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<int' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<uint' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<long' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<ulong' string>(123)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' string>(123.0f)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<float' string>(123.4f)' Is.EqualTo("123.4"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' string>(123.0d)' Is.EqualTo("123"));
Magic Number,Doxense.Runtime.Converters.Tests,TypeConvertersFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\TypeConvertersFacts.cs,Test_Can_Convert_Numbers_To_String,The following statement contains a magic number: Assert.That(TypeConverters.Convert<double' string>(123.4d)' Is.EqualTo("123.4"));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(MutableSlice.FromByte(42)' MutableSlice.FromByte(42))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(MutableSlice.FromByte(42)' MutableSlice.FromByte(42))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(MutableSlice.FromByte(42)' new byte[] { 42 }.AsMutableSlice())' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(MutableSlice.FromByte(42)' new byte[] { 42 }.AsMutableSlice())' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(MutableSlice.FromByte(42)' MutableSlice.FromByte(77))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(MutableSlice.FromByte(42)' MutableSlice.FromByte(77))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' MutableSlice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf1.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf1.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf1.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf2.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf2.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf2.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf2.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf2.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf2.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_GetHashCode_Should_Return_Same_As_Slice,The following statement contains a magic number: var rnd = new Random(123456);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_GetHashCode_Should_Return_Same_As_Slice,The following statement contains a magic number: var s = MutableSlice.Random(rnd' rnd.Next(1' 16));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_GetHashCode_Should_Return_Same_As_Slice,The following statement contains a magic number: i < 100
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.FromByte(42))' Is.Zero);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.FromByte(42))' Is.Zero);
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.FromByte(77))' Is.LessThan(0));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.FromByte(77))' Is.LessThan(0));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.FromByte(21))' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.FromByte(21))' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.Empty)' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,MutableSliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceComparerFacts.cs,Test_MutableSliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(MutableSlice.FromByte(42)' MutableSlice.Nil)' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.Array.Length' Is.GreaterThanOrEqualTo(3));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Capacity,The following statement contains a magic number: Assert.That(MutableSlice.Create(16).GetBytes()' Is.EqualTo(new byte[16]));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Capacity,The following statement contains a magic number: Assert.That(MutableSlice.Create(16).GetBytes()' Is.EqualTo(new byte[16]));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Assert.That(new byte[] { 1' 2' 3 }.AsSlice().GetBytes()' Is.EqualTo(new byte[] { 1' 2' 3 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Assert.That(new byte[] { 1' 2' 3 }.AsSlice().GetBytes()' Is.EqualTo(new byte[] { 1' 2' 3 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Assert.That(new byte[] { 1' 2' 3 }.AsSlice().GetBytes()' Is.EqualTo(new byte[] { 1' 2' 3 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Assert.That(new byte[] { 1' 2' 3 }.AsSlice().GetBytes()' Is.EqualTo(new byte[] { 1' 2' 3 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: slice = tmp.AsSlice(4' 7);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: slice = tmp.AsSlice(4' 7);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(7));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: var buf = new byte[7];
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Array.Copy(tmp' 4' buf' 0' 7);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_Byte_Array,The following statement contains a magic number: Array.Copy(tmp' 4' buf' 0' 7);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(0' 4)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(0' 4)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(1' 3)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(1' 3)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(3' 1)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(3' 1)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(-1' 1)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(0' -1)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_Validates_Arguments,The following statement contains a magic number: Assert.That(() => new byte[3].AsSlice(-1' -1)' Throws.InstanceOf<ArgumentException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: slice = new ArraySegment<byte>(tmp' 4' 7).AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: slice = new ArraySegment<byte>(tmp' 4' 7).AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(7));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: var buf = new byte[7];
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: Array.Copy(tmp' 4' buf' 0' 7);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Create_With_ArraySegment,The following statement contains a magic number: Array.Copy(tmp' 4' buf' 0' 7);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Pseudo_Random,The following statement contains a magic number: MutableSlice slice = MutableSlice.Random(rng' 16);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Pseudo_Random,The following statement contains a magic number: Assert.That(slice.Array.Length' Is.GreaterThanOrEqualTo(16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Pseudo_Random,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Pseudo_Random,The following statement contains a magic number: Assert.That(() => MutableSlice.Random(default(Random)' 16)' Throws.ArgumentNullException);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The following statement contains a magic number: MutableSlice slice = MutableSlice.Random(rng' 16);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The following statement contains a magic number: Assert.That(slice.Array.Length' Is.GreaterThanOrEqualTo(16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The following statement contains a magic number: Assert.That(  					MutableSlice.Random(rng' 256' nonZeroBytes: true).GetBytes()'  					Is.All.Not.EqualTo(0)  				);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The following statement contains a magic number: i < 256
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Cryptographic_Random,The following statement contains a magic number: Assert.That(() => MutableSlice.Random(default(System.Security.Cryptography.RandomNumberGenerator)' 16)' Throws.ArgumentNullException);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAscii,The following statement contains a magic number: Assert.That(new byte[] { 0x41' 0x42' 0x43' 0x44' 0x45' 0x46 }.AsSlice(2' 3).ToStringAscii()' Is.EqualTo("CDE"));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToStringAscii,The following statement contains a magic number: Assert.That(new byte[] { 0x41' 0x42' 0x43' 0x44' 0x45' 0x46 }.AsSlice(2' 3).ToStringAscii()' Is.EqualTo("CDE"));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromByteString,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromString_Uses_UTF8,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(14));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(14));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3 + 14));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromStringUtf8WithBom,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3 + 14));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(MutableSlice.FromChar('0').GetBytes()' Is.EqualTo(new byte[] { 48 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(MutableSlice.FromChar('A').GetBytes()' Is.EqualTo(new byte[] { 65 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(MutableSlice.FromChar('a').GetBytes()' Is.EqualTo(new byte[] { 97 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(MutableSlice.FromChar('~').GetBytes()' Is.EqualTo(new byte[] { 126 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(MutableSlice.FromChar('\x7F').GetBytes()' Is.EqualTo(new byte[] { 127 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToInt24()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 127 }.AsSlice().ToInt24()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 127 }.AsSlice().ToInt24()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 127 }.AsSlice().ToInt24()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToInt24()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(4).ToInt24()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24BE()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24BE()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToInt24BE()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToInt24BE()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt24BE,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(4).ToInt24BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32,The following statement contains a magic number: Verify(256' "0001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32,The following statement contains a magic number: Verify(65536' "000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32,The following statement contains a magic number: Verify(16777215' "FFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32,The following statement contains a magic number: Verify(16777216' "00000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(0).GetBytes()' Is.EqualTo(new byte[4]));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(256).GetBytes()' Is.EqualTo(new byte[] { 0' 1' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 1' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(16777216).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 1 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 127' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 127' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-16777216).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(-16777216).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32(int.MinValue).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 128 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: int x = rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToInt32()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToInt32()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToInt32()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToInt32()' Is.EqualTo(1 << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(5).ToInt32()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32BE,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32BE,The following statement contains a magic number: Verify(256' "0100");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32BE,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32BE,The following statement contains a magic number: Verify(65536' "010000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32BE,The following statement contains a magic number: Verify(16777215' "FFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt32BE,The following statement contains a magic number: Verify(16777216' "01000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(0).GetBytes()' Is.EqualTo(new byte[4]));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(256).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 1' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(65536).GetBytes()' Is.EqualTo(new byte[] { 0' 1' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(16777216).GetBytes()' Is.EqualTo(new byte[] { 1' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 127' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 127' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-65536).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-65536).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-65536).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-16777216).GetBytes()' Is.EqualTo(new byte[] { 255' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(-16777216).GetBytes()' Is.EqualTo(new byte[] { 255' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(MutableSlice.FromFixed32BE(int.MinValue).GetBytes()' Is.EqualTo(new byte[] { 128' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: int x = rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed32BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(1 << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt32BE,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(5).ToInt32BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64,The following statement contains a magic number: Verify(256' "0001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64,The following statement contains a magic number: Verify(65536' "000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64,The following statement contains a magic number: Verify(16777215' "FFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64,The following statement contains a magic number: Verify(16777216' "00000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(0L' new byte[8]);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 8' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 16' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 24' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 32' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 40' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 48' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(1L << 56' new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 255' 127' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 255' 127' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Verify(long.MinValue' new byte[] { 0' 0' 0' 0' 0' 0' 0' 128 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: long x = (long)rnd.Next() * rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(256L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToInt64()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 32));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 40));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 48));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 56));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToInt64()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(127' "7F");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(128' "80");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 8' "0100");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 16' "010000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 24' "01000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 32' "0100000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 40' "010000000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 48' "01000000000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(1L << 56' "0100000000000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 8) - 1' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 16) - 1' "FFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 24) - 1' "FFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 32) - 1' "FFFFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 40) - 1' "FFFFFFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 48) - 1' "FFFFFFFFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify((1L << 56) - 1' "FFFFFFFFFFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(-2' "FFFFFFFFFFFFFFFE");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(-256' "FFFFFFFFFFFFFF00");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(-65536' "FFFFFFFFFFFF0000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromInt64BE,The following statement contains a magic number: Verify(-16777216' "FFFFFFFFFF000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(0L' new byte[8]);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 8' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 16' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 24' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 32' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 40' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 48' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 56' new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 127' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 127' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Verify(long.MinValue' new byte[] { 128' 0' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: long x = (long)rnd.Next() * rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixed64BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(256L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 32));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 40));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 48));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 56));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToInt64BE,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToInt64BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32,The following statement contains a magic number: Verify(256' "0001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32,The following statement contains a magic number: Verify(65536' "000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(0' new byte[4]);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(256' new byte[] { 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(65536' new byte[] { 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(16777216' new byte[] { 0' 0' 0' 1 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToUInt32()' Is.EqualTo(256U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToUInt32()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToUInt32()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToUInt32()' Is.EqualTo(1U << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(5).ToUInt32()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32BE,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32BE,The following statement contains a magic number: Verify(256' "0100");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32BE,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt32BE,The following statement contains a magic number: Verify(65536' "010000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(0' new byte[4]);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(256' new byte[] { 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(65536' new byte[] { 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(16777216' new byte[] { 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU32BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(256U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(1U << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt32BE,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(5).ToUInt32BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64,The following statement contains a magic number: Verify(255UL' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64,The following statement contains a magic number: Verify(256UL' "0001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64,The following statement contains a magic number: Verify(65536UL' "000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64,The following statement contains a magic number: Verify(16777215UL' "FFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64,The following statement contains a magic number: Verify(16777216UL' "00000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64,The following statement contains a magic number: Verify(16777216UL' "00000001");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(0UL' new byte[8]);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 8' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 16' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 24' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 32' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 40' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 48' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 56' new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64()' Is.EqualTo(255UL));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64()' Is.EqualTo(255UL));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(256UL));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(65535UL));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(65535UL));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(65535UL));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 32));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 40));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 48));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 56));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64,The following statement contains a magic number: Assert.That(() => MutateCount(x' 5).ToUInt64()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64BE,The following statement contains a magic number: Verify(255UL' "FF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64BE,The following statement contains a magic number: Verify(256UL' "0100");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64BE,The following statement contains a magic number: Verify(65536UL' "010000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64BE,The following statement contains a magic number: Verify(16777215UL' "FFFFFF");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64BE,The following statement contains a magic number: Verify(16777216UL' "01000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromUInt64BE,The following statement contains a magic number: Verify(16777216UL' "01000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(0UL' new byte[8]);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 8' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 16' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 24' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 32' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 40' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 48' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 56' new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromFixedU64BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(256L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 24));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 32));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 40));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 48));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 56));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUInt64BE,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToUInt64BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromSingle,The following statement contains a magic number: Verify(10f' "00002041");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromSingle,The following statement contains a magic number: Verify(0.1f' "CDCCCC3D");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromSingle,The following statement contains a magic number: Verify(0.5f' "0000003F");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromSingle,The following statement contains a magic number: Verify(1f / 3f' "ABAAAA3E");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The following statement contains a magic number: Verify("00002041"' 10f);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The following statement contains a magic number: Verify("CDCCCC3D"' 0.1f);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The following statement contains a magic number: Verify("0000003F"' 0.5f);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The following statement contains a magic number: Verify("ABAAAA3E"' 1f / 3f);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(5).ToSingle()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToSingle,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(3).ToSingle()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDouble,The following statement contains a magic number: Verify(10d' "0000000000002440");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDouble,The following statement contains a magic number: Verify(0.1d' "9A9999999999B93F");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDouble,The following statement contains a magic number: Verify(0.5d' "000000000000E03F");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDouble,The following statement contains a magic number: Verify(1d / 3d' "555555555555D53F");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The following statement contains a magic number: Verify("0000000000002440"' 10d);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The following statement contains a magic number: Verify("9A9999999999B93F"' 0.1d);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The following statement contains a magic number: Verify("000000000000E03F"' 0.5d);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The following statement contains a magic number: Verify("555555555555D53F"' 1d / 3d);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(9).ToDouble()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDouble,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(7).ToDouble()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDecimal,The following statement contains a magic number: Verify(10m' "00000000000000000A00000000000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDecimal,The following statement contains a magic number: Verify(0.1m' "00000100000000000100000000000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDecimal,The following statement contains a magic number: Verify(0.5m' "00000100000000000500000000000000");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_FromDecimal,The following statement contains a magic number: Verify(1m / 3m' "00001C00CA44C50A55555505CB00B714");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDecimal,The following statement contains a magic number: Verify("00000000000000000A00000000000000"' 10m);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDecimal,The following statement contains a magic number: Verify("00000100000000000100000000000000"' 0.1m);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDecimal,The following statement contains a magic number: Verify("00000100000000000500000000000000"' 0.5m);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDecimal,The following statement contains a magic number: Verify("00001C00CA44C50A55555505CB00B714"' 1m / 3m);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDecimal,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(15).ToDecimal()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToDecimal,The following statement contains a magic number: Assert.That(() => MutableSlice.Create(17).ToDecimal()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToGuid,The following statement contains a magic number: MutableSlice slice = MutableSlice.Create(16);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToGuid,The following statement contains a magic number: Assert.That(() => MutateCount(x' 17).ToGuid()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid128,The following statement contains a magic number: MutableSlice slice = MutableSlice.Create(16);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid128,The following statement contains a magic number: Assert.That(() => MutateCount(x' 17).ToUuid128()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid64,The following statement contains a magic number: uuid = MutableSlice.Create(8).ToUuid64();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_ToUuid64,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToUuid64()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsMutableSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsMutableSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsMutableSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsMutableSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsMutableSlice(0' 2);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsMutableSlice(0' 2);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsMutableSlice(0' 2);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsMutableSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equals_Slice,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_TwoByteArrayWithSameContentFromSameOriginalBufferShouldReturnTrue,The following statement contains a magic number: var a1 = new ArraySegment<byte>(origin' 0' 4);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_TwoByteArrayWithSameContentFromSameOriginalBufferShouldReturnTrue,The following statement contains a magic number: var a2 = new ArraySegment<byte>(origin' 4' 4);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_TwoByteArrayWithSameContentFromSameOriginalBufferShouldReturnTrue,The following statement contains a magic number: var a2 = new ArraySegment<byte>(origin' 4' 4);
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => good.Equals(MutateCount(evil' 666))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => good.Equals(MutateOffset(MutateCount(evil' 5)' -1))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => MutateCount(evil' 666).Equals(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => MutateOffset(MutateCount(evil' 5)' -1).Equals(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The following statement contains a magic number: Assert.That(MutableSlice.FromString("zabcz").Substring(1' 3).GetHashCode()' Is.EqualTo(MutableSlice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The following statement contains a magic number: Assert.That(MutableSlice.Comparer.Default.GetHashCode(MutableSlice.FromString("zabcz").Substring(1' 3))' Is.EqualTo(MutableSlice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array");
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Hash_Code,The following statement contains a magic number: Assert.That(() => MutateCount(x' 17).GetHashCode()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => good.CompareTo(MutateCount(evil' 666))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => good.CompareTo(MutateOffset(MutateCount(evil' 5)' -1))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => MutateCount(evil' 666).CompareTo(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => MutateOffset(MutateCount(evil' 5)' -1).CompareTo(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(12)' Is.EqualTo(Value("!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(13)' Is.EqualTo(MutableSlice.Empty));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(14)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(0' 5)' Is.EqualTo(Value("Hello")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 5)' Is.EqualTo(Value("World")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 5)' Is.EqualTo(Value("World")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 6)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 6)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(12' 1)' Is.EqualTo(Value("!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(13' 0)' Is.EqualTo(MutableSlice.Empty));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(7' 7)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(7' 7)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(13' 1)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(7' -1)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(-2)' Is.EqualTo(Value("d!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(-6)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(-13)' Is.EqualTo(Value("Hello' World!")));
Magic Number,Doxense.Memory.Tests,MutableSliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\MutableSliceFacts.cs,Test_MutableSlice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(-14)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(Slice.FromByte(42)' Slice.FromByte(42))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(Slice.FromByte(42)' Slice.FromByte(42))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(Slice.FromByte(42)' new byte[] { 42 }.AsMutableSlice())' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(Slice.FromByte(42)' new byte[] { 42 }.AsMutableSlice())' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(Slice.FromByte(42)' Slice.FromByte(77))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(Slice.FromByte(42)' Slice.FromByte(77))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(new byte[] { 65' 66' 67' 68 }.AsMutableSlice()' Slice.FromString("ABC"))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(0' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf1.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf1.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf1.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf1.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf2.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf2.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 2)' buf2.AsMutableSlice(4' 2))' Is.True);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf2.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf2.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Equals,The following statement contains a magic number: Assert.That(cmp.Equals(buf1.AsMutableSlice(0' 3)' buf2.AsMutableSlice(4' 3))' Is.False);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_GetHashCode_Should_Return_Same_As_Slice,The following statement contains a magic number: var rnd = new Random(123456);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_GetHashCode_Should_Return_Same_As_Slice,The following statement contains a magic number: var s = Slice.Random(rnd' rnd.Next(1' 16));
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_GetHashCode_Should_Return_Same_As_Slice,The following statement contains a magic number: i < 100
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.FromByte(42))' Is.Zero);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.FromByte(42))' Is.Zero);
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.FromByte(77))' Is.LessThan(0));
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.FromByte(77))' Is.LessThan(0));
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.FromByte(21))' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.FromByte(21))' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.Empty)' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,SliceComparerFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceComparerFacts.cs,Test_SliceComparer_Compare,The following statement contains a magic number: Assert.That(cmp.Compare(Slice.FromByte(42)' Slice.Nil)' Is.GreaterThan(0));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.Array.Length' Is.GreaterThanOrEqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytes()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_With_Content,The following statement contains a magic number: Assert.That(slice.GetBytesOrEmpty()' Is.EqualTo(new byte[3] { 65' 66' 67 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Pseudo_Random,The following statement contains a magic number: var slice = Slice.Random(rng' 16);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Pseudo_Random,The following statement contains a magic number: Assert.That(slice.Array.Length' Is.GreaterThanOrEqualTo(16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Pseudo_Random,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Pseudo_Random,The following statement contains a magic number: Assert.That(() => Slice.Random(default(Random)' 16)' Throws.ArgumentNullException);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The following statement contains a magic number: var slice = Slice.Random(rng' 16);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The following statement contains a magic number: Assert.That(slice.Array.Length' Is.GreaterThanOrEqualTo(16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The following statement contains a magic number: Assert.That(  					Slice.Random(rng' 256' nonZeroBytes: true).GetBytes()'  					Is.All.Not.EqualTo(0)  				);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The following statement contains a magic number: i < 256
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Cryptographic_Random,The following statement contains a magic number: Assert.That(() => Slice.Random(default(System.Security.Cryptography.RandomNumberGenerator)' 16)' Throws.ArgumentNullException);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAscii,The following statement contains a magic number: Assert.That(new byte[] { 0x41' 0x42' 0x43' 0x44' 0x45' 0x46 }.AsSlice(2' 3).ToStringAscii()' Is.EqualTo("CDE"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToStringAscii,The following statement contains a magic number: Assert.That(new byte[] { 0x41' 0x42' 0x43' 0x44' 0x45' 0x46 }.AsSlice(2' 3).ToStringAscii()' Is.EqualTo("CDE"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromByteString,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromString_Uses_UTF8,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(14));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(14));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8WithBom,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3 + 14));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromStringUtf8WithBom,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3 + 14));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(Slice.FromChar('0').GetBytes()' Is.EqualTo(new byte[] { 48 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(Slice.FromChar('A').GetBytes()' Is.EqualTo(new byte[] { 65 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(Slice.FromChar('a').GetBytes()' Is.EqualTo(new byte[] { 97 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(Slice.FromChar('~').GetBytes()' Is.EqualTo(new byte[] { 126 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromChar_Uses_UTF8,The following statement contains a magic number: Assert.That(Slice.FromChar('\x7F').GetBytes()' Is.EqualTo(new byte[] { 127 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToInt24()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 127 }.AsSlice().ToInt24()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 127 }.AsSlice().ToInt24()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 127 }.AsSlice().ToInt24()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToInt24()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 127 }.AsSlice().ToInt24()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24,The following statement contains a magic number: Assert.That(() => new byte[4].AsSlice().ToInt24()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24BE()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127 }.AsSlice().ToInt24BE()' Is.EqualTo(127));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt24BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToInt24BE()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(32767));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToInt24BE()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 23) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt24BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt24BE,The following statement contains a magic number: Assert.That(() => new byte[4].AsSlice().ToInt24BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32,The following statement contains a magic number: Verify(256' "0001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32,The following statement contains a magic number: Verify(65536' "000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32,The following statement contains a magic number: Verify(16777215' "FFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32,The following statement contains a magic number: Verify(16777216' "00000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(0).GetBytes()' Is.EqualTo(new byte[4]));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(256).GetBytes()' Is.EqualTo(new byte[] { 0' 1' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 1' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(16777216).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 1 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 127' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 127' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 127 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-256).GetBytes()' Is.EqualTo(new byte[] { 0' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-65536).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-16777216).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(-16777216).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(Slice.FromFixed32(int.MinValue).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 0' 128 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: int x = rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToInt32()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToInt32()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToInt32()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToInt32()' Is.EqualTo(1 << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt32()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32,The following statement contains a magic number: Assert.That(() => new byte[5].AsSlice().ToInt32()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32BE,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32BE,The following statement contains a magic number: Verify(256' "0100");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32BE,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32BE,The following statement contains a magic number: Verify(65536' "010000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32BE,The following statement contains a magic number: Verify(16777215' "FFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt32BE,The following statement contains a magic number: Verify(16777216' "01000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(0).GetBytes()' Is.EqualTo(new byte[4]));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(256).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 1' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(65536).GetBytes()' Is.EqualTo(new byte[] { 0' 1' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(16777216).GetBytes()' Is.EqualTo(new byte[] { 1' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 127' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(short.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 0' 0' 127' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(int.MaxValue).GetBytes()' Is.EqualTo(new byte[] { 127' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-1).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 255 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-256).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 255' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-65536).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-65536).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-65536).GetBytes()' Is.EqualTo(new byte[] { 255' 255' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-16777216).GetBytes()' Is.EqualTo(new byte[] { 255' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(-16777216).GetBytes()' Is.EqualTo(new byte[] { 255' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(Slice.FromFixed32BE(int.MinValue).GetBytes()' Is.EqualTo(new byte[] { 128' 0' 0' 0 }));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: int x = rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed32BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt32BE()' Is.EqualTo(255));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(256));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(65535));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(1 << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo((1 << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToInt32BE()' Is.EqualTo(1 << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt32BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt32BE,The following statement contains a magic number: Assert.That(() => new byte[5].AsSlice().ToInt32BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64,The following statement contains a magic number: Verify(256' "0001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64,The following statement contains a magic number: Verify(65536' "000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64,The following statement contains a magic number: Verify(16777215' "FFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64,The following statement contains a magic number: Verify(16777216' "00000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(0L' new byte[8]);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 8' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 16' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 24' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 32' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 40' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 48' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(1L << 56' new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 255' 127' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 255' 127' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-256L' new byte[] { 0' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-65536L' new byte[] { 0' 0' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-16777216L' new byte[] { 0' 0' 0' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Verify(long.MinValue' new byte[] { 0' 0' 0' 0' 0' 0' 0' 128 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: long x = (long)rnd.Next() * rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(256L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToInt64()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 32));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 40));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 48));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToInt64()' Is.EqualTo(1L << 56));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToInt64()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(127' "7F");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(128' "80");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 8' "0100");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 16' "010000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 24' "01000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 32' "0100000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 40' "010000000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 48' "01000000000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(1L << 56' "0100000000000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 8) - 1' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 16) - 1' "FFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 24) - 1' "FFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 32) - 1' "FFFFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 40) - 1' "FFFFFFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 48) - 1' "FFFFFFFFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify((1L << 56) - 1' "FFFFFFFFFFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(-2' "FFFFFFFFFFFFFFFE");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(-256' "FFFFFFFFFFFFFF00");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(-65536' "FFFFFFFFFFFF0000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromInt64BE,The following statement contains a magic number: Verify(-16777216' "FFFFFFFFFF000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(0L' new byte[8]);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 8' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 16' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 24' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 32' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 40' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 48' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(1L << 56' new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 127' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(short.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 127' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-1L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-256L' new byte[] { 255' 255' 255' 255' 255' 255' 255' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-65536L' new byte[] { 255' 255' 255' 255' 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-16777216L' new byte[] { 255' 255' 255' 255' 255' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(-4294967296L' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Verify(long.MinValue' new byte[] { 128' 0' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: long x = (long)rnd.Next() * rnd.Next() * (rnd.Next(2) == 0 ? +1 : -1);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixed64BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(256L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 32));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 40));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 48));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 }.AsSlice().ToInt64BE()' Is.EqualTo(1L << 56));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToInt64BE()' Is.EqualTo(-1L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToInt64BE,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToInt64BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32,The following statement contains a magic number: Verify(256' "0001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32,The following statement contains a magic number: Verify(65536' "000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(0' new byte[4]);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(256' new byte[] { 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(65536' new byte[] { 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(16777216' new byte[] { 0' 0' 0' 1 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToUInt32()' Is.EqualTo(256U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToUInt32()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToUInt32()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToUInt32()' Is.EqualTo(1U << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt32()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32,The following statement contains a magic number: Assert.That(() => new byte[5].AsSlice().ToUInt32()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32BE,The following statement contains a magic number: Verify(255' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32BE,The following statement contains a magic number: Verify(256' "0100");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32BE,The following statement contains a magic number: Verify(65535' "FFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt32BE,The following statement contains a magic number: Verify(65536' "010000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(0' new byte[4]);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(256' new byte[] { 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(65536' new byte[] { 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(16777216' new byte[] { 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU32BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(255U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(256U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(65535U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(1U << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((1U << 24) - 1U));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToUInt32BE()' Is.EqualTo(1U << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo((uint)int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt32BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt32BE,The following statement contains a magic number: Assert.That(() => new byte[5].AsSlice().ToUInt32BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64,The following statement contains a magic number: Verify(255UL' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64,The following statement contains a magic number: Verify(256UL' "0001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64,The following statement contains a magic number: Verify(65536UL' "000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64,The following statement contains a magic number: Verify(16777215UL' "FFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64,The following statement contains a magic number: Verify(16777216UL' "00000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64,The following statement contains a magic number: Verify(16777216UL' "00000001");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(0UL' new byte[8]);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 8' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 16' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 24' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 32' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 40' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 48' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(1UL << 56' new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 255' 255' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 255' 255' 255' 127' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 255' 255' 255' 255' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64()' Is.EqualTo(255UL));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64()' Is.EqualTo(255UL));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(256UL));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(65535UL));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(65535UL));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(65535UL));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 1' 0 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo((1UL << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 32));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 40));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 48));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 0' 0' 0' 0' 0' 0' 0' 1 }.AsSlice().ToUInt64()' Is.EqualTo(1UL << 56));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 }.AsSlice().ToUInt64()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64,The following statement contains a magic number: Assert.That(() => MutateCount(x' 5).ToUInt64()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64BE,The following statement contains a magic number: Verify(255UL' "FF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64BE,The following statement contains a magic number: Verify(256UL' "0100");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64BE,The following statement contains a magic number: Verify(65536UL' "010000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64BE,The following statement contains a magic number: Verify(16777215UL' "FFFFFF");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64BE,The following statement contains a magic number: Verify(16777216UL' "01000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromUInt64BE,The following statement contains a magic number: Verify(16777216UL' "01000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(0UL' new byte[8]);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 8' new byte[] { 0' 0' 0' 0' 0' 0' 1' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 16' new byte[] { 0' 0' 0' 0' 0' 1' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 24' new byte[] { 0' 0' 0' 0' 1' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 32' new byte[] { 0' 0' 0' 1' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 40' new byte[] { 0' 0' 1' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 48' new byte[] { 0' 1' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(1L << 56' new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ushort.MaxValue' new byte[] { 0' 0' 0' 0' 0' 0' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(int.MaxValue' new byte[] { 0' 0' 0' 0' 127' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(uint.MaxValue' new byte[] { 0' 0' 0' 0' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(long.MaxValue' new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Verify(ulong.MaxValue' new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 });
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: Assert.That(s.Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromFixedU64BE,The following statement contains a magic number: i < 1000
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(255L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(256L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(65535L));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 0' 1' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 16));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo((1L << 24) - 1));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 24));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 32));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 40));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 48));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 1' 0' 0' 0' 0' 0' 0' 0 }.AsSlice().ToUInt64BE()' Is.EqualTo(1L << 56));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(int.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(uint.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 127' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(long.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(new byte[] { 255' 255' 255' 255' 255' 255' 255' 255 }.AsSlice().ToUInt64BE()' Is.EqualTo(ulong.MaxValue));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUInt64BE,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToUInt64BE()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromSingle,The following statement contains a magic number: Verify(10f' "00002041");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromSingle,The following statement contains a magic number: Verify(0.1f' "CDCCCC3D");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromSingle,The following statement contains a magic number: Verify(0.5f' "0000003F");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromSingle,The following statement contains a magic number: Verify(1f / 3f' "ABAAAA3E");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The following statement contains a magic number: Verify("00002041"' 10f);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The following statement contains a magic number: Verify("CDCCCC3D"' 0.1f);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The following statement contains a magic number: Verify("0000003F"' 0.5f);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The following statement contains a magic number: Verify("ABAAAA3E"' 1f / 3f);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The following statement contains a magic number: Assert.That(() => new byte[5].AsSlice().ToSingle()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToSingle,The following statement contains a magic number: Assert.That(() => new byte[5].AsSlice().ToSingle()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDouble,The following statement contains a magic number: Verify(10d' "0000000000002440");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDouble,The following statement contains a magic number: Verify(0.1d' "9A9999999999B93F");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDouble,The following statement contains a magic number: Verify(0.5d' "000000000000E03F");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDouble,The following statement contains a magic number: Verify(1d / 3d' "555555555555D53F");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The following statement contains a magic number: Verify("0000000000002440"' 10d);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The following statement contains a magic number: Verify("9A9999999999B93F"' 0.1d);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The following statement contains a magic number: Verify("000000000000E03F"' 0.5d);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The following statement contains a magic number: Verify("555555555555D53F"' 1d / 3d);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The following statement contains a magic number: Assert.That(() => new byte[9].AsSlice().ToDouble()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDouble,The following statement contains a magic number: Assert.That(() => new byte[7].AsSlice().ToDouble()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDecimal,The following statement contains a magic number: Verify(10m' "00000000000000000A00000000000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDecimal,The following statement contains a magic number: Verify(0.1m' "00000100000000000100000000000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDecimal,The following statement contains a magic number: Verify(0.5m' "00000100000000000500000000000000");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_FromDecimal,The following statement contains a magic number: Verify(1m / 3m' "00001C00CA44C50A55555505CB00B714");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDecimal,The following statement contains a magic number: Verify("00000000000000000A00000000000000"' 10m);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDecimal,The following statement contains a magic number: Verify("00000100000000000100000000000000"' 0.1m);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDecimal,The following statement contains a magic number: Verify("00000100000000000500000000000000"' 0.5m);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDecimal,The following statement contains a magic number: Verify("00001C00CA44C50A55555505CB00B714"' 1m / 3m);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDecimal,The following statement contains a magic number: Assert.That(() => new byte[15].AsSlice().ToDecimal()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToDecimal,The following statement contains a magic number: Assert.That(() => new byte[17].AsSlice().ToDecimal()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToGuid,The following statement contains a magic number: var slice = new byte[16].AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToGuid,The following statement contains a magic number: Assert.That(() => MutateCount(x' 17).ToGuid()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid128,The following statement contains a magic number: var slice = new byte[16].AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid128,The following statement contains a magic number: Assert.That(() => MutateCount(x' 17).ToUuid128()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid64,The following statement contains a magic number: uuid = new byte[8].AsSlice().ToUuid64();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_ToUuid64,The following statement contains a magic number: Assert.That(() => MutateCount(x' 9).ToUuid64()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var a = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var b = new byte[] { 1' 2' 3 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var c = new byte[] { 0' 1' 2' 3' 4 }.AsSlice(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var x = new byte[] { 4' 5' 6 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var y = new byte[] { 1' 2' 3 }.AsSlice(0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equals_Slice,The following statement contains a magic number: var z = new byte[] { 1' 2' 3' 4 }.AsSlice();
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_TwoByteArrayWithSameContentFromSameOriginalBufferShouldReturnTrue,The following statement contains a magic number: var a1 = new ArraySegment<byte>(origin' 0' 4);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_TwoByteArrayWithSameContentFromSameOriginalBufferShouldReturnTrue,The following statement contains a magic number: var a2 = new ArraySegment<byte>(origin' 4' 4);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_TwoByteArrayWithSameContentFromSameOriginalBufferShouldReturnTrue,The following statement contains a magic number: var a2 = new ArraySegment<byte>(origin' 4' 4);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => good.Equals(MutateCount(evil' 666))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => good.Equals(MutateOffset(MutateCount(evil' 5)' -1))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => MutateCount(evil' 666).Equals(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Equality_Malformed,The following statement contains a magic number: Assert.That(() => MutateOffset(MutateCount(evil' 5)' -1).Equals(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The following statement contains a magic number: Assert.That(Slice.FromString("zabcz").Substring(1' 3).GetHashCode()' Is.EqualTo(Slice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The following statement contains a magic number: Assert.That(Slice.Comparer.Default.GetHashCode(Slice.FromString("zabcz").Substring(1' 3))' Is.EqualTo(Slice.FromString("abc").GetHashCode())' "Hashcode should not depend on the offset in the array");
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Hash_Code,The following statement contains a magic number: Assert.That(() => MutateCount(x' 17).GetHashCode()' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => good.CompareTo(MutateCount(evil' 666))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => good.CompareTo(MutateOffset(MutateCount(evil' 5)' -1))' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => MutateCount(evil' 666).CompareTo(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Comparison_Malformed,The following statement contains a magic number: Assert.That(() => MutateOffset(MutateCount(evil' 5)' -1).CompareTo(good)' Throws.InstanceOf<FormatException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(12)' Is.EqualTo(Value("!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(13)' Is.EqualTo(Slice.Empty));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(14)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(0' 5)' Is.EqualTo(Value("Hello")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 5)' Is.EqualTo(Value("World")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 5)' Is.EqualTo(Value("World")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 6)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(7' 6)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(12' 1)' Is.EqualTo(Value("!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(13' 0)' Is.EqualTo(Slice.Empty));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(7' 7)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(7' 7)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(13' 1)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(7' -1)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(-2)' Is.EqualTo(Value("d!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(-6)' Is.EqualTo(Value("World!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!").Substring(-13)' Is.EqualTo(Value("Hello' World!")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!").Substring(-14)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!") - 8' Is.EqualTo(Value("Hello")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!") - 12' Is.EqualTo(Value("H")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(Value("Hello' World!") - 13' Is.EqualTo(Slice.Empty));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Substring,The following statement contains a magic number: Assert.That(() => Value("Hello' World!") - 14' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Concat,The following statement contains a magic number: Assert.That(Slice.Concat(abc[0' 2]' c).ToUnicode()' Is.EqualTo("abc"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Concat,The following statement contains a magic number: Assert.That(Slice.Concat(a' abc[1' 3]).ToUnicode()' Is.EqualTo("abc"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Concat,The following statement contains a magic number: Assert.That(Slice.Concat(abc[0' 1]' abc[1' 2]' abc[2' 3]).ToUnicode()' Is.EqualTo("abc"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Concat,The following statement contains a magic number: Assert.That(Slice.Concat(abc[0' 1]' abc[1' 2]' abc[2' 3]).ToUnicode()' Is.EqualTo("abc"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Concat,The following statement contains a magic number: Assert.That(Slice.Concat(abc[0' 1]' abc[1' 2]' abc[2' 3]).ToUnicode()' Is.EqualTo("abc"));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Concat,The following statement contains a magic number: Assert.That(abc + 255' Is.EqualTo(Slice.FromByteString("abc\xff")));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Array,The following statement contains a magic number: Assert.That(Slice.Join(Slice.Empty' new[] { a' b' c }).Count' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Array,The following statement contains a magic number: Assert.That(Slice.Join(sep' new[] { a' b' c }).Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Array,The following statement contains a magic number: sep = Value("!<@>!").Substring(1' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Array,The following statement contains a magic number: Assert.That(Slice.Join(sep' new[] { a' b' c }).Count' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Enumerable,The following statement contains a magic number: var query = Enumerable.Range(1' 3).Select(c => Value(new string((char)(64 + c)' c)));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Enumerable,The following statement contains a magic number: var query = Enumerable.Range(1' 3).Select(c => Value(new string((char)(64 + c)' c)));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Enumerable,The following statement contains a magic number: Assert.That(Slice.Join(Slice.Empty' query).Count' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Enumerable,The following statement contains a magic number: Assert.That(Slice.Join(sep' query).Count' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Join_Enumerable,The following statement contains a magic number: Assert.That(Slice.Join(Slice.Empty' (IEnumerable<Slice>)arr).Count' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_JoinBytes,The following statement contains a magic number: joined = Slice.JoinBytes(sep' tokens' 0' 3);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_JoinBytes,The following statement contains a magic number: joined = Slice.JoinBytes(sep' tokens' 0' 2);
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_JoinBytes,The following statement contains a magic number: Assert.That(() => Slice.JoinBytes(sep' tokens' 0' 4)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_JoinBytes,The following statement contains a magic number: Assert.That(() => Slice.JoinBytes(sep' tokens' 3' 1)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceFacts.cs,Test_Slice_Split,The following statement contains a magic number: var sep = Value("!<@>!").Substring(1' 3);
Magic Number,Doxense.Memory.Tests,SliceStreamFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceStreamFacts.cs,Test_SliceStream_Basics,The following statement contains a magic number: Assert.That(() => stream.ReadTimeout = 123' Throws.InstanceOf<InvalidOperationException>());
Magic Number,Doxense.Memory.Tests,SliceStreamFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceStreamFacts.cs,Test_SliceStream_Read,The following statement contains a magic number: i < 100
Magic Number,Doxense.Memory.Tests,SliceStreamFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceStreamFacts.cs,Test_SliceListStream_Basics,The following statement contains a magic number: const int N = 65536;
Magic Number,Doxense.Memory.Tests,SliceStreamFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceStreamFacts.cs,Test_SliceListStream_Basics,The following statement contains a magic number: int sz = Math.Min(1 + rnd.Next(1024)' r);
Magic Number,Doxense.Memory.Tests,SliceStreamFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceStreamFacts.cs,Test_SliceListStream_Basics,The following statement contains a magic number: rnd.Next(2) == 1
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Clean,The following statement contains a magic number: var sb = new StringBuilder(value.Length + 8);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] {66}' "42");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] {65' 66' 67}' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] {65' 66' 67}' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] {65' 66' 67}' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' Slice.FromByte(66)' "42");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsSlice()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsSlice()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsSlice()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' MutableSlice.FromByte(66)' "42");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsMutableSlice()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsMutableSlice()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsMutableSlice()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMutableSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMutableSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMutableSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMutableSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMutableSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMutableSlice(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 66 }.AsMemory()' "42");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsMemory()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsMemory()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67 }.AsMemory()' "41 42 43");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMemory(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMemory(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMemory(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMemory(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMemory(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes,The following statement contains a magic number: PerformWriterTest(test' new byte[] { 65' 66' 67' 68' 69 }.AsMemory(1' 3)' "42 43 44");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteByte_Unsigned,The following statement contains a magic number: PerformWriterTest<byte>(test' 42' "2A");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteByte_Unsigned,The following statement contains a magic number: PerformWriterTest<byte>(test' 255' "FF");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteByte_Signed,The following statement contains a magic number: PerformWriterTest<sbyte>(test' 42' "2A");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 127U' "7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 128U' "80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 255U' "FF 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 256U' "80 02");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 16383U' "FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 16384U' "80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 2097151U' "FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 2097152U' "80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 268435455U' "FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint32,The following statement contains a magic number: PerformWriterTest(test' 268435456U' "80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 127UL' "7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 128UL' "80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 255UL' "FF 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 256UL' "80 02");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 16383UL' "FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 16384UL' "80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 2097151UL' "FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 2097152UL' "80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 268435455UL' "FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 268435456UL' "80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 34359738367UL' "FF FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 34359738368UL' "80 80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 4398046511103UL' "FF FF FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 4398046511104UL' "80 80 80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 562949953421311UL' "FF FF FF FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 562949953421312UL' "80 80 80 80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 72057594037927935UL' "FF FF FF FF FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 72057594037927936UL' "80 80 80 80 80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 9223372036854775807UL' "FF FF FF FF FF FF FF FF 7F");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarint64,The following statement contains a magic number: PerformWriterTest(test' 9223372036854775808UL' "80 80 80 80 80 80 80 80 80 01");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarBytes,The following statement contains a magic number: PerformWriterTest(test' Slice.FromByte(42)' "01 2A");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteVarBytes,The following statement contains a magic number: PerformWriterTest(test' Slice.FromByte(255)' "01 FF");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 9' "39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 10' "31 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 42' "34 32");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 99' "39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 100' "31 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 123' "31 32 33");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 999' "39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 1000' "31 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 1234' "31 32 33 34");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 9999' "39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 10000' "31 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 12345' "31 32 33 34 35");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 99999' "39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 100000' "31 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 123456' "31 32 33 34 35 36");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 999999' "39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 1000000' "31 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 1234567' "31 32 33 34 35 36 37");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 9999999' "39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 10000000' "31 30 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 12345678' "31 32 33 34 35 36 37 38");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 99999999' "39 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 100000000' "31 30 30 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 123456789' "31 32 33 34 35 36 37 38 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' 999999999' "39 39 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -9' "2D 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -10' "2D 31 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -42' "2D 34 32");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -99' "2D 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -100' "2D 31 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -123' "2D 31 32 33");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -999' "2D 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -1000' "2D 31 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -1234' "2D 31 32 33 34");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -9999' "2D 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -10000' "2D 31 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -12345' "2D 31 32 33 34 35");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -99999' "2D 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -100000' "2D 31 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -123456' "2D 31 32 33 34 35 36");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -999999' "2D 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -1000000' "2D 31 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -1234567' "2D 31 32 33 34 35 36 37");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -9999999' "2D 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -10000000' "2D 31 30 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -12345678' "2D 31 32 33 34 35 36 37 38");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -99999999' "2D 39 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -100000000' "2D 31 30 30 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -123456789' "2D 31 32 33 34 35 36 37 38 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Signed,The following statement contains a magic number: PerformWriterTest(test' -999999999' "2D 39 39 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 9' "39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 10' "31 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 42' "34 32");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 99' "39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 100' "31 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 123' "31 32 33");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 999' "39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 1000' "31 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 1234' "31 32 33 34");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 9999' "39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 10000' "31 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 12345' "31 32 33 34 35");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 99999' "39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 100000' "31 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 123456' "31 32 33 34 35 36");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 999999' "39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 1000000' "31 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 1234567' "31 32 33 34 35 36 37");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 9999999' "39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 10000000' "31 30 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 12345678' "31 32 33 34 35 36 37 38");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 99999999' "39 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 100000000' "31 30 30 30 30 30 30 30 30");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 123456789' "31 32 33 34 35 36 37 38 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBase10_Unsigned,The following statement contains a magic number: PerformWriterTest<uint>(test' 999999999' "39 39 39 39 39 39 39 39 39");
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[2]' Is.EqualTo(0xDD));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[3]' Is.EqualTo(0xE0));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[4]' Is.EqualTo(0xFE));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[5]' Is.EqualTo(0x0F));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[6]' Is.EqualTo(0xDC));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[7]' Is.EqualTo(0xBA));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-2]' Is.EqualTo(0xDC));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-3]' Is.EqualTo(0x0F));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-4]' Is.EqualTo(0xFE));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-5]' Is.EqualTo(0xE0));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-6]' Is.EqualTo(0xDD));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-7]' Is.EqualTo(0xF0));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(slice[-8]' Is.EqualTo(0x0D));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(() => slice[8]' Throws.InstanceOf<IndexOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Indexer,The following statement contains a magic number: Assert.That(() => slice[-9]' Throws.InstanceOf<IndexOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Flush,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Flush,The following statement contains a magic number: writer.Flush(5);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Flush,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(7));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Flush,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Flush,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Flush,The following statement contains a magic number: writer.Flush(7);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(5));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Skip(3)' Is.EqualTo(5));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Skip(3)' Is.EqualTo(5));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(8));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(13));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Skip(5' 42)' Is.EqualTo(13));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Skip(5' 42)' Is.EqualTo(13));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Skip(5' 42)' Is.EqualTo(13));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Skip,The following statement contains a magic number: Assert.That(writer.Position' Is.EqualTo(18));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_ToSlice,The following statement contains a magic number: var writer = new SliceWriter(64);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_ToSlice,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_ToSlice,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(15));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: var writer = new SliceWriter(64);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: slice = writer.Head(5);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(5));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: slice = writer.Head(12);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: Assert.That(() => writer.Head(13)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: slice = writer.Head(3);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: slice = writer.Head(15);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(15));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Head,The following statement contains a magic number: Assert.That(() => writer.Head(16)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: var writer = new SliceWriter(64);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: slice = writer.Tail(6);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(6));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: slice = writer.Tail(12);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(() => writer.Tail(13)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: slice = writer.Tail(3);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: slice = writer.Tail(15);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(15));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_Tail,The following statement contains a magic number: Assert.That(() => writer.Tail(16)' Throws.InstanceOf<ArgumentOutOfRangeException>());
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: var writer = new SliceWriter(64);
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(12));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(15));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Offset' Is.EqualTo(18));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes,The following statement contains a magic number: Assert.That(slice.Count' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes_Resize_Buffer,The following statement contains a magic number: var original = new byte[32];
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes_Resize_Buffer,The following statement contains a magic number: writer.WriteBytes(Slice.Repeat((byte)'a'' 24));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes_Resize_Buffer,The following statement contains a magic number: writer.WriteBytes(Slice.Repeat((byte)'b'' 24));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes_Resize_Buffer,The following statement contains a magic number: Assert.That(writer.Buffer.Length' Is.GreaterThanOrEqualTo(48));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_WriteBytes_Resize_Buffer,The following statement contains a magic number: Assert.That(writer.Buffer.Length' Is.GreaterThanOrEqualTo(33));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes_Resize_Buffer,The following statement contains a magic number: var original = new byte[32];
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes_Resize_Buffer,The following statement contains a magic number: var aaa = writer.AppendBytes(Slice.Repeat((byte) 'a'' 24));
Magic Number,Doxense.Memory.Tests,SliceWriterFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\SliceWriterFacts.cs,Test_AppendBytes_Resize_Buffer,The following statement contains a magic number: var bbb = writer.AppendBytes(Slice.Repeat((byte) 'b'' 24));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Empty,The following statement contains a magic number: Assert.That(Uuid128.Empty' Is.EqualTo(new Uuid128(new byte[16])));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Parse,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 });
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: Assert.That(uuid.ToByteArray()' Is.EqualTo(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 }));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_From_Bytes,The following statement contains a magic number: uuid = new Uuid128(new byte[16]);
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Equality,The following statement contains a magic number: Assert.That(Uuid128.Empty.Equals(new Uuid128(new byte[16]))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Increment,The following statement contains a magic number: var uuid = @base.Increment(256);
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_ToSlice,The following statement contains a magic number: Assert.That(uuid.ToSlice().Count' Is.EqualTo(16));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_ToSlice,The following statement contains a magic number: Assert.That(uuid.ToSlice().Array.Length' Is.GreaterThanOrEqualTo(16));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Version,The following statement contains a magic number: Assert.That(uuid.Version' Is.EqualTo(3));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Version,The following statement contains a magic number: Assert.That(uuid.Version' Is.EqualTo(4));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Version,The following statement contains a magic number: Assert.That(uuid.Version' Is.EqualTo(5));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: Assert.That(uuid.Timestamp' Is.EqualTo(135980228304000000L));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: Assert.That(uuid.ClockSequence' Is.EqualTo(12345));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: var epoch = new DateTime(1582' 10' 15' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: var epoch = new DateTime(1582' 10' 15' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: var epoch = new DateTime(1582' 10' 15' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: Assert.That(uuid.ClockSequence' Is.EqualTo(728));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Timestamp_And_ClockSequence,The following statement contains a magic number: Assert.That(uuid.ClockSequence' Is.EqualTo(10923));
Magic Number,Doxense.Memory.Tests,Uuid128Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid128Facts.cs,Test_Uuid_Ordered,The following statement contains a magic number: const int N = 1000;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Empty,The following statement contains a magic number: Assert.That(Uuid64.Empty' Is.EqualTo(Uuid64.Read(new byte[8])));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Uuid64 b = (long)42;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That(b.ToUInt64()' Is.EqualTo(42UL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That(c.ToUInt64()' Is.EqualTo(3735928559UL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That(d.ToUInt64()' Is.EqualTo(13464654573299691533UL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That(b.ToInt64()' Is.EqualTo(42L));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That(c.ToInt64()' Is.EqualTo(3735928559L));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That(d.ToInt64()' Is.EqualTo(-4982089500409860083L));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That((long)b' Is.EqualTo(42));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Casting,The following statement contains a magic number: Assert.That((ulong)d' Is.EqualTo(13464654573299691533UL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffee0ddf00d world!".AsSpan().Slice(6' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffee0ddf00d world!".AsSpan().Slice(6' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse("hello badc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: char* buf = stackalloc char[64];
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: var span = new Span<char>(buf' 64);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse(span.Slice(0' 17)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse(span.Slice(0' 16)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse(span.Slice(0' 19)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid64.Parse(span.Slice(0' 18)).ToUInt64()' Is.EqualTo(0xBADC0FFEE0DDF00DUL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: Assert.That(chars.Length' Is.EqualTo(62));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: i < 62
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: Assert.That(new Uuid64(j * 62 + i).ToString("C")' Is.EqualTo(prefix + chars[i]));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: Assert.That(new Uuid64(j * 62 + i).ToString("Z")' Is.EqualTo("000000000" + prefix + chars[i]));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: i < 62
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: j < 62
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var a = rnd.Next(2) == 0 ? 0 : rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var a = rnd.Next(2) == 0 ? 0 : rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var b = rnd.Next(2) == 0 ? 0 : rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var b = rnd.Next(2) == 0 ? 0 : rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var c = rnd.Next(2) == 0 ? 0 : rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var c = rnd.Next(2) == 0 ? 0 : rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: var d = rnd.Next(62);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: x += 62 * (ulong)b;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: x += 62 * 62 * (ulong)c;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: x += 62 * 62 * (ulong)c;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: x += 62 * 62 * 62 * (ulong)d;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: x += 62 * 62 * 62 * (ulong)d;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: x += 62 * 62 * 62 * (ulong)d;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: i < 100 * 1000
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: i < 100 * 1000
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: val *= 62;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: i <= 10
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: val += 61;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: val *= 62;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: i <= 10
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_ToString_Base62,The following statement contains a magic number: Assert.That(new Uuid64(255).ToString("C")' Is.EqualTo("47"));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("9").ToUInt64()' Is.EqualTo(9));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("A").ToUInt64()' Is.EqualTo(10));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("Z").ToUInt64()' Is.EqualTo(35));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("a").ToUInt64()' Is.EqualTo(36));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("z").ToUInt64()' Is.EqualTo(61));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("10").ToUInt64()' Is.EqualTo(62));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("zz").ToUInt64()' Is.EqualTo(3843));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("100").ToUInt64()' Is.EqualTo(3844));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("zzzzzzzzzz").ToUInt64()' Is.EqualTo(839299365868340223UL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Parse_Base62,The following statement contains a magic number: Assert.That(Uuid64.FromBase62("10000000000").ToUInt64()' Is.EqualTo(839299365868340224UL));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_NewUid,The following statement contains a magic number: const int N = 1 * 1000;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64RangomGenerator_NewUid,The following statement contains a magic number: const int N = 1 * 1000;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: var a = new Uuid64(42);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: var b = new Uuid64(42);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: var c = new Uuid64(40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: var c = new Uuid64(40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(a == 42L' Is.True' "a == 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(a == 42UL' Is.True' "a == 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(d == 42L' Is.False' "d != 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(d == 42UL' Is.False' "d != 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(a != 42L' Is.False' "a == 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(a != 42UL' Is.False' "a == 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(d != 42L' Is.True' "d != 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(d != 42UL' Is.True' "d != 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(a.Equals((object)42L)' Is.True' "a == 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(a.Equals((object)42UL)' Is.True' "a == 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(d.Equals((object)42L)' Is.False' "d != 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Equality_Check,The following statement contains a magic number: Assert.That(d.Equals((object)42UL)' Is.False' "d != 42");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Ordering,The following statement contains a magic number: var a = new Uuid64(42);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Ordering,The following statement contains a magic number: var a2 = new Uuid64(42);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Ordering,The following statement contains a magic number: var b = new Uuid64(77);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Ordering,The following statement contains a magic number: var uids = new Uuid64[100];
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42L' Is.EqualTo(new Uuid64(42)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42L' Is.EqualTo(new Uuid64(42)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42UL' Is.EqualTo(new Uuid64(42)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42UL' Is.EqualTo(new Uuid64(42)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid.ToInt64()' Is.EqualTo(2));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid64(uid.ToInt64() + 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid64(uid.ToInt64() + 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid64(uid.ToUInt64() + 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid64(uid.ToUInt64() + 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid64(uid.ToInt64() - 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid64(uid.ToInt64() - 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid64(uid.ToUInt64() - 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid64(uid.ToUInt64() - 123)));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid64.Read(buf.AsSpan(4' 8))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid64.Read(buf.AsSpan(4' 8))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid64.Read(buf.AsSlice(4' 8))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid64.Read(buf.AsSlice(4' 8))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid64.Read(buf.AsSlice(4' 8).GetBytesOrEmpty())' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid64.Read(buf.AsSlice(4' 8).GetBytesOrEmpty())' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: var scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(4));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(4' 8));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(4' 8));
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_UUid64_WriteTo,The following statement contains a magic number: Assert.That(() => original.WriteTo(scratch.Span.Slice(0' 7))' Throws.InstanceOf<ArgumentException>()' "Target buffer is too small");
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: var scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(0' 8))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4' 8))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4' 8))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid64Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid64Facts.cs,Test_Uuid64_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(0' 7))' Is.False' "Target buffer is too small");
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Empty,The following statement contains a magic number: Assert.That(Uuid80.Empty' Is.EqualTo(Uuid80.Read(new byte[10])));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcd-badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcd-badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcdbadc0ffee0ddf00d world!".AsSpan().Slice(6' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcdbadc0ffee0ddf00d world!".AsSpan().Slice(6' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcd-badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcd-badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcdbadc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse("hello abcdbadc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: char* buf = stackalloc char[64];
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: var span = new Span<char>(buf' 64);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse(span.Slice(0' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse(span.Slice(0' 20))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse(span.Slice(0' 24))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid80.Parse(span.Slice(0' 22))' Is.EqualTo(new Uuid80(0xABCD' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var a = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var a = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var b = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var b = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var c = new Uuid80(123' 40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var c = new Uuid80(123' 40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var c = new Uuid80(123' 40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var d = new Uuid80(123' 0xDEADBEEF);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var e = new Uuid80(124' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Equality_Check,The following statement contains a magic number: var e = new Uuid80(124' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var a = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var a = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var a2 = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var a2 = new Uuid80(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var b = new Uuid80(123' 77);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var b = new Uuid80(123' 77);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var c = new Uuid80(124' 41);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var c = new Uuid80(124' 41);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Ordering,The following statement contains a magic number: var uids = new Uuid80[100];
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42L' Is.EqualTo(new Uuid80(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42L' Is.EqualTo(new Uuid80(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42UL' Is.EqualTo(new Uuid80(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42UL' Is.EqualTo(new Uuid80(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: uid = new Uuid80(42' ulong.MaxValue - 99);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: uid = new Uuid80(42' ulong.MaxValue - 99);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid80(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid80(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid80(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid80(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid80(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid80(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: uid = new Uuid80(42' 99);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: uid = new Uuid80(42' 99);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid80(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid80(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid80(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid80(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid80(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid80(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid80.Read(buf.AsSlice(4' 10))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid80.Read(buf.AsSlice(4' 10))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid80.Read(buf.AsSlice(4' 10).GetBytesOrEmpty())' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid80.Read(buf.AsSlice(4' 10).GetBytesOrEmpty())' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid80.Read(buf.AsSpan(4' 10))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid80.Read(buf.AsSpan(4' 10))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: var scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Substring(0' 10).Span);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Substring(4).Span);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Substring(4' 10).Span);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Substring(4' 10).Span);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_WriteTo,The following statement contains a magic number: Assert.That(() => original.WriteTo(scratch.Substring(0' 9).Span)' Throws.InstanceOf<ArgumentException>()' "Target buffer is too small");
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: var scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(0' 10))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4' 10))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4' 10))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid80Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid80Facts.cs,Test_Uuid80_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Substring(0' 9).Span)' Is.False' "Target buffer is too small");
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Empty,The following statement contains a magic number: Assert.That(Uuid96.Empty' Is.EqualTo(Uuid96.Read(new byte[12])));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdef-badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdef-badc0ffe-e0ddf00d world!".AsSpan().Slice(6' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdefbadc0ffee0ddf00d world!".AsSpan().Slice(6' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdefbadc0ffee0ddf00d world!".AsSpan().Slice(6' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdef-badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdef-badc0ffe-e0ddf00d world!".ToCharArray().AsSpan().Slice(6' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdefbadc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse("hello 89abcdefbadc0ffee0ddf00d world!".ToCharArray().AsSpan().Slice(6' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Span<char> span = stackalloc char[64];
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse(span.Slice(0' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse(span.Slice(0' 24))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse(span.Slice(0' 28))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Parse_Hexa16,The following statement contains a magic number: Assert.That(Uuid96.Parse(span.Slice(0' 26))' Is.EqualTo(new Uuid96(0x89ABCDEF' 0xBADC0FFEE0DDF00DUL)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var a = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var a = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var b = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var b = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var c = new Uuid96(123' 40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var c = new Uuid96(123' 40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var c = new Uuid96(123' 40) + 2;
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var d = new Uuid96(123' 0xDEADBEEF);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var e = new Uuid96(124' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Equality_Check,The following statement contains a magic number: var e = new Uuid96(124' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var a = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var a = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var a2 = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var a2 = new Uuid96(123' 42);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var b = new Uuid96(123' 77);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var b = new Uuid96(123' 77);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var c = new Uuid96(124' 41);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var c = new Uuid96(124' 41);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Ordering,The following statement contains a magic number: var uids = new Uuid96[100];
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42L' Is.EqualTo(new Uuid96(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42L' Is.EqualTo(new Uuid96(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42UL' Is.EqualTo(new Uuid96(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 42UL' Is.EqualTo(new Uuid96(0' 42)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: uid = new Uuid96(42' ulong.MaxValue - 99);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: uid = new Uuid96(42' ulong.MaxValue - 99);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid96(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid96(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123L' Is.EqualTo(new Uuid96(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid96(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid96(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid + 123UL' Is.EqualTo(new Uuid96(43' 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: uid = new Uuid96(42' 99);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: uid = new Uuid96(42' 99);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid96(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid96(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123L' Is.EqualTo(new Uuid96(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid96(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid96(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Arithmetic,The following statement contains a magic number: Assert.That(uid - 123UL' Is.EqualTo(new Uuid96(41' ulong.MaxValue - 23)));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(buf.AsSlice(4' 12))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(buf.AsSlice(4' 12))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(buf.AsSlice(4' 12).GetBytesOrEmpty())' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(buf.AsSlice(4' 12).GetBytesOrEmpty())' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(buf.AsSpan(4' 12))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(buf.AsSpan(4' 12))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_Read_From_Bytes,The following statement contains a magic number: Assert.That(Uuid96.Read(new ReadOnlySpan<byte>(ptr' 12))' Is.EqualTo(original));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: var scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(0' 12));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(4));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(4' 12));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: original.WriteTo(scratch.Span.Slice(4' 12));
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 16);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_WriteTo,The following statement contains a magic number: Assert.That(() => original.WriteTo(scratch.Span.Slice(0' 11))' Throws.InstanceOf<ArgumentException>()' "Target buffer is too small");
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: var scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(0' 12))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4' 12))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(4' 12))' Is.True);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: scratch = MutableSlice.Repeat(0xAA' 20);
Magic Number,Doxense.Memory.Tests,Uuid96Facts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Utils\Uuid96Facts.cs,Test_Uuid96_TryWriteTo,The following statement contains a magic number: Assert.That(original.TryWriteTo(scratch.Span.Slice(0' 11))' Is.False' "Target buffer is too small");
Duplicate Code,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_Producer_Single,The method contains a code clone-set at the following line numbers (starting from the method definition): ((34' 58)' (63' 87))
Missing Default,FoundationDB.Client.Tests,TransactionFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\TransactionFacts.cs,Test_VeryBadPractice_Future_Fuzzer,The following switch statement is missing a default case: switch (rnd.Next(10))  					{  						case 0:  						{ // start a new transaction  							sb.Append('T');  							var tr = db.BeginTransaction(FdbTransactionMode.Default' this.Cancellation);  							alive.Add(tr);  							break;  						}  						case 1:  						{ // drop a random transaction  							if (alive.Count == 0) continue;  							sb.Append('L');  							int p = rnd.Next(alive.Count);    							alive.RemoveAt(p);  							//no dispose  							break;  						}  						case 2:  						{ // dispose a random transaction  							if (alive.Count == 0) continue;  							sb.Append('D');  							int p = rnd.Next(alive.Count);    							var tr = alive[p];  							tr.Dispose();  							alive.RemoveAt(p);  							break;  						}  						case 3:  						{ // GC!  							sb.Append('C');  							var tr = db.BeginTransaction(FdbTransactionMode.ReadOnly' this.Cancellation);  							alive.Add(tr);  							_ = await tr.GetReadVersionAsync();  							break;  						}    						case 4:  						case 5:  						case 6:  						{ // read a random value from a random transaction  							sb.Append('G');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							try  							{  								_ = await tr.GetAsync(location.Keys.Encode(x));  							}  							catch (FdbException)  							{  								sb.Append('!');  							}  							break;  						}  						case 7:  						case 8:  						case 9:  						{ // read a random value' but drop the task  							sb.Append('g');  							if (alive.Count == 0) break;  							int p = rnd.Next(alive.Count);  							var tr = alive[p];    							int x = rnd.Next(R);  							_ = tr.GetAsync(location.Keys.Encode(x)).ContinueWith((_) => sb.Append('!') /*BUGBUG: locking ?*/' TaskContinuationOptions.NotOnRanToCompletion);  							// => t is not stored  							break;  						}    					}
Missing Default,Doxense.Collections.Tuples.Tests,TupleFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Tuples\TupleFacts.cs,Test_Randomized_Splices,The following switch statement is missing a default case: switch (rnd.Next(6))  				{  					case 0:  					{ // [:+rnd]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' x' len));  						break;  					}  					case 1:  					{ // [+rnd:]  						int x = rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(x' int.MaxValue' len));  						break;  					}  					case 2:  					{ // [:-rnd]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[:" + x.ToString() + "]"' tuple[null' x]' GetRange(0' len + x' len));  						break;  					}  					case 3:  					{ // [-rnd:]  						int x = -1 - rnd.Next(len);  						VerifyTuple(prefix + "[" + x.ToString() + ":]"' tuple[x' null]' GetRange(len + x' int.MaxValue' len));  						break;  					}  					case 4:  					{ // [rnd:rnd]  						int x = rnd.Next(len);  						int y;  						do { y = rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(x' y' len));  						break;  					}  					case 5:  					{ // [-rnd:-rnd]  						int x = -1 - rnd.Next(len);  						int y;  						do { y = -1 - rnd.Next(len); } while (y < x);  						VerifyTuple(prefix + " [" + x.ToString() + ":" + y.ToString() + "]"' tuple[x' y]' GetRange(len + x' len + y' len));  						break;  					}  				}
Missing Default,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following switch statement is missing a default case: switch (rnd.Next(6))  				{  					case 0:  					{ // keep about 50% of the items  						query = query.Where(x => x > 0);  						reference = reference.Where(x => x > 0);  						witness = witness.Where(x => x > 0);  						break;  					}  					case 1:  					{ // keep no items at all  						query = query.Where(x => false);  						reference = reference.Where(x => false);  						witness = witness.Where(x => false);  						break;  					}  					case 2:  					{ // keep only one item  						query = query.Where(x => x == 42);  						reference = reference.Where(x => x == 42);  						witness = witness.Where(x => x == 42);  						break;  					}  				}
Missing Default,Doxense.Linq.Tests,AsyncEnumerableFacts,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests\Linq\AsyncEnumerableFacts.cs,Test_AsyncLinq_vs_LinqToObject,The following switch statement is missing a default case: switch(rnd.Next(10))  				{  					case 0:  					{ // only take a few  						query = query.Take(3);  						reference = reference.Take(3);  						witness = witness.Take(3);  						break;  					}  					case 1:  					{ // only take 1  						query = query.Take(1);  						reference = reference.Take(1);  						witness = witness.Take(1);  						break;  					}  				}
