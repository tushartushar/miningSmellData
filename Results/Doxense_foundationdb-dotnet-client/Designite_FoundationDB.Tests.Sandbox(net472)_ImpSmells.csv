Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,Cyclomatic complexity of the method is 10
Long Parameter List,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The method has 5 parameters. Parameters: db' k' N' size' ct
Long Parameter List,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The method has 6 parameters. Parameters: db' N' K' B' ct' instrumented
Long Parameter List,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchMergeSortAsync,The method has 5 parameters. Parameters: db' N' K' B' ct
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The length of the statement  "			NATIVE_PATH = null; // set this to the path of the 'bin' folder in your fdb install' like @"C:\Program Files\foundationdb\bin" " is 126.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The length of the statement  "						if (param.Length >= 2 && param[0] == '\"' && param[param.Length - 1] == '\"') param = param.Substring(1' param.Length - 2); " is 123.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchInsertSmallKeysAsync,The length of the statement  "			Console.WriteLine($"[{Thread.CurrentThread.ManagedThreadId}] Took {min.TotalSeconds.ToString("N3"' CultureInfo.InvariantCulture)} sec to insert {N} {size}-bytes items (min={FormatTimeMicro(min.TotalMilliseconds / N)}/write' avg={FormatTimeMicro(avg)}/write)"); " is 260.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The length of the statement  "						//Console.WriteLine($"> [{offset}] packaged {n:N0} keys ({trans.Size:N0} bytes) in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}"); " is 132.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The length of the statement  "						//Console.WriteLine($"> [{offset}] committed {n} keys ({trans.Size:N0} bytes) in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}"); " is 130.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The length of the statement  "			Console.WriteLine($"* Total: {FormatTimeMilli(sw.Elapsed.TotalMilliseconds)}' {FormatTimeMicro(sw.Elapsed.TotalMilliseconds / N)} / write' {FormatThroughput(totalPayloadSize' sw.Elapsed.TotalSeconds)}' {N / sw.Elapsed.TotalSeconds:N0} write/sec"); " is 247.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchSerialWriteAsync,The length of the statement  "			Console.WriteLine($"Took {sw.Elapsed.TotalSeconds:N3} sec to read {N:N0} items ({FormatTimeMicro(sw.Elapsed.TotalMilliseconds / N)}/read' {N/sw.Elapsed.TotalSeconds:N0} read/sec)"); " is 181.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchSerialReadAsync,The length of the statement  "			Console.WriteLine($"Took {sw.Elapsed.TotalSeconds:N3} sec to read {N:N0} items ({FormatTimeMicro(sw.Elapsed.TotalMilliseconds / N)}/read' {N / sw.Elapsed.TotalSeconds:N0} read/sec)"); " is 183.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentReadAsync,The length of the statement  "			Console.WriteLine($"Took {sw.Elapsed.TotalSeconds:N3} sec to read {N} items ({FormatTimeMicro(sw.Elapsed.TotalMilliseconds / keys.Length)}/read' {N / sw.Elapsed.TotalSeconds:N0} read/sec)"); " is 190.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentReadAsync,The length of the statement  "			Console.WriteLine($"Took {sw.Elapsed.TotalSeconds:N3} sec to read {keys.Length:N0} items ({FormatTimeMicro(sw.Elapsed.TotalMilliseconds / keys.Length)}/read' {N / sw.Elapsed.TotalSeconds:N0} read/sec)"); " is 203.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchClearAsync,The length of the statement  "			Console.WriteLine($"Took {sw.Elapsed.TotalSeconds:N3} sec to clear {N:N0} items ({FormatTimeMicro(sw.Elapsed.TotalMilliseconds / N)}/write' {N / sw.Elapsed.TotalSeconds:N0} clear/sec)"); " is 186.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateSameKeyLotsOfTimesAsync,The length of the statement  "			Console.WriteLine($"\rTook {update.Elapsed.TotalSeconds:N3} sec to fill a byte[{N:N0}] one by one ({FormatTimeMicro(update.Elapsed.TotalMilliseconds / N)}/update' {N / update.Elapsed.TotalSeconds:N0} update/sec)"); " is 214.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateLotsOfKeysAsync,The length of the statement  "			Console.WriteLine($"Took {sw.Elapsed.TotalSeconds:N3} sec to patch one byte in {N:N0} lists ({FormatTimeMicro(sw.Elapsed.TotalMilliseconds / N)} /update' {N / sw.Elapsed.TotalSeconds:N0} update/sec)"); " is 201.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The length of the statement  "							//Console.WriteLine("  Commiting batch (" + tr.Size.ToString("N0"' CultureInfo.InvariantCulture) + " bytes) " + z + " keys"); " is 125.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The length of the statement  "			Console.WriteLine($"Committed {batches:N0} batches in {FormatTimeMilli(insert.Elapsed.TotalMilliseconds)} ({FormatTimeMilli(insert.Elapsed.TotalMilliseconds / batches)} / batch' {FormatTimeMicro(insert.Elapsed.TotalMilliseconds / N)} / item)"); " is 244.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The length of the statement  "			Console.WriteLine($"Throughput {FormatThroughput(bytes' insert.Elapsed.TotalSeconds)}' {N / insert.Elapsed.TotalSeconds:N0} write/sec"); " is 136.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The length of the statement  "					sb.Append(kvp.Key.ToString()).Append(';').Append((kvp.Key + kvp.Value).ToString()).Append(';').Append(kvp.Value.ToString()).AppendLine(); " is 137.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The length of the statement  "				Console.WriteLine($"Took {FormatTimeMilli(sw.Elapsed.TotalMilliseconds)} to get {items.Count.ToString("N0"' CultureInfo.InvariantCulture)} results ({items.Count / sw.Elapsed.TotalSeconds:N0} keys/sec)"); " is 203.
Long Statement,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchMergeSortAsync,The length of the statement  "				Console.WriteLine($"Took {FormatTimeMilli(sw.Elapsed.TotalMilliseconds)} to merge sort {results.Count:N0} results from {K} lists of {N} items each"); " is 149.
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The following statement contains a magic number: N = 10 * 1000;
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The following statement contains a magic number: N = 10 * 1000;
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The following statement contains a magic number: param = param.Substring(1' param.Length - 2);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The following statement contains a magic number: param.Length >= 2 && param[0] == '\"' && param[param.Length - 1] == '\"'
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The following statement contains a magic number: IntPtr.Size == 4
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: var settings = new FdbConnectionOptions()  				{  					ClusterFile = CLUSTER_FILE'  					GlobalSpace = KeySubspace.FromKey(Slice.FromByte(253))'  				};
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N' 60 * 4' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N' 60 * 4' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N' 512' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N / 5' 4096' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N / 5' 4096' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N / 100' 65536' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' N / 100' 65536' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchInsertSmallKeysAsync(db' 20' 100_000' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 1'    100' 512' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 1'    100' 512' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 1'  1_000' 512' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 1' 10_000' 512' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 1' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 2' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 2' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 4' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 4' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 8' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 8' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 16' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchConcurrentInsert(db' 16' N' 16' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchUpdateSameKeyLotsOfTimesAsync(db' 1000' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchUpdateLotsOfKeysAsync(db' 1000' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchBulkInsertThenBulkReadAsync(db'   100_000'  50' 128' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchBulkInsertThenBulkReadAsync(db'   100_000'  50' 128' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchBulkInsertThenBulkReadAsync(db'   100_000' 128'  50' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchBulkInsertThenBulkReadAsync(db'   100_000' 128'  50' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchBulkInsertThenBulkReadAsync(db' 1_000_000'  50' 128' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchBulkInsertThenBulkReadAsync(db' 1_000_000'  50' 128' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100'     3'  20' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100'     3'  20' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100'     3'  20' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db' 1_000'    10' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db' 1_000'    10' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100'   100' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100'   100' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100'   100' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100' 1_000' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,MainAsync,The following statement contains a magic number: await BenchMergeSortAsync(db'   100' 1_000' 100' ct);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,HelloWorld,The following statement contains a magic number: tr.Set(TuPack.EncodeKey("Test"' 123)' Slice.FromString("Hello World!"));
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,HelloWorld,The following statement contains a magic number: tr.Set(TuPack.EncodeKey("Test"' 456)' Slice.FromInt64(DateTime.UtcNow.Ticks));
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,TestSimpleTransactionAsync,The following statement contains a magic number: var data = new byte[512];
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,TestSimpleTransactionAsync,The following statement contains a magic number: new Random(1234).NextBytes(data);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchInsertSmallKeysAsync,The following statement contains a magic number: tmp[1] = (byte)(i >> 8);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchInsertSmallKeysAsync,The following statement contains a magic number: k <= 4
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The following statement contains a magic number: tasks.Add(Task.Factory.StartNew(async () =>  				{  					var rnd = new Random(1234567 * j);  					var tmp = new byte[size];  					rnd.NextBytes(tmp);    					// block until all threads are ready  					sem.Wait();    					var x = Stopwatch.StartNew();  					using (var trans = db.BeginTransaction(ct))  					{  						x.Stop();  						//Console.WriteLine($"> [{offset}] got transaction in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}");    						// package the keys...  						x.Restart();  						for (int i = 0; i < n; i++)  						{  							// change the value a little bit  							tmp[0] = (byte)i;  							tmp[1] = (byte)(i >> 8);    							// ("Batch"' batch_index' i) = [..random..]  							trans.Set(subspace[Slice.FromFixed64BE(i)]' tmp.AsSlice());  						}  						x.Stop();  						//Console.WriteLine($"> [{offset}] packaged {n:N0} keys ({trans.Size:N0} bytes) in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}");    						// commit the transaction  						x.Restart();  						await trans.CommitAsync();  						x.Stop();  						//Console.WriteLine($"> [{offset}] committed {n} keys ({trans.Size:N0} bytes) in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}");    						Interlocked.Add(ref totalPayloadSize' trans.Size);  					}    				}' TaskCreationOptions.LongRunning).Unwrap());
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The following statement contains a magic number: tasks.Add(Task.Factory.StartNew(async () =>  				{  					var rnd = new Random(1234567 * j);  					var tmp = new byte[size];  					rnd.NextBytes(tmp);    					// block until all threads are ready  					sem.Wait();    					var x = Stopwatch.StartNew();  					using (var trans = db.BeginTransaction(ct))  					{  						x.Stop();  						//Console.WriteLine($"> [{offset}] got transaction in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}");    						// package the keys...  						x.Restart();  						for (int i = 0; i < n; i++)  						{  							// change the value a little bit  							tmp[0] = (byte)i;  							tmp[1] = (byte)(i >> 8);    							// ("Batch"' batch_index' i) = [..random..]  							trans.Set(subspace[Slice.FromFixed64BE(i)]' tmp.AsSlice());  						}  						x.Stop();  						//Console.WriteLine($"> [{offset}] packaged {n:N0} keys ({trans.Size:N0} bytes) in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}");    						// commit the transaction  						x.Restart();  						await trans.CommitAsync();  						x.Stop();  						//Console.WriteLine($"> [{offset}] committed {n} keys ({trans.Size:N0} bytes) in {FormatTimeMilli(x.Elapsed.TotalMilliseconds)}");    						Interlocked.Add(ref totalPayloadSize' trans.Size);  					}    				}' TaskCreationOptions.LongRunning).Unwrap());
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchConcurrentInsert,The following statement contains a magic number: await Task.Delay(100);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchSerialWriteAsync,The following statement contains a magic number: trans.Size > 100 * 1024
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchSerialWriteAsync,The following statement contains a magic number: trans.Size > 100 * 1024
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchSerialReadAsync,The following statement contains a magic number: i < N && i < k + 1000
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateSameKeyLotsOfTimesAsync,The following statement contains a magic number: i % 100 == 0
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateLotsOfKeysAsync,The following statement contains a magic number: var segment = new byte[60];
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateLotsOfKeysAsync,The following statement contains a magic number: segment[i] = (byte) rnd.Next(256);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateLotsOfKeysAsync,The following statement contains a magic number: k < i + 1000 && k < N
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchUpdateLotsOfKeysAsync,The following statement contains a magic number: list[(list.Length >> 1) + 1] = (byte) rnd.Next(256);
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,BenchBulkInsertThenBulkReadAsync,The following statement contains a magic number: tasks.Add(Task.Run(async () =>  				{  					foreach (var chunk in worker)  					{  						using (var tr = db.BeginTransaction(ct))  						{  							int z = 0;  							foreach (int i in Enumerable.Range(chunk.Key' chunk.Value))  							{  								tr.Set(subspace.Keys.Encode(i)' Slice.Zero(256));  								z++;  							}    							//Console.Write("#");  							//Console.WriteLine("  Commiting batch (" + tr.Size.ToString("N0"' CultureInfo.InvariantCulture) + " bytes) " + z + " keys");  							var localStart = start.Elapsed.TotalSeconds;  							await tr.CommitAsync();  							var localDuration = start.Elapsed.TotalSeconds - localStart;  							if (instrumented)  							{  								lock (timings) { timings.Add(new KeyValuePair<double' double>(localStart' localDuration)); }  							}  							Interlocked.Increment(ref batches);  							Interlocked.Add(ref bytes' tr.Size);  						}    					}  				}' ct));
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatTimeMicro,The following statement contains a magic number: return (ms * 1E3).ToString("N1"' CultureInfo.InvariantCulture) + " µs";
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatThroughput,The following statement contains a magic number: bw < 1024
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatThroughput,The following statement contains a magic number: return (bw / 1024).ToString("N1"' CultureInfo.InvariantCulture) + " kB/sec";
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatThroughput,The following statement contains a magic number: bw < (1024 * 1024)
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatThroughput,The following statement contains a magic number: bw < (1024 * 1024)
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatThroughput,The following statement contains a magic number: return (bw / (1024 * 1024)).ToString("N3"' CultureInfo.InvariantCulture) + " MB/sec";
Magic Number,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,FormatThroughput,The following statement contains a magic number: return (bw / (1024 * 1024)).ToString("N3"' CultureInfo.InvariantCulture) + " MB/sec";
Missing Default,FoundationDB.Tests.Sandbox,Program,D:\research\architectureSmells\repos\Doxense_foundationdb-dotnet-client\FoundationDB.Tests.Sandbox\Program.cs,Main,The following switch statement is missing a default case: switch (cmd.ToLowerInvariant())  					{  						case "cluster":  						{  							CLUSTER_FILE = param;  							break;  						}  						case "no-warn":  						{  							WARNING = false;  							break;  						}  						case "subspace":  						{  							SUBSPACE = param;  							break;  						}  						case "help":  						{  							DisplayHelp();  							return;  						}  					}
