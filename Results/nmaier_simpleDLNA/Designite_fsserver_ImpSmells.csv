Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NMaier.SimpleDlna.FileMediaServer,AudioFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\AudioFile.cs,SetProperties,Cyclomatic complexity of the method is 10
Long Statement,NMaier.SimpleDlna.FileMediaServer,FileStore,C:\repos\nmaier_simpleDLNA\fsserver\FileStore.cs,SetupDatabase,The length of the statement  "            "CREATE TABLE IF NOT EXISTS store (key TEXT PRIMARY KEY ON CONFLICT REPLACE' size INT' time INT' data BINARY' cover BINARY)"; " is 125.
Empty Catch Block,NMaier.SimpleDlna.FileMediaServer,FileStore,C:\repos\nmaier_simpleDLNA\fsserver\FileStore.cs,MaybeStoreFile,The method has an empty catch block.
Empty Catch Block,NMaier.SimpleDlna.FileMediaServer,AudioFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\AudioFile.cs,AudioFile,The method has an empty catch block.
Empty Catch Block,NMaier.SimpleDlna.FileMediaServer,FileStreamCache,C:\repos\nmaier_simpleDLNA\fsserver\Files\FileStreamCache.cs,Recycle,The method has an empty catch block.
Empty Catch Block,NMaier.SimpleDlna.FileMediaServer,VideoFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\VideoFile.cs,VideoFile,The method has an empty catch block.
Empty Catch Block,NMaier.SimpleDlna.FileMediaServer,BaseFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\BaseFile.cs,BaseFile,The method has an empty catch block.
Empty Catch Block,NMaier.SimpleDlna.FileMediaServer,BackgroundCacher,C:\repos\nmaier_simpleDLNA\fsserver\BackgroundCacher.cs,Run,The method has an empty catch block.
Magic Number,NMaier.SimpleDlna.FileMediaServer,FileStore,C:\repos\nmaier_simpleDLNA\fsserver\FileStore.cs,OpenConnection,The following statement contains a magic number: lock (globalLock) {          newConnection = Sqlite.GetDatabaseConnection(storeFile);          try {            using (var ver = newConnection.CreateCommand()) {              ver.CommandText = "PRAGMA user_version";              var currentVersion = (uint)(long)ver.ExecuteScalar();              if (!currentVersion.Equals(SCHEMA)) {                throw new IndexOutOfRangeException("SCHEMA");              }            }          }          catch (Exception ex) {            NoticeFormat(              "Recreating database' schema update. ({0})"'              ex.Message              );            Sqlite.ClearPool(newConnection);            newConnection.Close();            newConnection.Dispose();            newConnection = null;            for (var i = 0; i < 10; ++i) {              try {                GC.Collect();                storeFile.Delete();                break;              }              catch (IOException) {                Thread.Sleep(100);              }            }            newConnection = Sqlite.GetDatabaseConnection(storeFile);          }          using (var pragma = connection.CreateCommand()) {            pragma.CommandText = "PRAGMA journal_size_limt = 33554432";            pragma.ExecuteNonQuery();          }        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,FileStore,C:\repos\nmaier_simpleDLNA\fsserver\FileStore.cs,OpenConnection,The following statement contains a magic number: lock (globalLock) {          newConnection = Sqlite.GetDatabaseConnection(storeFile);          try {            using (var ver = newConnection.CreateCommand()) {              ver.CommandText = "PRAGMA user_version";              var currentVersion = (uint)(long)ver.ExecuteScalar();              if (!currentVersion.Equals(SCHEMA)) {                throw new IndexOutOfRangeException("SCHEMA");              }            }          }          catch (Exception ex) {            NoticeFormat(              "Recreating database' schema update. ({0})"'              ex.Message              );            Sqlite.ClearPool(newConnection);            newConnection.Close();            newConnection.Dispose();            newConnection = null;            for (var i = 0; i < 10; ++i) {              try {                GC.Collect();                storeFile.Delete();                break;              }              catch (IOException) {                Thread.Sleep(100);              }            }            newConnection = Sqlite.GetDatabaseConnection(storeFile);          }          using (var pragma = connection.CreateCommand()) {            pragma.CommandText = "PRAGMA journal_size_limt = 33554432";            pragma.ExecuteNonQuery();          }        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,AudioFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\AudioFile.cs,MaybeInit,The following statement contains a magic number: try {          using (var tl = File.Create(new TagLibFileAbstraction(Item))) {            try {              duration = tl.Properties.Duration;              if (duration.Value.TotalSeconds < 0.1) {                duration = null;              }            }            catch (Exception ex) {              Debug("Failed to transpose Properties props"' ex);            }              try {              var t = tl.Tag;              SetProperties(t);              InitCover(t);            }            catch (Exception ex) {              Debug("Failed to transpose Tag props"' ex);            }          }            initialized = true;            Server.UpdateFileCache(this);        }        catch (CorruptFileException ex) {          Debug(            "Failed to read meta data via taglib for file " + Item.FullName' ex);          initialized = true;        }        catch (UnsupportedFormatException ex) {          Debug(            "Failed to read meta data via taglib for file " + Item.FullName' ex);          initialized = true;        }        catch (Exception ex) {          Warn(            "Unhandled exception reading meta data for file " + Item.FullName'            ex);        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,AudioFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\AudioFile.cs,SetProperties,The following statement contains a magic number: if (tag.Track != 0 && tag.Track < 1 << 10) {          track = (int)tag.Track;        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,FileStreamCache,C:\repos\nmaier_simpleDLNA\fsserver\Files\FileStreamCache.cs,Expire,The following statement contains a magic number: lock (streams) {          foreach (var item in streams.ToArray()) {            var diff = item.Value.InsertionPoint - DateTime.UtcNow;            if (diff.TotalSeconds > 5) {              item.Value.Stream?.Kill();              streams.Remove(item.Key);            }          }        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,VideoFile,C:\repos\nmaier_simpleDLNA\fsserver\Files\VideoFile.cs,MaybeInit,The following statement contains a magic number: try {          using (var tl = File.Create(new TagLibFileAbstraction(Item))) {            try {              duration = tl.Properties.Duration;              if (duration.Value.TotalSeconds < 0.1) {                duration = null;              }              width = tl.Properties.VideoWidth;              height = tl.Properties.VideoHeight;            }            catch (Exception ex) {              Debug("Failed to transpose Properties props"' ex);            }              try {              var t = tl.Tag;              genre = t.FirstGenre;              title = t.Title;              description = t.Comment;              director = t.FirstComposerSort;              if (string.IsNullOrWhiteSpace(director)) {                director = t.FirstComposer;              }              actors = t.PerformersSort;              if (actors == null || actors.Length == 0) {                actors = t.PerformersSort;                if (actors == null || actors.Length == 0) {                  actors = t.Performers;                  if (actors == null || actors.Length == 0) {                    actors = t.AlbumArtists;                  }                }              }            }            catch (Exception ex) {              Debug("Failed to transpose Tag props"' ex);            }          }            initialized = true;            Server.UpdateFileCache(this);        }        catch (CorruptFileException ex) {          Debug(            "Failed to read meta data via taglib for file " + Item.FullName' ex);          initialized = true;        }        catch (UnsupportedFormatException ex) {          Debug(            "Failed to read meta data via taglib for file " + Item.FullName' ex);          initialized = true;        }        catch (Exception ex) {          Warn(            "Unhandled exception reading meta data for file " + Item.FullName'            ex);        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,FileServer,C:\repos\nmaier_simpleDLNA\fsserver\FileServer.cs,DelayedRescan,The following statement contains a magic number: if (diff.TotalSeconds <= 30) {          changeTimer.Interval = Math.Max(            TimeSpan.FromSeconds(20).TotalMilliseconds'            changeTimer.Interval            );          InfoFormat("Avoid thrashing {0}"' changeTimer.Interval);        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,FileServer,C:\repos\nmaier_simpleDLNA\fsserver\FileServer.cs,DelayedRescan,The following statement contains a magic number: if (diff.TotalSeconds <= 30) {          changeTimer.Interval = Math.Max(            TimeSpan.FromSeconds(20).TotalMilliseconds'            changeTimer.Interval            );          InfoFormat("Avoid thrashing {0}"' changeTimer.Interval);        }
Magic Number,NMaier.SimpleDlna.FileMediaServer,BackgroundCacher,C:\repos\nmaier_simpleDLNA\fsserver\BackgroundCacher.cs,CreateQueue,The following statement contains a magic number: new Thread(() =>        {          Thread.Sleep(20000);          for (var i = 0; i < Environment.ProcessorCount + 2; ++i) {            new Thread(Run)            {              IsBackground = true'              Priority = ThreadPriority.Lowest            }.Start();          }        }) {IsBackground = true}.Start();
Magic Number,NMaier.SimpleDlna.FileMediaServer,BackgroundCacher,C:\repos\nmaier_simpleDLNA\fsserver\BackgroundCacher.cs,CreateQueue,The following statement contains a magic number: new Thread(() =>        {          Thread.Sleep(20000);          for (var i = 0; i < Environment.ProcessorCount + 2; ++i) {            new Thread(Run)            {              IsBackground = true'              Priority = ThreadPriority.Lowest            }.Start();          }        }) {IsBackground = true}.Start();
Magic Number,NMaier.SimpleDlna.FileMediaServer,BackgroundCacher,C:\repos\nmaier_simpleDLNA\fsserver\BackgroundCacher.cs,Run,The following statement contains a magic number: try {          for (;;) {            if (queue == null) {              Thread.Sleep(100);              continue;            }            var item = queue.Take();            var store = item.Store.Target as FileStore;            var file = item.File.Target as BaseFile;            if (store == null || file == null) {              continue;            }            try {              var mvi = file as IMetaVideoItem;              if (mvi != null && mvi.Subtitle.HasSubtitle) {                loadedSubTitles++;              }              if (store.HasCover(file)) {                continue;              }              file.LoadCover();              using (var k = file.Cover.CreateContentStream()) {                k.ReadByte();              }            }            catch {              // ignored            }          }        }        finally {          logger.DebugFormat("stopped subtitles: {0}"' loadedSubTitles);        }
