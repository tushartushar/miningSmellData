Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NMaier.SimpleDlna.Thumbnails,ThumbnailMaker,C:\repos\nmaier_simpleDLNA\thumbs\ThumbnailMaker.cs,GetThumbnailInternal,The method has 5 parameters. Parameters: key' item' type' width' height
Long Parameter List,NMaier.SimpleDlna.Thumbnails,ThumbnailMaker,C:\repos\nmaier_simpleDLNA\thumbs\ThumbnailMaker.cs,GetThumbnail,The method has 5 parameters. Parameters: key' type' stream' width' height
Empty Catch Block,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The method has an empty catch block.
Magic Number,NMaier.SimpleDlna.Thumbnails,ThumbnailMaker,C:\repos\nmaier_simpleDLNA\thumbs\ThumbnailMaker.cs,ResizeImage,The following statement contains a magic number: try {          try {            result.SetResolution(image.HorizontalResolution' image.VerticalResolution);          }          catch (Exception ex) {            LogManager.GetLogger(typeof (ThumbnailMaker)).Debug("Failed to set resolution"' ex);          }          using (var graphics = Graphics.FromImage(result)) {            if (result.Width > image.Width && result.Height > image.Height) {              graphics.CompositingQuality =                CompositingQuality.HighQuality;              graphics.InterpolationMode =                InterpolationMode.High;            }            else {              graphics.CompositingQuality =                CompositingQuality.HighSpeed;              graphics.InterpolationMode = InterpolationMode.Bicubic;            }            var rect = new Rectangle(              (int)(result.Width - nw) / 2'              (int)(result.Height - nh) / 2'              (int)nw' (int)nh              );            graphics.SmoothingMode = SmoothingMode.HighSpeed;            graphics.FillRectangle(              Brushes.Black' new Rectangle(0' 0' result.Width' result.Height));            graphics.DrawImage(image' rect);          }          return result;        }        catch (Exception) {          result.Dispose();          throw;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,ThumbnailMaker,C:\repos\nmaier_simpleDLNA\thumbs\ThumbnailMaker.cs,ResizeImage,The following statement contains a magic number: try {          try {            result.SetResolution(image.HorizontalResolution' image.VerticalResolution);          }          catch (Exception ex) {            LogManager.GetLogger(typeof (ThumbnailMaker)).Debug("Failed to set resolution"' ex);          }          using (var graphics = Graphics.FromImage(result)) {            if (result.Width > image.Width && result.Height > image.Height) {              graphics.CompositingQuality =                CompositingQuality.HighQuality;              graphics.InterpolationMode =                InterpolationMode.High;            }            else {              graphics.CompositingQuality =                CompositingQuality.HighSpeed;              graphics.InterpolationMode = InterpolationMode.Bicubic;            }            var rect = new Rectangle(              (int)(result.Width - nw) / 2'              (int)(result.Height - nh) / 2'              (int)nw' (int)nh              );            graphics.SmoothingMode = SmoothingMode.HighSpeed;            graphics.FillRectangle(              Brushes.Black' new Rectangle(0' 0' result.Width' result.Height));            graphics.DrawImage(image' rect);          }          return result;        }        catch (Exception) {          result.Dispose();          throw;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailFromProcess,The following statement contains a magic number: using (var thumb = StreamManager.GetStream()) {          using (var pump = new StreamPump(            p.StandardOutput.BaseStream' thumb' 4096)) {            pump.Pump(null);            while (!p.WaitForExit(20000)) {              if (lastPosition != thumb.Position) {                lastPosition = thumb.Position;                continue;              }              p.Kill();              throw new ArgumentException("ffmpeg timed out");            }            if (p.ExitCode != 0) {              throw new ArgumentException("ffmpeg does not understand the stream");            }            if (!pump.Wait(2000)) {              throw new ArgumentException("stream reading timed out");            }            if (thumb.Length == 0) {              throw new ArgumentException("ffmpeg did not produce a result");            }              using (var img = Image.FromStream(thumb)) {              using (var scaled = ThumbnailMaker.ResizeImage(img' width' height'                                                             ThumbnailMakerBorder.Bordered)) {                width = scaled.Width;                height = scaled.Height;                var rv = new MemoryStream();                try {                  scaled.Save(rv' ImageFormat.Jpeg);                  return rv;                }                catch (Exception) {                  rv.Dispose();                  throw;                }              }            }          }        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailFromProcess,The following statement contains a magic number: using (var thumb = StreamManager.GetStream()) {          using (var pump = new StreamPump(            p.StandardOutput.BaseStream' thumb' 4096)) {            pump.Pump(null);            while (!p.WaitForExit(20000)) {              if (lastPosition != thumb.Position) {                lastPosition = thumb.Position;                continue;              }              p.Kill();              throw new ArgumentException("ffmpeg timed out");            }            if (p.ExitCode != 0) {              throw new ArgumentException("ffmpeg does not understand the stream");            }            if (!pump.Wait(2000)) {              throw new ArgumentException("stream reading timed out");            }            if (thumb.Length == 0) {              throw new ArgumentException("ffmpeg did not produce a result");            }              using (var img = Image.FromStream(thumb)) {              using (var scaled = ThumbnailMaker.ResizeImage(img' width' height'                                                             ThumbnailMakerBorder.Bordered)) {                width = scaled.Width;                height = scaled.Height;                var rv = new MemoryStream();                try {                  scaled.Save(rv' ImageFormat.Jpeg);                  return rv;                }                catch (Exception) {                  rv.Dispose();                  throw;                }              }            }          }        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailFromProcess,The following statement contains a magic number: using (var thumb = StreamManager.GetStream()) {          using (var pump = new StreamPump(            p.StandardOutput.BaseStream' thumb' 4096)) {            pump.Pump(null);            while (!p.WaitForExit(20000)) {              if (lastPosition != thumb.Position) {                lastPosition = thumb.Position;                continue;              }              p.Kill();              throw new ArgumentException("ffmpeg timed out");            }            if (p.ExitCode != 0) {              throw new ArgumentException("ffmpeg does not understand the stream");            }            if (!pump.Wait(2000)) {              throw new ArgumentException("stream reading timed out");            }            if (thumb.Length == 0) {              throw new ArgumentException("ffmpeg did not produce a result");            }              using (var img = Image.FromStream(thumb)) {              using (var scaled = ThumbnailMaker.ResizeImage(img' width' height'                                                             ThumbnailMakerBorder.Bordered)) {                width = scaled.Width;                height = scaled.Height;                var rv = new MemoryStream();                try {                  scaled.Save(rv' ImageFormat.Jpeg);                  return rv;                }                catch (Exception) {                  rv.Dispose();                  throw;                }              }            }          }        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: using (var p = new Process()) {          var pos = 20L;          try {            var length = stream.Length;            if (length < 10 * (1 << 20)) {              pos = 5;            }            else {              if (length > 100 * (1 << 20)) {                pos = 60;              }              else {                if (length > 50 * (1 << 20)) {                  pos = 60;                }              }            }          }          catch (Exception) {            // ignored          }            var sti = p.StartInfo;  #if !DEBUG          sti.CreateNoWindow = true;  #endif          sti.UseShellExecute = false;          sti.FileName = FFmpeg.FFmpegExecutable;          sti.Arguments = $"-v quiet -ss {pos} -i pipe: -an -frames:v 1 -f image2  pipe:";          sti.LoadUserProfile = false;          sti.RedirectStandardInput = true;          sti.RedirectStandardOutput = true;          p.Start();            var sp = new StreamPump(stream' p.StandardInput.BaseStream' 4096);          sp.Pump((pump' result) => { stream.Dispose(); });          return GetThumbnailFromProcess(p' ref width' ref height);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: for (var best = IdentifyBestCapturePosition(file);          best >= 0;          best -= Math.Max(best / 2' 5)) {          try {            using (var p = new Process()) {              var sti = p.StartInfo;  #if !DEBUG              sti.CreateNoWindow = true;  #endif              sti.UseShellExecute = false;              sti.FileName = FFmpeg.FFmpegExecutable;              sti.Arguments = $"-v quiet -ss {best} -i \"{file.FullName}\" -an -frames:v 1 -f image2 pipe:";              sti.LoadUserProfile = false;              sti.RedirectStandardOutput = true;              p.Start();                DebugFormat("Running: {0} {1}"' sti.FileName' sti.Arguments);              return GetThumbnailFromProcess(p' ref width' ref height);            }          }          catch (Exception ex) {            last = ex;          }        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,GetThumbnailInternal,The following statement contains a magic number: for (var best = IdentifyBestCapturePosition(file);          best >= 0;          best -= Math.Max(best / 2' 5)) {          try {            using (var p = new Process()) {              var sti = p.StartInfo;  #if !DEBUG              sti.CreateNoWindow = true;  #endif              sti.UseShellExecute = false;              sti.FileName = FFmpeg.FFmpegExecutable;              sti.Arguments = $"-v quiet -ss {best} -i \"{file.FullName}\" -an -frames:v 1 -f image2 pipe:";              sti.LoadUserProfile = false;              sti.RedirectStandardOutput = true;              p.Start();                DebugFormat("Running: {0} {1}"' sti.FileName' sti.Arguments);              return GetThumbnailFromProcess(p' ref width' ref height);            }          }          catch (Exception ex) {            last = ex;          }        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: try {          var dur = FFmpeg.GetFileDuration(file);          if (dur > 600) {            return (long)(dur / 5.0);          }          return (long)(dur / 3.0);        }        catch (Exception ex) {          Debug("Failed to get file duration"' ex);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: try {          var dur = FFmpeg.GetFileDuration(file);          if (dur > 600) {            return (long)(dur / 5.0);          }          return (long)(dur / 3.0);        }        catch (Exception ex) {          Debug("Failed to get file duration"' ex);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: try {          var dur = FFmpeg.GetFileDuration(file);          if (dur > 600) {            return (long)(dur / 5.0);          }          return (long)(dur / 3.0);        }        catch (Exception ex) {          Debug("Failed to get file duration"' ex);        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length < 10 * (1 << 20)) {          return 5;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length < 10 * (1 << 20)) {          return 5;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length < 10 * (1 << 20)) {          return 5;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 50 * (1 << 20)) {          return 60;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 50 * (1 << 20)) {          return 60;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 50 * (1 << 20)) {          return 60;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 100 * (1 << 20)) {          return 120;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 100 * (1 << 20)) {          return 120;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 100 * (1 << 20)) {          return 120;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 500 * (1 << 20)) {          return 300;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 500 * (1 << 20)) {          return 300;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 500 * (1 << 20)) {          return 300;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 750 * (1 << 20)) {          return 600;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 750 * (1 << 20)) {          return 600;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: if (length > 750 * (1 << 20)) {          return 600;        }
Magic Number,NMaier.SimpleDlna.Thumbnails,VideoThumbnailLoader,C:\repos\nmaier_simpleDLNA\thumbs\VideoThumbnailLoader.cs,IdentifyBestCapturePosition,The following statement contains a magic number: return 20;
