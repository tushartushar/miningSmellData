Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Assets.Scripts.Ship,PlayerShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\PlayerShipController.cs,UpdateShip,Cyclomatic complexity of the method is 13
Long Statement,Assets.Scripts.Ship,NpcShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\NpcShipController.cs,UpdateNetPostion,The length of the statement  "	var forecastPostion = lastCheckData.Postion + lastCheckData.Rotation * Vector3.forward * (lastCheckData.Speed * syncTime); " is 122.
Long Statement,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,UpdateShip,The length of the statement  "		trans.rotation = nextQuaternion * Quaternion.Euler (0' 0' RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate)); " is 123.
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: if (ship == null) {  	Debug.Log ("没找到船只的预设");  } else {  	//ship.transform.position = new Vector3(0' 0' 0);  	//ship.transform.localScale = new Vector3(1' 1' 1);  	var ship1 = Object.Instantiate (ship) as GameObject;  	var pc = Instantiate (Resources.Load<GameObject> ("PlayerCamera")) as GameObject;  	pc.transform.parent = ship1.transform;  	var so = pc.GetComponentsInChildren<ShipOrbit> () [0];  	var shipController = new PlayerShipController ();  	so.control = shipController;  	shipController.BindU3DModel (ship1);  	ShipTemplate st = new ShipTemplate {  		Id = 1'  		Pref = "ship_1"'  		Speed = 4'  		SpeededUpSec = 15'  		AnglePreSec = 10.3f'  		AngleUpSec = 5.0f'  		Hp = 1000  	};  	shipController.SetShipTemplate (st);  	PlayerShip = shipController;  	//  这里先模拟船只向前移动（z轴增加的移动）  	//  在Z轴上移动  	PlayerShip.Direction = new Vector3 (0' 0' 1);  	ShipManager.Instatnce.AddShip (PlayerShip);  	var ship2 = Object.Instantiate (Resources.Load<GameObject> ("ship_2")) as GameObject;  	//ship2.transform.localScale = new Vector3(0.8f' 0.8f' 0.8f);  	ship2.transform.position = new Vector3 (40' 0' 0);  	npcShip1 = new NpcShipController ();  	npcShip1.BindU3DModel (ship2);  	npcShip1.SetShipTemplate (st);  	ShipManager.Instatnce.AddShip (npcShip1);  	var ship3 = Object.Instantiate (Resources.Load<GameObject> ("ship_3")) as GameObject;  	ship3.transform.position = new Vector3 (-40' 0' 0);  	var camera = GameObject.Find ("Main Camera");  	camera.AddComponent<FrmPlayerShip> ();  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: if (ship == null) {  	Debug.Log ("没找到船只的预设");  } else {  	//ship.transform.position = new Vector3(0' 0' 0);  	//ship.transform.localScale = new Vector3(1' 1' 1);  	var ship1 = Object.Instantiate (ship) as GameObject;  	var pc = Instantiate (Resources.Load<GameObject> ("PlayerCamera")) as GameObject;  	pc.transform.parent = ship1.transform;  	var so = pc.GetComponentsInChildren<ShipOrbit> () [0];  	var shipController = new PlayerShipController ();  	so.control = shipController;  	shipController.BindU3DModel (ship1);  	ShipTemplate st = new ShipTemplate {  		Id = 1'  		Pref = "ship_1"'  		Speed = 4'  		SpeededUpSec = 15'  		AnglePreSec = 10.3f'  		AngleUpSec = 5.0f'  		Hp = 1000  	};  	shipController.SetShipTemplate (st);  	PlayerShip = shipController;  	//  这里先模拟船只向前移动（z轴增加的移动）  	//  在Z轴上移动  	PlayerShip.Direction = new Vector3 (0' 0' 1);  	ShipManager.Instatnce.AddShip (PlayerShip);  	var ship2 = Object.Instantiate (Resources.Load<GameObject> ("ship_2")) as GameObject;  	//ship2.transform.localScale = new Vector3(0.8f' 0.8f' 0.8f);  	ship2.transform.position = new Vector3 (40' 0' 0);  	npcShip1 = new NpcShipController ();  	npcShip1.BindU3DModel (ship2);  	npcShip1.SetShipTemplate (st);  	ShipManager.Instatnce.AddShip (npcShip1);  	var ship3 = Object.Instantiate (Resources.Load<GameObject> ("ship_3")) as GameObject;  	ship3.transform.position = new Vector3 (-40' 0' 0);  	var camera = GameObject.Find ("Main Camera");  	camera.AddComponent<FrmPlayerShip> ();  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: if (ship == null) {  	Debug.Log ("没找到船只的预设");  } else {  	//ship.transform.position = new Vector3(0' 0' 0);  	//ship.transform.localScale = new Vector3(1' 1' 1);  	var ship1 = Object.Instantiate (ship) as GameObject;  	var pc = Instantiate (Resources.Load<GameObject> ("PlayerCamera")) as GameObject;  	pc.transform.parent = ship1.transform;  	var so = pc.GetComponentsInChildren<ShipOrbit> () [0];  	var shipController = new PlayerShipController ();  	so.control = shipController;  	shipController.BindU3DModel (ship1);  	ShipTemplate st = new ShipTemplate {  		Id = 1'  		Pref = "ship_1"'  		Speed = 4'  		SpeededUpSec = 15'  		AnglePreSec = 10.3f'  		AngleUpSec = 5.0f'  		Hp = 1000  	};  	shipController.SetShipTemplate (st);  	PlayerShip = shipController;  	//  这里先模拟船只向前移动（z轴增加的移动）  	//  在Z轴上移动  	PlayerShip.Direction = new Vector3 (0' 0' 1);  	ShipManager.Instatnce.AddShip (PlayerShip);  	var ship2 = Object.Instantiate (Resources.Load<GameObject> ("ship_2")) as GameObject;  	//ship2.transform.localScale = new Vector3(0.8f' 0.8f' 0.8f);  	ship2.transform.position = new Vector3 (40' 0' 0);  	npcShip1 = new NpcShipController ();  	npcShip1.BindU3DModel (ship2);  	npcShip1.SetShipTemplate (st);  	ShipManager.Instatnce.AddShip (npcShip1);  	var ship3 = Object.Instantiate (Resources.Load<GameObject> ("ship_3")) as GameObject;  	ship3.transform.position = new Vector3 (-40' 0' 0);  	var camera = GameObject.Find ("Main Camera");  	camera.AddComponent<FrmPlayerShip> ();  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: if (ship == null) {  	Debug.Log ("没找到船只的预设");  } else {  	//ship.transform.position = new Vector3(0' 0' 0);  	//ship.transform.localScale = new Vector3(1' 1' 1);  	var ship1 = Object.Instantiate (ship) as GameObject;  	var pc = Instantiate (Resources.Load<GameObject> ("PlayerCamera")) as GameObject;  	pc.transform.parent = ship1.transform;  	var so = pc.GetComponentsInChildren<ShipOrbit> () [0];  	var shipController = new PlayerShipController ();  	so.control = shipController;  	shipController.BindU3DModel (ship1);  	ShipTemplate st = new ShipTemplate {  		Id = 1'  		Pref = "ship_1"'  		Speed = 4'  		SpeededUpSec = 15'  		AnglePreSec = 10.3f'  		AngleUpSec = 5.0f'  		Hp = 1000  	};  	shipController.SetShipTemplate (st);  	PlayerShip = shipController;  	//  这里先模拟船只向前移动（z轴增加的移动）  	//  在Z轴上移动  	PlayerShip.Direction = new Vector3 (0' 0' 1);  	ShipManager.Instatnce.AddShip (PlayerShip);  	var ship2 = Object.Instantiate (Resources.Load<GameObject> ("ship_2")) as GameObject;  	//ship2.transform.localScale = new Vector3(0.8f' 0.8f' 0.8f);  	ship2.transform.position = new Vector3 (40' 0' 0);  	npcShip1 = new NpcShipController ();  	npcShip1.BindU3DModel (ship2);  	npcShip1.SetShipTemplate (st);  	ShipManager.Instatnce.AddShip (npcShip1);  	var ship3 = Object.Instantiate (Resources.Load<GameObject> ("ship_3")) as GameObject;  	ship3.transform.position = new Vector3 (-40' 0' 0);  	var camera = GameObject.Find ("Main Camera");  	camera.AddComponent<FrmPlayerShip> ();  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: if (ship == null) {  	Debug.Log ("没找到船只的预设");  } else {  	//ship.transform.position = new Vector3(0' 0' 0);  	//ship.transform.localScale = new Vector3(1' 1' 1);  	var ship1 = Object.Instantiate (ship) as GameObject;  	var pc = Instantiate (Resources.Load<GameObject> ("PlayerCamera")) as GameObject;  	pc.transform.parent = ship1.transform;  	var so = pc.GetComponentsInChildren<ShipOrbit> () [0];  	var shipController = new PlayerShipController ();  	so.control = shipController;  	shipController.BindU3DModel (ship1);  	ShipTemplate st = new ShipTemplate {  		Id = 1'  		Pref = "ship_1"'  		Speed = 4'  		SpeededUpSec = 15'  		AnglePreSec = 10.3f'  		AngleUpSec = 5.0f'  		Hp = 1000  	};  	shipController.SetShipTemplate (st);  	PlayerShip = shipController;  	//  这里先模拟船只向前移动（z轴增加的移动）  	//  在Z轴上移动  	PlayerShip.Direction = new Vector3 (0' 0' 1);  	ShipManager.Instatnce.AddShip (PlayerShip);  	var ship2 = Object.Instantiate (Resources.Load<GameObject> ("ship_2")) as GameObject;  	//ship2.transform.localScale = new Vector3(0.8f' 0.8f' 0.8f);  	ship2.transform.position = new Vector3 (40' 0' 0);  	npcShip1 = new NpcShipController ();  	npcShip1.BindU3DModel (ship2);  	npcShip1.SetShipTemplate (st);  	ShipManager.Instatnce.AddShip (npcShip1);  	var ship3 = Object.Instantiate (Resources.Load<GameObject> ("ship_3")) as GameObject;  	ship3.transform.position = new Vector3 (-40' 0' 0);  	var camera = GameObject.Find ("Main Camera");  	camera.AddComponent<FrmPlayerShip> ();  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: ship2.transform.position = new Vector3 (40' 0' 0);  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,Start,The following statement contains a magic number: ship3.transform.position = new Vector3 (-40' 0' 0);  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,FixedUpdate,The following statement contains a magic number: if (updateIndex++ % 10 == 0) {  	//  间隔 30/10 *1000 ms的间隔向服务器通知一次当前的位置  	var data = new CheckData {  		Postion = new Vector3 (PlayerShip.Postion.x + 200' PlayerShip.Postion.y' PlayerShip.Postion.z + 200)'  		Rotation = PlayerShip.GameObject.transform.rotation'  		Speed = PlayerShip.Speed'  		SpeedUpTypes = PlayerShip.SpeedUpType'  		Time = now'  		RotationRate = PlayerShip.RotationRate'  	};  	notifyData.Enqueue (data);  } else {  	//  每隔3帧向模拟的npc船只传递一次数据  	//  模拟网络延迟  	if (notifyData.Count > 1 && updateIndex % 3 == 0) {  		var data = notifyData.Dequeue ();  		npcShip1.UpdateNetPostion (data);  	}  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,FixedUpdate,The following statement contains a magic number: if (updateIndex++ % 10 == 0) {  	//  间隔 30/10 *1000 ms的间隔向服务器通知一次当前的位置  	var data = new CheckData {  		Postion = new Vector3 (PlayerShip.Postion.x + 200' PlayerShip.Postion.y' PlayerShip.Postion.z + 200)'  		Rotation = PlayerShip.GameObject.transform.rotation'  		Speed = PlayerShip.Speed'  		SpeedUpTypes = PlayerShip.SpeedUpType'  		Time = now'  		RotationRate = PlayerShip.RotationRate'  	};  	notifyData.Enqueue (data);  } else {  	//  每隔3帧向模拟的npc船只传递一次数据  	//  模拟网络延迟  	if (notifyData.Count > 1 && updateIndex % 3 == 0) {  		var data = notifyData.Dequeue ();  		npcShip1.UpdateNetPostion (data);  	}  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,FixedUpdate,The following statement contains a magic number: if (updateIndex++ % 10 == 0) {  	//  间隔 30/10 *1000 ms的间隔向服务器通知一次当前的位置  	var data = new CheckData {  		Postion = new Vector3 (PlayerShip.Postion.x + 200' PlayerShip.Postion.y' PlayerShip.Postion.z + 200)'  		Rotation = PlayerShip.GameObject.transform.rotation'  		Speed = PlayerShip.Speed'  		SpeedUpTypes = PlayerShip.SpeedUpType'  		Time = now'  		RotationRate = PlayerShip.RotationRate'  	};  	notifyData.Enqueue (data);  } else {  	//  每隔3帧向模拟的npc船只传递一次数据  	//  模拟网络延迟  	if (notifyData.Count > 1 && updateIndex % 3 == 0) {  		var data = notifyData.Dequeue ();  		npcShip1.UpdateNetPostion (data);  	}  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,FixedUpdate,The following statement contains a magic number: if (updateIndex++ % 10 == 0) {  	//  间隔 30/10 *1000 ms的间隔向服务器通知一次当前的位置  	var data = new CheckData {  		Postion = new Vector3 (PlayerShip.Postion.x + 200' PlayerShip.Postion.y' PlayerShip.Postion.z + 200)'  		Rotation = PlayerShip.GameObject.transform.rotation'  		Speed = PlayerShip.Speed'  		SpeedUpTypes = PlayerShip.SpeedUpType'  		Time = now'  		RotationRate = PlayerShip.RotationRate'  	};  	notifyData.Enqueue (data);  } else {  	//  每隔3帧向模拟的npc船只传递一次数据  	//  模拟网络延迟  	if (notifyData.Count > 1 && updateIndex % 3 == 0) {  		var data = notifyData.Dequeue ();  		npcShip1.UpdateNetPostion (data);  	}  }  
Magic Number,Assets.Scripts,SimulationMoveDemo,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\SimulationMoveDemo.cs,FixedUpdate,The following statement contains a magic number: if (notifyData.Count > 1 && updateIndex % 3 == 0) {  	var data = notifyData.Dequeue ();  	npcShip1.UpdateNetPostion (data);  }  
Magic Number,Assets.Scripts.Ship,NpcShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\NpcShipController.cs,UpdateShip,The following statement contains a magic number: if (RotationRate != 0f) {  	Quaternion nextQuaternion = Quaternion.Euler (trans.eulerAngles.x' trans.eulerAngles.y' EulerAngle.z);  	var roationSpeed = MaxMoveSpeed * 0.8f;  	//  转向的角度和船只的转向度，时间，方向舵（RotationRate），船只速度有关  	var angle = Template.AnglePreSec * updateTime * RotationRate * (Speed / roationSpeed);  	nextQuaternion = nextQuaternion * Quaternion.AngleAxis (angle' Vector3.up);  	var yAngle = RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate);  	trans = nextQuaternion * Quaternion.Euler (0' 0' yAngle);  	//  船只在转向的时候，会有一定的失速  	//if (nextSpeed > roationSpeed)  	//{  	//    nextSpeed -= (a + GetAcceleration(SpeedUpType.Full)) * RotationRate * updateTime;  	//    if (nextSpeed < roationSpeed)  	//        nextSpeed = roationSpeed;  	//}  	GameObject.transform.rotation = trans;  }  
Magic Number,Assets.Scripts.Ship,NpcShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\NpcShipController.cs,UpdateShip,The following statement contains a magic number: if (RotationRate != 0f) {  	Quaternion nextQuaternion = Quaternion.Euler (trans.eulerAngles.x' trans.eulerAngles.y' EulerAngle.z);  	var roationSpeed = MaxMoveSpeed * 0.8f;  	//  转向的角度和船只的转向度，时间，方向舵（RotationRate），船只速度有关  	var angle = Template.AnglePreSec * updateTime * RotationRate * (Speed / roationSpeed);  	nextQuaternion = nextQuaternion * Quaternion.AngleAxis (angle' Vector3.up);  	var yAngle = RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate);  	trans = nextQuaternion * Quaternion.Euler (0' 0' yAngle);  	//  船只在转向的时候，会有一定的失速  	//if (nextSpeed > roationSpeed)  	//{  	//    nextSpeed -= (a + GetAcceleration(SpeedUpType.Full)) * RotationRate * updateTime;  	//    if (nextSpeed < roationSpeed)  	//        nextSpeed = roationSpeed;  	//}  	GameObject.transform.rotation = trans;  }  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,UpdateShip,The following statement contains a magic number: if (RotationRate != 0f) {  	Quaternion nextQuaternion = Quaternion.Euler (trans.eulerAngles.x' trans.eulerAngles.y' EulerAngle.z);  	var roationSpeed = MaxMoveSpeed * 0.8f;  	//  转向的角度和船只的转向度，时间，方向舵（RotationRate），船只速度有关  	var angle = Template.AnglePreSec * updateTime * RotationRate * (Speed / roationSpeed);  	nextQuaternion = nextQuaternion * Quaternion.AngleAxis (angle' Vector3.up);  	trans.rotation = nextQuaternion * Quaternion.Euler (0' 0' RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate));  	//  船只在转向的时候，会有一定的失速  	if (nextSpeed > roationSpeed) {  		nextSpeed -= (a + GetAcceleration (SpeedUpTypes.Full)) * RotationRate * updateTime;  		if (nextSpeed < roationSpeed)  			nextSpeed = roationSpeed;  	}  }  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,UpdateShip,The following statement contains a magic number: if (RotationRate != 0f) {  	Quaternion nextQuaternion = Quaternion.Euler (trans.eulerAngles.x' trans.eulerAngles.y' EulerAngle.z);  	var roationSpeed = MaxMoveSpeed * 0.8f;  	//  转向的角度和船只的转向度，时间，方向舵（RotationRate），船只速度有关  	var angle = Template.AnglePreSec * updateTime * RotationRate * (Speed / roationSpeed);  	nextQuaternion = nextQuaternion * Quaternion.AngleAxis (angle' Vector3.up);  	trans.rotation = nextQuaternion * Quaternion.Euler (0' 0' RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate));  	//  船只在转向的时候，会有一定的失速  	if (nextSpeed > roationSpeed) {  		nextSpeed -= (a + GetAcceleration (SpeedUpTypes.Full)) * RotationRate * updateTime;  		if (nextSpeed < roationSpeed)  			nextSpeed = roationSpeed;  	}  }  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,UpdateShip,The following statement contains a magic number: trans.rotation = nextQuaternion * Quaternion.Euler (0' 0' RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate));  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,UpdateShip,The following statement contains a magic number: trans.rotation = nextQuaternion * Quaternion.Euler (0' 0' RotationRate * -5 + -10 * (Speed / MaxMoveSpeed * RotationRate));  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,SetShipTemplate,The following statement contains a magic number: MaxMoveSpeed = template.Speed * 1807 / 60 / 60 * SpeedZoom;  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,SetShipTemplate,The following statement contains a magic number: MaxMoveSpeed = template.Speed * 1807 / 60 / 60 * SpeedZoom;  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,SetShipTemplate,The following statement contains a magic number: MaxMoveSpeed = template.Speed * 1807 / 60 / 60 * SpeedZoom;  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,GetCurrentSpeed,The following statement contains a magic number: return Speed / SpeedZoom * Template.Speed * 1807 / 60 / 60;  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,GetCurrentSpeed,The following statement contains a magic number: return Speed / SpeedZoom * Template.Speed * 1807 / 60 / 60;  
Magic Number,Assets.Scripts.Ship,ShipController,F:\newReposMay17\dogvane_DogSE\TradeAge\Client\UnityClient\Assets\Scripts\Ship\ShipController.cs,GetCurrentSpeed,The following statement contains a magic number: return Speed / SpeedZoom * Template.Speed * 1807 / 60 / 60;  
