Implementation smell,Namespace,Class,File,Method,Description
Long Method,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The method has 154 lines of code.
Complex Method,MarsMiner.Shared,Tools,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Tools.cs,ApplyWordWrap,Cyclomatic complexity of the method is 8
Complex Method,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,Cyclomatic complexity of the method is 24
Complex Method,MarsMiner.Shared.Geometry,World,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\World.cs,GeneratorLoop,Cyclomatic complexity of the method is 11
Complex Method,MarsMiner.Shared.Octree,OctreeNode<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeNode.cs,FindNeighbour,Cyclomatic complexity of the method is 13
Long Parameter List,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The method has 5 parameters. Parameters: x' y' z' size' resolution
Long Parameter List,MarsMiner.Shared.Geometry,WorldGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\WorldGenerator.cs,Generate,The method has 5 parameters. Parameters: x' y' z' size' resolution
Long Parameter List,MarsMiner.Shared.Octree,Octree<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Octree.cs,Octree,The method has 5 parameters. Parameters: x' y' z' size' container
Long Parameter List,MarsMiner.Shared.Octree,Octree<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Octree.cs,SetCuboid,The method has 7 parameters. Parameters: x' y' z' width' height' depth' value
Long Parameter List,MarsMiner.Shared.Octree,Octree<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Octree.cs,FindNode,The method has 5 parameters. Parameters: mSize' oX' oY' oZ' oSize
Long Parameter List,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,FindInnerNode,The method has 5 parameters. Parameters: mSize' oX' oY' oZ' oSize
Long Parameter List,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,FindNode,The method has 6 parameters. Parameters: child' mSize' oX' oY' oZ' oSize
Long Parameter List,MarsMiner.Shared.Octree,OctreeLeaf<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeLeaf.cs,FindInnerNode,The method has 5 parameters. Parameters: mSize' oX' oY' oZ' oSize
Long Parameter List,MarsMiner.Shared.Octree,OctreeNode<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeNode.cs,FindNode,The method has 5 parameters. Parameters: mSize' oX' oY' oZ' oSize
Long Parameter List,MarsMiner.Shared.Octree,OctreeNode<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeNode.cs,FindInnerNode,The method has 5 parameters. Parameters: mSize' oX' oY' oZ' oSize
Long Parameter List,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,Cuboid,The method has 6 parameters. Parameters: x' y' z' width' height' depth
Long Parameter List,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,IsIntersecting,The method has 6 parameters. Parameters: x' y' z' width' height' depth
Long Parameter List,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,FindIntersection,The method has 6 parameters. Parameters: x' y' z' width' height' depth
Long Identifier,MarsMiner.Shared.Networking,LocalConnection,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\LocalConnection.cs,,The length of the parameter myClientToServerWaitingPackets is 30.
Long Identifier,MarsMiner.Shared.Networking,LocalConnection,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\LocalConnection.cs,,The length of the parameter myServerToClientWaitingPackets is 30.
Complex Conditional,MarsMiner.Shared.Geometry,Chunk,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\Chunk.cs,FindNode,The conditional expression  "x < X || x >= X + Size || z < Z || z >= Z + Size"  is complex.
Complex Conditional,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The conditional expression  "( res == 1 || ( resolution > 1 && height == realHeight ) )                                  && gradmap[ nx' nz ] <= 8.0 * res"  is complex.
Complex Conditional,MarsMiner.Shared.Octree,Octree<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Octree.cs,FindNode,The conditional expression  "x < X || y < Y || z < Z || x >= X + Size || y >= Y + Size || z >= Z + Size"  is complex.
Complex Conditional,MarsMiner.Shared.Octree,Octree<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Octree.cs,FindNode,The conditional expression  "oX < 0 || oY < 0 || oZ < 0 || oX >= mSize || oY >= mSize || oZ >= mSize"  is complex.
Complex Conditional,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,SetCuboid,The conditional expression  "i.X == 0 && i.Y == 0 && i.Z == 0                      && i.Width == i.Height && i.Height == i.Depth && i.Depth == size && ShouldMerge()"  is complex.
Complex Conditional,MarsMiner.Shared.Octree,OctreeLeaf<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeLeaf.cs,SetCuboid,The conditional expression  "i.X == 0 && i.Y == 0 && i.Z == 0                      && i.Width == i.Height && i.Height == i.Depth && i.Depth == size"  is complex.
Complex Conditional,MarsMiner.Shared.Octree,OctreeNode<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeNode.cs,FindNode,The conditional expression  "mSize == oSize && oX == 0 && oY == 0 && oZ == 0"  is complex.
Complex Conditional,MarsMiner.Shared.Octree,OctreeNode<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeNode.cs,FindNode,The conditional expression  "oX < 0 || oY < 0 || oZ < 0 || oX >= mSize                  || oY >= mSize || oZ >= mSize"  is complex.
Virtual Method Call from Constructor,MarsMiner.Shared.Geometry,World,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\World.cs,World,The constructor "World" calls a virtual method "OnInitialize".
Virtual Method Call from Constructor,MarsMiner.Shared.Geometry,World,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\World.cs,World,The constructor "World" calls a virtual method "OnWorldIntitialize".
Magic Number,MarsMiner.Shared,MarsMinerPlugin,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\MarsMinerPlugin.cs,OnWorldIntitialize,The following statement contains a magic number: i < 16
Magic Number,MarsMiner.Shared,MarsMinerPlugin,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\MarsMinerPlugin.cs,OnWorldIntitialize,The following statement contains a magic number: i < 16
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myHillyNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 1.0'                  Lacunarity = 2.0'                  Persistence = 0.5              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myHillyNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 1.0'                  Lacunarity = 2.0'                  Persistence = 0.5              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myHillyNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 1.0'                  Lacunarity = 2.0'                  Persistence = 0.5              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myPlainsNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 8.0'                  Lacunarity = 2.0'                  Persistence = 1.0              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myPlainsNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 8.0'                  Lacunarity = 2.0'                  Persistence = 1.0              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myPlainsNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 8.0'                  Lacunarity = 2.0'                  Persistence = 1.0              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myTransNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 1.0 / 32.0'                  Lacunarity = 2.0'                  Persistence = 1.0              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myTransNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 1.0 / 32.0'                  Lacunarity = 2.0'                  Persistence = 1.0              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myTransNoise = new Perlin              {                  Seed = Seed'                  OctaveCount = 6'                  Frequency = 1.0 / 32.0'                  Lacunarity = 2.0'                  Persistence = 1.0              };
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myMinHilly = 768;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myMaxHilly = 896;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myMinPlains = 768;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,PerlinGenerator,The following statement contains a magic number: myMaxPlains = 776;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: UInt16[] sand = new UInt16[ 15 ];
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: UInt16[] rock = new UInt16[ 15 ];
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: i < 15
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: int gradRange = 2;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: octree.SetCuboid( x' 0' z' size' System.Math.Min( myMinHilly' myMinPlains )' size' rock[ 14 ] );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: int hillDiff = ( myMaxHilly - myMinHilly ) / 2;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: int plainDiff = ( myMinPlains - myMaxPlains ) / 2;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double hres = resolution / 2.0;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: int['] heightmap = new int[ maxCount + gradRange * 2' maxCount + gradRange * 2 ];
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: int['] heightmap = new int[ maxCount + gradRange * 2' maxCount + gradRange * 2 ];
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double dx = ( x + ( i - gradRange ) * resolution + hres ) / 256.0;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double dy = ( z + ( j - gradRange ) * resolution + hres ) / 256.0;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double hillVal = Tools.Clamp( myHillyNoise.GetValue( dx' dy' 0.5 ) * hillDiff + hillMid' myMinHilly' myMaxHilly );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double plainVal = Tools.Clamp( myHillyNoise.GetValue( dx' dy' 0.5 ) * plainDiff + plainMid' myMinPlains' myMaxPlains );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double trans = Tools.Clamp( ( myTransNoise.GetValue( dx' dy' 0.5 ) + 1.0 ) / 2.0' 0.0' 1.0 );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: double trans = Tools.Clamp( ( myTransNoise.GetValue( dx' dy' 0.5 ) + 1.0 ) / 2.0' 0.0' 1.0 );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: j < maxCount + gradRange * 2
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: i < maxCount + gradRange * 2
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: hres = res / 2.0;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: octree.SetCuboid( rcuboid' rock[ 14 ] );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: octree.SetCuboid( scuboid' sand[ 14 ] );
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: ( res == 1 || ( resolution > 1 && height == realHeight ) )                                  && gradmap[ nx' nz ] <= 8.0 * res
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bool[] bs = new bool[ 8 ];
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: i < 8
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 5 ] && ( bs[ 3 ] && bs[ 6 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 5 ] && ( bs[ 3 ] && bs[ 6 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 5 ] && ( bs[ 3 ] && bs[ 6 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 7 ] && ( bs[ 4 ] && bs[ 6 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 7 ] && ( bs[ 4 ] && bs[ 6 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 7 ] && ( bs[ 4 ] && bs[ 6 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: index |= 1 << 2;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 0 ] && ( bs[ 1 ] && bs[ 3 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: index |= 1 << 3;
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 2 ] && ( bs[ 1 ] && bs[ 4 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: bs[ 2 ] && ( bs[ 1 ] && bs[ 4 ] )
Magic Number,MarsMiner.Shared.Geometry,PerlinGenerator,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\PerlinGenerator.cs,Generate,The following statement contains a magic number: octree.SetCuboid(                                      colx' height - resolution' colz'                                      resolution' resolution' resolution'                                      (UInt16) ( curLeaf.Value + index - 15 ) );
Magic Number,MarsMiner.Shared.Geometry,World,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\World.cs,Generate,The following statement contains a magic number: int xLimit = width  / Chunk.Size / 2;
Magic Number,MarsMiner.Shared.Geometry,World,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\World.cs,Generate,The following statement contains a magic number: int zLimit = height / Chunk.Size / 2;
Magic Number,MarsMiner.Shared.Geometry,World,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Geometry\World.cs,FindChunkID,The following statement contains a magic number: return (UInt16) ( cx << 8 | cz );
Magic Number,MarsMiner.Shared.Networking,LocalConnection,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\LocalConnection.cs,EndReadingClientToServerPacket,The following statement contains a magic number: myLastClientToServerReadPos == myLastClientToServerWritePos && myClientToServerStream.Length >= 2048
Magic Number,MarsMiner.Shared.Networking,LocalConnection,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\LocalConnection.cs,EndReadingServerToClientPacket,The following statement contains a magic number: myLastServerToClientReadPos == myLastServerToClientWritePos && myServerToClientStream.Length >= 2048
Magic Number,MarsMiner.Shared.Networking,RemoteNetworkedObject,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\Networking.cs,RemoteNetworkedObject,The following statement contains a magic number: TimeOutDelay = 30.0;
Magic Number,MarsMiner.Shared.Networking,RemoteNetworkedObject,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\Networking.cs,RemoteNetworkedObject,The following statement contains a magic number: AliveCheckPeriod = 2.0;
Magic Number,MarsMiner.Shared.Networking,RemoteNetworkedObject,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Networking\Networking.cs,StartPacket,The following statement contains a magic number: stream.Write( BitConverter.GetBytes( type.ID )' 0' 2 );
Magic Number,MarsMiner.Shared.Octree,Face,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Face.cs,Face,The following statement contains a magic number: i < 6
Magic Number,MarsMiner.Shared.Octree,Octant,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Octant.cs,Octant,The following statement contains a magic number: Index = x << 2 | y << 1 | z;
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,ReplaceChild,The following statement contains a magic number: i < 8
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,ShouldMerge,The following statement contains a magic number: i < 8
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following statement contains a magic number: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,FindInnerNode,The following statement contains a magic number: int child = cX << 2 | cY << 1 | cZ;
Magic Number,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,FindOctantOfChild,The following statement contains a magic number: i < 8
Magic Number,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,GetHashCode,The following statement contains a magic number: return ( X << 16 | Y << 8 | Z ) ^ ( Height << 16 | Depth << 8 | Width );
Magic Number,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,GetHashCode,The following statement contains a magic number: return ( X << 16 | Y << 8 | Z ) ^ ( Height << 16 | Depth << 8 | Width );
Magic Number,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,GetHashCode,The following statement contains a magic number: return ( X << 16 | Y << 8 | Z ) ^ ( Height << 16 | Depth << 8 | Width );
Magic Number,MarsMiner.Shared.Octree,Cuboid,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\Cuboid.cs,GetHashCode,The following statement contains a magic number: return ( X << 16 | Y << 8 | Z ) ^ ( Height << 16 | Depth << 8 | Width );
Missing Default,MarsMiner.Shared.Octree,OctreeBranch<T>,D:\research\architectureSmells\repos\Metapyziks_MarsMiner\MarsMiner.Shared\Octree\OctreeBranch.cs,IsFaceSolid,The following switch statement is missing a default case: switch ( face.Index )              {                  case Face.LeftIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck );                  case Face.RightIndex:                      return                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.BottomIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck );                  case Face.TopIndex:                      return                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );                  case Face.FrontIndex:                      return                          myChildren[ 0 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 2 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 4 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 6 ].IsFaceSolid( face' solidCheck );                  case Face.BackIndex:                      return                          myChildren[ 1 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 3 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 5 ].IsFaceSolid( face' solidCheck ) &&                          myChildren[ 7 ].IsFaceSolid( face' solidCheck );              }
