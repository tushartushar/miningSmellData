Implementation smell,Namespace,Class,File,Method,Description
Long Method,examples_cs,csTransformCommand,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,RunCommand,The method has 156 lines of code.
Complex Method,examples_cs,csTransformCommand,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,RunCommand,Cyclomatic complexity of the method is 26
Complex Method,examples_cs,CopyGroupsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_copygroups.cs,RhinoUpdateObjectGroups,Cyclomatic complexity of the method is 11
Complex Method,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,examples_cs,CurveDeviationCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_crvdeviation.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,examples_cs,DivideCurveStraightCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dividecurvestraight.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,examples_cs,ExtendCurveCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_extendcurve.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,examples_cs,ExtendSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_extendsurface.cs,RunCommand,Cyclomatic complexity of the method is 9
Complex Method,examples_cs,GumballExampleCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_gumball.cs,RunCommand,Cyclomatic complexity of the method is 11
Complex Method,examples_cs,ContourCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_makerhinocontours.cs,RunCommand,Cyclomatic complexity of the method is 11
Complex Method,examples_cs,PickPointCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_pickpoint.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,examples_cs,RenameBlockCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_renameblock.cs,RunCommand,Cyclomatic complexity of the method is 9
Complex Method,examples_cs,RenameLayerCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_renamelayer.cs,RunCommand,Cyclomatic complexity of the method is 8
Complex Method,examples_cs,TightBoundingBoxCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_tightboundingbox.cs,RunCommand,Cyclomatic complexity of the method is 9
Long Parameter List,examples_cs,DeviationConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_crvdeviation.cs,DeviationConduit,The method has 6 parameters. Parameters: curveA' curveB' minDistPointA' minDistPointB' maxDistPointA' maxDistPointB
Long Parameter List,examples_cs,DivideCurveStraightCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dividecurvestraight.cs,NextintersectParamAndPoint,The method has 5 parameters. Parameters: overlapCurves' intersectPoints' curve' intersectParam' intersectPoint
Long Parameter List,examples_cs,CustomOptionPage,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,ChildHwndSourceHook,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Statement,examples_cs,CreateMeshFromBrepCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createmeshfrombrep.cs,RunCommand,The length of the statement  "      var rc = RhinoGet.GetOneObject("Select surface or polysurface to mesh"' true' ObjectType.Surface | ObjectType.PolysrfFilter' out obj_ref); " is 138.
Long Statement,examples_cs,CurveDeviationCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_crvdeviation.cs,RunCommand,The length of the statement  "        conduit = new DeviationConduit(curve_a' curve_b' min_dist_pt_a' min_dist_pt_b' max_dist_pt_a' max_dist_pt_b) {Enabled = true}; " is 126.
Long Statement,examples_cs,BrepFromCurveBBoxCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_curvebrepbox.cs,RunCommand,The length of the statement  "        RhinoApp.WriteLine("the curve's bounding box is degenerate (flat) in at least one direction so a box cannot be created."); " is 122.
Long Statement,examples_cs,CurveSurfaceIntersectCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_curvesurfaceintersect.cs,RunCommand,The length of the statement  "      RhinoApp.WriteLine("{0} overlap curves' and {1} intersection points"' overlap_curves.Length' intersection_points.Length); " is 121.
Long Statement,examples_cs,FurthestZOnSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_elevation.cs,MaxZIntersectionMethod,The length of the statement  "          max_z = (from c in overlap_curves select Math.Abs(c.PointAtEnd.Z) > Math.Abs(c.PointAtStart.Z) ? c.PointAtEnd.Z : c.PointAtStart.Z) " is 131.
Long Statement,examples_cs,ex_import3dm,C:\repos\mcneel_rhinocommon\examples\cs\ex_import3dm.cs,RunCommand,The length of the statement  "        filename = Rhino.Input.RhinoGet.GetFileName(Rhino.Input.Custom.GetFileNameMode.OpenRhinoOnly' null' "Import"' Rhino.RhinoApp.MainWindow()); " is 139.
Long Statement,examples_cs,InstanceDefinitionTreeCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_printinstancedefinitiontree.cs,DumpInstanceDefinition,The length of the statement  "        dump.Print(string.Format("{0} Instance definition {1} = {2}\n"' node' instanceDefinition.Index' instanceDefinition.Name)); " is 122.
Long Statement,examples_cs,RenameBlockCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_renameblock.cs,RunCommand,The length of the statement  "      if (!doc.InstanceDefinitions.Modify(instance_definition.Index' instance_definition_new_name' instance_definition.Description' true)) { " is 134.
Empty Catch Block,examples_cs,FurthestZOnSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_elevation.cs,MaxZProjectionMethod,The method has an empty catch block.
Magic Number,examples_cs,CustomMeshCommand,C:\repos\mcneel_rhinocommon\examples\cs\CustomMeshCommand.cs,RunCommand,The following statement contains a magic number: var base_mesh = Mesh.CreateFromSphere(new Sphere(Point3d.Origin' 10.0)' 20' 20);
Magic Number,examples_cs,CustomMeshCommand,C:\repos\mcneel_rhinocommon\examples\cs\CustomMeshCommand.cs,RunCommand,The following statement contains a magic number: var base_mesh = Mesh.CreateFromSphere(new Sphere(Point3d.Origin' 10.0)' 20' 20);
Magic Number,examples_cs,CustomMeshCommand,C:\repos\mcneel_rhinocommon\examples\cs\CustomMeshCommand.cs,RunCommand,The following statement contains a magic number: var base_mesh = Mesh.CreateFromSphere(new Sphere(Point3d.Origin' 10.0)' 20' 20);
Magic Number,examples_cs,GetScaleXform,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,CalculateTransform,The following statement contains a magic number: if (Math.Abs(len1) < 0.000001)          return Transform.Identity;
Magic Number,examples_cs,GetScaleXform,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,CalculateTransform,The following statement contains a magic number: if (Math.Abs(len2) < 0.000001)          return Transform.Identity;
Magic Number,examples_cs,GetScaleXform,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,CalculateTransform,The following statement contains a magic number: if (Math.Abs(len1) < 0.000001 || Math.Abs(len2) < 0.000001)          return Transform.Identity;
Magic Number,examples_cs,GetScaleXform,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,CalculateTransform,The following statement contains a magic number: if (Math.Abs(len1) < 0.000001 || Math.Abs(len2) < 0.000001)          return Transform.Identity;
Magic Number,examples_cs,csTransformCommand,C:\repos\mcneel_rhinocommon\examples\cs\examples_csCommand.cs,RunCommand,The following statement contains a magic number: for (; ; )        {          if (bAcceptDefault)          {            gp.AcceptNumber(true' false);            gp.SetDefaultNumber(m_scale);          }          else          {            gp.AcceptNothing(true);            gp.ClearDefault();          }            var res = gp.Get();          if (res == Rhino.Input.GetResult.Point)          {            _ref = gp.Point();            break;          }          if (res == Rhino.Input.GetResult.Number)          {            double scale = Math.Abs(gp.Number());            const double EPS_DIVIDE = 0.000001;            if (scale < EPS_DIVIDE)              continue;            m_scale = scale;            plane.Origin = anchor;              var xform = Transform.Scale(plane' m_scale' m_scale' m_scale);            TransformObjects(list' xform' copy.CurrentValue' copy.CurrentValue);            m_copy = copy.CurrentValue;            if (m_copy)            {              bAcceptDefault = false;              continue;            }            doc.Views.Redraw();            return Rhino.Commands.Result.Success;          }            if (res == Rhino.Input.GetResult.Nothing)          {            if (bAcceptDefault == false)              return Rhino.Commands.Result.Success;              plane.Origin = anchor;            var xform = Transform.Scale(plane' m_scale' m_scale' m_scale);            TransformObjects(list' xform' copy.CurrentValue' copy.CurrentValue);              m_copy = copy.CurrentValue;            if (m_copy)            {              bAcceptDefault = false;              continue;            }            doc.Views.Redraw();            return Rhino.Commands.Result.Success;          }          if (res == Rhino.Input.GetResult.Option)            continue;          return Rhino.Commands.Result.Cancel;        }
Magic Number,examples_cs,RTreeClosestPoint,C:\repos\mcneel_rhinocommon\examples\cs\ex_closestpoint.cs,RunCommand,The following statement contains a magic number: using (RTree tree = new RTree())        {          for (int i = 0; i < mesh.Vertices.Count; i++)          {            // we can make a C++ function that just builds an rtree from the            // vertices in one quick shot' but for now...            tree.Insert(mesh.Vertices[i]' i);          }            while (true)          {            Point3d point;            rc = Rhino.Input.RhinoGet.GetPoint("test point"' false' out point);            if (rc != Rhino.Commands.Result.Success)              break;              SearchData data = new SearchData(mesh' point);            // Use the first vertex in the mesh to define a start sphere            double distance = point.DistanceTo(mesh.Vertices[0]);            Sphere sphere = new Sphere(point' distance * 1.1);            if (tree.Search(sphere' SearchCallback' data))            {              doc.Objects.AddPoint(mesh.Vertices[data.Index]);              doc.Views.Redraw();              RhinoApp.WriteLine("Found point in {0} tests"' data.HitCount);            }          }        }
Magic Number,examples_cs,DrawArrowheadsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_conduitarrowheads.cs,RunCommand,The following statement contains a magic number: if (m_draw_conduit != null)        {          RhinoApp.WriteLine("Turn off existing arrowhead conduit");          m_draw_conduit.Enabled = false;          m_draw_conduit = null;        }        else        {          // get arrow head size          var go = new GetOption();          go.SetCommandPrompt("ArrowHead length in screen size (pixels) or world size (percentage of arrow length)?");          go.AddOption("screen");          go.AddOption("world");          go.Get();          if (go.CommandResult() != Result.Success)            return go.CommandResult();            int screen_size = 0;          double world_size = 0.0;          if (go.Option().EnglishName == "screen")          {            var gi = new GetInteger();            gi.SetLowerLimit(0' true);            gi.SetCommandPrompt("Length of arrow head in pixels");            gi.Get();            if (gi.CommandResult() != Result.Success)              return gi.CommandResult();            screen_size = gi.Number();          }          else          {            var gi = new GetInteger();            gi.SetLowerLimit(0' true);            gi.SetUpperLimit(100' false);            gi.SetCommandPrompt("Length of arrow head in percentage of total arrow length");            gi.Get();            if (gi.CommandResult() != Result.Success)              return gi.CommandResult();            world_size = gi.Number() / 100.0;          }              // get arrow start and end points          var gp = new GetPoint();          gp.SetCommandPrompt("Start of line");          gp.Get();          if (gp.CommandResult() != Result.Success)            return gp.CommandResult();          var start_point = gp.Point();            gp.SetCommandPrompt("End of line");          gp.SetBasePoint(start_point' false);          gp.DrawLineFromPoint(start_point' true);          gp.Get();          if (gp.CommandResult() != Result.Success)            return gp.CommandResult();          var end_point = gp.Point();            var v = end_point - start_point;          if (v.IsTiny(Rhino.RhinoMath.ZeroTolerance))            return Result.Nothing;            var line = new Line(start_point' end_point);            m_draw_conduit = new DrawArrowHeadsConduit(line' screen_size' world_size);          // toggle conduit on/off          m_draw_conduit.Enabled = true;          RhinoApp.WriteLine("Draw arrowheads conduit enabled.");        }
Magic Number,examples_cs,DrawArrowheadsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_conduitarrowheads.cs,RunCommand,The following statement contains a magic number: if (m_draw_conduit != null)        {          RhinoApp.WriteLine("Turn off existing arrowhead conduit");          m_draw_conduit.Enabled = false;          m_draw_conduit = null;        }        else        {          // get arrow head size          var go = new GetOption();          go.SetCommandPrompt("ArrowHead length in screen size (pixels) or world size (percentage of arrow length)?");          go.AddOption("screen");          go.AddOption("world");          go.Get();          if (go.CommandResult() != Result.Success)            return go.CommandResult();            int screen_size = 0;          double world_size = 0.0;          if (go.Option().EnglishName == "screen")          {            var gi = new GetInteger();            gi.SetLowerLimit(0' true);            gi.SetCommandPrompt("Length of arrow head in pixels");            gi.Get();            if (gi.CommandResult() != Result.Success)              return gi.CommandResult();            screen_size = gi.Number();          }          else          {            var gi = new GetInteger();            gi.SetLowerLimit(0' true);            gi.SetUpperLimit(100' false);            gi.SetCommandPrompt("Length of arrow head in percentage of total arrow length");            gi.Get();            if (gi.CommandResult() != Result.Success)              return gi.CommandResult();            world_size = gi.Number() / 100.0;          }              // get arrow start and end points          var gp = new GetPoint();          gp.SetCommandPrompt("Start of line");          gp.Get();          if (gp.CommandResult() != Result.Success)            return gp.CommandResult();          var start_point = gp.Point();            gp.SetCommandPrompt("End of line");          gp.SetBasePoint(start_point' false);          gp.DrawLineFromPoint(start_point' true);          gp.Get();          if (gp.CommandResult() != Result.Success)            return gp.CommandResult();          var end_point = gp.Point();            var v = end_point - start_point;          if (v.IsTiny(Rhino.RhinoMath.ZeroTolerance))            return Result.Nothing;            var line = new Line(start_point' end_point);            m_draw_conduit = new DrawArrowHeadsConduit(line' screen_size' world_size);          // toggle conduit on/off          m_draw_conduit.Enabled = true;          RhinoApp.WriteLine("Draw arrowheads conduit enabled.");        }
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: const int number_of_dimensions = 3;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: const int u_degree = 2;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: const int v_degree = 3;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: const int u_control_point_count = 3;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: const int v_control_point_count = 5;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: u_knots[2] = u_knots[3] = 1.0;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: u_knots[2] = u_knots[3] = 1.0;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[0] = v_knots[1] = v_knots[2] = 0.0;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[3] = 1.5;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[3] = 1.5;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[4] = v_knots[5] = v_knots[6] = 2.0;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[4] = v_knots[5] = v_knots[6] = 2.0;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[4] = v_knots[5] = v_knots[6] = 2.0;
Magic Number,examples_cs,CreateSurfaceFromPointsAndKnotsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_createsurfaceexample.cs,RunCommand,The following statement contains a magic number: v_knots[4] = v_knots[5] = v_knots[6] = 2.0;
Magic Number,examples_cs,CustomGeometryFilterCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_customgeometryfilter.cs,CircleWithRadiusOf10GeometryFilter,The following statement contains a magic number: if (geometry is Curve && (geometry as Curve).TryGetCircle(out circle))          is_circle_with_radius_of10 = circle.Radius <= 10.0 + m_tolerance && circle.Radius >= 10.0 - m_tolerance;
Magic Number,examples_cs,CustomGeometryFilterCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_customgeometryfilter.cs,CircleWithRadiusOf10GeometryFilter,The following statement contains a magic number: if (geometry is Curve && (geometry as Curve).TryGetCircle(out circle))          is_circle_with_radius_of10 = circle.Radius <= 10.0 + m_tolerance && circle.Radius >= 10.0 - m_tolerance;
Magic Number,examples_cs,AddRadialDimensionCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_addradialdimension.cs,RunCommand,The following statement contains a magic number: var radial_dimension =           new RadialDimension(center' point_on_curve' plane.XAxis' plane.Normal' 5.0);
Magic Number,examples_cs,MyConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_displayconduit.cs,PreDrawObjects,The following statement contains a magic number: e.Display.DrawArrow(new Line(c_plane.Origin' new Vector3d(c_plane.XAxis) * 10.0)' x_color);
Magic Number,examples_cs,MyConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_displayconduit.cs,PreDrawObjects,The following statement contains a magic number: e.Display.DrawArrow(new Line(c_plane.Origin' new Vector3d(c_plane.YAxis) * 10.0)' y_color);
Magic Number,examples_cs,MyConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_displayconduit.cs,PreDrawObjects,The following statement contains a magic number: e.Display.DrawArrow(new Line(c_plane.Origin' new Vector3d(c_plane.ZAxis) * 10.0)' z_color);
Magic Number,examples_cs,DisplayPrecisionCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_displayprecision.cs,RunCommand,The following statement contains a magic number: gi.SetUpperLimit(7' false);
Magic Number,examples_cs,DivideBySegmentsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dividebysegments.cs,RunCommand,The following statement contains a magic number: var segment_count = 2;
Magic Number,examples_cs,DivideCurveStraightCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dividecurvestraight.cs,RunCommand,The following statement contains a magic number: double distance_between_divisions = 5;
Magic Number,examples_cs,ChangeUiFromDifferentThreadCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dotneteventwatcher.cs,RunCommand,The following statement contains a magic number: m_window = new Window {Title = "Object ID and Thread ID"' Width = 500' Height = 75};
Magic Number,examples_cs,ChangeUiFromDifferentThreadCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dotneteventwatcher.cs,RunCommand,The following statement contains a magic number: m_window = new Window {Title = "Object ID and Thread ID"' Width = 500' Height = 75};
Magic Number,examples_cs,ChangeUiFromDifferentThreadCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dotneteventwatcher.cs,RunCommand,The following statement contains a magic number: add_sphere_delegate.BeginInvoke(new Point3d(0' 10' 0)' null' null);
Magic Number,examples_cs,ChangeUiFromDifferentThreadCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dotneteventwatcher.cs,RunCommand,The following statement contains a magic number: add_sphere_delegate.BeginInvoke(new Point3d(0' 20' 0)' null' null);
Magic Number,examples_cs,ChangeUiFromDifferentThreadCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_dotneteventwatcher.cs,AddSphere,The following statement contains a magic number: m_doc.Objects.AddSphere(new Sphere(center' 3));
Magic Number,examples_cs,CustomConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_drawoverlay.cs,DrawForeground,The following statement contains a magic number: var pt = new Rhino.Geometry.Point2d(bounds.Right - 100' bounds.Bottom - 30);
Magic Number,examples_cs,CustomConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_drawoverlay.cs,DrawForeground,The following statement contains a magic number: var pt = new Rhino.Geometry.Point2d(bounds.Right - 100' bounds.Bottom - 30);
Magic Number,examples_cs,EdgeSrfCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_edgesrf.cs,RunCommand,The following statement contains a magic number: go.GetMultiple(2' 4);
Magic Number,examples_cs,EdgeSrfCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_edgesrf.cs,RunCommand,The following statement contains a magic number: go.GetMultiple(2' 4);
Magic Number,examples_cs,FurthestZOnSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_elevation.cs,MaxZIntersectionMethod,The following statement contains a magic number: var line_curve = new LineCurve(new Point3d(x' y' 0)' new Point3d(x' y' max_dist_from_xy*2));
Magic Number,examples_cs,ExtendSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_extendsurface.cs,RunCommand,The following statement contains a magic number: var extended_surface = surface.Extend(trim.IsoStatus' 5.0' true);
Magic Number,examples_cs,ex_historyCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_historyCommand.cs,RunCommand,The following statement contains a magic number: int segmentCount = 2;
Magic Number,examples_cs,ex_historyCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_historyCommand.cs,RunCommand,The following statement contains a magic number: rc = Rhino.Input.RhinoGet.GetInteger("Number of segments"' false' ref segmentCount' 2' 100);
Magic Number,examples_cs,ex_historyCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_historyCommand.cs,RunCommand,The following statement contains a magic number: rc = Rhino.Input.RhinoGet.GetInteger("Number of segments"' false' ref segmentCount' 2' 100);
Magic Number,examples_cs,ex_historyCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_historyCommand.cs,ReadHistory,The following statement contains a magic number: if (!replay.TryGetInt(2' out pointCount))          return false;
Magic Number,examples_cs,ex_historyCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_historyCommand.cs,WriteHistory,The following statement contains a magic number: if (!history.SetInt(2' pointCount))          return false;
Magic Number,examples_cs,IsPlanarSurfaceInPlaneCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_issurfaceinplane.cs,RunCommand,The following statement contains a magic number: var plane = new Plane(corners[0]' corners[1]' corners[2]);
Magic Number,examples_cs,LeaderCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_leader.cs,RunCommand,The following statement contains a magic number: var points = new Point3d[]        {          new Point3d(1' 1' 0)'          new Point3d(5' 1' 0)'          new Point3d(5' 5' 0)'          new Point3d(9' 5' 0)        };
Magic Number,examples_cs,LeaderCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_leader.cs,RunCommand,The following statement contains a magic number: var points = new Point3d[]        {          new Point3d(1' 1' 0)'          new Point3d(5' 1' 0)'          new Point3d(5' 5' 0)'          new Point3d(9' 5' 0)        };
Magic Number,examples_cs,LeaderCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_leader.cs,RunCommand,The following statement contains a magic number: var points = new Point3d[]        {          new Point3d(1' 1' 0)'          new Point3d(5' 1' 0)'          new Point3d(5' 5' 0)'          new Point3d(9' 5' 0)        };
Magic Number,examples_cs,LeaderCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_leader.cs,RunCommand,The following statement contains a magic number: var points = new Point3d[]        {          new Point3d(1' 1' 0)'          new Point3d(5' 1' 0)'          new Point3d(5' 5' 0)'          new Point3d(9' 5' 0)        };
Magic Number,examples_cs,LeaderCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_leader.cs,RunCommand,The following statement contains a magic number: var points = new Point3d[]        {          new Point3d(1' 1' 0)'          new Point3d(5' 1' 0)'          new Point3d(5' 5' 0)'          new Point3d(9' 5' 0)        };
Magic Number,examples_cs,LoftCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_loft.cs,RunCommand,The following statement contains a magic number: gs.GetMultiple(2' 0);
Magic Number,examples_cs,MaximizeViewCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_maximizeview.cs,RunCommand,The following statement contains a magic number: if (parent_handle != IntPtr.Zero)          ShowWindow(parent_handle' 3);
Magic Number,examples_cs,MeshDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_meshdrawing.cs,RunCommand,The following statement contains a magic number: if (sphere.IsValid)        {          var mesh = Mesh.CreateFromSphere(sphere' 10' 10);          if (mesh == null)            return Result.Failure;            var conduit = new DrawBlueMeshConduit(mesh) {Enabled = true};          doc.Views.Redraw();            var in_str = "";          Rhino.Input.RhinoGet.GetString("press <Enter> to continue"' true' ref in_str);            conduit.Enabled = false;          doc.Views.Redraw();          return Result.Success;        }        else          return Result.Failure;
Magic Number,examples_cs,MeshDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_meshdrawing.cs,RunCommand,The following statement contains a magic number: if (sphere.IsValid)        {          var mesh = Mesh.CreateFromSphere(sphere' 10' 10);          if (mesh == null)            return Result.Failure;            var conduit = new DrawBlueMeshConduit(mesh) {Enabled = true};          doc.Views.Redraw();            var in_str = "";          Rhino.Input.RhinoGet.GetString("press <Enter> to continue"' true' ref in_str);            conduit.Enabled = false;          doc.Views.Redraw();          return Result.Success;        }        else          return Result.Failure;
Magic Number,examples_cs,ModifyObjectColorCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_modifyobjectcolor.cs,RunCommand,The following statement contains a magic number: var sphere = new Sphere(Point3d.Origin' 5.0);
Magic Number,examples_cs,PointsConduit,C:\repos\mcneel_rhinocommon\examples\cs\ex_pickobjects.cs,DrawForeground,The following statement contains a magic number: if (m_conduit_points != null)          foreach (var cp in m_conduit_points)           e.Display.DrawPoint(cp.Point' PointStyle.Simple' 3' cp.Color);
Magic Number,examples_cs,PlaneSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_planesurface.cs,RunCommand,The following statement contains a magic number: var plane = new Plane(corners[0]' corners[1]' corners[2]);
Magic Number,examples_cs,PlaneSurfaceCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_planesurface.cs,RunCommand,The following statement contains a magic number: var plane_surface = new PlaneSurface(plane'           new Interval(0' corners[0].DistanceTo(corners[1]))'           new Interval(0' corners[1].DistanceTo(corners[2])));
Magic Number,examples_cs,InstanceDefinitionTreeCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_printinstancedefinitiontree.cs,RunCommand,The following statement contains a magic number: dump.IndentSize = 4;
Magic Number,examples_cs,ProjectPointsToBrepsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_projectpointstobreps.cs,RunCommand,The following statement contains a magic number: var points = Intersection.ProjectPointsToBreps(                     new List<Brep> {brep}' // brep on which to project                     new List<Point3d> {new Point3d(0' 0' 0)' new Point3d(3'0'3)' new Point3d(-2'0'-2)}' // some random points to project                     new Vector3d(0' 1' 0)' // project on Y axis                     doc.ModelAbsoluteTolerance);
Magic Number,examples_cs,ProjectPointsToBrepsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_projectpointstobreps.cs,RunCommand,The following statement contains a magic number: var points = Intersection.ProjectPointsToBreps(                     new List<Brep> {brep}' // brep on which to project                     new List<Point3d> {new Point3d(0' 0' 0)' new Point3d(3'0'3)' new Point3d(-2'0'-2)}' // some random points to project                     new Vector3d(0' 1' 0)' // project on Y axis                     doc.ModelAbsoluteTolerance);
Magic Number,examples_cs,ProjectPointsToBrepsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_projectpointstobreps.cs,RunCommand,The following statement contains a magic number: var points = Intersection.ProjectPointsToBreps(                     new List<Brep> {brep}' // brep on which to project                     new List<Point3d> {new Point3d(0' 0' 0)' new Point3d(3'0'3)' new Point3d(-2'0'-2)}' // some random points to project                     new Vector3d(0' 1' 0)' // project on Y axis                     doc.ModelAbsoluteTolerance);
Magic Number,examples_cs,ProjectPointsToBrepsCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_projectpointstobreps.cs,RunCommand,The following statement contains a magic number: var points = Intersection.ProjectPointsToBreps(                     new List<Brep> {brep}' // brep on which to project                     new List<Point3d> {new Point3d(0' 0' 0)' new Point3d(3'0'3)' new Point3d(-2'0'-2)}' // some random points to project                     new Vector3d(0' 1' 0)' // project on Y axis                     doc.ModelAbsoluteTolerance);
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,RunCommand,The following statement contains a magic number: while (go.Get() == Rhino.Input.GetResult.Option)        {          m_draw_single_sprite = sprite_mode.CurrentValue;          m_sprite_size = (float)size_option.CurrentValue;          m_draw_world_location = space_option.CurrentValue;          if (go.OptionIndex() == option_go)          {            var gs = new Rhino.Input.Custom.GetOption();            gs.SetCommandPrompt("press enter/escape to end");            gs.SetWaitDuration(1);              var vp = doc.Views.ActiveView.MainViewport;            while (gs.Get() == Rhino.Input.GetResult.Timeout)            {              vp.Rotate(0.1' Vector3d.ZAxis' Point3d.Origin);              doc.Views.Redraw();            }          }          else if (go.OptionIndex() == option_file)          {            System.Windows.Forms.OpenFileDialog dlg = new System.Windows.Forms.OpenFileDialog();            if (dlg.ShowDialog(RhinoApp.MainWindow()) == System.Windows.Forms.DialogResult.OK)            {              System.Drawing.Bitmap bmp = new System.Drawing.Bitmap(dlg.FileName);              m_sprite = new Rhino.Display.DisplayBitmap(bmp);            }            doc.Views.Redraw();          }          else            doc.Views.Redraw();        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,DisplayPipeline_CalculateBoundingBox,The following statement contains a magic number: if (m_draw_single_sprite)        {          BoundingBox bbox = new BoundingBox(new Point3d(20' 0' 0)' new Point3d(20' 0' 0));          e.IncludeBoundingBox(bbox);        }        else        {          var items = GetItems();          e.IncludeBoundingBox(items.BoundingBox);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,DisplayPipeline_CalculateBoundingBox,The following statement contains a magic number: if (m_draw_single_sprite)        {          BoundingBox bbox = new BoundingBox(new Point3d(20' 0' 0)' new Point3d(20' 0' 0));          e.IncludeBoundingBox(bbox);        }        else        {          var items = GetItems();          e.IncludeBoundingBox(items.BoundingBox);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,DisplayPipeline_PostDrawObjects,The following statement contains a magic number: if (m_draw_single_sprite)        {          if (m_draw_world_location)            e.Display.DrawSprite(spr' new Point3d(20' 0' 0)' m_sprite_size' System.Drawing.Color.White' false);          else            e.Display.DrawSprite(spr' new Point2d(150' 150)' m_sprite_size' System.Drawing.Color.White);        }        else        {          var items = GetItems();          e.Display.DrawSprites(spr' items' m_sprite_size' false);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,DisplayPipeline_PostDrawObjects,The following statement contains a magic number: if (m_draw_single_sprite)        {          if (m_draw_world_location)            e.Display.DrawSprite(spr' new Point3d(20' 0' 0)' m_sprite_size' System.Drawing.Color.White' false);          else            e.Display.DrawSprite(spr' new Point2d(150' 150)' m_sprite_size' System.Drawing.Color.White);        }        else        {          var items = GetItems();          e.Display.DrawSprites(spr' items' m_sprite_size' false);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,DisplayPipeline_PostDrawObjects,The following statement contains a magic number: if (m_draw_single_sprite)        {          if (m_draw_world_location)            e.Display.DrawSprite(spr' new Point3d(20' 0' 0)' m_sprite_size' System.Drawing.Color.White' false);          else            e.Display.DrawSprite(spr' new Point2d(150' 150)' m_sprite_size' System.Drawing.Color.White);        }        else        {          var items = GetItems();          e.Display.DrawSprites(spr' items' m_sprite_size' false);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetItems,The following statement contains a magic number: if (m_items == null)        {          m_items = new Rhino.Display.DisplayBitmapDrawList();          var points = new System.Collections.Generic.List<Point3d>();          var colors = new System.Collections.Generic.List<System.Drawing.Color>();          var random = new System.Random();          for (int i = 0; i < 200; i++)          {            double x = random.NextDouble();            double y = random.NextDouble();            double z = random.NextDouble();            points.Add(new Point3d(-30 + x * 60' -30 + y * 60' -30 + z * 60));            int r = (int)(x * 255);            int g = (int)(y * 255);            int b = (int)(z * 255);            colors.Add(System.Drawing.Color.FromArgb(r' g' b));          }          m_items.SetPoints(points' colors);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SpriteDrawingCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_spritedrawing.cs,GetSprite,The following statement contains a magic number: if (m_sprite == null)        {          var bmp = new System.Drawing.Bitmap(64' 64);          using (System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bmp))          {            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;            g.Clear(System.Drawing.Color.Transparent);            var pen = new System.Drawing.Pen(System.Drawing.Color.White' 6);            pen.EndCap = System.Drawing.Drawing2D.LineCap.Round;            pen.StartCap = pen.EndCap;            g.DrawArc(pen' new System.Drawing.Rectangle(16' 16' 32' 32)' 0' 360);            g.DrawLine(pen' new System.Drawing.Point(8' 8)' new System.Drawing.Point(56' 56));            g.DrawLine(pen' new System.Drawing.Point(8' 56)' new System.Drawing.Point(56' 8));            pen.Dispose();          }          m_sprite = new Rhino.Display.DisplayBitmap(bmp);        }
Magic Number,examples_cs,SurfaceFromCornersCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_srfpt.cs,RunCommand,The following statement contains a magic number: var surface = NurbsSurface.CreateFromCorners(          new Point3d(5' 0' 0)'          new Point3d(5' 5' 5)'          new Point3d(0' 5' 0)'          new Point3d(0' 0' 0));
Magic Number,examples_cs,SurfaceFromCornersCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_srfpt.cs,RunCommand,The following statement contains a magic number: var surface = NurbsSurface.CreateFromCorners(          new Point3d(5' 0' 0)'          new Point3d(5' 5' 5)'          new Point3d(0' 5' 0)'          new Point3d(0' 0' 0));
Magic Number,examples_cs,SurfaceFromCornersCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_srfpt.cs,RunCommand,The following statement contains a magic number: var surface = NurbsSurface.CreateFromCorners(          new Point3d(5' 0' 0)'          new Point3d(5' 5' 5)'          new Point3d(0' 5' 0)'          new Point3d(0' 0' 0));
Magic Number,examples_cs,SurfaceFromCornersCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_srfpt.cs,RunCommand,The following statement contains a magic number: var surface = NurbsSurface.CreateFromCorners(          new Point3d(5' 0' 0)'          new Point3d(5' 5' 5)'          new Point3d(0' 5' 0)'          new Point3d(0' 0' 0));
Magic Number,examples_cs,SurfaceFromCornersCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_srfpt.cs,RunCommand,The following statement contains a magic number: var surface = NurbsSurface.CreateFromCorners(          new Point3d(5' 0' 0)'          new Point3d(5' 5' 5)'          new Point3d(0' 5' 0)'          new Point3d(0' 0' 0));
Magic Number,examples_cs,TightBoundingBoxCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_tightboundingbox.cs,RunCommand,The following statement contains a magic number: foreach (var mesh in meshes)        {          var bbox = mesh.GetBoundingBox(true);          switch (bbox.IsDegenerate(doc.ModelAbsoluteTolerance))          {            case 3:            case 2:              return Result.Failure;            case 1:              // rectangle              // box with 8 corners flattened to rectangle with 4 corners              var rectangle_corners = bbox.GetCorners().Distinct().ToList();              // add 1st point as last to close the loop              rectangle_corners.Add(rectangle_corners[0]);              doc.Objects.AddPolyline(rectangle_corners);              doc.Views.Redraw();              break;            case 0:               // box              var brep_box = new Box(bbox).ToBrep();              doc.Objects.AddBrep(brep_box);              doc.Views.Redraw();              break;          }        }
Magic Number,examples_cs,TightBoundingBoxCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_tightboundingbox.cs,RunCommand,The following statement contains a magic number: foreach (var mesh in meshes)        {          var bbox = mesh.GetBoundingBox(true);          switch (bbox.IsDegenerate(doc.ModelAbsoluteTolerance))          {            case 3:            case 2:              return Result.Failure;            case 1:              // rectangle              // box with 8 corners flattened to rectangle with 4 corners              var rectangle_corners = bbox.GetCorners().Distinct().ToList();              // add 1st point as last to close the loop              rectangle_corners.Add(rectangle_corners[0]);              doc.Objects.AddPolyline(rectangle_corners);              doc.Views.Redraw();              break;            case 0:               // box              var brep_box = new Box(bbox).ToBrep();              doc.Objects.AddBrep(brep_box);              doc.Views.Redraw();              break;          }        }
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(28' 44);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(28' 44);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(80' 17);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(80' 17);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(4' 4);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(4' 4);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(158' 13);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(158' 13);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(344' 385);
Magic Number,examples_cs,OptionsControl,C:\repos\mcneel_rhinocommon\examples\cs\OptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(344' 385);
Missing Default,examples_cs,IntersectLineCircleCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_intersectlinecircle.cs,RunCommand,The following switch statement is missing a default case: switch (line_circle_intersect) {          case LineCircleIntersection.None:            msg = "line does not intersect circle";            break;          case LineCircleIntersection.Single:            msg = string.Format("line intersects circle at point ({0})"' point1);            doc.Objects.AddPoint(point1);            break;          case LineCircleIntersection.Multiple:            msg = string.Format("line intersects circle at points ({0}) and ({1})"'              point1' point2);            doc.Objects.AddPoint(point1);            doc.Objects.AddPoint(point2);            break;        }
Missing Default,examples_cs,TightBoundingBoxCommand,C:\repos\mcneel_rhinocommon\examples\cs\ex_tightboundingbox.cs,RunCommand,The following switch statement is missing a default case: switch (bbox.IsDegenerate(doc.ModelAbsoluteTolerance))          {            case 3:            case 2:              return Result.Failure;            case 1:              // rectangle              // box with 8 corners flattened to rectangle with 4 corners              var rectangle_corners = bbox.GetCorners().Distinct().ToList();              // add 1st point as last to close the loop              rectangle_corners.Add(rectangle_corners[0]);              doc.Objects.AddPolyline(rectangle_corners);              doc.Views.Redraw();              break;            case 0:               // box              var brep_box = new Box(bbox).ToBrep();              doc.Objects.AddBrep(brep_box);              doc.Views.Redraw();              break;          }
Missing Default,examples_cs,WpfOptionsPage,C:\repos\mcneel_rhinocommon\examples\cs\WpfOptionsPage.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 11 "..\..\WpfOptionsPage.xaml"              ((System.Windows.Controls.TextBox)(target)).KeyDown += new System.Windows.Input.KeyEventHandler(this.OnKeyDown);                            #line default              #line hidden              return;              }
