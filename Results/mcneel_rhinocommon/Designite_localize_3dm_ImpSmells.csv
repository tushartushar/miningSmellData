Implementation smell,Namespace,Class,File,Method,Description
Magic Number,localize_3dm,Program,C:\repos\mcneel_rhinocommon\examples\opennurbs_build\cs\localize_3dm\Program.cs,Localize,The following statement contains a magic number: using (var file3dm = Rhino.FileIO.File3dm.Read(sourceModel))        {          if (file3dm == null)          {            Console.Error.WriteLine("Unable to open file '{0}'"' sourceModel);            return 1;          }          foreach (var layer in file3dm.Layers)          {            var path = string.Format("//RhinoModel/Layers/Layer[@English='{0}']"' layer.Name);            var nameNode = (XmlElement)doc.SelectSingleNode(path);            if (nameNode != null)              layer.Name = nameNode.GetAttribute("Localized");          }          foreach (var dimstyle in file3dm.DimStyles)          {            var path = string.Format("//RhinoModel/DimStyles/DimStyle[@English='{0}']"' dimstyle.Name);            var nameNode = (XmlElement)doc.SelectSingleNode(path);            if (nameNode != null)              dimstyle.Name = nameNode.GetAttribute("Localized");          }          foreach (var linetype in file3dm.Linetypes)          {            var path = string.Format("//RhinoModel/Linetypes/Linetype[@English='{0}']"' linetype.Name);            var nameNode = (XmlElement)doc.SelectSingleNode(path);            if (nameNode != null)              linetype.Name = nameNode.GetAttribute("Localized");          }          foreach (var hatchpattern in file3dm.HatchPatterns)          {            var path = string.Format("//RhinoModel/HatchPatterns/HatchPattern[@English='{0}']"' hatchpattern.Name);            var nameNode = (XmlElement)doc.SelectSingleNode(path);            if (nameNode != null)              hatchpattern.Name = nameNode.GetAttribute("Localized");          }          foreach (var material in file3dm.Materials)          {            var path = string.Format("//RhinoModel/Materials/Material[@English='{0}']"' material.Name);            var nameNode = (XmlElement)doc.SelectSingleNode(path);            if (nameNode != null)              material.Name = nameNode.GetAttribute("Localized");          }            // TODO: Handle These:          /*           * Texture Names           * Environment Names           */            foreach (var view in file3dm.Views)          {            var path = string.Format("//RhinoModel/Viewports/Viewport[@English='{0}']"' view.Name);            var nameNode = (XmlElement)doc.SelectSingleNode(path);            if (nameNode != null)              view.Name = nameNode.GetAttribute("Localized");          }            foreach (var obj in file3dm.Objects)          {            var path = string.Format("//RhinoModel/Objects/Object[@English='{0}']"' obj.Attributes.Name.Replace("'"' "&apos;"));            var node = (XmlElement)doc.SelectSingleNode(path);            if (node != null)              obj.Attributes.Name = node.GetAttribute("Localized");          }            var notesNode = (XmlElement)doc.SelectSingleNode("//RhinoModel/Notes");          if (notesNode != null)          {            file3dm.Notes.Notes = notesNode.InnerText;          }            string filename = docElem.GetAttribute("Filename");          if (string.IsNullOrEmpty(filename))            filename = System.IO.Path.GetFileName(sourceModel);            file3dm.Polish();          file3dm.Write(System.IO.Path.Combine(targetDir' filename)' 5);            return 0;        }
