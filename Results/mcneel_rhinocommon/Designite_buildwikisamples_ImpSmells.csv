Implementation smell,Namespace,Class,File,Method,Description
Complex Method,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,Cyclomatic complexity of the method is 15
Magic Number,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < csfiles.Length; i++)        {          string filename = System.IO.Path.GetFileNameWithoutExtension(csfiles[i]);          //if (filename != "ex_sortpoints") continue;          string wikiname = filename.Substring(3) + ".txt"; // prune "ex_"          string wikifile = System.IO.Path.Combine(wikidir' wikiname);          StringBuilder sb = new StringBuilder();          sb.AppendLine("===== " + filename.Substring(3) + " =====");          sb.AppendLine();          sb.AppendLine("===== C# =====");          sb.AppendLine("<code c#>");          string[] lines = System.IO.File.ReadAllLines(csfiles[i]);          bool inblock = false;          for (int j = 0; j < lines.Length; j++)          {            if (!inblock)            {              if (lines[j].StartsWith("{"))                inblock = true;              continue;            }            if (lines[j].StartsWith("}"))              break;            if (lines[j].Length < 2)              sb.AppendLine(lines[j]);            else              sb.AppendLine(lines[j].Substring(2));          }          sb.AppendLine("</code>");            string vbpath = System.IO.Path.Combine(vbdir' filename + ".vb");          if (System.IO.File.Exists(vbpath))          {            lines = System.IO.File.ReadAllLines(vbpath);            sb.AppendLine("===== VB.NET =====");            sb.AppendLine("<code vb>");            inblock = false;            for (int j = 0; j < lines.Length; j++)            {              if (!inblock)              {                if (lines[j].StartsWith(" "))                  inblock = true;                else                  continue;              }              if (lines[j].StartsWith("End Class"))                break;              if (lines[j].Length < 2)                sb.AppendLine(lines[j]);              else                sb.AppendLine(lines[j].Substring(2));            }            sb.AppendLine("</code>");          }            string pypath = System.IO.Path.Combine(pydir' filename + ".py");          if (System.IO.File.Exists(pypath))          {            lines = System.IO.File.ReadAllLines(pypath);            sb.AppendLine("===== Python =====");            sb.AppendLine("<code python>");            for (int j = 0; j < lines.Length; j++)            {              sb.AppendLine(lines[j]);            }            sb.AppendLine("</code>");          }            sb.AppendLine();          sb.AppendLine("{{tag>Developer rhinocommon}}");          System.IO.File.WriteAllText(wikifile' sb.ToString());        }
Magic Number,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < csfiles.Length; i++)        {          string filename = System.IO.Path.GetFileNameWithoutExtension(csfiles[i]);          //if (filename != "ex_sortpoints") continue;          string wikiname = filename.Substring(3) + ".txt"; // prune "ex_"          string wikifile = System.IO.Path.Combine(wikidir' wikiname);          StringBuilder sb = new StringBuilder();          sb.AppendLine("===== " + filename.Substring(3) + " =====");          sb.AppendLine();          sb.AppendLine("===== C# =====");          sb.AppendLine("<code c#>");          string[] lines = System.IO.File.ReadAllLines(csfiles[i]);          bool inblock = false;          for (int j = 0; j < lines.Length; j++)          {            if (!inblock)            {              if (lines[j].StartsWith("{"))                inblock = true;              continue;            }            if (lines[j].StartsWith("}"))              break;            if (lines[j].Length < 2)              sb.AppendLine(lines[j]);            else              sb.AppendLine(lines[j].Substring(2));          }          sb.AppendLine("</code>");            string vbpath = System.IO.Path.Combine(vbdir' filename + ".vb");          if (System.IO.File.Exists(vbpath))          {            lines = System.IO.File.ReadAllLines(vbpath);            sb.AppendLine("===== VB.NET =====");            sb.AppendLine("<code vb>");            inblock = false;            for (int j = 0; j < lines.Length; j++)            {              if (!inblock)              {                if (lines[j].StartsWith(" "))                  inblock = true;                else                  continue;              }              if (lines[j].StartsWith("End Class"))                break;              if (lines[j].Length < 2)                sb.AppendLine(lines[j]);              else                sb.AppendLine(lines[j].Substring(2));            }            sb.AppendLine("</code>");          }            string pypath = System.IO.Path.Combine(pydir' filename + ".py");          if (System.IO.File.Exists(pypath))          {            lines = System.IO.File.ReadAllLines(pypath);            sb.AppendLine("===== Python =====");            sb.AppendLine("<code python>");            for (int j = 0; j < lines.Length; j++)            {              sb.AppendLine(lines[j]);            }            sb.AppendLine("</code>");          }            sb.AppendLine();          sb.AppendLine("{{tag>Developer rhinocommon}}");          System.IO.File.WriteAllText(wikifile' sb.ToString());        }
Magic Number,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < csfiles.Length; i++)        {          string filename = System.IO.Path.GetFileNameWithoutExtension(csfiles[i]);          //if (filename != "ex_sortpoints") continue;          string wikiname = filename.Substring(3) + ".txt"; // prune "ex_"          string wikifile = System.IO.Path.Combine(wikidir' wikiname);          StringBuilder sb = new StringBuilder();          sb.AppendLine("===== " + filename.Substring(3) + " =====");          sb.AppendLine();          sb.AppendLine("===== C# =====");          sb.AppendLine("<code c#>");          string[] lines = System.IO.File.ReadAllLines(csfiles[i]);          bool inblock = false;          for (int j = 0; j < lines.Length; j++)          {            if (!inblock)            {              if (lines[j].StartsWith("{"))                inblock = true;              continue;            }            if (lines[j].StartsWith("}"))              break;            if (lines[j].Length < 2)              sb.AppendLine(lines[j]);            else              sb.AppendLine(lines[j].Substring(2));          }          sb.AppendLine("</code>");            string vbpath = System.IO.Path.Combine(vbdir' filename + ".vb");          if (System.IO.File.Exists(vbpath))          {            lines = System.IO.File.ReadAllLines(vbpath);            sb.AppendLine("===== VB.NET =====");            sb.AppendLine("<code vb>");            inblock = false;            for (int j = 0; j < lines.Length; j++)            {              if (!inblock)              {                if (lines[j].StartsWith(" "))                  inblock = true;                else                  continue;              }              if (lines[j].StartsWith("End Class"))                break;              if (lines[j].Length < 2)                sb.AppendLine(lines[j]);              else                sb.AppendLine(lines[j].Substring(2));            }            sb.AppendLine("</code>");          }            string pypath = System.IO.Path.Combine(pydir' filename + ".py");          if (System.IO.File.Exists(pypath))          {            lines = System.IO.File.ReadAllLines(pypath);            sb.AppendLine("===== Python =====");            sb.AppendLine("<code python>");            for (int j = 0; j < lines.Length; j++)            {              sb.AppendLine(lines[j]);            }            sb.AppendLine("</code>");          }            sb.AppendLine();          sb.AppendLine("{{tag>Developer rhinocommon}}");          System.IO.File.WriteAllText(wikifile' sb.ToString());        }
Magic Number,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < csfiles.Length; i++)        {          string filename = System.IO.Path.GetFileNameWithoutExtension(csfiles[i]);          //if (filename != "ex_sortpoints") continue;          string wikiname = filename.Substring(3) + ".txt"; // prune "ex_"          string wikifile = System.IO.Path.Combine(wikidir' wikiname);          StringBuilder sb = new StringBuilder();          sb.AppendLine("===== " + filename.Substring(3) + " =====");          sb.AppendLine();          sb.AppendLine("===== C# =====");          sb.AppendLine("<code c#>");          string[] lines = System.IO.File.ReadAllLines(csfiles[i]);          bool inblock = false;          for (int j = 0; j < lines.Length; j++)          {            if (!inblock)            {              if (lines[j].StartsWith("{"))                inblock = true;              continue;            }            if (lines[j].StartsWith("}"))              break;            if (lines[j].Length < 2)              sb.AppendLine(lines[j]);            else              sb.AppendLine(lines[j].Substring(2));          }          sb.AppendLine("</code>");            string vbpath = System.IO.Path.Combine(vbdir' filename + ".vb");          if (System.IO.File.Exists(vbpath))          {            lines = System.IO.File.ReadAllLines(vbpath);            sb.AppendLine("===== VB.NET =====");            sb.AppendLine("<code vb>");            inblock = false;            for (int j = 0; j < lines.Length; j++)            {              if (!inblock)              {                if (lines[j].StartsWith(" "))                  inblock = true;                else                  continue;              }              if (lines[j].StartsWith("End Class"))                break;              if (lines[j].Length < 2)                sb.AppendLine(lines[j]);              else                sb.AppendLine(lines[j].Substring(2));            }            sb.AppendLine("</code>");          }            string pypath = System.IO.Path.Combine(pydir' filename + ".py");          if (System.IO.File.Exists(pypath))          {            lines = System.IO.File.ReadAllLines(pypath);            sb.AppendLine("===== Python =====");            sb.AppendLine("<code python>");            for (int j = 0; j < lines.Length; j++)            {              sb.AppendLine(lines[j]);            }            sb.AppendLine("</code>");          }            sb.AppendLine();          sb.AppendLine("{{tag>Developer rhinocommon}}");          System.IO.File.WriteAllText(wikifile' sb.ToString());        }
Magic Number,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < csfiles.Length; i++)        {          string filename = System.IO.Path.GetFileNameWithoutExtension(csfiles[i]);          //if (filename != "ex_sortpoints") continue;          string wikiname = filename.Substring(3) + ".txt"; // prune "ex_"          string wikifile = System.IO.Path.Combine(wikidir' wikiname);          StringBuilder sb = new StringBuilder();          sb.AppendLine("===== " + filename.Substring(3) + " =====");          sb.AppendLine();          sb.AppendLine("===== C# =====");          sb.AppendLine("<code c#>");          string[] lines = System.IO.File.ReadAllLines(csfiles[i]);          bool inblock = false;          for (int j = 0; j < lines.Length; j++)          {            if (!inblock)            {              if (lines[j].StartsWith("{"))                inblock = true;              continue;            }            if (lines[j].StartsWith("}"))              break;            if (lines[j].Length < 2)              sb.AppendLine(lines[j]);            else              sb.AppendLine(lines[j].Substring(2));          }          sb.AppendLine("</code>");            string vbpath = System.IO.Path.Combine(vbdir' filename + ".vb");          if (System.IO.File.Exists(vbpath))          {            lines = System.IO.File.ReadAllLines(vbpath);            sb.AppendLine("===== VB.NET =====");            sb.AppendLine("<code vb>");            inblock = false;            for (int j = 0; j < lines.Length; j++)            {              if (!inblock)              {                if (lines[j].StartsWith(" "))                  inblock = true;                else                  continue;              }              if (lines[j].StartsWith("End Class"))                break;              if (lines[j].Length < 2)                sb.AppendLine(lines[j]);              else                sb.AppendLine(lines[j].Substring(2));            }            sb.AppendLine("</code>");          }            string pypath = System.IO.Path.Combine(pydir' filename + ".py");          if (System.IO.File.Exists(pypath))          {            lines = System.IO.File.ReadAllLines(pypath);            sb.AppendLine("===== Python =====");            sb.AppendLine("<code python>");            for (int j = 0; j < lines.Length; j++)            {              sb.AppendLine(lines[j]);            }            sb.AppendLine("</code>");          }            sb.AppendLine();          sb.AppendLine("{{tag>Developer rhinocommon}}");          System.IO.File.WriteAllText(wikifile' sb.ToString());        }
Magic Number,buildwikisamples,Program,C:\repos\mcneel_rhinocommon\examples\buildwikisamples\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < csfiles.Length; i++)        {          string filename = System.IO.Path.GetFileNameWithoutExtension(csfiles[i]);          //if (filename != "ex_sortpoints") continue;          string wikiname = filename.Substring(3) + ".txt"; // prune "ex_"          string wikifile = System.IO.Path.Combine(wikidir' wikiname);          StringBuilder sb = new StringBuilder();          sb.AppendLine("===== " + filename.Substring(3) + " =====");          sb.AppendLine();          sb.AppendLine("===== C# =====");          sb.AppendLine("<code c#>");          string[] lines = System.IO.File.ReadAllLines(csfiles[i]);          bool inblock = false;          for (int j = 0; j < lines.Length; j++)          {            if (!inblock)            {              if (lines[j].StartsWith("{"))                inblock = true;              continue;            }            if (lines[j].StartsWith("}"))              break;            if (lines[j].Length < 2)              sb.AppendLine(lines[j]);            else              sb.AppendLine(lines[j].Substring(2));          }          sb.AppendLine("</code>");            string vbpath = System.IO.Path.Combine(vbdir' filename + ".vb");          if (System.IO.File.Exists(vbpath))          {            lines = System.IO.File.ReadAllLines(vbpath);            sb.AppendLine("===== VB.NET =====");            sb.AppendLine("<code vb>");            inblock = false;            for (int j = 0; j < lines.Length; j++)            {              if (!inblock)              {                if (lines[j].StartsWith(" "))                  inblock = true;                else                  continue;              }              if (lines[j].StartsWith("End Class"))                break;              if (lines[j].Length < 2)                sb.AppendLine(lines[j]);              else                sb.AppendLine(lines[j].Substring(2));            }            sb.AppendLine("</code>");          }            string pypath = System.IO.Path.Combine(pydir' filename + ".py");          if (System.IO.File.Exists(pypath))          {            lines = System.IO.File.ReadAllLines(pypath);            sb.AppendLine("===== Python =====");            sb.AppendLine("<code python>");            for (int j = 0; j < lines.Length; j++)            {              sb.AppendLine(lines[j]);            }            sb.AppendLine("</code>");          }            sb.AppendLine();          sb.AppendLine("{{tag>Developer rhinocommon}}");          System.IO.File.WriteAllText(wikifile' sb.ToString());        }
