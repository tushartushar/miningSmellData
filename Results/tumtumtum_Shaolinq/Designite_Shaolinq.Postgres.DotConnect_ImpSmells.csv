Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,ResolveSqlFunction,Cyclomatic complexity of the method is 20
Complex Method,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,DecorateException,Cyclomatic complexity of the method is 11
Long Parameter List,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,PostgresSqlQueryFormatter,The method has 6 parameters. Parameters: options' sqlDialect' sqlDataTypeProvider' typeDescriptorProvider' schemaName' convertEnumsToText
Long Parameter List,Shaolinq.Postgres.DotConnect,PostgresDotConnectConfiguration,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectConfiguration.cs,Create,The method has 10 parameters. Parameters: databaseName' serverName' userId' password' poolConnections' categories' port' unpreparedExecute' commandTimeout' connectionTimeout
Long Parameter List,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,PostgresDotConnectSqlDatabaseContext,The method has 5 parameters. Parameters: model' sqlDialect' sqlDataTypeProvider' sqlQueryFormatterManager' contextInfo
Long Parameter List,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlQueryFormatter.cs,PostgresDotConnectSqlQueryFormatter,The method has 6 parameters. Parameters: options' sqlDialect' sqlDataTypeProvider' typeDescriptorProvider' schemaName' convertEnumsToText
Long Identifier,Shaolinq.Postgres,PostgresEnumSqlDataType,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresEnumSqlDataType.cs,PostgresEnumSqlDataType,The length of the parameter constraintDefaultsConfiguration is 31.
Long Identifier,Shaolinq.Postgres,PostgresSqlDataTypeProvider,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlDataTypeProvider.cs,PostgresSqlDataTypeProvider,The length of the parameter constraintDefaultsConfiguration is 31.
Long Identifier,Shaolinq.Postgres,PostgresTimespanSqlDataType,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresTimespanSqlDataType.cs,PostgresTimespanSqlDataType,The length of the parameter constraintDefaultsConfiguration is 31.
Long Identifier,Shaolinq.Postgres,PostgresUuidSqlDataType,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresUuidSqlDataType.cs,PostgresUuidSqlDataType,The length of the parameter constraintDefaultsConfiguration is 31.
Long Identifier,Shaolinq.Postgres.DotConnect,PostgresDotConnectObjectTimespanSqlDataType,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectObjectTimespanSqlDataType.cs,PostgresDotConnectObjectTimespanSqlDataType,The length of the parameter constraintDefaultsConfiguration is 31.
Long Identifier,Shaolinq.Postgres.DotConnect,PostgresDotConnectTimespanSqlDataType,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectTimespanSqlDataType.cs,PostgresDotConnectTimespanSqlDataType,The length of the parameter constraintDefaultsConfiguration is 31.
Long Statement,Shaolinq.Postgres,PostgresDataDefinitionExpressionAmender,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresDataDefinitionExpressionAmender.cs,VisitColumnDefinition,The length of the statement  "					retval = new SqlColumnDefinitionExpression(retval.ColumnName' new SqlTypeExpression("BIGSERIAL")' retval.ConstraintExpressions); " is 128.
Long Statement,Shaolinq.Postgres,PostgresDataDefinitionExpressionAmender,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresDataDefinitionExpressionAmender.cs,VisitColumnDefinition,The length of the statement  "					retval = new SqlColumnDefinitionExpression(retval.ColumnName' new SqlTypeExpression("SERIAL")' retval.ConstraintExpressions); " is 125.
Long Statement,Shaolinq.Postgres,PostgresSqlDatabaseSchemaManager,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlDatabaseSchemaManager.cs,CreateDatabaseOnlyAsync,The length of the statement  "						using (var reader = (await command.ExecuteReaderExAsync(this.SqlDatabaseContext.DataAccessModel' cancellationToken' true).ConfigureAwait(false))) " is 145.
Long Statement,Shaolinq.Postgres,PostgresSqlDatabaseSchemaManager,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlDatabaseSchemaManager.cs,CreateDatabaseOnlyAsync,The length of the statement  "							await command.ExecuteNonQueryExAsync(this.SqlDatabaseContext.DataAccessModel' cancellationToken' true).ConfigureAwait(false); " is 125.
Long Statement,Shaolinq.Postgres,PostgresSqlDatabaseSchemaManager,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlDatabaseSchemaManager.cs,CreateDatabaseOnlyAsync,The length of the statement  "						await command.ExecuteNonQueryExAsync(this.SqlDatabaseContext.DataAccessModel' cancellationToken' true).ConfigureAwait(false); " is 125.
Long Statement,Shaolinq.Postgres,PostgresSqlDatabaseSchemaManager,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlDatabaseSchemaManager.cs,CreateDatabaseOnlyAsync,The length of the statement  "							await command.ExecuteNonQueryExAsync(this.SqlDatabaseContext.DataAccessModel' cancellationToken' true).ConfigureAwait(false); " is 125.
Long Statement,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,ResolveSqlFunction,The length of the statement  "				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" seconds"))) " is 213.
Long Statement,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,ResolveSqlFunction,The length of the statement  "				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" minutes"))) " is 213.
Long Statement,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,ResolveSqlFunction,The length of the statement  "				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" hours"))) " is 211.
Long Statement,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,ResolveSqlFunction,The length of the statement  "				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" days"))) " is 210.
Long Statement,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,Create,The length of the statement  "			var sqlDataTypeProvider = CreateSqlDataTypeProvider(model' contextInfo' () => new PostgresSqlDataTypeProvider(model.TypeDescriptorProvider' constraintDefaults' contextInfo.NativeUuids' contextInfo.NativeEnums)); " is 211.
Long Statement,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,Create,The length of the statement  "			var sqlQueryFormatterManager = new DefaultSqlQueryFormatterManager(sqlDialect' model.Configuration.NamingTransforms' (options' connection) => new PostgresDotConnectSqlQueryFormatter(options' sqlDialect' sqlDataTypeProvider' typeDescriptorProvider' contextInfo.SchemaName' false)); " is 280.
Long Statement,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,Create,The length of the statement  "			return new PostgresDotConnectSqlDatabaseContext(model' sqlDialect' sqlDataTypeProvider' sqlQueryFormatterManager' contextInfo); " is 127.
Long Statement,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,DecorateException,The length of the statement  "					if (dataAccessObject.GetAdvanced().GetPrimaryKeysFlattened().Any(c => Regex.Match(postgresException.DetailMessage' @"Key\s*\(\s*""?" + c.PersistedName + @"""?\s*\)"' RegexOptions.CultureInvariant).Success)) " is 206.
Virtual Method Call from Constructor,Shaolinq.Postgres,DisabledForeignKeyCheckContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\DisabledForeignKeyCheckContext.cs,DisabledForeignKeyCheckContext,The constructor "DisabledForeignKeyCheckContext" calls a virtual method "CreateCommand".
Missing Default,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,ResolveSqlFunction,The following switch statement is missing a default case: switch (function)  			{  			case SqlFunction.ServerUtcNow:  				return new FunctionResolveResult("(NOW() at time zone 'utc')"' false' arguments)  				{  					excludeParenthesis = true  				};  			case SqlFunction.TimeSpanFromSeconds:  				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" seconds")))  				{  					functionSuffix = "::interval"  				};  			case SqlFunction.TimeSpanFromMinutes:  				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" minutes")))  				{  					functionSuffix = "::interval"  				};  			case SqlFunction.TimeSpanFromHours:  				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" hours")))  				{  					functionSuffix = "::interval"  				};  			case SqlFunction.TimeSpanFromDays:  				return new FunctionResolveResult(""' true' new SqlFunctionCallExpression(typeof(string)' SqlFunction.Concat' Expression.Call(arguments[0]' MethodInfoFastRef.ObjectToStringMethod)' Expression.Constant(" days")))  				{  					functionSuffix = "::interval"  				};  			case SqlFunction.DateTimeAddTimeSpan:  				return new FunctionResolveResult("+"' true' arguments);  			case SqlFunction.Concat:  				return new FunctionResolveResult("||"' true' arguments);  			case SqlFunction.TrimLeft:  				return new FunctionResolveResult("LTRIM"' false' arguments);  			case SqlFunction.TrimRight:  				return new FunctionResolveResult("RTRIM"' false' arguments);  			case SqlFunction.Round:  				return new FunctionResolveResult("ROUND"' false' arguments);  			case SqlFunction.DayOfMonth:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("DAY")' null' arguments);  			case SqlFunction.DayOfWeek:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("DOW")' null' arguments);  			case SqlFunction.DayOfYear:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("DOY")' null' arguments);  			case SqlFunction.Year:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("YEAR")' null' arguments);  			case SqlFunction.Month:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("MONTH")' null' arguments);  			case SqlFunction.Hour:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("HOUR")' null' arguments);  			case SqlFunction.Second:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("SECOND")' null' arguments);  			case SqlFunction.Minute:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("MINUTE")' null' arguments);  			case SqlFunction.Week:  				return new FunctionResolveResult("date_part"' false' FunctionResolveResult.MakeArguments("WEEK")' null' arguments);  			case SqlFunction.StringLength:  				return new FunctionResolveResult("char_length"' false' arguments);  			}
Missing Default,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,VisitFunctionCall,The following switch statement is missing a default case: switch (functionCallExpression.Function)  			{  			case SqlFunction.DateTimeAddDays:  				Write("(");  				Visit(functionCallExpression.Arguments[0]);  				Write(" + (");  				Visit(functionCallExpression.Arguments[1]);  				Write(" || ");  				Visit(Expression.Constant(" day"));  				Write(")");  				Write("::interval");  				Write(")");  				return functionCallExpression;  			case SqlFunction.DateTimeAddMonths:  				Write("(");  				Visit(functionCallExpression.Arguments[0]);  				Write(" + (");  				Visit(functionCallExpression.Arguments[1]);  				Write(" || ");  				Visit(Expression.Constant(" month"));  				Write(")");  				Write("::interval");  				Write(")");  				return functionCallExpression;  			case SqlFunction.DateTimeAddYears:  				Write("(");  				Visit(functionCallExpression.Arguments[0]);  				Write(" + (");  				Visit(functionCallExpression.Arguments[1]);  				Write(" || ");  				Visit(Expression.Constant(" year"));  				Write(")");  				Write("::interval");  				Write(")");  				return functionCallExpression;  			}
Missing Default,Shaolinq.Postgres,PostgresSqlQueryFormatter,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres\PostgresSqlQueryFormatter.cs,VisitIndexedColumn,The following switch statement is missing a default case: switch (indexedColumnExpression.SortOrder)  			{  			case SortOrder.Descending:  			Write(" DESC");  			break;  			case SortOrder.Ascending:  			Write(" ASC");  			break;  			case SortOrder.Unspecified:  			break;  			}
Missing Default,Shaolinq.Postgres.DotConnect,PostgresDotConnectSqlDatabaseContext,D:\research\architectureSmells\repos1\tumtumtum_Shaolinq\src\Shaolinq.Postgres.DotConnect\PostgresDotConnectSqlDatabaseContext.cs,DecorateException,The following switch statement is missing a default case: switch (postgresException.ErrorCode)  			{  			case "40001":  				return new ConcurrencyException(exception' relatedQuery);  			case "23502":  				return new MissingPropertyValueException(dataAccessObject' postgresException' relatedQuery);  			case "23503":  				return new MissingRelatedDataAccessObjectException(null' dataAccessObject' postgresException' relatedQuery);  			case "23505":  				if (!string.IsNullOrEmpty(postgresException.ColumnName) && dataAccessObject != null)  				{  					if (dataAccessObject.GetAdvanced().GetPrimaryKeysFlattened().Any(c => c.PersistedName == postgresException.ColumnName))  					{  						return new ObjectAlreadyExistsException(dataAccessObject' exception' relatedQuery);  					}  				}    				if (!string.IsNullOrEmpty(postgresException.ConstraintName) && postgresException.ConstraintName.EndsWith("_pkey"))  				{  					return new ObjectAlreadyExistsException(dataAccessObject' exception' relatedQuery);  				}    				if (!string.IsNullOrEmpty(postgresException.DetailMessage) && dataAccessObject != null)  				{  					if (dataAccessObject.GetAdvanced().GetPrimaryKeysFlattened().Any(c => Regex.Match(postgresException.DetailMessage' @"Key\s*\(\s*""?" + c.PersistedName + @"""?\s*\)"' RegexOptions.CultureInvariant).Success))  					{  						return new ObjectAlreadyExistsException(dataAccessObject' exception' relatedQuery);	  					}  				}    				if (postgresException.Message.IndexOf("_pkey"' StringComparison.InvariantCultureIgnoreCase) >= 0)  				{  					return new ObjectAlreadyExistsException(dataAccessObject' exception' relatedQuery);	  				}  				else  				{  					return new UniqueConstraintException(exception' relatedQuery);  				}  			}
