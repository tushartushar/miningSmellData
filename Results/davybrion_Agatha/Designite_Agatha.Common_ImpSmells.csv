Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Agatha.Common,IAsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,ProcessRequests,The length of the parameter exceptionAndTypeOccurredDelegate is 32.
Long Identifier,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,ProcessRequests,The length of the parameter exceptionAndTypeOccurredDelegate is 32.
Long Identifier,Agatha.Common,AsyncRequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcherStub.cs,ProcessRequests,The length of the parameter exceptionAndTypeOccurredDelegate is 32.
Long Identifier,Agatha.Common,ResponseReceiver,C:\repos\davybrion_Agatha\Agatha.Common\ResponseReceiver.cs,ResponseReceiver,The length of the parameter exceptionAndTypeOccuredCallback is 31.
Long Identifier,Agatha.Common,ResponseReceiver,C:\repos\davybrion_Agatha\Agatha.Common\ResponseReceiver.cs,,The length of the parameter exceptionAndTypeOccuredCallback is 31.
Long Identifier,Agatha.Common.Caching,CacheConfiguration,C:\repos\davybrion_Agatha\Agatha.Common\Caching\CacheConfiguration.cs,CacheConfiguration,The length of the parameter enableResponseCachingAttributeType is 34.
Long Identifier,Agatha.Common.Caching,CacheConfiguration,C:\repos\davybrion_Agatha\Agatha.Common\Caching\CacheConfiguration.cs,,The length of the parameter enableResponseCachingAttributeType is 34.
Long Statement,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,ProcessRequests,The length of the statement  "			ProcessRequests(new ResponseReceiver(receivedResponsesDelegate' exceptionOccurredDelegate' keyToResultPositions' cacheManager)); " is 128.
Long Statement,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,ProcessRequests,The length of the statement  "			ProcessRequests(new ResponseReceiver(receivedResponsesDelegate' exceptionAndTypeOccurredDelegate' keyToResultPositions' cacheManager)); " is 135.
Long Statement,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,ProcessRequests,The length of the statement  "                synchronizationContext.Post(s => OnProcessRequestsCompleted(null' responseReciever' tempResponseArray' requestsToSendAsArray)' null); " is 133.
Long Statement,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,DisposeManagedResources,The length of the statement  "			// WHY: this is really only important for containers that require explicit release of disposable components (Castle)... if " is 122.
Long Statement,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,DisposeManagedResources,The length of the statement  "			// people use the AsyncRequestDispatcherFactory to create instances of this class in combination with Castle Windsor' these " is 123.
Long Statement,Agatha.Common,AsyncRequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcher.cs,ThrowInvalidUsageException,The length of the statement  "			throw new InvalidOperationException("You cannot combine one-way and two-way requests in the same AsyncRequestDispatcher."); " is 123.
Long Statement,Agatha.Common,AsyncRequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcherStub.cs,GetOneWayRequest,The length of the statement  "				throw new InvalidOperationException(string.Format("Multiple OneWayRequests of type {0} have been added' use the GetOneWayRequests method instead to perform your inspection"' typeof(TOneWayRequest))); " is 199.
Long Statement,Agatha.Common,AsyncRequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcherStub.cs,ProcessRequests,The length of the statement  "			ProcessRequests(new ResponseReceiver(receivedResponsesDelegate' exceptionOccurredDelegate' responseKeyToIndexPosition' null)); " is 126.
Long Statement,Agatha.Common,AsyncRequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcherStub.cs,ProcessRequests,The length of the statement  "			ProcessRequests(new ResponseReceiver(receivedResponsesDelegate' exceptionAndTypeOccurredDelegate' responseKeyToIndexPosition' null)); " is 133.
Long Statement,Agatha.Common,AsyncRequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcherStub.cs,ReturnResponses,The length of the statement  "            responseReceiver.ReceiveResponses(new ProcessRequestsAsyncCompletedArgs(new[] { responsesToReturn.ToArray() }' null' false' null)' new Response[responsesToReturn.Count]' requests.Values.ToArray()); " is 197.
Long Statement,Agatha.Common,AsyncRequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\AsyncRequestDispatcherStub.cs,ThrowInvalidUsageException,The length of the statement  "			throw new InvalidOperationException("You cannot combine one-way and two-way requests in the same AsyncRequestDispatcher."); " is 123.
Long Statement,Agatha.Common,ClientConfiguration,C:\repos\davybrion_Agatha\Agatha.Common\ClientConfiguration.cs,Initialize,The length of the statement  "			IoC.Container.Register(typeof(IAsyncRequestDispatcherFactory)' AsyncRequestDispatcherFactoryImplementation' Lifestyle.Singleton); " is 129.
Long Statement,Agatha.Common,ClientConfiguration,C:\repos\davybrion_Agatha\Agatha.Common\ClientConfiguration.cs,ConfigureCachingLayer,The length of the statement  "			var requestTypes = requestsAndResponseAssemblies.SelectMany(a => a.GetTypes()).Where(t => !t.IsAbstract && t.IsSubclassOf(typeof(Request))); " is 140.
Long Statement,Agatha.Common,RequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\RequestDispatcher.cs,Get,The length of the statement  "				throw new InvalidOperationException(String.Format("There is no response with type {0}. Maybe you called Clear before or forgot to add appropriate request first."' typeof(TResponse).FullName)); " is 192.
Long Statement,Agatha.Common,RequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\RequestDispatcher.cs,Get,The length of the statement  "				throw new InvalidOperationException(String.Format("There is more than one response with type {0}. If two request handlers return responses with the same type' you need to add requests using Add(string key' Request request)."' typeof(TResponse).FullName)); " is 255.
Long Statement,Agatha.Common,RequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\RequestDispatcher.cs,Get,The length of the statement  "				throw new InvalidOperationException(String.Format("There is no response with key '{0}'. Maybe you called Clear before or forgot to add appropriate request first."' key)); " is 170.
Long Statement,Agatha.Common,RequestDispatcher,C:\repos\davybrion_Agatha\Agatha.Common\RequestDispatcher.cs,AddCacheableResponsesToCache,The length of the statement  "				if (receivedResponses[i].ExceptionType == ExceptionType.None && cacheManager.IsCachingEnabledFor(requestsToSend[i].GetType())) " is 126.
Long Statement,Agatha.Common,RequestDispatcherStub,C:\repos\davybrion_Agatha\Agatha.Common\RequestDispatcherStub.cs,GetOneWayRequest,The length of the statement  "				throw new InvalidOperationException(string.Format("Multiple OneWayRequests of type {0} have been added' use the GetOneWayRequests method instead to perform your inspection"' typeof(TOneWayRequest))); " is 199.
Long Statement,Agatha.Common,ResponseReceiver,C:\repos\davybrion_Agatha\Agatha.Common\ResponseReceiver.cs,AddCacheableResponsesToCache,The length of the statement  "                if (receivedResponses[i].ExceptionType == ExceptionType.None && cacheManager.IsCachingEnabledFor(requestsToSend[i].GetType())) " is 126.
Long Statement,Agatha.Common.Caching,CacheConfiguration,C:\repos\davybrion_Agatha\Agatha.Common\Caching\CacheConfiguration.cs,BuildMapOfConfigurationsForRequestsThatEnabledResponseCaching,The length of the statement  "					requestCacheConfigurations.Add(requestType' new RequestCacheConfiguration(requestType' attribute.Expiration' attribute.Region)); " is 128.
Long Statement,Agatha.Common.Caching,CacheConfiguration,C:\repos\davybrion_Agatha\Agatha.Common\Caching\CacheConfiguration.cs,GetRegionNames,The length of the statement  "			return new HashSet<string>(requestCacheConfigurations.Values.Where(v => !string.IsNullOrEmpty(v.Region)).Select(v => v.Region)); " is 128.
Long Statement,Agatha.Common.Caching,InMemoryCache,C:\repos\davybrion_Agatha\Agatha.Common\Caching\InMemoryCache.cs,timer_Elapsed,The length of the statement  "				// if the Clear method has been called before a timer has elapsed' it won't be in the timersToRequest dictionary anymore " is 120.
Long Statement,Agatha.Common.Conventions,BasicConventions,C:\repos\davybrion_Agatha\Agatha.Common\Conventions\BasicConventions.cs,DetermineResponseType,The length of the statement  "            if (reponseType == null) throw new InvalidOperationException("Could not determine response type by convention for request of type " + requestTypeName);" is 151.
Long Statement,Agatha.Common.WCF,AsyncRequestProcessorProxy,C:\repos\davybrion_Agatha\Agatha.Common\WCF\AsyncRequestProcessorProxy.cs,OnProcessRequestsCompleted,The length of the statement  "			((Action<ProcessRequestsAsyncCompletedArgs>)(e.UserState)).Invoke(new ProcessRequestsAsyncCompletedArgs(e.Results' e.Error' e.Cancelled' e.UserState)); " is 151.
Long Statement,Agatha.Common.WCF,AsyncRequestProcessorProxy,C:\repos\davybrion_Agatha\Agatha.Common\WCF\AsyncRequestProcessorProxy.cs,OnProcessOneWayRequestsCompleted,The length of the statement  "			((Action<AsyncCompletedEventArgs>)(e.UserState)).Invoke(new ProcessRequestsAsyncCompletedArgs(e.Results' e.Error' e.Cancelled' e.UserState)); " is 141.
