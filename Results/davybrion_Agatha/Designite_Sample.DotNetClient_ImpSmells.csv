Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Sample.DotNetClient,Program,C:\repos\davybrion_Agatha\examples\Sample.DotNetClient\Program.cs,CallTheServiceSynchronously,The length of the statement  "				// NOTE: i'm using Agatha's IOC wrapper here directly... you could just as well resolve the IRequestDispatcher component " is 120.
Long Statement,Sample.DotNetClient,Program,C:\repos\davybrion_Agatha\examples\Sample.DotNetClient\Program.cs,CallTheServiceSynchronously,The length of the statement  "				// not really necessary in this silly example' but it's recommended to release each RequestDispatcher instance once you're " is 122.
Long Statement,Sample.DotNetClient,Program,C:\repos\davybrion_Agatha\examples\Sample.DotNetClient\Program.cs,CallTheServiceAsynchronously,The length of the statement  "			// NOTE: i'm using Agatha's IOC wrapper here directly... you could just as well resolve the IAsyncRequestDispatcher component " is 125.
Long Statement,Sample.DotNetClient,Program,C:\repos\davybrion_Agatha\examples\Sample.DotNetClient\Program.cs,CallTheServiceAsynchronously,The length of the statement  "            // NOTE: and this other request dispatcher instance will also be disposed once the call has been _sent_ (since there is no response) " is 132.
Magic Number,Sample.DotNetClient,Program,C:\repos\davybrion_Agatha\examples\Sample.DotNetClient\Program.cs,CallTheServiceAsynchronously,The following statement contains a magic number: new Timer(t => SendReverseStringRequestAsync()' null' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10));
Magic Number,Sample.DotNetClient,Program,C:\repos\davybrion_Agatha\examples\Sample.DotNetClient\Program.cs,CallTheServiceAsynchronously,The following statement contains a magic number: new Timer(t => SendReverseStringRequestAsync()' null' TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(10));
