Project,Namespace,Ca types,Ce types
Agatha.Common,Agatha.Common,Agatha.ServiceLayer.ServiceLayerAndClientConfiguration' Sample.DotNetClient.Program' Sample.ServiceAndClientInSameProcess.Program' Tests.ConfigurationTests.ClientComponentResolving<TContainer>' Agatha.Common.Interceptors.ConventionBasedInterceptor' Agatha.ServiceLayer.RequestProcessingErrorHandler' Agatha.ServiceLayer.ServiceLayerConfiguration' Sample.ServiceLayer.Interceptors.ValidatingInterceptor' Tests.ConfigurationTests.ServiceLayerAndClientComponentResolving<TContainer>' Tests.ConfigurationTests.ServiceLayerComponentResolving<TContainer>' Tests.Conventions.When_resolving_the_ResponseType_using_BasicConventions_given_one_exists' Tests.Conventions.When_resolving_the_RequestType_using_BasicConventions_given_one_exists' Tests.Conventions.ConventionBasedInterceptorSpecs' Tests.Conventions.When_resolving_the_ResponseType_using_RequestHandlerBasedConventions' Tests.Conventions.When_resolving_the_RequestType_using_RequestHandlerBasedConventions' Tests.RequestProcessingErrorHandlingSpecs' Tests.Given_exceptions_previously_occurred_during_processing' Tests.RequestProcessorTests.Interceptors.Given_a_RequestHandlerInterceptor_is_registered' Tests.RequestProcessorTests.RequestResponse.ExceptionInfoSpecs' Agatha.Common.Caching.CachingInterceptor' Tests.RequestProcessorTests.Interceptors.Given_a_RequestHandlerInterceptor_marks_a_request_as_processed' Tests.RequestProcessorTests.Interceptors.Given_the_first_request_fails' Tests.RequestProcessorTests.Interceptors.Given_the_first_interceptor_fails_on_BeforeHandlingRequest' Tests.RequestProcessorTests.Interceptors.Given_the_second_interceptor_fails_on_AfterHandlingRequest' Agatha.Common.WCF.AsyncRequestProcessorProxy' Agatha.ServiceLayer.RequestProcessor' Agatha.Common.WCF.IAsyncWcfRequestProcessor' Agatha.Common.WCF.IWcfRequestProcessor' Agatha.Common.WCF.IWcfRestJsonRequestProcessor' Agatha.Common.WCF.RequestProcessorProxy' Agatha.ServiceLayer.AsyncRequestProcessor' Agatha.ServiceLayer.IOneWayRequestHandler' Agatha.ServiceLayer.OneWayRequestHandler' Agatha.ServiceLayer.OneWayRequestHandler<TRequest>' Agatha.ServiceLayer.WCF.WcfRequestProcessor' Agatha.ServiceLayer.WCF.Rest.RestRequestBuilder' Tests.RequestProcessorTests.OneWay.ProcessOneWayRequestsInputElement' Tests.RequestProcessorTests.Async.GetError' Tests.RequestProcessorTests.Async.GetResults' Tests.RequestProcessorTests.Async.ProcessRequestsAsynchronously' Tests.RequestDispatcherTests.AddRequest' Tests.RequestDispatcherTests.AddRequestArray' Tests.RequestDispatcherTests.AddRequestWithKeys' Tests.RequestDispatcherTests.Clear' Tests.RequestDispatcherTests.RequestDispatcherFixture' Agatha.ServiceLayer.IRequestProcessingErrorHandler' Tests.Given_conventions_are_registered' Tests.Given_no_coventions_registered_but_a_response_is_cached' Tests.Given_no_conventions_nor_cached_response_but_registered_RequestHandler' Tests.RequestProcessorTests.Interceptors.TestInterceptor' Tests.RequestProcessorTests.Interceptors.OneWaySpyRequestInterceptor' Tests.RequestProcessorTests.Interceptors.SubSequentInterceptor' Tests.RequestProcessorTests.Interceptors.FailingBeforeHandlingRequestInterceptor' Tests.RequestProcessorTests.Interceptors.FailingAfterHandlingRequestInterceptor' Tests.RequestProcessorTests.Interceptors.InterceptingInterceptor' Agatha.Common.Caching.ICacheManager' Agatha.Common.Caching.CacheManager' Agatha.Common.Caching.ICache' Agatha.Common.Caching.InMemoryCache' Agatha.Common.Conventions.BasicConventions' Agatha.ServiceLayer.PerformanceLoggingRequestProcessor' Agatha.ServiceLayer.IRequestHandler' Agatha.ServiceLayer.RequestHandler' Agatha.ServiceLayer.RequestHandler<TRequest;TResponse>' Agatha.ServiceLayer.Conventions.RequestHandlerBasedConventions' Tests.CacheManagerSpy' Tests.CacheEntry' Tests.RequestProcessorTests.RequestResponse.Act.Helpers.HandlerForTest<TRequest>' Tests.RequestProcessorTests.RequestResponse.Act.ProcessRequests' Tests.RequestProcessorTests.RequestResponse.CachingSpecs' Tests.RequestProcessorTests.RequestResponse.RequestHandlerCalledHowSpecs' Tests.RequestProcessorTests.Interceptors.Given_two_interceptors_are_registered' Tests.RequestProcessorTests.Interceptors.Given_the_request_is_a_OneWay_request' Tests.RequestProcessorTests.OneWay.OneWayRequestExceptionHandling' Tests.RequestProcessorTests.OneWay.OneWayRequestSuite' Tests.RequestProcessorTests.Interceptors.SpyRequestHandler,Agatha.Common.Caching.ICacheManager' Agatha.Common.InversionOfControl.IoC' Agatha.Common.InversionOfControl.IContainer' Agatha.Common.WCF.RequestProcessorProxy' Agatha.Common.WCF.AsyncRequestProcessorProxy' Agatha.Common.Caching.CacheManager' Agatha.Common.Caching.InMemoryCacheProvider' Agatha.Common.InversionOfControl.Lifestyle' Agatha.Common.Caching.ICacheProvider' Agatha.Common.Caching.ClientCacheConfiguration' Agatha.Common.WCF.KnownTypeProvider
Agatha.Common,Agatha.Common.Caching,Tests.CacheManagerSpy' Agatha.ServiceLayer.ServiceLayerConfiguration' Agatha.Common.ClientConfiguration' Agatha.Common.AsyncRequestDispatcher' Agatha.Common.RequestDispatcher' Agatha.Common.ResponseReceiver' Agatha.ServiceLayer.RequestProcessingErrorHandler' Tests.RequestProcessingErrorHandlingSpecs' Agatha.ServiceLayer.ServiceLayerAndClientConfiguration' Tests.ConfigurationTests.ServiceLayerComponentResolving<TContainer>,Agatha.Common.Request' Agatha.Common.Response' Agatha.Common.Caching.Timers.ITimerProvider' Agatha.Common.Caching.Timers.ITimer' Agatha.Common.RequestProcessingContext' Agatha.Common.ExceptionType
Agatha.Common,Agatha.Common.Caching.Timers,Agatha.Common.Caching.InMemoryCache' Agatha.Common.Caching.InMemoryCacheProvider,
Agatha.Common,Agatha.Common.Configuration,Agatha.ServiceLayer.ServiceLayerConfiguration' Agatha.ServiceLayer.Conventions.RequestHandlerBasedConventions' Tests.ConfigurationTests.ServiceLayerAndClientComponentResolving<TContainer>' Tests.ConfigurationTests.ServiceLayerComponentResolving<TContainer>' Tests.Conventions.When_resolving_the_ResponseType_using_RequestHandlerBasedConventions' Tests.Conventions.When_resolving_the_RequestType_using_RequestHandlerBasedConventions' Agatha.Common.Conventions.BasicConventions' Tests.Conventions.When_resolving_the_ResponseType_using_BasicConventions_given_one_exists' Tests.Conventions.When_resolving_the_RequestType_using_BasicConventions_given_one_exists' Tests.Conventions.When_creating_BasicConventions_given_a_request_type_without_corresponding_response_type,Agatha.Common.WCF.KnownTypeProvider
Agatha.Common,Agatha.Common.Conventions,,Agatha.Common.Configuration.IRequestTypeRegistry' Agatha.Common.Request' Agatha.Common.Response
Agatha.Common,Agatha.Common.Interceptors,Tests.Conventions.ConventionBasedInterceptorSpecs,Agatha.Common.RequestProcessingContext' Agatha.Common.InversionOfControl.IContainer' Agatha.Common.InversionOfControl.IoC' Agatha.Common.IConventions' Agatha.Common.Response' Agatha.Common.Request
Agatha.Common,Agatha.Common.InversionOfControl,Agatha.Common.AsyncRequestDispatcher' Agatha.Common.AsyncRequestDispatcherFactory' Agatha.Common.ClientConfiguration' Agatha.Common.RequestDispatcherFactory' Agatha.Common.Interceptors.ConventionBasedInterceptor' Agatha.ServiceLayer.RequestProcessingErrorHandler' Agatha.ServiceLayer.ServiceLayerAndClientConfiguration' Agatha.ServiceLayer.ServiceLayerConfiguration' Agatha.ServiceLayer.RequestProcessor' Agatha.ServiceLayer.WCF.WcfRequestProcessor' Sample.DotNetClient.Program' Sample.ServiceAndClientInSameProcess.Program' Sample.ServiceLayer.Interceptors.Validate' Tests.ConfigurationTests.ClientComponentResolving<TContainer>' Tests.ConfigurationTests.ServiceLayerAndClientComponentResolving<TContainer>' Tests.ConfigurationTests.ServiceLayerComponentResolving<TContainer>' Tests.Conventions.ConventionBasedInterceptorSpecs' Tests.InversionOfControlTests.ComponentResolvingByKey<TContainer>' Tests.RequestProcessingErrorHandlingSpecs' Tests.RequestProcessorTests.Interceptors.Given_a_RequestHandlerInterceptor_is_registered' Tests.RequestProcessorTests.Interceptors.Given_a_RequestHandlerInterceptor_marks_a_request_as_processed' Tests.RequestProcessorTests.Interceptors.Given_two_interceptors_are_registered' Tests.RequestProcessorTests.Interceptors.Given_the_first_request_fails' Tests.RequestProcessorTests.Interceptors.Given_the_first_interceptor_fails_on_BeforeHandlingRequest' Tests.RequestProcessorTests.Interceptors.Given_the_second_interceptor_fails_on_AfterHandlingRequest' Tests.RequestProcessorTests.Interceptors.Given_the_request_is_a_OneWay_request' Tests.RequestProcessorTests.OneWay.OneWayRequestSuite' Tests.RequestProcessorTests.RequestResponse.Act.ProcessRequestsState' Agatha.Autofac.AutofacExtensions' Agatha.Autofac.Container' Agatha.Castle.Container' Agatha.Ninject.Container' Agatha.Spring.Container' Agatha.StructureMap.Container' Agatha.Unity.Container,
Agatha.Common,Agatha.Common.WCF,Agatha.Common.ClientConfiguration' Agatha.StructureMap.Container' Agatha.Unity.Container' Agatha.Common.Configuration.WcfKnownTypesBasedRequestTypeRegistry' Agatha.ServiceLayer.ServiceLayerConfiguration' Agatha.ServiceLayer.WCF.Rest.RestRequestBuilder' Tests.ConfigurationTests.ClientComponentResolving<TContainer>' Tests.ConfigurationTests.ServiceLayerAndClientComponentResolving<TContainer>' Tests.ConfigurationTests.ServiceLayerComponentResolving<TContainer>' Tests.RequestProcessorTests.Rest.RestRequestBuilderTests<TRequestType1;TRequestType2>,Agatha.Common.Request' Agatha.Common.OneWayRequest' Agatha.Common.IAsyncRequestProcessor' Agatha.Common.Response
