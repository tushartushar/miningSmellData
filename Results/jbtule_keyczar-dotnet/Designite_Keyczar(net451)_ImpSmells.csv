Implementation smell,Namespace,Class,File,Method,Description
Long Method,Keyczar,Crypter,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypter.cs,Decrypt,The method has 109 lines of code.
Complex Method,Keyczar,Crypter,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypter.cs,Decrypt,Cyclomatic complexity of the method is 10
Complex Method,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportPrimaryAsPkcs,Cyclomatic complexity of the method is 9
Complex Method,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,Pkcs12Keys,Cyclomatic complexity of the method is 12
Complex Method,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,PkcsKey,Cyclomatic complexity of the method is 8
Complex Method,Keyczar.Unofficial,Jwt,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\JwtFormat.cs,AlgForKey,Cyclomatic complexity of the method is 10
Complex Method,Keyczar.Unofficial,RsaPublicSignGraduatedDigestKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\RsaPublicSignGraduatedDigestKey.cs,GetSigner,Cyclomatic complexity of the method is 8
Complex Method,Keyczar.Util,Secure,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\Secure.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,Cyclomatic complexity of the method is 12
Long Parameter List,Keyczar,MutableKeySet,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Manage\MutableKeySet.cs,AddKey,The method has 5 parameters. Parameters: status' keySize' type' options' comment
Long Parameter List,Keyczar,SessionCrypter,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\SessionCrypter.cs,SessionCrypter,The method has 5 parameters. Parameters: keyEncrypter' signer' keySize' symmetricKeyType' keyPacker
Long Parameter List,Keyczar,Signer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Signer.cs,Sign,The method has 6 parameters. Parameters: input' outstream' prefixData' postfixData' signatureData' inputLength
Long Parameter List,Keyczar,TimeoutVerifierHelper,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\TimeoutVerifier.cs,Verify,The method has 5 parameters. Parameters: input' signature' prefixData' postfixData' inputLength
Long Parameter List,Keyczar,Verifier,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Verifier.cs,Verify,The method has 5 parameters. Parameters: input' signature' prefixData' postfixData' inputLength
Long Parameter List,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,PkcsKey,The method has 5 parameters. Parameters: purpose' path' passwordPrompt' official' hint
Long Parameter List,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,Pkcs12Keys,The method has 5 parameters. Parameters: purpose' path' passwordPrompt' official' hint
Long Parameter List,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,Pkcs12Keys,The method has 5 parameters. Parameters: purpose' input' passwordPrompt' official' hint
Long Parameter List,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,PkcsKey,The method has 5 parameters. Parameters: purpose' input' passwordPrompt' official' hint
Long Parameter List,Keyczar.Crypto.Streams,SymmetricStream,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\Streams\SymmetricStream.cs,SymmetricStream,The method has 6 parameters. Parameters: cipher' output' iv' tagSize' initFunc' encrypt
Long Parameter List,Keyczar.Unofficial,SymmetricAeadStream,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\SymmetricAeadStream.cs,SymmetricAeadStream,The method has 6 parameters. Parameters: makeCipher' outStream' nonce' tagLength' initFunc' encrypt
Long Statement,Keyczar,AttachedSignerHelper,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\AttachedSigner.cs,Sign,The length of the statement  "                base.Sign(input' signedData' prefixData: null' postfixData: hidden' signatureData: Tuple.Create(fullLength' position' input)' inputLength: inputLength); " is 152.
Long Statement,Keyczar,HelperAttachedVerify,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\AttachedVerifier.cs,VerifyHidden,The length of the statement  "                            var verified= Verify(signedMessageLimtedLength' sigStream.ToArray()' prefixData: null' postfixData: hidden' inputLength: inputLength); " is 134.
Long Statement,Keyczar,MutableKeySet,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Manage\MutableKeySet.cs,PublicKey,The length of the statement  "                .Select(p => new {p.Key' Type = p.PublicKey.KeyType' Value = this.GetConfig().RawStringEncoding.GetBytes(p.PublicKey.ToJson())}) " is 128.
Long Statement,Keyczar,TimeoutVerifierHelper,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\TimeoutVerifier.cs,Verify,The length of the statement  "                Array.Copy(signature'KeyczarConst.HeaderLength+TimeoutLength'newsig'KeyczarConst.HeaderLength'newsig.Length - KeyczarConst.HeaderLength); " is 137.
Long Statement,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The length of the statement  "            issuerGenertor.AddExtension(X509Extensions.ExtendedKeyUsage' false' new ExtendedKeyUsage(KeyPurposeID.AnyExtendedKeyUsage)); " is 124.
Long Statement,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The length of the statement  "                    certificateGenerator.AddExtension(X509Extensions.ExtendedKeyUsage' false' new ExtendedKeyUsage(KeyPurposeID.AnyExtendedKeyUsage)); " is 130.
Long Statement,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The length of the statement  "                                store.SetKeyEntry(certificate.SubjectDN.ToString() + "_key"' keyEntry' new X509CertificateEntry[] { entryCert' issueEntryCert }); " is 129.
Long Statement,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The length of the statement  "                                store.SetKeyEntry(certificate.SubjectDN.ToString() + "|key"' keyEntry' new X509CertificateEntry[] { entryCert' issueEntryCert }); " is 129.
Long Statement,Keyczar.Util,Secure,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\Secure.cs,Equals,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(maxCount)' "maxCount' start index cannot be set so that there isn't a comparison."); " is 129.
Long Statement,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The length of the statement  "                    buffer |= (0xFF & input[inPos++]) << 8; //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local] " is 123.
Long Statement,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The length of the statement  "                    outChar[outPos++] = ALPHABET[(buffer >> 6) & 0x3F]; //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local] " is 135.
Long Statement,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The length of the statement  "                    outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local] " is 125.
Long Statement,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The length of the statement  "                    outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local] " is 125.
Virtual Method Call from Constructor,Keyczar,KeyczarBase,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeyczarBase.cs,KeyczarBase,The constructor "KeyczarBase" calls a virtual method "GetKeyHash".
Virtual Method Call from Constructor,Keyczar,KeyVersion,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyVersion.cs,KeyVersion,The constructor "KeyVersion" calls a virtual method "GetKeyHash".
Empty Catch Block,Keyczar.Unofficial,Jwt,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\JwtFormat.cs,VerifierKeys,The method has an empty catch block.
Magic Number,Keyczar,HelperAttachedVerify,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\AttachedVerifier.cs,VerifyHidden,The following statement contains a magic number: var length = Utility.ToInt32(reader.ReadBytes(4));
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: Aes.KeySizes<AesKey>(128' 192' 256).DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: Aes.KeySizes<AesKey>(128' 192' 256).DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: Aes.KeySizes<AesKey>(128' 192' 256).DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: HmacSha1.KeySizes<HmacSha1Key>(256).DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: DsaPriv.KeySizes<DsaPrivateKey>().WeakSizes(1024).IsAsymmetric().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: DsaPub.KeySizes<DsaPublicKey>().WeakSizes(1024).IsAsymmetric().IsPublic().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: RsaPriv.KeySizes<RsaPrivateKey>(2048' 4096).WeakSizes(1024).IsAsymmetric().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: RsaPriv.KeySizes<RsaPrivateKey>(2048' 4096).WeakSizes(1024).IsAsymmetric().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: RsaPriv.KeySizes<RsaPrivateKey>(2048' 4096).WeakSizes(1024).IsAsymmetric().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: RsaPub.KeySizes<RsaPublicKey>(2048' 4096).WeakSizes(1024).IsAsymmetric().IsPublic().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: RsaPub.KeySizes<RsaPublicKey>(2048' 4096).WeakSizes(1024).IsAsymmetric().IsPublic().DefineSpec();
Magic Number,Keyczar,KeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyType.cs,KeyType,The following statement contains a magic number: RsaPub.KeySizes<RsaPublicKey>(2048' 4096).WeakSizes(1024).IsAsymmetric().IsPublic().DefineSpec();
Magic Number,Keyczar,KeyVersion,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Metadata\KeyVersion.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ GetType().ToString().GetHashCode();
Magic Number,Keyczar,SimpleAesHmacSha1KeyPacker,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\SessionCrypter.cs,Pack,The following statement contains a magic number: int outputSize = (1 + inputArrays.Length)*4;
Magic Number,Keyczar,SimpleAesHmacSha1KeyPacker,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\SessionCrypter.cs,Unpack,The following statement contains a magic number: var lengthBuffer = new byte[4];
Magic Number,Keyczar,TimeoutVerifier,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\TimeoutVerifier.cs,FromDateTime,The following statement contains a magic number: return (long)((date.ToUniversalTime() - new DateTime(1970' 1' 1'0'0'0'DateTimeKind.Utc)).TotalMilliseconds);
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: issuerGenerator.Init(new KeyGenerationParameters(Secure.Random' 2048));
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: BigInteger issueSerialNumber = BigInteger.ProbablePrime(128' Secure.Random);
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: issuerGenertor.SetNotAfter(DateTime.Now.AddYears(100));
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: issuerGenertor.SetNotBefore(DateTime.Now.Subtract(new TimeSpan(7' 0' 0' 0)));
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: BigInteger serialNo = BigInteger.ProbablePrime(128' Secure.Random);
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: certificateGenerator.SetNotAfter(DateTime.Now.AddYears(100));
Magic Number,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following statement contains a magic number: certificateGenerator.SetNotBefore(DateTime.Now.Subtract(new TimeSpan(7' 0' 0' 0)));
Magic Number,Keyczar.Crypto,AesKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\AesKey.cs,GenerateKey,The following statement contains a magic number: AesKeyBytes = new byte[size/8];
Magic Number,Keyczar.Crypto,DsaPrivateKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\DsaPrivateKey.cs,GenerateKey,The following statement contains a magic number: paramgen.Init(size' 100' Secure.Random);
Magic Number,Keyczar.Crypto,DsaPublicKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\DsaPublicKey.cs,GetDigest,The following statement contains a magic number: qSize <= 160
Magic Number,Keyczar.Crypto,DsaPublicKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\DsaPublicKey.cs,GetDigest,The following statement contains a magic number: qSize <= 224
Magic Number,Keyczar.Crypto,DsaPublicKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\DsaPublicKey.cs,GetDigest,The following statement contains a magic number: qSize <= 256
Magic Number,Keyczar.Crypto,DsaPublicKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\DsaPublicKey.cs,GetDigest,The following statement contains a magic number: qSize <= 384
Magic Number,Keyczar.Crypto,HmacSha1Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\HmacSha1Key.cs,GenerateKey,The following statement contains a magic number: HmacKeyBytes = new byte[size/8];
Magic Number,Keyczar.Crypto,RsaPrivateSignKeyBase<TPublicKey>,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\RsaPrivateSignKeyBase.cs,GetSigningStream,The following statement contains a magic number: return new DigestStream(signer' Size/8);
Magic Number,Keyczar.Crypto,RsaPublicSignKeyBase,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Crypto\RsaPublicSignKeyBase.cs,GetVerifyingStream,The following statement contains a magic number: return new DigestStream(signer' Size/8);
Magic Number,Keyczar.Pbe,PbeKeyStore,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,EncryptKeyData,The following statement contains a magic number: var pks = new PbeKeyStore()                            {                                Cipher = PbeKeyType.Aes128'                                Hmac = PbeHashType.HmacSha1'                                IterationCount = iterationCount'                                Salt = new byte[16]                            };
Magic Number,Keyczar.Pbe,PbeKeyStore,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,EncryptKeyData,The following statement contains a magic number: var pbeKey = new PbeAesKey() {Size = 128};
Magic Number,Keyczar.Pbe,PbeKeyStore,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,EncryptKeyData,The following statement contains a magic number: pbeKey.AesKeyBytes = pks.GetDerivedBytes(pbeKey.Size/8' passwordPrompt);
Magic Number,Keyczar.Pbe,PbeKeyStore,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,GetDerivedBytes,The following statement contains a magic number: var key = (KeyParameter) pdb.GenerateDerivedMacParameters(length*8);
Magic Number,Keyczar.Pbe,PbeKeyStore,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,DecryptKeyData,The following statement contains a magic number: key.Size = 128;
Magic Number,Keyczar.Pbe,PbeKeyStore,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,DecryptKeyData,The following statement contains a magic number: key.AesKeyBytes = GetDerivedBytes(key.Size/8' passwordPrompt);
Magic Number,Keyczar.Pbe,PbeAesKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\KeySet\Pbe\PbeKeyStore.cs,PbeAesKey,The following statement contains a magic number: IV = new byte[16];
Magic Number,Keyczar.Unofficial,AesAeadKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\AesAeadKey.cs,AesAeadKey,The following statement contains a magic number: IVLength = 12;
Magic Number,Keyczar.Unofficial,AesAeadKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\AesAeadKey.cs,GenerateKey,The following statement contains a magic number: AesKeyBytes = new byte[size/8];
Magic Number,Keyczar.Unofficial,AesAeadKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\AesAeadKey.cs,GetFallbackKeyHash,The following statement contains a magic number: IVLength == 16 && Mode == AesMode.Gcm
Magic Number,Keyczar.Unofficial,AesAeadKey,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\AesAeadKey.cs,GetEncryptingStream,The following statement contains a magic number: return new SymmetricAeadStream(                  GetMode()'                  output'                  randomNonce'                  TagLength'                  (nonce' cipher' authdata' encrypt) =>                  cipher.Init(encrypt' new AeadParameters(GetKeyParameters()' TagLength*8' nonce' authdata))'                  encrypt: true                  );
Magic Number,Keyczar.Unofficial,AesHmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\AesHmacSha2Key.cs,GenerateKey,The following statement contains a magic number: AesKeyBytes = new byte[size/8];
Magic Number,Keyczar.Unofficial,AesHmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\AesHmacSha2Key.cs,GenerateKey,The following statement contains a magic number: HmacKey.HashLength = size / 8;
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,GenerateKey,The following statement contains a magic number: HmacKeyBytes = new byte[size/8];
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,DigestForSize,The following statement contains a magic number: size <= 128
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,DigestForSize,The following statement contains a magic number: size <= 192
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,HashLengthForDigest,The following statement contains a magic number: switch (digestAlg)              {                 case DigestAlg alg when alg == DigestAlg.Sha256:                     return 256 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha384:                     return 384 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha512:                     return 512 / 8;                 default:                     return 0;              }
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,HashLengthForDigest,The following statement contains a magic number: switch (digestAlg)              {                 case DigestAlg alg when alg == DigestAlg.Sha256:                     return 256 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha384:                     return 384 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha512:                     return 512 / 8;                 default:                     return 0;              }
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,HashLengthForDigest,The following statement contains a magic number: switch (digestAlg)              {                 case DigestAlg alg when alg == DigestAlg.Sha256:                     return 256 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha384:                     return 384 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha512:                     return 512 / 8;                 default:                     return 0;              }
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,HashLengthForDigest,The following statement contains a magic number: switch (digestAlg)              {                 case DigestAlg alg when alg == DigestAlg.Sha256:                     return 256 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha384:                     return 384 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha512:                     return 512 / 8;                 default:                     return 0;              }
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,HashLengthForDigest,The following statement contains a magic number: switch (digestAlg)              {                 case DigestAlg alg when alg == DigestAlg.Sha256:                     return 256 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha384:                     return 384 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha512:                     return 512 / 8;                 default:                     return 0;              }
Magic Number,Keyczar.Unofficial,HmacSha2Key,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\HmacSha2Key.cs,HashLengthForDigest,The following statement contains a magic number: switch (digestAlg)              {                 case DigestAlg alg when alg == DigestAlg.Sha256:                     return 256 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha384:                     return 384 / 8;                 case DigestAlg alg when alg == DigestAlg.Sha512:                     return 512 / 8;                 default:                     return 0;              }
Magic Number,Keyczar.Unofficial,HelperAttachedJTWVerifier,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\JwtVerifier.cs,VerifyCompact,The following statement contains a magic number: pieces.Length != 3
Magic Number,Keyczar.Unofficial,HelperAttachedJTWVerifier,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\JwtVerifier.cs,VerifyCompact,The following statement contains a magic number: var message = Encoding.UTF8.GetBytes(string.Join("."' pieces.Take(2)));
Magic Number,Keyczar.Unofficial,RsaPrivateSignGraduatedDigestKey<TPublicKey>,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\RsaPrivateSignGraduatedDigestKey.cs,DigestForSize,The following statement contains a magic number: size <= 1024
Magic Number,Keyczar.Unofficial,RsaPrivateSignGraduatedDigestKey<TPublicKey>,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\RsaPrivateSignGraduatedDigestKey.cs,DigestForSize,The following statement contains a magic number: size <= 2048
Magic Number,Keyczar.Unofficial,RsaPrivateSignGraduatedDigestKey<TPublicKey>,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\RsaPrivateSignGraduatedDigestKey.cs,DigestForSize,The following statement contains a magic number: size <= 3072
Magic Number,Keyczar.Unofficial,RsaPrivateSignGraduatedDigestKey<TPublicKey>,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\RsaPrivateSignGraduatedDigestKey.cs,DigestForSize,The following statement contains a magic number: size <= 7680
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: AesAead.KeySizes<AesAeadKey>(256' 192' 128).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: AesAead.KeySizes<AesAeadKey>(256' 192' 128).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: AesAead.KeySizes<AesAeadKey>(256' 192' 128).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: HmacSha2.KeySizes<HmacSha2Key>(128' 192' 256).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: HmacSha2.KeySizes<HmacSha2Key>(128' 192' 256).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: HmacSha2.KeySizes<HmacSha2Key>(128' 192' 256).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: AesHmacSha2.KeySizes<AesHmacSha2Key>(128' 192' 256).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: AesHmacSha2.KeySizes<AesHmacSha2Key>(128' 192' 256).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: AesHmacSha2.KeySizes<AesHmacSha2Key>(128' 192' 256).IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivSign.KeySizes<RsaPrivateSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivSign.KeySizes<RsaPrivateSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivSign.KeySizes<RsaPrivateSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivSign.KeySizes<RsaPrivateSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivSign.KeySizes<RsaPrivateSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubSign.KeySizes<RsaPublicSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubSign.KeySizes<RsaPublicSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubSign.KeySizes<RsaPublicSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubSign.KeySizes<RsaPublicSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubSign.KeySizes<RsaPublicSignPssKey>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivPkcs15Sign.KeySizes<RsaPrivateSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivPkcs15Sign.KeySizes<RsaPrivateSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivPkcs15Sign.KeySizes<RsaPrivateSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivPkcs15Sign.KeySizes<RsaPrivateSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPrivPkcs15Sign.KeySizes<RsaPrivateSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubPkcs15Sign.KeySizes<RsaPublicSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubPkcs15Sign.KeySizes<RsaPublicSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubPkcs15Sign.KeySizes<RsaPublicSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubPkcs15Sign.KeySizes<RsaPublicSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Unofficial,UnofficialKeyType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Unofficial\UnofficialKeyType.cs,UnofficialKeyType,The following statement contains a magic number: RSAPubPkcs15Sign.KeySizes<RsaPublicSignPkcs15Key>(3072' 4096' 8192).WeakSizes(2048' 1024).IsAsymmetric().IsUnofficial().IsPublic().DefineSpec();
Magic Number,Keyczar.Util,StringType,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\StringEnum.cs,GetHashCode,The following statement contains a magic number: return (Identifier.GetHashCode()*397) ^ GetType().GetHashCode();
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,WebSafeBase64,The following statement contains a magic number: DECODE[WHITESPACE[i]] = -2;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,GetByte,The following statement contains a magic number: i < 0 || i > 127 || DECODE[i] == -1
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,IsWhiteSpace,The following statement contains a magic number: return DECODE[i] == -2;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: int inputBlocks = input.Length/3;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: int remainder = input.Length%3;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: int outputLen = inputBlocks*4;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: switch (remainder)              {                  case 1:                      outputLen += 2;                      break;                  case 2:                      outputLen += 3;                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: switch (remainder)              {                  case 1:                      outputLen += 2;                      break;                  case 2:                      outputLen += 3;                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: switch (remainder)              {                  case 1:                      outputLen += 2;                      break;                  case 2:                      outputLen += 3;                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: int buffer = (0xFF & input[inPos++]) << 16 | (0xFF & input[inPos++]) << 8                               | (0xFF & input[inPos++]);
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: int buffer = (0xFF & input[inPos++]) << 16 | (0xFF & input[inPos++]) << 8                               | (0xFF & input[inPos++]);
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: outChar[outPos++] = ALPHABET[(buffer >> 18) & 0x3F];
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: outChar[outPos++] = ALPHABET[(buffer >> 12) & 0x3F];
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: outChar[outPos++] = ALPHABET[(buffer >> 6) & 0x3F];
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: int buffer = (0xFF & input[inPos++]) << 16;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: buffer |= (0xFF & input[inPos++]) << 8;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: remainder == 2
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: outChar[outPos++] = ALPHABET[(buffer >> 18) & 0x3F];
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: outChar[outPos++] = ALPHABET[(buffer >> 12) & 0x3F];
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: outChar[outPos++] = ALPHABET[(buffer >> 6) & 0x3F];
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following statement contains a magic number: remainder == 2
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: int inputBlocks = inLen/4;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: int remainder = inLen%4;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: int outputLen = inputBlocks*3;
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (remainder)              {                  case 1:                      throw new Base64DecodingException("Invalid Length");                  case 2:                      outputLen += 1;                      break;                  case 3:                      outputLen += 2;                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (remainder)              {                  case 1:                      throw new Base64DecodingException("Invalid Length");                  case 2:                      outputLen += 1;                      break;                  case 3:                      outputLen += 2;                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (remainder)              {                  case 1:                      throw new Base64DecodingException("Invalid Length");                  case 2:                      outputLen += 1;                      break;                  case 3:                      outputLen += 2;                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: buffer = (buffer << 6) | GetByte(input[i]);
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: outChar[outPos++] = (byte) (buffer >> 16);
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: outChar[outPos++] = (byte) (buffer >> 8);
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: buffCount == 4
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (buffCount)              {                  case 2:                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;                  case 3:                      outChar[outPos++] = (byte) (buffer >> 10);                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (buffCount)              {                  case 2:                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;                  case 3:                      outChar[outPos++] = (byte) (buffer >> 10);                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (buffCount)              {                  case 2:                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;                  case 3:                      outChar[outPos++] = (byte) (buffer >> 10);                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (buffCount)              {                  case 2:                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;                  case 3:                      outChar[outPos++] = (byte) (buffer >> 10);                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;              }
Magic Number,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following statement contains a magic number: switch (buffCount)              {                  case 2:                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;                  case 3:                      outChar[outPos++] = (byte) (buffer >> 10);                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;              }
Missing Default,Keyczar.Compat,Export,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\Export.cs,ExportAsPkcs12,The following switch statement is missing a default case: switch (key)                      {                            case IRsaPrivateKey k:                              {                                  hasPrivateKeys = true;                                  var publicKey = BouncyCastleFromKey(k.PublicKey);                                  var privateKey = BouncyCastleFromKey(k);                                    certificateGenerator.SetPublicKey(publicKey);                                  var certificate = certificateGenerator.Generate(signatureFactory);                                    var entryCert = new X509CertificateEntry(certificate);                                  store.SetCertificateEntry(certificate.SubjectDN.ToString()' entryCert);                                    var keyEntry = new AsymmetricKeyEntry(privateKey);                                  store.SetKeyEntry(certificate.SubjectDN.ToString() + "_key"' keyEntry' new X509CertificateEntry[] { entryCert' issueEntryCert });                              }                              break;                          case IRsaPublicKey rsaPub:                              {                                  var publicKey = BouncyCastleFromKey(rsaPub);                                  certificateGenerator.SetPublicKey(publicKey);                                  var certificate = certificateGenerator.Generate(signatureFactory);                                  var entryCert = new X509CertificateEntry(certificate);                                  store.SetCertificateEntry(certificate.SubjectDN.ToString()' entryCert);                                }                              break;                          case DsaPrivateKey dsaKey:                              {                                  hasPrivateKeys = true;                                  var publicKey = BouncyCastleFromKey(dsaKey.PublicKey);                                  var privateKey = BouncyCastleFromKey(dsaKey);                                  certificateGenerator.SetPublicKey(publicKey);                                  var certificate = certificateGenerator.Generate(signatureFactory);                                    var entryCert = new X509CertificateEntry(certificate);                                  store.SetCertificateEntry(certificate.SubjectDN.ToString()' entryCert);                                    var keyEntry = new AsymmetricKeyEntry(privateKey);                                  store.SetKeyEntry(certificate.SubjectDN.ToString() + "|key"' keyEntry' new X509CertificateEntry[] { entryCert' issueEntryCert });                              }                              break;                          case DsaPublicKey dsaKey:                              {                                  var publicKey = BouncyCastleFromKey(dsaKey);                                  certificateGenerator.SetPublicKey(publicKey);                                  var certificate = certificateGenerator.Generate(signatureFactory);                                  var entryCert = new X509CertificateEntry(certificate);                                  store.SetCertificateEntry(certificate.SubjectDN.ToString()' entryCert);                              }                              break;                      }
Missing Default,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,Pkcs12Keys,The following switch statement is missing a default case: switch (key.Key)                                  {                                      case RsaPrivateCrtKeyParameters rsa:                                          keys.Add(KeyFromBouncyCastle(rsa'purpose'official' hint));                                          break;                                        case DsaPrivateKeyParameters dsa:                                          if(purpose == KeyPurpose.SignAndVerify){                                              keys.Add(KeyFromBouncyCastle(dsa));                                          }                                          break;                                  }
Missing Default,Keyczar.Compat,Importer,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Compat\ImportedKeySet.cs,Pkcs12Keys,The following switch statement is missing a default case: switch (pubKey)                                  {                                      case RsaKeyParameters rsa:                                          keys.Add(KeyFromBouncyCastle(rsa' purpose' official' hint));                                          break;                                      case DsaPublicKeyParameters dsa:                                          if(purpose == KeyPurpose.SignAndVerify){                                              keys.Add(KeyFromBouncyCastle(dsa));                                          }                                          break;                                  }
Missing Default,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Encode,The following switch statement is missing a default case: switch (remainder)              {                  case 1:                      outputLen += 2;                      break;                  case 2:                      outputLen += 3;                      break;              }
Missing Default,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following switch statement is missing a default case: switch (remainder)              {                  case 1:                      throw new Base64DecodingException("Invalid Length");                  case 2:                      outputLen += 1;                      break;                  case 3:                      outputLen += 2;                      break;              }
Missing Default,Keyczar.Util,WebSafeBase64,D:\research\architectureSmells\repos\jbtule_keyczar-dotnet\Keyczar\Keyczar\Util\WebBase64Converter.cs,Decode,The following switch statement is missing a default case: switch (buffCount)              {                  case 2:                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 4); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;                  case 3:                      outChar[outPos++] = (byte) (buffer >> 10);                      // ReSharper disable once RedundantAssignment                      outChar[outPos++] = (byte) (buffer >> 2); //might be unnecessary but is more readable - lgtm [cs/useless-assignment-to-local]                      break;              }
