Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadTag,The method has 100 lines of code.
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadNumericEntity,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadComment,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadTag,Cyclomatic complexity of the method is 16
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,FindEndTag,Cyclomatic complexity of the method is 11
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadName,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadAttr2,Cyclomatic complexity of the method is 16
Complex Method,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,Read,Cyclomatic complexity of the method is 13
Long Statement,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadTag,The length of the statement  "			if (name.Equals("script"' StringComparison.InvariantCultureIgnoreCase) || name.Equals("style"' StringComparison.InvariantCultureIgnoreCase)) " is 140.
Long Statement,HebMorph.Lucene.Tests,HebrewQueryParserTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\HebrewQueryParserTest.cs,ParsesAcronymsCorrectly,The length of the statement  "            QueryParser qp = new HebrewQueryParser(LuceneUtil.Version.LUCENE_30' "f"' new global::Lucene.Net.Analysis.Hebrew.SimpleAnalyzer()); " is 131.
Empty Catch Block,HebMorph.Tests.Lucene,BasicHebrewSearchTests,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\BasicHebrewSearchTests.cs,CanFindStandardHebrewWords,The method has an empty catch block.
Empty Catch Block,HebMorph.Tests.Lucene,BasicHebrewSearchTests,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\BasicHebrewSearchTests.cs,CanFindStandardHebrewWords,The method has an empty catch block.
Empty Catch Block,HebMorph.Tests.Lucene,BasicHebrewSearchTests,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\BasicHebrewSearchTests.cs,CanFindStandardHebrewWords,The method has an empty catch block.
Empty Catch Block,HebMorph.Lucene.Tests,HebrewQueryParserTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\HebrewQueryParserTest.cs,ParsesAcronymsCorrectly,The method has an empty catch block.
Magic Number,HebMorph.Tests,StreamLemmatizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\StreamLemmatizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: repeat < 4000
Magic Number,HebMorph.Tests,StreamLemmatizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\StreamLemmatizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: int previousOffest = -5;
Magic Number,HebMorph.Tests,StreamLemmatizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\StreamLemmatizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: Assert.Equal(previousOffest' sl.StartOffset - 5);
Magic Number,HebMorph.Tests,StreamLemmatizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\StreamLemmatizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: Assert.Equal(4' sl.EndOffset - sl.StartOffset);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: int[] expectedOffsets = { 0' 5' 10' 15 };
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: int[] expectedOffsets = { 0' 5' 10' 15 };
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: int[] expectedOffsets = { 0' 5' 10' 15 };
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectly,The following statement contains a magic number: Assert.Equal(4' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader,The following statement contains a magic number: int[] expectedOffsets = { 0' 5' 10' 15 };
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader,The following statement contains a magic number: int[] expectedOffsets = { 0' 5' 10' 15 };
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader,The following statement contains a magic number: int[] expectedOffsets = { 0' 5' 10' 15 };
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader,The following statement contains a magic number: Assert.Equal(4' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(5' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(20' filter.CorrectOffset(t.Offset));
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(8' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(33' filter.CorrectOffset(t.Offset));
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(5' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(39' filter.CorrectOffset(t.Offset));
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyWithAnotherReader2,The following statement contains a magic number: Assert.Equal(5' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyAlsoWhenBuffered,The following statement contains a magic number: repeat < 4000
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyAlsoWhenBuffered,The following statement contains a magic number: int previousOffest = -5;
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyAlsoWhenBuffered,The following statement contains a magic number: Assert.Equal<int>(previousOffest' t.Offset - 5);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,IncrementsOffsetCorrectlyAlsoWhenBuffered,The following statement contains a magic number: Assert.Equal<int>(4' t.LengthInSource);
Magic Number,HebMorph.Tests,TokenizerTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\TokenizerTest.cs,DiscardsSurroundingGershayim,The following statement contains a magic number: Assert.Equal(3' t.LengthInSource);
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,HTMLStripCharFilter,The following statement contains a magic number: safeReadAheadLimit = readAheadLimit - 3;
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,HTMLStripCharFilter,The following statement contains a magic number: safeReadAheadLimit = readAheadLimit - 3;
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,HTMLStripCharFilter,The following statement contains a magic number: safeReadAheadLimit = readAheadLimit - 3;
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,GetNumberStyle,The following statement contains a magic number: radixBase == 16
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadNumericEntity,The following statement contains a magic number: var eaten = 2;
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadNumericEntity,The following statement contains a magic number: var radixBase = 10;
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadNumericEntity,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.Analysis,HTMLStripCharFilter,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\HTMLStripCharFilter.cs,ReadComment,The following statement contains a magic number: (numRead - lastMark) < safeReadAheadLimit - 3
Magic Number,HebMorph.Tests.Lucene,BasicHebrewSearchTests,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\BasicHebrewSearchTests.cs,AssertFoundInText,The following statement contains a magic number: var hits = searcher.Search(query' null' 1000).ScoreDocs;
Magic Number,HebMorph.Lucene.Tests,MorphAnalyzerTests,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\MorphAnalyzerTests.cs,CompareTermData,The following statement contains a magic number: i < 4
Magic Number,HebMorph.Lucene.Tests,TermPositionVectorTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\TermPositionVectorTest.cs,StoresPositionCorrectly,The following statement contains a magic number: RunQuery("\"אינציקלופדיה\""' 8);
Magic Number,HebMorph.Lucene.Tests,TermPositionVectorTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\TermPositionVectorTest.cs,StoresPositionCorrectly,The following statement contains a magic number: RunQuery("\"חבר\""' 9);
Magic Number,HebMorph.Lucene.Tests,TermPositionVectorTest,D:\research\architectureSmells\repos1\synhershko_HebMorph\dotNet\Tests\HebMorphTests\Lucene\TermPositionVectorTest.cs,RunQuery,The following statement contains a magic number: TopDocs td = searcher.Search(q' 10000);
