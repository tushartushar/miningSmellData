Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTransferGoods,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSDemolishItems,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSetUpBrigades,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSetUpAdditionalBrigades,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreaseHeadcount,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreaseBrigadeXP,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSExchangeBattalions,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSMergeBattalions,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSRepairShips_BaggageTrains,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildShips,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildBaggageTrain,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreasePopulationDensity,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildProductionSites,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSFormFederations,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSCoastalDefence,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSeaBlockade,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTradeAndLoading1,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSMovement,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTradeAndLoading2,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBoarding,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSHandOverTerritory,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSChangeNames,The method has 5 parameters.
Long Parameter List,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSChangeStateRelationships,The method has 5 parameters.
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: if (setupBattalionItemNo > 0) {  	// just calculated for the total and put in one warehouse for now until we select the barrackno too  	var armyListBrigade = armyList.FirstOrDefault (x => x.ItemNo == setupBattalionItemNo);  	transferGood.Citizens = transferGood.Citizens + 800;  	transferGood.EcPts = transferGood.EcPts + armyListBrigade.EcPtsPer25 * 32;  	//* need to get the armylists  	transferGood.Louisdore = transferGood.Louisdore + armyListBrigade.Cost * 800;  	if (armyListBrigade.IsCavalry)  		transferGood.Horses = transferGood.Horses + 800;  }  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: if (setupBattalionItemNo > 0) {  	// just calculated for the total and put in one warehouse for now until we select the barrackno too  	var armyListBrigade = armyList.FirstOrDefault (x => x.ItemNo == setupBattalionItemNo);  	transferGood.Citizens = transferGood.Citizens + 800;  	transferGood.EcPts = transferGood.EcPts + armyListBrigade.EcPtsPer25 * 32;  	//* need to get the armylists  	transferGood.Louisdore = transferGood.Louisdore + armyListBrigade.Cost * 800;  	if (armyListBrigade.IsCavalry)  		transferGood.Horses = transferGood.Horses + 800;  }  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: if (setupBattalionItemNo > 0) {  	// just calculated for the total and put in one warehouse for now until we select the barrackno too  	var armyListBrigade = armyList.FirstOrDefault (x => x.ItemNo == setupBattalionItemNo);  	transferGood.Citizens = transferGood.Citizens + 800;  	transferGood.EcPts = transferGood.EcPts + armyListBrigade.EcPtsPer25 * 32;  	//* need to get the armylists  	transferGood.Louisdore = transferGood.Louisdore + armyListBrigade.Cost * 800;  	if (armyListBrigade.IsCavalry)  		transferGood.Horses = transferGood.Horses + 800;  }  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: if (setupBattalionItemNo > 0) {  	// just calculated for the total and put in one warehouse for now until we select the barrackno too  	var armyListBrigade = armyList.FirstOrDefault (x => x.ItemNo == setupBattalionItemNo);  	transferGood.Citizens = transferGood.Citizens + 800;  	transferGood.EcPts = transferGood.EcPts + armyListBrigade.EcPtsPer25 * 32;  	//* need to get the armylists  	transferGood.Louisdore = transferGood.Louisdore + armyListBrigade.Cost * 800;  	if (armyListBrigade.IsCavalry)  		transferGood.Horses = transferGood.Horses + 800;  }  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: transferGood.Citizens = transferGood.Citizens + 800;  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: transferGood.EcPts = transferGood.EcPts + armyListBrigade.EcPtsPer25 * 32;  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: transferGood.Louisdore = transferGood.Louisdore + armyListBrigade.Cost * 800;  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: if (armyListBrigade.IsCavalry)  	transferGood.Horses = transferGood.Horses + 800;  
Magic Number,Austerlitz.Domain,BrigadeCalculator,C:\repos\jeffyates123_Au\Austerlitz.Domain\BrigadeCalculator.cs,addTurnSheetSetUpBattalionCosts,The following statement contains a magic number: transferGood.Horses = transferGood.Horses + 800;  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTransferGoods,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_01TransferGoods> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_01TransferGoods[10];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_01TransferGoods item = new TS_01TransferGoods () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTransferGoods,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_01TransferGoods[10];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_01TransferGoods item = new TS_01TransferGoods () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSDemolishItems,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_02DemolishItems> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_02DemolishItems[6];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_02DemolishItems item = new TS_02DemolishItems () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSDemolishItems,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_02DemolishItems[6];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_02DemolishItems item = new TS_02DemolishItems () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSetUpBrigades,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_03SetUpBrigades> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_03SetUpBrigades[8];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_03SetUpBrigades item = new TS_03SetUpBrigades () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSetUpBrigades,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_03SetUpBrigades[8];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_03SetUpBrigades item = new TS_03SetUpBrigades () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSetUpAdditionalBrigades,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_04SetUpAdditionalBrigades> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_04SetUpAdditionalBrigades[6];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_04SetUpAdditionalBrigades item = new TS_04SetUpAdditionalBrigades () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSetUpAdditionalBrigades,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_04SetUpAdditionalBrigades[6];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_04SetUpAdditionalBrigades item = new TS_04SetUpAdditionalBrigades () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreaseHeadcount,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_05IncreaseHeadcount> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_05IncreaseHeadcount[12];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_05IncreaseHeadcount item = new TS_05IncreaseHeadcount () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreaseHeadcount,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_05IncreaseHeadcount[12];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_05IncreaseHeadcount item = new TS_05IncreaseHeadcount () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreaseBrigadeXP,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_06IncreaseBrigadeXP> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_06IncreaseBrigadeXP[16];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_06IncreaseBrigadeXP item = new TS_06IncreaseBrigadeXP () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreaseBrigadeXP,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_06IncreaseBrigadeXP[16];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_06IncreaseBrigadeXP item = new TS_06IncreaseBrigadeXP () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSExchangeBattalions,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_07ExchangeBattalions> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_07ExchangeBattalions[4];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_07ExchangeBattalions item = new TS_07ExchangeBattalions () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSExchangeBattalions,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_07ExchangeBattalions[4];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_07ExchangeBattalions item = new TS_07ExchangeBattalions () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSMergeBattalions,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_08MergeBattalions> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_08MergeBattalions[8];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_08MergeBattalions item = new TS_08MergeBattalions () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSMergeBattalions,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_08MergeBattalions[8];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_08MergeBattalions item = new TS_08MergeBattalions () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSRepairShips_BaggageTrains,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_09RepairShips_BaggageTrains> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_09RepairShips_BaggageTrains[6];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_09RepairShips_BaggageTrains item = new TS_09RepairShips_BaggageTrains () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSRepairShips_BaggageTrains,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_09RepairShips_BaggageTrains[6];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_09RepairShips_BaggageTrains item = new TS_09RepairShips_BaggageTrains () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildShips,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_10BuildShips> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_10BuildShips[8];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_10BuildShips item = new TS_10BuildShips () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildShips,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_10BuildShips[8];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_10BuildShips item = new TS_10BuildShips () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildBaggageTrain,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_11BuildBaggageTrain> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_11BuildBaggageTrain[4];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_11BuildBaggageTrain item = new TS_11BuildBaggageTrain () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildBaggageTrain,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_11BuildBaggageTrain[4];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_11BuildBaggageTrain item = new TS_11BuildBaggageTrain () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreasePopulationDensity,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_12IncreasePopulationDensity> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_12IncreasePopulationDensity[7];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_12IncreasePopulationDensity item = new TS_12IncreasePopulationDensity () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSIncreasePopulationDensity,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_12IncreasePopulationDensity[7];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_12IncreasePopulationDensity item = new TS_12IncreasePopulationDensity () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildProductionSites,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_13BuildProductionSites> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_13BuildProductionSites[10];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_13BuildProductionSites item = new TS_13BuildProductionSites () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBuildProductionSites,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_13BuildProductionSites[10];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_13BuildProductionSites item = new TS_13BuildProductionSites () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSFormFederations,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_14FormFederations> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_14FormFederations[21];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_14FormFederations item = new TS_14FormFederations () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSFormFederations,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_14FormFederations[21];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_14FormFederations item = new TS_14FormFederations () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSCoastalDefence,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_15CoastalDefence> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_15CoastalDefence[5];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_15CoastalDefence item = new TS_15CoastalDefence () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSCoastalDefence,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_15CoastalDefence[5];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_15CoastalDefence item = new TS_15CoastalDefence () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSeaBlockade,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_16SeaBlockade> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_16SeaBlockade[3];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_16SeaBlockade item = new TS_16SeaBlockade () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSSeaBlockade,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_16SeaBlockade[3];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_16SeaBlockade item = new TS_16SeaBlockade () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTradeAndLoading1,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_17TradeAndLoading1> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_17TradeAndLoading1[18];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_17TradeAndLoading1 item = new TS_17TradeAndLoading1 () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTradeAndLoading1,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_17TradeAndLoading1[18];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_17TradeAndLoading1 item = new TS_17TradeAndLoading1 () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSMovement,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_18Movement> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_18Movement[30];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_18Movement item = new TS_18Movement () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSMovement,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_18Movement[30];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_18Movement item = new TS_18Movement () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTradeAndLoading2,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_19TradeAndLoading2> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_19TradeAndLoading2[18];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_19TradeAndLoading2 item = new TS_19TradeAndLoading2 () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSTradeAndLoading2,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_19TradeAndLoading2[18];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_19TradeAndLoading2 item = new TS_19TradeAndLoading2 () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBoarding,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_20Boarding> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_20Boarding[16];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_20Boarding item = new TS_20Boarding () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSBoarding,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_20Boarding[16];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_20Boarding item = new TS_20Boarding () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSHandOverTerritory,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_21HandOverTerritory> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_21HandOverTerritory[6];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_21HandOverTerritory item = new TS_21HandOverTerritory () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSHandOverTerritory,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_21HandOverTerritory[6];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_21HandOverTerritory item = new TS_21HandOverTerritory () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSChangeNames,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_22ChangeNames> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_22ChangeNames[4];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_22ChangeNames item = new TS_22ChangeNames () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSChangeNames,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_22ChangeNames[4];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_22ChangeNames item = new TS_22ChangeNames () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSChangeStateRelationships,The following statement contains a magic number: using (var dataContext = new AusterlitzDbContext ()) {  	var listRepository = new GenericRepository<TS_23ChangeStateRelationships> (dataContext);  	var tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	if (tsItems.Count () == 0) {  		var newItems = new TS_23ChangeStateRelationships[4];  		for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  			TS_23ChangeStateRelationships item = new TS_23ChangeStateRelationships () {  				TurnId = turnId'  				OrderNo = itemCount  			};  			newItems [itemCount - 1] = item;  		}  		listRepository.InsertRange (newItems);  		dataContext.SaveChanges ();  		tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  	}  	return tsItems.ToArray ();  }  
Magic Number,Austerlitz.Domain,TurnSheetManager,C:\repos\jeffyates123_Au\Austerlitz.Domain\TurnSheetManager.cs,GetTSChangeStateRelationships,The following statement contains a magic number: if (tsItems.Count () == 0) {  	var newItems = new TS_23ChangeStateRelationships[4];  	for (var itemCount = 1; itemCount <= newItems.Count (); itemCount++) {  		TS_23ChangeStateRelationships item = new TS_23ChangeStateRelationships () {  			TurnId = turnId'  			OrderNo = itemCount  		};  		newItems [itemCount - 1] = item;  	}  	listRepository.InsertRange (newItems);  	dataContext.SaveChanges ();  	tsItems = listRepository.GetItems (x => x.TurnId == turnId).OrderBy (y => y.OrderNo);  }  
Magic Number,Austerlitz.Domain,Utils,C:\repos\jeffyates123_Au\Austerlitz.Domain\Utils.cs,getState,The following statement contains a magic number: return turnId.Substring (3' 1);  
Magic Number,Austerlitz.Domain,Utils,C:\repos\jeffyates123_Au\Austerlitz.Domain\Utils.cs,getGameNo,The following statement contains a magic number: return turnId.Substring (0' 3);  
Magic Number,Austerlitz.Domain,Utils,C:\repos\jeffyates123_Au\Austerlitz.Domain\Utils.cs,getMonth,The following statement contains a magic number: return turnId.Substring (4' 3);  
Magic Number,Austerlitz.Domain,Utils,C:\repos\jeffyates123_Au\Austerlitz.Domain\Utils.cs,getMonth,The following statement contains a magic number: return turnId.Substring (4' 3);  
Magic Number,Austerlitz.Domain,Utils,C:\repos\jeffyates123_Au\Austerlitz.Domain\Utils.cs,getYear,The following statement contains a magic number: return turnId.Substring (6' 4);  
Magic Number,Austerlitz.Domain,Utils,C:\repos\jeffyates123_Au\Austerlitz.Domain\Utils.cs,getYear,The following statement contains a magic number: return turnId.Substring (6' 4);  
