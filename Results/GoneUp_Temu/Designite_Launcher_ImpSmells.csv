Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tera,Config,C:\repos\GoneUp_Temu\Launcher\Config.cs,SwitchLanguage,Cyclomatic complexity of the method is 26
Complex Method,Tera.Network,ClientConnection,C:\repos\GoneUp_Temu\Launcher\Network\ClientConnection.cs,CheckConnectionMessage,Cyclomatic complexity of the method is 30
Long Statement,Tera,Config,C:\repos\GoneUp_Temu\Launcher\Config.cs,Init,The length of the statement  "	PrintMessage ("Server:" + MainWindow.launcherConfig.ServerIP + "'" + " ServerPort: " + MainWindow.launcherConfig.ServerPort); " is 125.
Long Statement,Tera,Config,C:\repos\GoneUp_Temu\Launcher\Config.cs,SwitchLanguage,The length of the statement  "	MainWindow.mainWindow.languageImage.Source = new BitmapImage (new Uri (CurrentDataDirectory + MainWindow.launcherConfig.LanguageGame + ".gif")); " is 144.
Long Statement,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,languageComboBox_SelectionChanged,The length of the statement  "	PrintMessage ("Language: " + launcherConfig.Language + "' Id: " + launcherConfig.LanguageId + "' languageGame: " + launcherConfig.LanguageGame); " is 144.
Long Statement,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The length of the statement  "			//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort " is 147.
Long Statement,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The length of the statement  "			string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language; " is 122.
Long Statement,Tera.Network,ClientConnection,C:\repos\GoneUp_Temu\Launcher\Network\ClientConnection.cs,CheckConnectionMessage,The length of the statement  "		using (var client = ScsClientFactory.CreateClient (new ScsTcpEndPoint (MainWindow.launcherConfig.ServerIP' Convert.ToInt32 (MainWindow.launcherConfig.ServerPort)))) { " is 166.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Client,ScsServiceClient,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Client\ScsServiceClient.cs,RequestReplyMessenger_MessageReceived,The length of the statement  "		this.SendInvokeResponse ((IScsMessage)remoteInvokeMessage' (object)null' new ScsRemoteException ("Client does not wait for method invocations by server.")); " is 156.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Client,ScsServiceClient,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Client\ScsServiceClient.cs,RequestReplyMessenger_MessageReceived,The length of the statement  "			returnValue = this._clientObject.GetType ().GetMethod (remoteInvokeMessage.MethodName).Invoke (this._clientObject' remoteInvokeMessage.Parameters); " is 147.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Client,ScsServiceClient,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Client\ScsServiceClient.cs,RequestReplyMessenger_MessageReceived,The length of the statement  "			this.SendInvokeResponse ((IScsMessage)remoteInvokeMessage' (object)null' new ScsRemoteException (innerException.Message' innerException)); " is 138.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Communication,RemoteInvokeProxy,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Communication\RemoteInvokeProxy.cs,Invoke,The length of the statement  "	ScsRemoteInvokeReturnMessage invokeReturnMessage = this._clientMessenger.SendMessageAndWaitForResponse ((IScsMessage)new ScsRemoteInvokeMessage () { " is 148.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Communication.Messages,ScsRemoteInvokeReturnMessage,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Communication\Messages\ScsRemoteInvokeReturnMessage.cs,ToString,The length of the statement  "	return string.Format ("ScsRemoteInvokeReturnMessage: Returns {0}' Exception = {1}"' this.ReturnValue' (object)this.RemoteException); " is 132.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,AddService,The length of the statement  "	this._serviceObjects [serviceInterfaceType.Name] = new ScsServiceApplication.ServiceObject (serviceInterfaceType' (ScsService)service); " is 135.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "				ScsServiceApplication.SendInvokeResponse ((IMessenger)requestReplyMessenger' (IScsMessage)remoteInvokeMessage' (object)null' new ScsRemoteException ("There is no service with name '" + remoteInvokeMessage.ServiceClassName + "'")); " is 230.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "					ScsServiceApplication.SendInvokeResponse ((IMessenger)requestReplyMessenger' (IScsMessage)remoteInvokeMessage' returnValue' (ScsRemoteException)null); " is 150.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "					ScsServiceApplication.SendInvokeResponse ((IMessenger)requestReplyMessenger' (IScsMessage)remoteInvokeMessage' (object)null' new ScsRemoteException (innerException.Message + Environment.NewLine + "Service Version: " + serviceObject.ServiceAttribute.Version' innerException)); " is 275.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "					ScsServiceApplication.SendInvokeResponse ((IMessenger)requestReplyMessenger' (IScsMessage)remoteInvokeMessage' (object)null' new ScsRemoteException (ex.Message + Environment.NewLine + "Service Version: " + serviceObject.ServiceAttribute.Version' ex)); " is 251.
Long Statement,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,Client_MessageReceived,The length of the statement  "		ScsServiceApplication.SendInvokeResponse ((IMessenger)requestReplyMessenger' (IScsMessage)remoteInvokeMessage' (object)null' new ScsRemoteException ("An error occured during remote service method call."' ex)); " is 209.
Long Statement,Tera.NetworkApi.Communication.Scs.Client,ScsClientBase,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\ScsClientBase.cs,Connect,The length of the statement  "	this._communicationChannel.MessageReceived += new EventHandler<MessageEventArgs> (this.CommunicationChannel_MessageReceived); " is 125.
Long Statement,Tera.NetworkApi.Communication.Scs.Client,ScsClientBase,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\ScsClientBase.cs,PingTimer_Elapsed,The length of the statement  "		if (this._communicationChannel.LastReceivedMessageTime > dateTime || this._communicationChannel.LastSentMessageTime > dateTime) " is 127.
Long Statement,Tera.NetworkApi.Communication.Scs.Client.Tcp,ScsTcpClient,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\Tcp\ScsTcpClient.cs,CreateCommunicationChannel,The length of the statement  "	return (ICommunicationChannel)new TcpCommunicationChannel (TcpHelper.ConnectToServer ((EndPoint)new IPEndPoint (IPAddress.Parse (this._serverEndPoint.IpAddress)' this._serverEndPoint.TcpPort)' this.ConnectTimeout)); " is 215.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpCommunicationChannel,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpCommunicationChannel.cs,StartInternal,The length of the statement  "	this._clientSocket.BeginReceive (this._buffer' 0' this._buffer.Length' SocketFlags.None' new AsyncCallback (this.ReceiveCallback)' (object)null); " is 145.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpCommunicationChannel,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpCommunicationChannel.cs,SendMessageInternal,The length of the statement  "				throw new CommunicationException ("Message could not be sent via TCP socket. Only " + (object)offset + " bytes of " + (string)(object)local_1.Length + " bytes are sent."); " is 171.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpCommunicationChannel,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpCommunicationChannel.cs,ReceiveCallback,The length of the statement  "		this._clientSocket.BeginReceive (this._buffer' 0' this._buffer.Length' SocketFlags.None' new AsyncCallback (this.ReceiveCallback)' (object)null); " is 145.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Messages,ScsRawDataMessage,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messages\ScsRawDataMessage.cs,ToString,The length of the statement  "		return string.Format ("ScsRawDataMessage [{0}] Replied To [{1}]: {2} bytes"' (object)this.MessageId' (object)this.RepliedMessageId' (object)num); " is 145.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Messages,ScsTextMessage,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messages\ScsTextMessage.cs,ToString,The length of the statement  "		return string.Format ("ScsTextMessage [{0}] Replied To [{1}]: {2}"' (object)this.MessageId' (object)this.RepliedMessageId' (object)this.Text); " is 142.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Messengers,RequestReplyMessenger,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messengers\RequestReplyMessenger.cs,Stop,The length of the statement  "		foreach (RequestReplyMessenger<T>.WaitingMessage item_0 in (IEnumerable<RequestReplyMessenger<T>.WaitingMessage>)this._waitingMessages.Values) { " is 144.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Messengers,SynchronizedMessenger,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messengers\SynchronizedMessenger.cs,ReceiveMessage,The length of the statement  "		throw new Exception ("Unexpected message received. Expected type: " + typeof(TMessage).Name + ". Received message type: " + scsMessage.GetType ().Name); " is 152.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The length of the statement  "		throw new CommunicationException ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes."); " is 151.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The length of the statement  "		throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes."); " is 138.
Long Statement,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The length of the statement  "		byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length))); " is 156.
Long Statement,Tera.NetworkApi.Communication.Scs.Server,ScsServerBase,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Server\ScsServerBase.cs,Start,The length of the statement  "	this._connectionListener.CommunicationChannelConnected += new EventHandler<CommunicationChannelEventArgs> (this.ConnectionListener_CommunicationChannelConnected); " is 162.
Empty Catch Block,Tera.Network,WebServer,C:\repos\GoneUp_Temu\Launcher\Network\WebServer.cs,Run,The method has an empty catch block.
Empty Catch Block,Tera.Network,WebServer,C:\repos\GoneUp_Temu\Launcher\Network\WebServer.cs,Run,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Communication.ScsServices.Client,ScsServiceClient,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Client\ScsServiceClient.cs,SendInvokeResponse,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Communication.ScsServices.Service,ScsServiceApplication,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\ScsServices\Service\ScsServiceApplication.cs,SendInvokeResponse,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Communication.Scs.Client,ScsClientBase,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\ScsClientBase.cs,PingTimer_Elapsed,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpCommunicationChannel,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpCommunicationChannel.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpConnectionListener,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpConnectionListener.cs,StopSocket,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpConnectionListener,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpConnectionListener.cs,DoListenAsThread,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Threading,SequentialItemProcessor,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Threading\SequentialItemProcessor.cs,Stop,The method has an empty catch block.
Empty Catch Block,Tera.NetworkApi.Threading,Timer,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Threading\Timer.cs,TimerCallBack,The method has an empty catch block.
Magic Number,Tera,Config,C:\repos\GoneUp_Temu\Launcher\Config.cs,Config,The following statement contains a magic number: _ServerPort = 2101;  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: if (isLoggedIn) {  	try {  		ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  		ws.Run ();  		PrintMessage ("WebService started!.");  		Thread.Sleep (1000);  		//Login Data...  		int unk1 = 1;  		//access level?  		String password = Crypt.StringToMD5 (_inputPassword.Password);  		int unk2 = 0;  		//language long or lastserverid?  		int unk3 = 0;  		//lastserverid or user perm?  		String username = _inputUsername.Text;  		string language = launcherConfig.LanguageGame;  		string space = " ";  		//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  		//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  		string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  		ProcessStartInfo startInfo = new ProcessStartInfo ();  		startInfo.FileName = Config.CurrentGameFile;  		startInfo.Arguments = LaunchString;  		startInfo.UseShellExecute = false;  		startInfo.CreateNoWindow = true;  		startInfo.RedirectStandardOutput = true;  		startInfo.RedirectStandardError = true;  		startInfo.RedirectStandardInput = true;  		Process.Start (startInfo);  		//wait for tera exe and exit...  		PrintMessage ("Waiting for Game...");  		Thread.Sleep (1000);  		PrintMessage ("WebService stopped!.");  		ws.Stop ();  		Thread.Sleep (1000);  		Thread.Sleep (1000);  		if (Environment.UserName == "Henry")  			return;  		Environment.Exit (0);  	}  	catch (Exception ex) {  		PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  		Environment.Exit (0);  	}  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: if (isLoggedIn) {  	try {  		ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  		ws.Run ();  		PrintMessage ("WebService started!.");  		Thread.Sleep (1000);  		//Login Data...  		int unk1 = 1;  		//access level?  		String password = Crypt.StringToMD5 (_inputPassword.Password);  		int unk2 = 0;  		//language long or lastserverid?  		int unk3 = 0;  		//lastserverid or user perm?  		String username = _inputUsername.Text;  		string language = launcherConfig.LanguageGame;  		string space = " ";  		//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  		//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  		string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  		ProcessStartInfo startInfo = new ProcessStartInfo ();  		startInfo.FileName = Config.CurrentGameFile;  		startInfo.Arguments = LaunchString;  		startInfo.UseShellExecute = false;  		startInfo.CreateNoWindow = true;  		startInfo.RedirectStandardOutput = true;  		startInfo.RedirectStandardError = true;  		startInfo.RedirectStandardInput = true;  		Process.Start (startInfo);  		//wait for tera exe and exit...  		PrintMessage ("Waiting for Game...");  		Thread.Sleep (1000);  		PrintMessage ("WebService stopped!.");  		ws.Stop ();  		Thread.Sleep (1000);  		Thread.Sleep (1000);  		if (Environment.UserName == "Henry")  			return;  		Environment.Exit (0);  	}  	catch (Exception ex) {  		PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  		Environment.Exit (0);  	}  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: if (isLoggedIn) {  	try {  		ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  		ws.Run ();  		PrintMessage ("WebService started!.");  		Thread.Sleep (1000);  		//Login Data...  		int unk1 = 1;  		//access level?  		String password = Crypt.StringToMD5 (_inputPassword.Password);  		int unk2 = 0;  		//language long or lastserverid?  		int unk3 = 0;  		//lastserverid or user perm?  		String username = _inputUsername.Text;  		string language = launcherConfig.LanguageGame;  		string space = " ";  		//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  		//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  		string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  		ProcessStartInfo startInfo = new ProcessStartInfo ();  		startInfo.FileName = Config.CurrentGameFile;  		startInfo.Arguments = LaunchString;  		startInfo.UseShellExecute = false;  		startInfo.CreateNoWindow = true;  		startInfo.RedirectStandardOutput = true;  		startInfo.RedirectStandardError = true;  		startInfo.RedirectStandardInput = true;  		Process.Start (startInfo);  		//wait for tera exe and exit...  		PrintMessage ("Waiting for Game...");  		Thread.Sleep (1000);  		PrintMessage ("WebService stopped!.");  		ws.Stop ();  		Thread.Sleep (1000);  		Thread.Sleep (1000);  		if (Environment.UserName == "Henry")  			return;  		Environment.Exit (0);  	}  	catch (Exception ex) {  		PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  		Environment.Exit (0);  	}  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: if (isLoggedIn) {  	try {  		ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  		ws.Run ();  		PrintMessage ("WebService started!.");  		Thread.Sleep (1000);  		//Login Data...  		int unk1 = 1;  		//access level?  		String password = Crypt.StringToMD5 (_inputPassword.Password);  		int unk2 = 0;  		//language long or lastserverid?  		int unk3 = 0;  		//lastserverid or user perm?  		String username = _inputUsername.Text;  		string language = launcherConfig.LanguageGame;  		string space = " ";  		//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  		//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  		string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  		ProcessStartInfo startInfo = new ProcessStartInfo ();  		startInfo.FileName = Config.CurrentGameFile;  		startInfo.Arguments = LaunchString;  		startInfo.UseShellExecute = false;  		startInfo.CreateNoWindow = true;  		startInfo.RedirectStandardOutput = true;  		startInfo.RedirectStandardError = true;  		startInfo.RedirectStandardInput = true;  		Process.Start (startInfo);  		//wait for tera exe and exit...  		PrintMessage ("Waiting for Game...");  		Thread.Sleep (1000);  		PrintMessage ("WebService stopped!.");  		ws.Stop ();  		Thread.Sleep (1000);  		Thread.Sleep (1000);  		if (Environment.UserName == "Henry")  			return;  		Environment.Exit (0);  	}  	catch (Exception ex) {  		PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  		Environment.Exit (0);  	}  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: try {  	ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  	ws.Run ();  	PrintMessage ("WebService started!.");  	Thread.Sleep (1000);  	//Login Data...  	int unk1 = 1;  	//access level?  	String password = Crypt.StringToMD5 (_inputPassword.Password);  	int unk2 = 0;  	//language long or lastserverid?  	int unk3 = 0;  	//lastserverid or user perm?  	String username = _inputUsername.Text;  	string language = launcherConfig.LanguageGame;  	string space = " ";  	//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  	//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  	string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  	ProcessStartInfo startInfo = new ProcessStartInfo ();  	startInfo.FileName = Config.CurrentGameFile;  	startInfo.Arguments = LaunchString;  	startInfo.UseShellExecute = false;  	startInfo.CreateNoWindow = true;  	startInfo.RedirectStandardOutput = true;  	startInfo.RedirectStandardError = true;  	startInfo.RedirectStandardInput = true;  	Process.Start (startInfo);  	//wait for tera exe and exit...  	PrintMessage ("Waiting for Game...");  	Thread.Sleep (1000);  	PrintMessage ("WebService stopped!.");  	ws.Stop ();  	Thread.Sleep (1000);  	Thread.Sleep (1000);  	if (Environment.UserName == "Henry")  		return;  	Environment.Exit (0);  }  catch (Exception ex) {  	PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  	Environment.Exit (0);  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: try {  	ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  	ws.Run ();  	PrintMessage ("WebService started!.");  	Thread.Sleep (1000);  	//Login Data...  	int unk1 = 1;  	//access level?  	String password = Crypt.StringToMD5 (_inputPassword.Password);  	int unk2 = 0;  	//language long or lastserverid?  	int unk3 = 0;  	//lastserverid or user perm?  	String username = _inputUsername.Text;  	string language = launcherConfig.LanguageGame;  	string space = " ";  	//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  	//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  	string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  	ProcessStartInfo startInfo = new ProcessStartInfo ();  	startInfo.FileName = Config.CurrentGameFile;  	startInfo.Arguments = LaunchString;  	startInfo.UseShellExecute = false;  	startInfo.CreateNoWindow = true;  	startInfo.RedirectStandardOutput = true;  	startInfo.RedirectStandardError = true;  	startInfo.RedirectStandardInput = true;  	Process.Start (startInfo);  	//wait for tera exe and exit...  	PrintMessage ("Waiting for Game...");  	Thread.Sleep (1000);  	PrintMessage ("WebService stopped!.");  	ws.Stop ();  	Thread.Sleep (1000);  	Thread.Sleep (1000);  	if (Environment.UserName == "Henry")  		return;  	Environment.Exit (0);  }  catch (Exception ex) {  	PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  	Environment.Exit (0);  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: try {  	ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  	ws.Run ();  	PrintMessage ("WebService started!.");  	Thread.Sleep (1000);  	//Login Data...  	int unk1 = 1;  	//access level?  	String password = Crypt.StringToMD5 (_inputPassword.Password);  	int unk2 = 0;  	//language long or lastserverid?  	int unk3 = 0;  	//lastserverid or user perm?  	String username = _inputUsername.Text;  	string language = launcherConfig.LanguageGame;  	string space = " ";  	//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  	//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  	string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  	ProcessStartInfo startInfo = new ProcessStartInfo ();  	startInfo.FileName = Config.CurrentGameFile;  	startInfo.Arguments = LaunchString;  	startInfo.UseShellExecute = false;  	startInfo.CreateNoWindow = true;  	startInfo.RedirectStandardOutput = true;  	startInfo.RedirectStandardError = true;  	startInfo.RedirectStandardInput = true;  	Process.Start (startInfo);  	//wait for tera exe and exit...  	PrintMessage ("Waiting for Game...");  	Thread.Sleep (1000);  	PrintMessage ("WebService stopped!.");  	ws.Stop ();  	Thread.Sleep (1000);  	Thread.Sleep (1000);  	if (Environment.UserName == "Henry")  		return;  	Environment.Exit (0);  }  catch (Exception ex) {  	PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  	Environment.Exit (0);  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: try {  	ws = new WebServer (SendServerListResponse' Config.sl_FileToLoad);  	ws.Run ();  	PrintMessage ("WebService started!.");  	Thread.Sleep (1000);  	//Login Data...  	int unk1 = 1;  	//access level?  	String password = Crypt.StringToMD5 (_inputPassword.Password);  	int unk2 = 0;  	//language long or lastserverid?  	int unk3 = 0;  	//lastserverid or user perm?  	String username = _inputUsername.Text;  	string language = launcherConfig.LanguageGame;  	string space = " ";  	//Arguments = accessLevel + " " + PasswordHash + " " + LanguageLong + " " + lastServerId + " " + userPerm + " " + AccountName + "'" + LanguageShort  	//string LaunchString = " 1 " + password + " 0 0 " + username + " " + launcherConfig.LanguageGame;  	string LaunchString = space + unk1 + space + password + space + unk2 + space + unk3 + space + username + space + language;  	ProcessStartInfo startInfo = new ProcessStartInfo ();  	startInfo.FileName = Config.CurrentGameFile;  	startInfo.Arguments = LaunchString;  	startInfo.UseShellExecute = false;  	startInfo.CreateNoWindow = true;  	startInfo.RedirectStandardOutput = true;  	startInfo.RedirectStandardError = true;  	startInfo.RedirectStandardInput = true;  	Process.Start (startInfo);  	//wait for tera exe and exit...  	PrintMessage ("Waiting for Game...");  	Thread.Sleep (1000);  	PrintMessage ("WebService stopped!.");  	ws.Stop ();  	Thread.Sleep (1000);  	Thread.Sleep (1000);  	if (Environment.UserName == "Henry")  		return;  	Environment.Exit (0);  }  catch (Exception ex) {  	PrintMessage ("Error: Could not start the Game Exe\n" + ex.ToString ());  	Environment.Exit (0);  }  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Tera,MainWindow,C:\repos\GoneUp_Temu\Launcher\MainWindow.xaml.cs,playButton_Click,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Tera.NetworkApi.Communication.Scs.Client,ClientReConnecter,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\ClientReConnecter.cs,ClientReConnecter,The following statement contains a magic number: this._reconnectTimer = new Timer (20000);  
Magic Number,Tera.NetworkApi.Communication.Scs.Client,ScsClientBase,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\ScsClientBase.cs,ScsClientBase,The following statement contains a magic number: this._pingTimer = new Timer (30000);  
Magic Number,Tera.NetworkApi.Communication.Scs.Client,ScsClientBase,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\ScsClientBase.cs,ScsClientBase,The following statement contains a magic number: this.ConnectTimeout = 15000;  
Magic Number,Tera.NetworkApi.Communication.Scs.Client.Tcp,TcpHelper,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\Tcp\TcpHelper.cs,ConnectToServer,The following statement contains a magic number: try {  	socket.Blocking = false;  	socket.Connect (endPoint);  	socket.Blocking = true;  	return socket;  }  catch (SocketException ex) {  	if (ex.ErrorCode != 10035) {  		socket.Close ();  		throw;  	}  	else if (!socket.Poll (timeoutMs * 1000' SelectMode.SelectWrite)) {  		socket.Close ();  		throw new TimeoutException ("The host failed to connect. Timeout occured.");  	}  	else {  		socket.Blocking = true;  		return socket;  	}  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Client.Tcp,TcpHelper,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\Tcp\TcpHelper.cs,ConnectToServer,The following statement contains a magic number: try {  	socket.Blocking = false;  	socket.Connect (endPoint);  	socket.Blocking = true;  	return socket;  }  catch (SocketException ex) {  	if (ex.ErrorCode != 10035) {  		socket.Close ();  		throw;  	}  	else if (!socket.Poll (timeoutMs * 1000' SelectMode.SelectWrite)) {  		socket.Close ();  		throw new TimeoutException ("The host failed to connect. Timeout occured.");  	}  	else {  		socket.Blocking = true;  		return socket;  	}  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Client.Tcp,TcpHelper,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\Tcp\TcpHelper.cs,ConnectToServer,The following statement contains a magic number: if (ex.ErrorCode != 10035) {  	socket.Close ();  	throw;  }  else if (!socket.Poll (timeoutMs * 1000' SelectMode.SelectWrite)) {  	socket.Close ();  	throw new TimeoutException ("The host failed to connect. Timeout occured.");  }  else {  	socket.Blocking = true;  	return socket;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Client.Tcp,TcpHelper,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\Tcp\TcpHelper.cs,ConnectToServer,The following statement contains a magic number: if (ex.ErrorCode != 10035) {  	socket.Close ();  	throw;  }  else if (!socket.Poll (timeoutMs * 1000' SelectMode.SelectWrite)) {  	socket.Close ();  	throw new TimeoutException ("The host failed to connect. Timeout occured.");  }  else {  	socket.Blocking = true;  	return socket;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Client.Tcp,TcpHelper,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Client\Tcp\TcpHelper.cs,ConnectToServer,The following statement contains a magic number: if (!socket.Poll (timeoutMs * 1000' SelectMode.SelectWrite)) {  	socket.Close ();  	throw new TimeoutException ("The host failed to connect. Timeout occured.");  }  else {  	socket.Blocking = true;  	return socket;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpCommunicationChannel,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpCommunicationChannel.cs,TcpCommunicationChannel,The following statement contains a magic number: this._buffer = new byte[4096];  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpConnectionListener,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpConnectionListener.cs,DoListenAsThread,The following statement contains a magic number: while (this._running) {  	try {  		Socket clientSocket = this._listenerSocket.AcceptSocket ();  		if (clientSocket.Connected)  			this.OnCommunicationChannelConnected ((ICommunicationChannel)new TcpCommunicationChannel (clientSocket));  	}  	catch {  		this.StopSocket ();  		Thread.Sleep (1000);  		if (!this._running)  			break;  		try {  			this.StartSocket ();  		}  		catch {  		}  	}  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpConnectionListener,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpConnectionListener.cs,DoListenAsThread,The following statement contains a magic number: try {  	Socket clientSocket = this._listenerSocket.AcceptSocket ();  	if (clientSocket.Connected)  		this.OnCommunicationChannelConnected ((ICommunicationChannel)new TcpCommunicationChannel (clientSocket));  }  catch {  	this.StopSocket ();  	Thread.Sleep (1000);  	if (!this._running)  		break;  	try {  		this.StartSocket ();  	}  	catch {  	}  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Channels.Tcp,TcpConnectionListener,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Channels\Tcp\TcpConnectionListener.cs,DoListenAsThread,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.EndPoints,ScsEndPoint,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\EndPoints\ScsEndPoint.cs,CreateEndPoint,The following statement contains a magic number: if (strArray.Length != 2)  	throw new ApplicationException (endPointAddress + " is not a valid endpoint address.");  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.EndPoints.Tcp,ScsTcpEndPoint,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\EndPoints\Tcp\ScsTcpEndPoint.cs,ToString,The following statement contains a magic number: return string.Concat (new object[4] {  	(object)"tcp://"'  	(object)this.IpAddress'  	(object)":"'  	(object)this.TcpPort  });  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Messengers,RequestReplyMessenger,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messengers\RequestReplyMessenger.cs,RequestReplyMessenger,The following statement contains a magic number: this.Timeout = 60000;  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Messengers,RequestReplyMessenger,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messengers\RequestReplyMessenger.cs,Messenger_MessageReceived,The following statement contains a magic number: if (!string.IsNullOrEmpty (e.Message.RepliedMessageId)) {  	RequestReplyMessenger<T>.WaitingMessage waitingMessage = (RequestReplyMessenger<T>.WaitingMessage)null;  	lock (this._syncObj) {  		if (this._waitingMessages.ContainsKey (e.Message.RepliedMessageId))  			waitingMessage = this._waitingMessages [e.Message.RepliedMessageId];  	}  	if (waitingMessage != null) {  		waitingMessage.ResponseMessage = e.Message;  		waitingMessage.State = (RequestReplyMessenger<T>.WaitingMessageStates)2;  		waitingMessage.WaitEvent.Set ();  		return;  	}  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Messengers,RequestReplyMessenger,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messengers\RequestReplyMessenger.cs,Messenger_MessageReceived,The following statement contains a magic number: if (waitingMessage != null) {  	waitingMessage.ResponseMessage = e.Message;  	waitingMessage.State = (RequestReplyMessenger<T>.WaitingMessageStates)2;  	waitingMessage.WaitEvent.Set ();  	return;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Messengers,RequestReplyMessenger,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Messengers\RequestReplyMessenger.cs,Messenger_MessageReceived,The following statement contains a magic number: waitingMessage.State = (RequestReplyMessenger<T>.WaitingMessageStates)2;  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: if (length > 134217728) {  	throw new CommunicationException ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  }  else {  	byte[] buffer = new byte[length + 4];  	BinarySerializationProtocol.WriteInt32 (buffer' 0' length);  	Array.Copy ((Array)numArray' 0' (Array)buffer' 4' length);  	return buffer;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: if (length > 134217728) {  	throw new CommunicationException ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  }  else {  	byte[] buffer = new byte[length + 4];  	BinarySerializationProtocol.WriteInt32 (buffer' 0' length);  	Array.Copy ((Array)numArray' 0' (Array)buffer' 4' length);  	return buffer;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: if (length > 134217728) {  	throw new CommunicationException ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  }  else {  	byte[] buffer = new byte[length + 4];  	BinarySerializationProtocol.WriteInt32 (buffer' 0' length);  	Array.Copy ((Array)numArray' 0' (Array)buffer' 4' length);  	return buffer;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: if (length > 134217728) {  	throw new CommunicationException ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  }  else {  	byte[] buffer = new byte[length + 4];  	BinarySerializationProtocol.WriteInt32 (buffer' 0' length);  	Array.Copy ((Array)numArray' 0' (Array)buffer' 4' length);  	return buffer;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: throw new CommunicationException ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,GetBytes,The following statement contains a magic number: Array.Copy ((Array)numArray' 0' (Array)buffer' 4' length);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length > 134217728)  	throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  else if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: throw new Exception ("Message is too big (" + (object)length + " bytes). Max allowed length is " + (string)(object)134217728 + " bytes.");  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (length == 0) {  	if (this._receiveMemoryStream.Length == 4L) {  		this._receiveMemoryStream = new MemoryStream ();  		return false;  	}  	else {  		byte[] buffer = this._receiveMemoryStream.ToArray ();  		this._receiveMemoryStream = new MemoryStream ();  		this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  		return true;  	}  }  else if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (this._receiveMemoryStream.Length == 4L) {  	this._receiveMemoryStream = new MemoryStream ();  	return false;  }  else {  	byte[] buffer = this._receiveMemoryStream.ToArray ();  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  	return true;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (this._receiveMemoryStream.Length == 4L) {  	this._receiveMemoryStream = new MemoryStream ();  	return false;  }  else {  	byte[] buffer = this._receiveMemoryStream.ToArray ();  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  	return true;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: this._receiveMemoryStream.Write (buffer' 4' buffer.Length - 4);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: if (this._receiveMemoryStream.Length < (long)(4 + length)) {  	this._receiveMemoryStream.Position = this._receiveMemoryStream.Length;  	return false;  }  else {  	byte[] bytes = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' length);  	messages.Add (this.DeserializeMessage (bytes));  	byte[] buffer = BinarySerializationProtocol.ReadByteArray ((Stream)this._receiveMemoryStream' (int)(this._receiveMemoryStream.Length - (long)(4 + length)));  	this._receiveMemoryStream = new MemoryStream ();  	this._receiveMemoryStream.Write (buffer' 0' buffer.Length);  	return buffer.Length > 4;  }  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadSingleMessage,The following statement contains a magic number: return buffer.Length > 4;  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer [startIndex] = (byte)(number >> 24 & (int)byte.MaxValue);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer [startIndex + 1] = (byte)(number >> 16 & (int)byte.MaxValue);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer [startIndex + 2] = (byte)(number >> 8 & (int)byte.MaxValue);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer [startIndex + 2] = (byte)(number >> 8 & (int)byte.MaxValue);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,WriteInt32,The following statement contains a magic number: buffer [startIndex + 3] = (byte)(number & (int)byte.MaxValue);  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return (int)numArray [0] << 24 | (int)numArray [1] << 16 | (int)numArray [2] << 8 | (int)numArray [3];  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return (int)numArray [0] << 24 | (int)numArray [1] << 16 | (int)numArray [2] << 8 | (int)numArray [3];  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return (int)numArray [0] << 24 | (int)numArray [1] << 16 | (int)numArray [2] << 8 | (int)numArray [3];  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return (int)numArray [0] << 24 | (int)numArray [1] << 16 | (int)numArray [2] << 8 | (int)numArray [3];  
Magic Number,Tera.NetworkApi.Communication.Scs.Communication.Protocols.BinarySerialization,BinarySerializationProtocol,C:\repos\GoneUp_Temu\Launcher\NetworkApi\Communication\Scs\Communication\Protocols\BinarySerialization\BinarySerializationProtocol.cs,ReadInt32,The following statement contains a magic number: return (int)numArray [0] << 24 | (int)numArray [1] << 16 | (int)numArray [2] << 8 | (int)numArray [3];  
Missing Default,Tera,Config,C:\repos\GoneUp_Temu\Launcher\Config.cs,SwitchLanguage,The following switch statement is missing a default case: switch (MainWindow.launcherConfig.Language) {  case "":  	MainWindow.launcherConfig.Language = Languages.English.ToString ();  	MainWindow.launcherConfig.LanguageGame = "uk";  	MainWindow.launcherConfig.LanguageId = Languages.English.GetHashCode ();  	break;  case "English":  	MainWindow.launcherConfig.Language = Languages.English.ToString ();  	MainWindow.launcherConfig.LanguageGame = "uk";  	MainWindow.launcherConfig.LanguageId = Languages.English.GetHashCode ();  	sl_FileToLoad = "http://127.0.0.1:12345/server/serverlist.uk/";  	sl_FileToRead = CurrentDataDirectory + @"serverlist.uk";  	break;  case "French":  	MainWindow.launcherConfig.Language = Languages.French.ToString ();  	MainWindow.launcherConfig.LanguageGame = "fr";  	MainWindow.launcherConfig.LanguageId = Languages.French.GetHashCode ();  	sl_FileToLoad = "http://127.0.0.1:12345/server/serverlist.fr/";  	sl_FileToRead = CurrentDataDirectory + @"serverlist.fr";  	break;  case "German":  	MainWindow.launcherConfig.Language = Languages.German.ToString ();  	MainWindow.launcherConfig.LanguageGame = "de";  	MainWindow.launcherConfig.LanguageId = Languages.German.GetHashCode ();  	sl_FileToLoad = "http://127.0.0.1:12345/server/serverlist.de/";  	sl_FileToRead = CurrentDataDirectory + @"serverlist.de";  	break;  }  
