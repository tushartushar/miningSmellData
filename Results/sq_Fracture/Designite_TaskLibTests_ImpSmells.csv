Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,DisposeAndGetRemainingBytes,The length of the statement  "            Assert.AreEqual("efgh\0ijkl"' Encoding.ASCII.GetString(remainingBytes.Array' remainingBytes.Offset' remainingBytes.Count)); " is 123.
Long Statement,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,StepPerformanceTest,The length of the statement  "            Console.WriteLine("Took {0:N2} secs for {1} steps. {2:N1} steps/sec"' elapsed.TotalSeconds' buf[0]' 1.0 * buf[0] / elapsed.TotalSeconds); " is 137.
Long Statement,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WorkItemPerformanceTest,The length of the statement  "            Console.WriteLine("Took {0:N2} secs for {1} yields. {2:N1} yields/sec"' elapsed.TotalSeconds' buf[0]' 1.0 * buf[0] / elapsed.TotalSeconds); " is 139.
Long Statement,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,LongLivedWorkerTest,The length of the statement  "            Console.WriteLine("Took {0:N2} secs for {1} iterations. {2:N1} iterations/sec"' elapsed.TotalSeconds' buf[0]' 1.0 * buf[0] / elapsed.TotalSeconds); " is 147.
Long Statement,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,LotsOfWorkersTest,The length of the statement  "            Console.WriteLine("Took {0:N2} secs for {1} iterations. {2:N1} iterations/sec"' elapsed.TotalSeconds' buf[0]' 1.0 * buf[0] / elapsed.TotalSeconds); " is 147.
Long Statement,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfEntities,The length of the statement  "            Console.WriteLine("Took {0:N2} secs for {1} iterations. {2:N1} entities/sec"' elapsed.TotalSeconds' numSteps' numEntities * numSteps / elapsed.TotalSeconds); " is 157.
Long Statement,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfSleepyEntities,The length of the statement  "            Console.WriteLine("{0} iterations in {1:N2} secs. {2} entity steps @ {3} entities/sec"' j' elapsedSeconds' totalEntitySteps' totalEntitySteps / elapsedSeconds); " is 160.
Long Statement,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfChattyEntities,The length of the statement  "            Console.WriteLine("Took {0:N2} secs for {1} iterations. {2:N1} entities/sec"' elapsed.TotalSeconds' numSteps' numEntitySteps / elapsed.TotalSeconds); " is 149.
Empty Catch Block,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfReadInvokedWhilePreviousReadIsPending,The method has an empty catch block.
Empty Catch Block,Squared.Task.IO,AsyncStreamWriterTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfWriteInvokedWhilePreviousWriteIsPending,The method has an empty catch block.
Empty Catch Block,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenSocketDisconnectsButEndReadRaises,The method has an empty catch block.
Empty Catch Block,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,IteratorRaisesIfCurrentIsAccessedBeforeInitialMoveNext,The method has an empty catch block.
Empty Catch Block,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,IteratorRaisesOnceIteratorIsDisposed,The method has an empty catch block.
Empty Catch Block,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTest,The method has an empty catch block.
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,AcceptRequestReturnsFutureThatCompletesWhenRequestIsAvailable,The following statement contains a magic number: var request = Scheduler.WaitFor(fRequest' 2);
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,AcceptedRequestContainsParsedHeaders,The following statement contains a magic number: var request = Scheduler.WaitFor(Server.AcceptRequest()' 3);
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,AcceptedRequestOffersBody,The following statement contains a magic number: var dataToUpload = new byte[1024 * 1024];
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,AcceptedRequestOffersBody,The following statement contains a magic number: var dataToUpload = new byte[1024 * 1024];
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,AcceptedRequestOffersBody,The following statement contains a magic number: dataToUpload[i] = (byte)(i % 256);
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,AcceptedRequestOffersBody,The following statement contains a magic number: var request = Scheduler.WaitFor(Server.AcceptRequest()' 3);
Magic Number,Squared.Task.Http,HttpTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\HttpTests.cs,SendsResponseBodyText,The following statement contains a magic number: var request = Scheduler.WaitFor(Server.AcceptRequest()' 3);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadLotsOfLinesTest,The following statement contains a magic number: int lineCount = 5000;
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadLotsOfLinesTest,The following statement contains a magic number: string text = new string((char)rng.Next(32' 127)' rng.Next(1' 64));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadLotsOfLinesTest,The following statement contains a magic number: string text = new string((char)rng.Next(32' 127)' rng.Next(1' 64));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadLotsOfLinesTest,The following statement contains a magic number: string text = new string((char)rng.Next(32' 127)' rng.Next(1' 64));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,MultiblockReadTest,The following statement contains a magic number: string testData = new string('a'' AsyncTextReader.DefaultBufferSize * 4);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: string testData = new string('a'' 320);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: char[] buffer = new char[256];
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: var f = Reader.Read(buffer' 0' 256);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(256' f.Result);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(testData.Substring(0' 256)' new string(buffer' 0' 256));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(testData.Substring(0' 256)' new string(buffer' 0' 256));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: f = Reader.Read(buffer' 0' 256);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(64' f.Result);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(testData.Substring(256' 64)' new string(buffer' 0' 64));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(testData.Substring(256' 64)' new string(buffer' 0' 64));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: Assert.AreEqual(testData.Substring(256' 64)' new string(buffer' 0' 64));
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ReadBlockTest,The following statement contains a magic number: f = Reader.Read(buffer' 0' 256);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfReadInvokedWhilePreviousReadIsPending,The following statement contains a magic number: WriteTestData(new byte[1024 * 1024]);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfReadInvokedWhilePreviousReadIsPending,The following statement contains a magic number: WriteTestData(new byte[1024 * 1024]);
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfReadInvokedWhilePreviousReadIsPending,The following statement contains a magic number: char[] buf = new char[2048 * 1024];
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfReadInvokedWhilePreviousReadIsPending,The following statement contains a magic number: char[] buf = new char[2048 * 1024];
Magic Number,Squared.Task.IO,AsyncStreamReaderTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfReadInvokedWhilePreviousReadIsPending,The following statement contains a magic number: f = Reader.Read(buf' 0' 16);
Magic Number,Squared.Task.IO,AsyncStreamWriterTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfWriteInvokedWhilePreviousWriteIsPending,The following statement contains a magic number: string buf = new string(' '' 4096 * 1024);
Magic Number,Squared.Task.IO,AsyncStreamWriterTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ThrowsIfWriteInvokedWhilePreviousWriteIsPending,The following statement contains a magic number: string buf = new string(' '' 4096 * 1024);
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,SetUp,The following statement contains a magic number: Listener = new TcpListener(IPAddress.Any' 1235);
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,SetUp,The following statement contains a magic number: var fB = Network.ConnectTo("localhost"' 1235);
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenDataAvailable,The following statement contains a magic number: byte[] writeBuf = new byte[256];
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenDataAvailable,The following statement contains a magic number: byte[] readBuf = new byte[256];
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenDataAvailable,The following statement contains a magic number: i < 256
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenOtherSocketDisconnects,The following statement contains a magic number: byte[] readBuf = new byte[256];
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenOtherSocketDisconnects,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenSocketDisconnectsButEndReadRaises,The following statement contains a magic number: byte[] readBuf = new byte[256];
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenSocketDisconnectsButEndReadRaises,The following statement contains a magic number: AsyncCallback readCallback = (ar) => {                  try {                      Thread.Sleep(1000);                      int numBytes = StreamA.EndRead(ar);                      Assert.Fail("ObjectDisposedException was not raised by EndRead");                  } catch (ObjectDisposedException) {                  }                  readCallbackInvoked[0] = true;              };
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,BeginReadInvokesCallbackWhenSocketDisconnectsButEndReadRaises,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,FillingSendBufferCausesWriteToBlock,The following statement contains a magic number: byte[] buf = new byte[102400];
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,FillingSendBufferCausesWriteToBlock,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,Squared.Task.IO,SocketTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,FillingSendBufferCausesWriteToBlock,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Squared.Task.IO,DiskMonitorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ModifiedEvents,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Squared.Task.IO,DiskMonitorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,ModifiedEvents,The following statement contains a magic number: i < 100
Magic Number,Squared.Task.IO,DiskMonitorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,DeletedEvents,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Squared.Task.IO,DiskMonitorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\IOTests.cs,DeletedEvents,The following statement contains a magic number: i < 100
Magic Number,Squared.Task,QueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\QueueTests.cs,QueueCountIsNegativeIfFuturesWaitingAndPositiveIfValuesInQueue,The following statement contains a magic number: Assert.AreEqual(-3' Queue.Count);
Magic Number,Squared.Task,QueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\QueueTests.cs,QueueCountIsNegativeIfFuturesWaitingAndPositiveIfValuesInQueue,The following statement contains a magic number: i < 6
Magic Number,Squared.Task,QueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\QueueTests.cs,QueueCountIsNegativeIfFuturesWaitingAndPositiveIfValuesInQueue,The following statement contains a magic number: Assert.AreEqual(3' Queue.Count);
Magic Number,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,CountToThree,The following statement contains a magic number: yield return new NextValue(2);
Magic Number,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,CountToThree,The following statement contains a magic number: yield return new NextValue(3);
Magic Number,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestIterateSequence,The following statement contains a magic number: i <= 3
Magic Number,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestToArray,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 2' 3 }' result);
Magic Number,Squared.Task,TaskIteratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestToArray,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 2' 3 }' result);
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,CountTo100,The following statement contains a magic number: i < 100
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,YieldStartGetTaskIterator,The following statement contains a magic number: int[] expected = new int[100];
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,YieldStartGetTaskIterator,The following statement contains a magic number: i < 100
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestToArray,The following statement contains a magic number: int[] expected = new int[100];
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestToArray,The following statement contains a magic number: i < 100
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestBufferingPerformance,The following statement contains a magic number: int[] buf = new int[1024 * 512]' copy = null;
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestBufferingPerformance,The following statement contains a magic number: int[] buf = new int[1024 * 512]' copy = null;
Magic Number,Squared.Task,EnumeratorTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\SequenceTests.cs,TestBufferingPerformance,The following statement contains a magic number: bs <= 4096
Magic Number,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TaskReturn5,The following statement contains a magic number: yield return new Result(5);
Magic Number,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,BasicTest,The following statement contains a magic number: Assert.AreEqual(5' future.Result);
Magic Number,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,YieldOnFutureTest,The following statement contains a magic number: TestFuture.Complete(10);
Magic Number,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,YieldOnFutureTest,The following statement contains a magic number: Assert.AreEqual(10' future.Result);
Magic Number,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,StepPerformanceTest,The following statement contains a magic number: int numSteps = 5000;
Magic Number,Squared.Task,BasicJobQueueTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WorkItemPerformanceTest,The following statement contains a magic number: int numYields = 250000;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleYieldersOnFutureTest,The following statement contains a magic number: i < 10
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleYieldersOnFutureTest,The following statement contains a magic number: TestFuture.Complete(10);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleYieldersOnFutureTest,The following statement contains a magic number: Assert.AreEqual(10' f.Result);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RecursiveYieldTest,The following statement contains a magic number: TestFuture.Complete(10);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RecursiveYieldTest,The following statement contains a magic number: Assert.AreEqual(10' future.Result);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,YieldEnumeratorTest,The following statement contains a magic number: Assert.AreEqual(1000000' buf[0]);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TaskYieldValue,The following statement contains a magic number: yield return 5;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TaskLongLivedWorker,The following statement contains a magic number: i < 1000000
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,LongLivedWorkerTest,The following statement contains a magic number: Assert.AreEqual(1000000' buf[0]);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForNextStepTest,The following statement contains a magic number: Assert.AreEqual(2' buf.Count);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForNextStepTest,The following statement contains a magic number: Assert.AreEqual(3' buf.Count);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,LotsOfWorkersTest,The following statement contains a magic number: i < 15
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,LotsOfWorkersTest,The following statement contains a magic number: Assert.AreEqual(1000000 * 15' buf[0]);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,LotsOfWorkersTest,The following statement contains a magic number: Assert.AreEqual(1000000 * 15' buf[0]);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WorkerThread,The following statement contains a magic number: return 42;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunInThreadTest,The following statement contains a magic number: int numIterations = 1000000 * 20;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunInThreadTest,The following statement contains a magic number: int numIterations = 1000000 * 20;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunInThreadTest,The following statement contains a magic number: Assert.AreEqual(42' f.Result);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleThreadTest,The following statement contains a magic number: int numIterations = 1000000;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleThreadTest,The following statement contains a magic number: int numWorkers = 50;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SleepThenReturn5,The following statement contains a magic number: yield return new Sleep(0.1);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SleepThenReturn5,The following statement contains a magic number: yield return new Result(5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForFutureTest,The following statement contains a magic number: var result = Scheduler.WaitFor(f' 30);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForFutureTest,The following statement contains a magic number: Assert.AreEqual(5' result);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SleepTest,The following statement contains a magic number: int duration = 2;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SleepTest,The following statement contains a magic number: int timeScale = 25;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ParallelSleepTest,The following statement contains a magic number: int timeScale = 10;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ParallelSleepTest,The following statement contains a magic number: var b = Scheduler.Start(new Sleep(2));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ParallelSleepTest,The following statement contains a magic number: var c = Scheduler.Start(new Sleep(4));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ParallelSleepTest,The following statement contains a magic number: Assert.AreEqual(2 * timeScale' elapsed);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ParallelSleepTest,The following statement contains a magic number: Assert.AreEqual(4 * timeScale' elapsed);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: int timeScale = 10;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: var b = Scheduler.Start(new Sleep(2));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: Assert.AreEqual(2 * timeScale' elapsed);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: System.Threading.Thread.Sleep(500);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: var c = Scheduler.Start(new Sleep(4));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SequentialSleepTest,The following statement contains a magic number: Assert.AreEqual(4 * timeScale' elapsed);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SleepUntilTest,The following statement contains a magic number: int duration = 2;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SleepUntilTest,The following statement contains a magic number: int timeScale = 25;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForFirstTest,The following statement contains a magic number: int duration = 2;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForFirstTest,The following statement contains a magic number: int timeScale = 25;
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForFirstGCTest,The following statement contains a magic number: var b = Scheduler.Start(new Sleep(2));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitWithTimeoutTest,The following statement contains a magic number: var b = Scheduler.Start(new WaitWithTimeout(a' 2));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,PendingSleepsDoNotCauseSchedulerToLeak,The following statement contains a magic number: var f = Scheduler.Start(new Sleep(30));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,DisposingTaskFutureDisposesAnyFuturesTaskIsWaitingOn,The following statement contains a magic number: var sleep = new Sleep(500);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ChildTaskFailuresAbortTasks,The following statement contains a magic number: Scheduler.WaitFor(f' 5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ChildFutureFailuresAbortTasksIfIgnored,The following statement contains a magic number: Scheduler.WaitFor(f' 5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ChildFutureFailuresDoNotAbortTasksIfHandled,The following statement contains a magic number: Assert.AreEqual(false' Scheduler.WaitFor(f' 15));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunExtensionStoresFuture,The following statement contains a magic number: Scheduler.WaitFor(_' 5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,BindTaskToVariableStoresResult,The following statement contains a magic number: Scheduler.WaitFor(_' 5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,BindTaskToVariableStoresResult,The following statement contains a magic number: Assert.AreEqual(5' r[0]);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,BindTaskToVariableBubblesExceptions,The following statement contains a magic number: Scheduler.WaitFor(_' 5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTestTask,The following statement contains a magic number: fOut.SetResult(5' null);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTest,The following statement contains a magic number: Scheduler.WaitFor(theTask' 15);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTest,The following statement contains a magic number: Assert.AreEqual(5' result.Result);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTest,The following statement contains a magic number: Assert.AreEqual(null' Scheduler.WaitFor(theTask' 15));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTest,The following statement contains a magic number: Assert.AreEqual(5' Scheduler.WaitFor(result' 15));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,RunAsBackgroundTest,The following statement contains a magic number: Assert.AreEqual(5' Scheduler.WaitFor(result' 15));
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitThenReturn,The following statement contains a magic number: yield return new Result(5);
Magic Number,Squared.Task,TaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,DisposingFutureTaskIsWaitingOnWakesTask,The following statement contains a magic number: Assert.AreEqual(5' fWaiter.Result);
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForWorkItemsTest,The following statement contains a magic number: var a = Scheduler.Start(new Sleep(1.5));
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForWorkItemsTest,The following statement contains a magic number: Scheduler.WaitForWorkItems(3.0);
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,WaitForWorkItemsTest,The following statement contains a magic number: Assert.LessOrEqual(elapsed' TimeSpan.FromMilliseconds(1525).Ticks);
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SocketServerTest,The following statement contains a magic number: int port = 12345;
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,ClientTask,The following statement contains a magic number: byte[] bytes = new byte[256];
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,SocketClientTest,The following statement contains a magic number: int port = 12345;
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleSocketClientTest,The following statement contains a magic number: int numClients = 4;
Magic Number,Squared.Task,ThreadedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,MultipleSocketClientTest,The following statement contains a magic number: int port = 12345;
Magic Number,Squared.Task,WindowsMessageBasedTaskSchedulerTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,PumpingWindowsMessagesIsEquivalentToStep,The following statement contains a magic number: Assert.AreEqual(5' future.Result);
Magic Number,Squared.Task,SleepyEntity,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,GetWaiter,The following statement contains a magic number: return new Sleep(rng.NextDouble() * 0.1);
Magic Number,Squared.Task,ChattyEntity,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,Talk,The following statement contains a magic number: int state = 30;
Magic Number,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfEntities,The following statement contains a magic number: int numEntities = 10000;
Magic Number,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfEntities,The following statement contains a magic number: int numSteps = 500;
Magic Number,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfSleepyEntities,The following statement contains a magic number: int numEntities = 1500;
Magic Number,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfSleepyEntities,The following statement contains a magic number: int numIterations = 200 * numEntities;
Magic Number,Squared.Task,FunctionalTests,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskLibTests\Tests\TaskSchedulerTests.cs,TestLotsOfChattyEntities,The following statement contains a magic number: int numEntities = 500;
