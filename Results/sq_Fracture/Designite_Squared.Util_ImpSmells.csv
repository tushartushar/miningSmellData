Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Squared.Util,BufferPool<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Buffer.cs,Allocate,Cyclomatic complexity of the method is 8
Complex Method,Squared.Util,CurveBase<TValue;TData>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetLowerIndexForPosition,Cyclomatic complexity of the method is 12
Complex Method,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,Cyclomatic complexity of the method is 9
Complex Method,Squared.Util,IO,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IO.cs,EnumDirectoryEntries,Cyclomatic complexity of the method is 12
Complex Method,Squared.Util.DeclarativeSort,TagOrderingCollection,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,ToposortVisit,Cyclomatic complexity of the method is 9
Complex Method,Squared.Util.DeclarativeSort,EdgeGraph,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,Finalize,Cyclomatic complexity of the method is 10
Complex Method,Squared.Util.Event,EventBus,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EventBus.cs,BroadcastToSubscribers,Cyclomatic complexity of the method is 11
Long Parameter List,Squared.Util,CurveUtil,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,CubicToHermite,The method has 6 parameters. Parameters: a' b' c' d' u' v
Long Parameter List,Squared.Util,CurveUtil,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,HermiteToCubic,The method has 6 parameters. Parameters: a' u' d' v' b' c
Long Parameter List,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,Search,The method has 7 parameters. Parameters: curve' heuristic' low' high' subdivision' maxRecursion' epsilon
Long Parameter List,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,The method has 10 parameters. Parameters: curve' heuristic' low' high' subdivision' maxRecursion' epsilon' bestScoringPosition' bestScore' depth
Long Parameter List,Squared.Util,IO,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IO.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttributes' psfi' cbSizeFileInfo' uFlags
Long Parameter List,Squared.Util,Sort,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Sort.cs,IndexedSort,The method has 5 parameters. Parameters: data' indices' comparer' offset' count
Long Parameter List,Squared.Util,Sort,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Sort.cs,IndexedSortRef,The method has 5 parameters. Parameters: data' indices' comparer' offset' count
Long Parameter List,Squared.Util.DeclarativeSort,TagOrderingCollection,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,ToposortVisit,The method has 6 parameters. Parameters: allEdges' tag' isTopLevel' result' state' nextIndex
Long Parameter List,Squared.Util.Event,EventInfo,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EventBus.cs,EventInfo,The method has 6 parameters. Parameters: bus' source' categoryToken' categoryName' type' arguments
Long Parameter List,Squared.Util.RegexExtensions,Extensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\ExpressionParser.cs,TryMatch,The method has 5 parameters. Parameters: regex' input' start' length' match
Long Statement,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,EmitConversion,The length of the statement  "                throw new InvalidOperationException(String.Format("Conversions to type {0} not supported in expressions"' desiredType.Name)); " is 125.
Long Statement,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,EmitExpressionNode,The length of the statement  "                throw new InvalidOperationException(String.Format("Method calls of type {0} not supported in expressions"' expr.NodeType)); " is 123.
Long Statement,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,EmitExpressionNode,The length of the statement  "                throw new InvalidOperationException(String.Format("Constants of type {0} not supported in expressions"' expr.Type.Name)); " is 121.
Long Statement,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,PickPivotAndPartition,The length of the statement  "            int left = lo' right = hi - 1;  // We already partitioned lo and hi and put the pivot in hi - 1.  And we pre-increment & decrement below. " is 137.
Long Statement,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,PickPivotAndPartition,The length of the statement  "            int left = lo' right = hi - 1;  // We already partitioned lo and hi and put the pivot in hi - 1.  And we pre-increment & decrement below. " is 137.
Long Statement,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SplitInto,The length of the statement  "            float firstPosition = spline.GetPositionAtIndex(splitFirstPoint)' secondPosition = spline.GetPositionAtIndex(splitSecondPoint); " is 127.
Long Statement,Squared.Util.DeclarativeSort,PropertySortRule<TProperty>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,MakeCompareExpression,The length of the statement  "                var compare = RuntimeComparer.GetType().GetMethod("Compare"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 131.
Long Statement,Squared.Util.LambdaCompiler,Compiler,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\LambdaCompiler.cs,CompileLambda,The length of the statement  "            var delegateInvokeMethod = delegateType.GetMethod("Invoke"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 130.
Virtual Method Call from Constructor,Squared.Util.DeclarativeSort,SorterComparer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,SorterComparer,The constructor "SorterComparer" calls a virtual method "Prepare".
Empty Catch Block,Squared.Util,EmbeddedDLLLoader,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EmbeddedDLLLoader.cs,GetDirectory,The method has an empty catch block.
Empty Catch Block,Squared.Util,EmbeddedDLLLoader,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EmbeddedDLLLoader.cs,Load,The method has an empty catch block.
Empty Catch Block,Squared.Util,EmbeddedDLLLoader,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EmbeddedDLLLoader.cs,Dispose,The method has an empty catch block.
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,Pulse,The following statement contains a magic number: return (value - 0.5f) / 0.5f;
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,Pulse,The following statement contains a magic number: return (value - 0.5f) / 0.5f;
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,Pulse,The following statement contains a magic number: value > 0.5f
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,PulseSine,The following statement contains a magic number: const double multiplier = Math.PI / 2;
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,PulseCyclicExp,The following statement contains a magic number: var valueCentered = Wrap(value' 0f' 2f);
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,PulseCyclicExp,The following statement contains a magic number: valueCentered = (0.5f - (valueCentered - 0.5f)) * 2f;
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,PulseCyclicExp,The following statement contains a magic number: valueCentered = (0.5f - (valueCentered - 0.5f)) * 2f;
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,PulseCyclicExp,The following statement contains a magic number: valueCentered = (0.5f - (valueCentered - 0.5f)) * 2f;
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,PulseCyclicExp,The following statement contains a magic number: valueCentered >= 0.5f
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,NextPowerOfTwo,The following statement contains a magic number: return (int)Math.Pow(2' Math.Ceiling(Math.Log(value' 2)));
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,NextPowerOfTwo,The following statement contains a magic number: return (int)Math.Pow(2' Math.Ceiling(Math.Log(value' 2)));
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,EmitExpressionNode,The following statement contains a magic number: switch (paramIndex) {                  case 0:                      es.ILGenerator.Emit(OpCodes.Ldarg_0);                      break;                  case 1:                      es.ILGenerator.Emit(OpCodes.Ldarg_1);                      break;                  case 2:                      es.ILGenerator.Emit(OpCodes.Ldarg_2);                      break;                  case 3:                      es.ILGenerator.Emit(OpCodes.Ldarg_3);                      break;                  default:                      es.ILGenerator.Emit(OpCodes.Ldarg' paramIndex);                      break;              }
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,EmitExpressionNode,The following statement contains a magic number: switch (paramIndex) {                  case 0:                      es.ILGenerator.Emit(OpCodes.Ldarg_0);                      break;                  case 1:                      es.ILGenerator.Emit(OpCodes.Ldarg_1);                      break;                  case 2:                      es.ILGenerator.Emit(OpCodes.Ldarg_2);                      break;                  case 3:                      es.ILGenerator.Emit(OpCodes.Ldarg_3);                      break;                  default:                      es.ILGenerator.Emit(OpCodes.Ldarg' paramIndex);                      break;              }
Magic Number,Squared.Util,Arithmetic,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,GenerateArithmeticIL,The following statement contains a magic number: argumentTypes.Length >= 2
Magic Number,Squared.Util,LerpSource<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,LerpSource,The following statement contains a magic number: Values = new T[2];
Magic Number,Squared.Util,FastMath,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,FloorLog2,The following statement contains a magic number: n /= 2;
Magic Number,Squared.Util,FastMath,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,SignF,The following statement contains a magic number: int signBit = (int)(u >> 31);
Magic Number,Squared.Util,FastMath,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,SignF,The following statement contains a magic number: int result = (signBit * -2) + 1;
Magic Number,Squared.Util,FastMath,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,CompareFSlow,The following statement contains a magic number: int sign1 = (int)(u1 >> 31)' sign2 = (int)(u2 >> 31);
Magic Number,Squared.Util,FastMath,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,CompareFSlow,The following statement contains a magic number: int sign1 = (int)(u1 >> 31)' sign2 = (int)(u2 >> 31);
Magic Number,Squared.Util,FastMath,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Arithmetic.cs,CompareFSlow,The following statement contains a magic number: int multiplier = (sign1 * -2) + 1;
Magic Number,Squared.Util,EmbeddedDLLLoader,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EmbeddedDLLLoader.cs,StreamsMatch,The following statement contains a magic number: const int chunkSize = 81920;
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,IntrospectiveSort,The following statement contains a magic number: length < 2
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,IntrospectiveSort,The following statement contains a magic number: IntroSort(left' length + left - 1' 2 * FastMath.FloorLog2(Items.Length));
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,IntroSort,The following statement contains a magic number: partitionSize == 2
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,IntroSort,The following statement contains a magic number: partitionSize == 3
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,PickPivotAndPartition,The following statement contains a magic number: int mid = lo + (hi - lo) / 2;
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,DownHeap,The following statement contains a magic number: child = 2 * i;
Magic Number,Squared.Util,IndexedSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IndexedSort.cs,DownHeap,The following statement contains a magic number: i <= n / 2
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,IntrospectiveSort,The following statement contains a magic number: length < 2
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,IntrospectiveSort,The following statement contains a magic number: IntroSort(left' length + left - 1' 2 * FastMath.FloorLog2(Items.Length));
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,IntroSort,The following statement contains a magic number: partitionSize == 2
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,IntroSort,The following statement contains a magic number: partitionSize == 3
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,PickPivotAndPartition,The following statement contains a magic number: int mid = lo + (hi - lo) / 2;
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,DownHeap,The following statement contains a magic number: child = 2 * i;
Magic Number,Squared.Util,FastCLRSorter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\CLRSort.cs,DownHeap,The following statement contains a magic number: i <= n / 2
Magic Number,Squared.Util,BufferPool<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Buffer.cs,BufferPool,The following statement contains a magic number: estimatedSize = t.GetFields().Length * 4;
Magic Number,Squared.Util,GrowableBuffer<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Buffer.cs,Grow,The following statement contains a magic number: bufferSize *= 2;
Magic Number,Squared.Util,GrowableBuffer<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Buffer.cs,Append,The following statement contains a magic number: bufferSize *= 2;
Magic Number,Squared.Util,GrowableBuffer<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Buffer.cs,Append,The following statement contains a magic number: ResizeBuffer(bufferSize * 2);
Magic Number,Squared.Util,CurveBase<TValue;TData>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetLowerIndexForPosition,The following statement contains a magic number: index = (low + high) / 2;
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetValueAtPosition,The following statement contains a magic number: return _Interpolator(_InterpolatorSource' (index * 2)' offset);
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetHermiteInputForIndex,The following statement contains a magic number: int quadIndex = index / 4' itemInQuad = index % 4;
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetHermiteInputForIndex,The following statement contains a magic number: int quadIndex = index / 4' itemInQuad = index % 4;
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetHermiteInputForIndex,The following statement contains a magic number: int aIndex = (quadIndex * 2)' dIndex = aIndex + 1;
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetHermiteInputForIndex,The following statement contains a magic number: switch (itemInQuad) {                  case 0: // A                      return GetValueAtIndex(aIndex);                  case 1: // U                      return GetDataAtIndex(aIndex).Velocity;                  case 2: // D                      return GetValueAtIndex(dIndex);                  default:                  case 3: // V                      return GetDataAtIndex(dIndex).Velocity;              }
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,GetHermiteInputForIndex,The following statement contains a magic number: switch (itemInQuad) {                  case 0: // A                      return GetValueAtIndex(aIndex);                  case 1: // U                      return GetDataAtIndex(aIndex).Velocity;                  case 2: // D                      return GetValueAtIndex(dIndex);                  default:                  case 3: // V                      return GetDataAtIndex(dIndex).Velocity;              }
Magic Number,Squared.Util,HermiteSpline<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,ConvertToCardinal,The following statement contains a magic number: float tensionFactor = (1f / 2f) * (1f - tension);
Magic Number,Squared.Util,CurveUtil,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,CubicToHermite,The following statement contains a magic number: u = Operators<T>.Mul(Operators<T>.Sub(b' a)' 3f);
Magic Number,Squared.Util,CurveUtil,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,CubicToHermite,The following statement contains a magic number: v = Operators<T>.Mul(Operators<T>.Sub(d' c)' 3f);
Magic Number,Squared.Util,CurveUtil,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,HermiteToCubic,The following statement contains a magic number: var multiplier = 1f / 3f;
Magic Number,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,The following statement contains a magic number: subdivision = 2;
Magic Number,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,The following statement contains a magic number: subdivision < 2
Magic Number,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,The following statement contains a magic number: actualSubdivision = Math.Min(1024' curve.Count * 2);
Magic Number,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,The following statement contains a magic number: actualSubdivision = Math.Min(1024' curve.Count * 2);
Magic Number,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,SearchInternal,The following statement contains a magic number: float partitionSize = (high - low) / actualSubdivision' partitionSizeHalf = partitionSize * 0.5f;
Magic Number,Squared.Util,CurveExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Curve.cs,Split,The following statement contains a magic number: var resultList = new List<HermiteSpline<T>>(4);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,CompileFallbackExpressions,The following statement contains a magic number: _Cosine = (a' b' x) => {                  var temp = (1.0f - (float)Math.Cos(x * Math.PI)) * 0.5f;                  return m_add(a' m_mul_float(m_sub(b' a)' temp));              };
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,CompileNativeExpressions,The following statement contains a magic number: Arithmetic.CompileExpression(                  (a' b' x) =>                      a + ((b - a) * ((1.0f - (float)Math.Cos(x * Math.PI)) * 0.5f))'                  out _Cosine              );
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Cubic,The following statement contains a magic number: T d = data(dataOffset + 2);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: T d = data(dataOffset + 2);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: T v = data(dataOffset + 3);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: var t2 = positionInWindow * 2;
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: var s2 = s * 2;
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Cubic,The following statement contains a magic number: T d = data(ref obj' dataOffset + 2);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: T d = data(ref obj' dataOffset + 2);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: T v = data(ref obj' dataOffset + 3);
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: var t2 = positionInWindow * 2;
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Hermite,The following statement contains a magic number: var s2 = s * 2;
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Interpolate,The following statement contains a magic number: _TemporaryValues = new T[2];
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Interpolate,The following statement contains a magic number: (_TemporaryValues == null) || (_TemporaryValues.Length < 2)
Magic Number,Squared.Util,Interpolators<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\Interpolators.cs,Interpolate,The following statement contains a magic number: _NumTemporaryValues = 2;
Magic Number,Squared.Util,IO,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IO.cs,DetectStreamEncoding,The following statement contains a magic number: var buffer = new char[256];
Magic Number,Squared.Util,IO,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\IO.cs,GlobToRegex,The following statement contains a magic number: glob = glob.Substring(0' glob.Length - 2);
Magic Number,Squared.Util,HeapQueue<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\PriorityQueue.cs,SiftUp,The following statement contains a magic number: int childPosition = 2 * position + 1;
Magic Number,Squared.Util,HeapQueue<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\PriorityQueue.cs,SiftUp,The following statement contains a magic number: childPosition = 2 * position + 1;
Magic Number,Squared.Util,HeapQueue<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\PriorityQueue.cs,Heapify,The following statement contains a magic number: var positions = Enumerable.Range(0' count / 2).Reverse();
Magic Number,Squared.Util,PriorityQueue<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\PriorityQueue.cs,Grow,The following statement contains a magic number: Resize(_Buffer.Length * 2);
Magic Number,Squared.Util,ScalableTimeProvider,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\TimeProvider.cs,OnTimeScaleChange,The following statement contains a magic number: _Offset += (ticks - offset) * oldTimeScale / 10000;
Magic Number,Squared.Util,UnorderedList<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\UnorderedList.cs,Grow,The following statement contains a magic number: const int slowThreshold = 102400;
Magic Number,Squared.Util,UnorderedList<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\UnorderedList.cs,Grow,The following statement contains a magic number: const int slowSize = 65536;
Magic Number,Squared.Util,UnorderedList<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\UnorderedList.cs,Grow,The following statement contains a magic number: var newCapacity = 1 << (int)Math.Ceiling(Math.Log(targetCapacity' 2));
Magic Number,Squared.Util.DeclarativeSort,TagArrayComparer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,GetHashCode,The following statement contains a magic number: result = (result << 2) ^ tag.Id;
Magic Number,Squared.Util.DeclarativeSort,TagOrdering,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\DeclarativeSort.cs,TagOrdering,The following statement contains a magic number: HashCode = Lower.GetHashCode() ^ (Higher.GetHashCode() << 2);
Magic Number,Squared.Util.Event,EventBus,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EventBus.cs,BroadcastToSubscribers,The following statement contains a magic number: switch (i) {                      case 0:                      case 1:                          sourceFilter = AnySource;                          break;                      case 2:                      case 3:                          sourceFilter = categoryToken;                          break;                      default:                          sourceFilter = source;                          break;                  }
Magic Number,Squared.Util.Event,EventBus,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EventBus.cs,BroadcastToSubscribers,The following statement contains a magic number: switch (i) {                      case 0:                      case 1:                          sourceFilter = AnySource;                          break;                      case 2:                      case 3:                          sourceFilter = categoryToken;                          break;                      default:                          sourceFilter = source;                          break;                  }
Magic Number,Squared.Util.Event,EventBus,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Util\EventBus.cs,BroadcastToSubscribers,The following statement contains a magic number: i < 6
