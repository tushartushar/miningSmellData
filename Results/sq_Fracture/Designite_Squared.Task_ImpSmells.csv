Implementation smell,Namespace,Class,File,Method,Description
Long Method,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,The method has 120 lines of code.
Complex Method,Squared.Task,SchedulableGeneratorThunk,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\SchedulableGeneratorThunk.cs,ScheduleNextStep,Cyclomatic complexity of the method is 11
Complex Method,Squared.Task,TaskScheduler,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskScheduler.cs,SleepWorkerThreadFunc,Cyclomatic complexity of the method is 11
Complex Method,Squared.Task,TaskScheduler,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskScheduler.cs,WaitFor,Cyclomatic complexity of the method is 10
Complex Method,Squared.Task,WindowsMessageJobQueue,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Win32.cs,InternalStep,Cyclomatic complexity of the method is 9
Complex Method,Squared.Task.IO,DiskMonitor,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\DiskMonitor.cs,GetChangedFiles,Cyclomatic complexity of the method is 9
Complex Method,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,Cyclomatic complexity of the method is 17
Long Parameter List,Squared.Task,NetworkExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Network.cs,AsyncSend,The method has 5 parameters. Parameters: udpClient' datagram' bytes' hostname' port
Long Parameter List,Squared.Task,TaskEventSubscriber,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Util.cs,Subscribe,The method has 5 parameters. Parameters: eventBus' source' type' scheduler' task
Long Parameter List,Squared.Task,TaskEventSubscriber,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Util.cs,Subscribe,The method has 5 parameters. Parameters: eventBus' source' type' scheduler' task
Long Parameter List,Squared.Task.IO,FileDataAdapter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\IO.cs,FileDataAdapter,The method has 5 parameters. Parameters: filename' mode' access' share' bufferSize
Long Parameter List,Squared.Task.Http,Request,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,Request,The method has 6 parameters. Parameters: server' adapter' shouldKeepAlive' line' headers' body
Empty Catch Block,Squared.Task,BlockingQueue<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\BlockingQueue.cs,Enqueue,The method has an empty catch block.
Empty Catch Block,Squared.Task.IO,SocketDataAdapter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Sockets.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Squared.Task.Internal,WorkerThread<Container>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\WorkerThread.cs,Wake,The method has an empty catch block.
Empty Catch Block,Squared.Task.Internal,WorkerThread<Container>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\WorkerThread.cs,Wake,The method has an empty catch block.
Magic Number,Squared.Task,TaskScheduler,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskScheduler.cs,SleepWorkerThreadFunc,The following statement contains a magic number: Thread.SpinWait(20 * iteration);
Magic Number,Squared.Task,TaskScheduler,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\TaskScheduler.cs,WaitFor,The following statement contains a magic number: evt.Wait((int)(timeout * 1000))
Magic Number,Squared.Task,WebExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Web.cs,ParseRequestBody,The following statement contains a magic number: byte[] buf = new byte[4096];
Magic Number,Squared.Task,WindowsMessageJobQueue,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Win32.cs,WindowsMessageJobQueue,The following statement contains a magic number: var cp = new CreateParams {                  Caption = "Squared.TaskLib.Win32JobQueue"'                  X = 0'                  Y = 0'                  Width = 0'                  Height = 0'                  Style = 0'                  ExStyle = WS_EX_NOACTIVATE'                  Parent = new IntPtr(-3)              };
Magic Number,Squared.Task.IO,DiskMonitor,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\DiskMonitor.cs,CreateWatcher,The following statement contains a magic number: var result = new FileSystemWatcher(folder) {                  InternalBufferSize = 32*1024'                  IncludeSubdirectories = true'                  Filter = "*"'                  NotifyFilter = NotifyFilters.FileName | NotifyFilters.DirectoryName | NotifyFilters.LastWrite              };
Magic Number,Squared.Task.IO,DiskMonitor,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\DiskMonitor.cs,CreateWatcher,The following statement contains a magic number: var result = new FileSystemWatcher(folder) {                  InternalBufferSize = 32*1024'                  IncludeSubdirectories = true'                  Filter = "*"'                  NotifyFilter = NotifyFilters.FileName | NotifyFilters.DirectoryName | NotifyFilters.LastWrite              };
Magic Number,Squared.Task.IO,AsyncTextWriter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\IO.cs,WriteLines,The following statement contains a magic number: char[][] chars = new char[lines.Length * 2][];
Magic Number,Squared.Task.IO,AsyncTextWriter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\IO.cs,WriteLines,The following statement contains a magic number: chars[i * 2] = lines[i].ToCharArray();
Magic Number,Squared.Task.IO,AsyncTextWriter,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\IO.cs,WriteLines,The following statement contains a magic number: chars[i * 2 + 1] = NewLine;
Magic Number,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,The following statement contains a magic number: const int headerBufferSize = 1024 * 32;
Magic Number,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,The following statement contains a magic number: const int headerBufferSize = 1024 * 32;
Magic Number,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,The following statement contains a magic number: const int bodyBufferSize = 1024 * 128;
Magic Number,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,The following statement contains a magic number: const int bodyBufferSize = 1024 * 128;
Magic Number,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestTask,The following statement contains a magic number: const double requestLineTimeout = 5;
Magic Number,Squared.Task.Http,HttpServer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,ListenerTask,The following statement contains a magic number: const int connectionsToAcceptPerStep = 4;
Magic Number,Squared.Task.Http,RequestBody,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestBody,The following statement contains a magic number: const int minBufferSize = 1024 * 16;
Magic Number,Squared.Task.Http,RequestBody,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Request.cs,RequestBody,The following statement contains a magic number: const int minBufferSize = 1024 * 16;
Magic Number,Squared.Task.Http,Response,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Response.cs,SendHeadersTask,The following statement contains a magic number: const int writeBufferSize = 1024;
Magic Number,Squared.Task.Http,Response,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Response.cs,SendHeadersTask,The following statement contains a magic number: var prologue = String.Format(                          "HTTP/1.1 {0} {1}"'                          StatusCode' StatusText ?? (StatusCode == 200 ? "OK" : "Unknown")                      );
Magic Number,Squared.Task.Http,Response,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Response.cs,SendResponseTask,The following statement contains a magic number: const int blockSize = 1024 * 128;
Magic Number,Squared.Task.Http,Response,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\Http\Response.cs,SendResponseTask,The following statement contains a magic number: const int blockSize = 1024 * 128;
Magic Number,Squared.Task.Internal,WorkerThread<Container>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\TaskLib\WorkerThread.cs,WorkerThread,The following statement contains a magic number: const int maxNameLength = 48;
