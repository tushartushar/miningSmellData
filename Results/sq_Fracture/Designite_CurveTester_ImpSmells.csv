Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,Cyclomatic complexity of the method is 10
Long Statement,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The length of the statement  "            this.CurveMode.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 147.
Long Statement,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The length of the statement  "            this.Tension.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 145.
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,MainWindow,The following statement contains a magic number: CurveMode.SelectedIndex = 2;
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,GetPositionUnderMouse,The following statement contains a magic number: var distance = Math.Sqrt(Math.Pow(cursorPos.X - pt.Value.X' 2) + Math.Pow(cursorPos.Y - pt.Value.Y' 2));
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,GetPositionUnderMouse,The following statement contains a magic number: var distance = Math.Sqrt(Math.Pow(cursorPos.X - pt.Value.X' 2) + Math.Pow(cursorPos.Y - pt.Value.Y' 2));
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,DrawSpline,The following statement contains a magic number: g.DrawEllipse(                      controlPointPen'                      pt.Value.X - 3f' pt.Value.Y - 3f'                      6f' 6f                  );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,DrawSpline,The following statement contains a magic number: g.DrawEllipse(                      controlPointPen'                      pt.Value.X - 3f' pt.Value.Y - 3f'                      6f' 6f                  );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,DrawSpline,The following statement contains a magic number: g.DrawEllipse(                      controlPointPen'                      pt.Value.X - 3f' pt.Value.Y - 3f'                      6f' 6f                  );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,DrawSpline,The following statement contains a magic number: g.DrawEllipse(                      controlPointPen'                      pt.Value.X - 3f' pt.Value.Y - 3f'                      6f' 6f                  );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: switch (CurveMode.SelectedIndex) {                  default:                  case 0:                  case 1:                      var curve = new Curve<Vector2>(Spline.Points);                      curve.DefaultInterpolator = Interpolators<Vector2>.Linear;                        if (CurveMode.SelectedIndex == 1)                          curve.DefaultInterpolator = Interpolators<Vector2>.Cubic;                                                spline = curve;                      break;                  case 2:                      spline = hermite = Spline;                      break;                  case 3:                      spline = hermite = HermiteSpline<Vector2>.CatmullRom(                          Spline.Points                      );                      break;                  case 4:                      spline = hermite = HermiteSpline<Vector2>.Cardinal(                          Spline.Points'                          Tension.Value / 100f                      );                      break;              }
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: switch (CurveMode.SelectedIndex) {                  default:                  case 0:                  case 1:                      var curve = new Curve<Vector2>(Spline.Points);                      curve.DefaultInterpolator = Interpolators<Vector2>.Linear;                        if (CurveMode.SelectedIndex == 1)                          curve.DefaultInterpolator = Interpolators<Vector2>.Cubic;                                                spline = curve;                      break;                  case 2:                      spline = hermite = Spline;                      break;                  case 3:                      spline = hermite = HermiteSpline<Vector2>.CatmullRom(                          Spline.Points                      );                      break;                  case 4:                      spline = hermite = HermiteSpline<Vector2>.Cardinal(                          Spline.Points'                          Tension.Value / 100f                      );                      break;              }
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: switch (CurveMode.SelectedIndex) {                  default:                  case 0:                  case 1:                      var curve = new Curve<Vector2>(Spline.Points);                      curve.DefaultInterpolator = Interpolators<Vector2>.Linear;                        if (CurveMode.SelectedIndex == 1)                          curve.DefaultInterpolator = Interpolators<Vector2>.Cubic;                                                spline = curve;                      break;                  case 2:                      spline = hermite = Spline;                      break;                  case 3:                      spline = hermite = HermiteSpline<Vector2>.CatmullRom(                          Spline.Points                      );                      break;                  case 4:                      spline = hermite = HermiteSpline<Vector2>.Cardinal(                          Spline.Points'                          Tension.Value / 100f                      );                      break;              }
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: switch (CurveMode.SelectedIndex) {                  default:                  case 0:                  case 1:                      var curve = new Curve<Vector2>(Spline.Points);                      curve.DefaultInterpolator = Interpolators<Vector2>.Linear;                        if (CurveMode.SelectedIndex == 1)                          curve.DefaultInterpolator = Interpolators<Vector2>.Cubic;                                                spline = curve;                      break;                  case 2:                      spline = hermite = Spline;                      break;                  case 3:                      spline = hermite = HermiteSpline<Vector2>.CatmullRom(                          Spline.Points                      );                      break;                  case 4:                      spline = hermite = HermiteSpline<Vector2>.Cardinal(                          Spline.Points'                          Tension.Value / 100f                      );                      break;              }
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: var closestPosition = spline.Search(                  (p' v) => (float)Math.Sqrt(                      Math.Pow(v.X - mousePos.X' 2) +                      Math.Pow(v.Y - mousePos.Y' 2)                  )              );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: var closestPosition = spline.Search(                  (p' v) => (float)Math.Sqrt(                      Math.Pow(v.X - mousePos.X' 2) +                      Math.Pow(v.Y - mousePos.Y' 2)                  )              );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawEllipse(                          closestPen'                           closestPoint.X - 3f' closestPoint.Y - 3f'                          6f' 6f                      );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawEllipse(                          closestPen'                           closestPoint.X - 3f' closestPoint.Y - 3f'                          6f' 6f                      );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawEllipse(                          closestPen'                           closestPoint.X - 3f' closestPoint.Y - 3f'                          6f' 6f                      );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawEllipse(                          closestPen'                           closestPoint.X - 3f' closestPoint.Y - 3f'                          6f' 6f                      );
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,CurveMode_SelectedIndexChanged,The following statement contains a magic number: Tension.Enabled = (CurveMode.SelectedIndex == 4);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.CurveMode.Location = new System.Drawing.Point(12' 526);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.CurveMode.Location = new System.Drawing.Point(12' 526);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.CurveMode.Size = new System.Drawing.Size(150' 24);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.CurveMode.Size = new System.Drawing.Size(150' 24);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.LargeChange = 10;
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.Location = new System.Drawing.Point(168' 526);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.Location = new System.Drawing.Point(168' 526);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.Maximum = 100;
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.Size = new System.Drawing.Size(150' 24);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.Size = new System.Drawing.Size(150' 24);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Tension.TickFrequency = 10;
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(584' 562);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(584' 562);
Magic Number,CurveTester,MainWindow,D:\research\architectureSmells\repos1\sq_Fracture\Squared\Examples\CurveTester\MainWindow.cs,InitializeComponent,The following statement contains a magic number: this.Font = new System.Drawing.Font("Tahoma"' 10F);
