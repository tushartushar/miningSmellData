Implementation smell,Namespace,Class,File,Method,Description
Long Method,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,DefaultMaterialSet,The method has 265 lines of code.
Long Method,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,AppendText,The method has 165 lines of code.
Complex Method,Squared.Render,BatchCombiner,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchCombiner.cs,CombineBatches,Cyclomatic complexity of the method is 10
Complex Method,Squared.Render,RenderTargetBatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,Issue,Cyclomatic complexity of the method is 10
Complex Method,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,CreateList,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,Sort,Cyclomatic complexity of the method is 13
Complex Method,Squared.Render,Material,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Materials.cs,Preload,Cyclomatic complexity of the method is 10
Complex Method,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,AddRange,Cyclomatic complexity of the method is 12
Complex Method,Squared.Render,BitmapBatchCombiner,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,CanCombine,Cyclomatic complexity of the method is 14
Complex Method,Squared.Render,MultimaterialBitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MultimaterialBitmapBatch.cs,AddRange,Cyclomatic complexity of the method is 11
Complex Method,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,Issue,Cyclomatic complexity of the method is 16
Complex Method,Squared.Render,DeviceManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,UpdateTargetInfo,Cyclomatic complexity of the method is 10
Complex Method,Squared.Render,BatchComparer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render,BatchExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,IssueAndWrapExceptions,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render,PrimitiveBatch<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,RunPendingDraws,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,BeginDraw,Cyclomatic complexity of the method is 10
Complex Method,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,EndDraw,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,Cyclomatic complexity of the method is 10
Complex Method,Squared.Render.Convenience,CachedBatches,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,InsertAtFront,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render.RasterShape,RasterShapeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,Issue,Cyclomatic complexity of the method is 8
Complex Method,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,AppendText,Cyclomatic complexity of the method is 33
Long Parameter List,Squared.Render.Atlases,Atlas,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Atlas.cs,Atlas,The method has 7 parameters. Parameters: texture' cellWidth' cellHeight' marginLeft' marginTop' marginRight' marginBottom
Long Parameter List,Squared.Render.Atlases,Atlas,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Atlas.cs,FromCount,The method has 7 parameters. Parameters: texture' countX' countY' marginLeft' marginTop' marginRight' marginBottom
Long Parameter List,Squared.Render.Atlases,SubRegion,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Atlas.cs,SubRegion,The method has 5 parameters. Parameters: atlas' left' top' width' height
Long Parameter List,Squared.Render,AutoRenderTargetBase,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\AutoRenderTarget.cs,AutoRenderTargetBase,The method has 7 parameters. Parameters: coordinator' width' height' mipMap' preferredFormat' preferredDepthFormat' preferredMultiSampleCount
Long Parameter List,Squared.Render,AutoRenderTarget,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\AutoRenderTarget.cs,AutoRenderTarget,The method has 7 parameters. Parameters: coordinator' width' height' mipMap' preferredFormat' preferredDepthFormat' preferredMultiSampleCount
Long Parameter List,Squared.Render,RenderTargetRing,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\AutoRenderTarget.cs,RenderTargetRing,The method has 8 parameters. Parameters: coordinator' capacity' width' height' mipMap' preferredFormat' preferredDepthFormat' preferredMultiSampleCount
Long Parameter List,Squared.Render,ListBatch<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Batch.cs,Initialize,The method has 5 parameters. Parameters: container' layer' material' addToContainer' capacity
Long Parameter List,Squared.Render,ClearBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Batch.cs,Initialize,The method has 6 parameters. Parameters: container' layer' material' clearColor' clearZ' clearStencil
Long Parameter List,Squared.Render,ClearBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Batch.cs,AddNew,The method has 6 parameters. Parameters: container' layer' material' clearColor' clearZ' clearStencil
Long Parameter List,Squared.Render,SetViewportBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Batch.cs,Initialize,The method has 5 parameters. Parameters: container' layer' material' viewport' materialSet
Long Parameter List,Squared.Render,SetViewportBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Batch.cs,AddNew,The method has 6 parameters. Parameters: container' layer' material' viewport' updateViewTransform' materialSet
Long Parameter List,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,ForRenderTarget,The method has 10 parameters. Parameters: container' layer' renderTarget' before' after' userData' materialSet' viewTransform' name' ignoreInvalidTargets
Long Parameter List,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,ForRenderTarget,The method has 10 parameters. Parameters: container' layer' renderTarget' before' after' userData' materialSet' viewTransform' name' ignoreInvalidTargets
Long Parameter List,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,ForRenderTargets,The method has 10 parameters. Parameters: container' layer' renderTargets' before' after' userData' materialSet' viewTransform' name' ignoreInvalidTargets
Long Parameter List,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,ForRenderTargets,The method has 10 parameters. Parameters: container' layer' renderTargets' before' after' userData' materialSet' viewTransform' name' ignoreInvalidTargets
Long Parameter List,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,New,The method has 8 parameters. Parameters: container' layer' before' after' userData' materialSet' viewTransform' name
Long Parameter List,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,Initialize,The method has 8 parameters. Parameters: container' layer' before' after' userData' materialSet' viewTransform' addToContainer
Long Parameter List,Squared.Render,ColorLUT,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ColorLUT.cs,CreateIdentity,The method has 5 parameters. Parameters: coordinator' precision' resolution' renderable' colorMatrix
Long Parameter List,Squared.Render,ColorLUT,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ColorLUT.cs,Calculate,The method has 7 parameters. Parameters: x' y' z' invResMinus1' useMatrix' colorMatrix' result
Long Parameter List,Squared.Render,ColorLUT,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ColorLUT.cs,SetToIdentityInner,The method has 5 parameters. Parameters: y' z' scratch' useMatrix' colorMatrix
Long Parameter List,Squared.Render,ViewTransform,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,CreateOrthographic,The method has 6 parameters. Parameters: x' y' width' height' zNearPlane' zFarPlane
Long Parameter List,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,GetBitmapMaterial,The method has 5 parameters. Parameters: worldSpace' rasterizerState' depthStencilState' blendState' discard
Long Parameter List,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The method has 6 parameters. Parameters: src' srcWidth' srcHeight' dest' destWidth' destHeight
Long Parameter List,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The method has 6 parameters. Parameters: src' srcWidth' srcHeight' dest' destWidth' destHeight
Long Parameter List,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The method has 6 parameters. Parameters: src' srcWidth' srcHeight' dest' destWidth' destHeight
Long Parameter List,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,DynamicAtlas,The method has 6 parameters. Parameters: coordinator' width' height' format' spacing' mipGenerator
Long Parameter List,Squared.Render,Reservation,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Reservation,The method has 5 parameters. Parameters: atlas' x' y' w' h
Long Parameter List,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,New,The method has 9 parameters. Parameters: container' layer' material' samplerState' samplerState2' useZBuffer' depthPrePass' worldSpace' capacity
Long Parameter List,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,Initialize,The method has 10 parameters. Parameters: container' layer' material' samplerState' samplerState2' useZBuffer' zBufferOnlySorting' depthPrePass' worldSpace' capacity
Long Parameter List,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,AddRange,The method has 10 parameters. Parameters: items' firstIndex' count' offset' multiplyColor' addColor' sortKey' scale' material' userData
Long Parameter List,Squared.Render,MultimaterialBitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MultimaterialBitmapBatch.cs,AddRange,The method has 12 parameters. Parameters: items' firstIndex' count' offset' multiplyColor' addColor' sortKey' scale' customMaterial' samplerState1' samplerState2' userData
Long Parameter List,Squared.Render,MultimaterialBitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MultimaterialBitmapBatch.cs,New,The method has 7 parameters. Parameters: container' layer' material' useZBuffer' depthPrePass' worldSpace' sorter
Long Parameter List,Squared.Render,MultimaterialBitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MultimaterialBitmapBatch.cs,Initialize,The method has 6 parameters. Parameters: container' layer' material' sorter' useZBuffer' capacity
Long Parameter List,Squared.Render,ListPool<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,ListPool,The method has 5 parameters. Parameters: smallPoolCapacity' largePoolCapacity' initialItemSize' maxSmallItemSize' maxLargeItemSize
Long Parameter List,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,CreateNewNativeBatch,The method has 8 parameters. Parameters: softwareBuffer' currentTextures' vertCount' vertOffset' isFinalCall' material' samplerState1' samplerState2
Long Parameter List,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,FillOneSoftwareBuffer,The method has 7 parameters. Parameters: indices' drawCalls' drawCallsPrepared' count' material' samplerState1' samplerState2
Long Parameter List,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,FillOneBitmapVertex,The method has 6 parameters. Parameters: softwareBuffer' call' result' vertCount' vertOffset' zBufferFactor
Long Parameter List,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,NativeBatch,The method has 7 parameters. Parameters: softwareBuffer' textureSet' localVertexOffset' vertexCount' material' samplerState' samplerState2
Long Parameter List,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,Initialize,The method has 6 parameters. Parameters: container' layer' material' batchSetup' batchTeardown' userData
Long Parameter List,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,New,The method has 6 parameters. Parameters: container' layer' material' batchSetup' batchTeardown' userData
Long Parameter List,Squared.Render,BitmapDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapDrawCall,The method has 5 parameters. Parameters: texture' position' textureRegion' color' scale
Long Parameter List,Squared.Render,BitmapDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapDrawCall,The method has 5 parameters. Parameters: texture' position' textureRegion' color' scale
Long Parameter List,Squared.Render,BitmapDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapDrawCall,The method has 6 parameters. Parameters: texture' position' textureRegion' color' scale' origin
Long Parameter List,Squared.Render,BitmapDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapDrawCall,The method has 7 parameters. Parameters: texture' position' textureRegion' color' scale' origin' rotation
Long Parameter List,Squared.Render,BitmapDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapDrawCall,The method has 7 parameters. Parameters: textures' position' textureRegion' color' scale' origin' rotation
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,MakeDrawArguments,The method has 8 parameters. Parameters: primitiveType' vb' ib' vertexOffset' indexOffset' primCount' vertexCount' indexCount
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddGradientFilledQuad,The method has 5 parameters. Parameters: bounds' topLeft' topRight' bottomLeft' bottomRight
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddGradientFilledQuad,The method has 6 parameters. Parameters: topLeft' bottomRight' topLeftColor' topRightColor' bottomLeftColor' bottomRightColor
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddQuadBorder,The method has 5 parameters. Parameters: topLeft' bottomRight' colorInner' colorOuter' borderSize
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddFilledBorderedQuad,The method has 5 parameters. Parameters: topLeft' bottomRight' colorInner' colorOuter' borderSize
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddFilledRing,The method has 6 parameters. Parameters: center' innerRadius' outerRadius' innerColor' outerColor' quality
Long Parameter List,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddFilledRing,The method has 10 parameters. Parameters: center' innerRadius' outerRadius' innerColorStart' outerColorStart' innerColorEnd' outerColorEnd' startAngle' endAngle' quality
Long Parameter List,Squared.Render,PrimitiveBatch<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,Initialize,The method has 5 parameters. Parameters: container' layer' material' batchSetup' userData
Long Parameter List,Squared.Render,PrimitiveBatch<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,New,The method has 5 parameters. Parameters: container' layer' material' batchSetup' userData
Long Parameter List,Squared.Render,PrimitiveDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,New,The method has 7 parameters. Parameters: primitiveType' vertices' vertexOffset' vertexCount' indices' indexOffset' primitiveCount
Long Parameter List,Squared.Render,PrimitiveDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,PrimitiveDrawCall,The method has 10 parameters. Parameters: primitiveType' vertices' vertexOffset' vertexCount' indices' indexOffset' primitiveCount' sortKey' beforeDraw' userData
Long Parameter List,Squared.Render,NativeDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,NativeDrawCall,The method has 9 parameters. Parameters: primitiveType' vertexBuffer' vertexOffset' indexBuffer' baseVertex' minVertexIndex' numVertices' startIndex' primitiveCount
Long Parameter List,Squared.Render,NativeDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,NativeDrawCall,The method has 5 parameters. Parameters: primitiveType' vertexBuffer' vertexOffset' startVertex' primitiveCount
Long Parameter List,Squared.Render,NativeDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,NativeDrawCall,The method has 14 parameters. Parameters: primitiveType' vertexBuffer1' vertexOffset1' vertexBuffer2' vertexOffset2' vertexBuffer3' vertexOffset3' indexBuffer' baseVertex' minVertexIndex' numVertices' startIndex' primitiveCount' instanceCount
Long Parameter List,Squared.Render,SpriteFontExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,LayoutString,The method has 17 parameters. Parameters: font' text' buffer' position' color' scale' sortKey' characterSkipCount' characterLimit' xOffsetOfFirstLine' lineBreakAtX' alignToPixels' kerningAdjustments' wordWrap' wrapCharacter' reverseOrder' horizontalAlignment
Long Parameter List,Squared.Render,SpriteFontExtensions,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,LayoutString,The method has 17 parameters. Parameters: glyphSource' text' buffer' position' color' scale' sortKey' characterSkipCount' characterLimit' xOffsetOfFirstLine' lineBreakAtX' alignToPixels' kerningAdjustments' wordWrap' wrapCharacter' reverseOrder' horizontalAlignment
Long Parameter List,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,RenderCoordinator,The method has 5 parameters. Parameters: deviceService' mainThread' threadGroup' synchronousBeginDraw' synchronousEndDraw
Long Parameter List,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,QueueDrawToRenderTarget,The method has 6 parameters. Parameters: renderTarget' materials' handler' userData' onComplete' viewTransform
Long Parameter List,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,DoSynchronousDrawToRenderTarget,The method has 6 parameters. Parameters: renderTarget' materials' drawBehavior' userData' viewTransform' description
Long Parameter List,Squared.Render,Fixup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,Fixup,The method has 5 parameters. Parameters: fromOffset' toOffset' dataSize' paddingSize' transposeMatrix
Long Parameter List,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMembers,The method has 5 parameters. Parameters: fixups' type' hParameter' sourceOffset' uploadSize
Long Parameter List,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The method has 6 parameters. Parameters: fixups' hMember' type' sourceOffset' desc' uploadSize
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,ImperativeRenderer,The method has 15 parameters. Parameters: container' materials' layer' rasterizerState' depthStencilState' blendState' samplerState' worldSpace' useZBuffer' autoIncrementSortKey' autoIncrementLayer' lowPriorityMaterialOrdering' depthPrePass' declarativeSorter' tags
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,MakeSubgroup,The method has 7 parameters. Parameters: nextLayer' before' after' userData' materialSet' viewTransform' name
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,ForRenderTarget,The method has 5 parameters. Parameters: renderTarget' before' after' userData' name
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The method has 6 parameters. Parameters: drawCall' layer' worldSpace' blendState' samplerState' material
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The method has 6 parameters. Parameters: drawCall' layer' worldSpace' blendState' samplerState' material
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The method has 16 parameters. Parameters: texture' position' sourceRectangle' multiplyColor' addColor' rotation' scale' origin' mirrorX' mirrorY' sortKey' layer' worldSpace' blendState' samplerState' material
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The method has 17 parameters. Parameters: texture' position' sourceRectangle' multiplyColor' addColor' rotation' scale' origin' mirrorX' mirrorY' sortKey' layer' worldSpace' blendState' samplerState' material' userData
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The method has 20 parameters. Parameters: texture' x' y' sourceRectangle' multiplyColor' addColor' rotation' scaleX' scaleY' originX' originY' mirrorX' mirrorY' sortKey' layer' worldSpace' blendState' samplerState' material' userData
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The method has 17 parameters. Parameters: texture' destRectangle' sourceRectangle' multiplyColor' addColor' rotation' originX' originY' mirrorX' mirrorY' sortKey' layer' worldSpace' blendState' samplerState' material' userData
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawMultiple,The method has 12 parameters. Parameters: drawCalls' offset' multiplyColor' addColor' sortKey' layer' worldSpace' blendState' samplerState' scale' material' userData
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawString,The method has 13 parameters. Parameters: font' text' position' color' scale' sortKey' characterSkipCount' characterLimit' layer' worldSpace' blendState' samplerState' material
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawString,The method has 13 parameters. Parameters: glyphSource' text' position' color' scale' sortKey' characterSkipCount' characterLimit' layer' worldSpace' blendState' samplerState' material
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,FillRectangle,The method has 6 parameters. Parameters: rectangle' fillColor' layer' worldSpace' blendState' customMaterial
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,FillRectangle,The method has 6 parameters. Parameters: bounds' fillColor' layer' worldSpace' blendState' customMaterial
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,GradientFillRectangle,The method has 9 parameters. Parameters: bounds' topLeft' topRight' bottomLeft' bottomRight' layer' worldSpace' blendState' customMaterial
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,OutlineRectangle,The method has 5 parameters. Parameters: rectangle' outlineColor' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,OutlineRectangle,The method has 5 parameters. Parameters: bounds' outlineColor' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawLine,The method has 6 parameters. Parameters: start' end' lineColor' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawLine,The method has 7 parameters. Parameters: start' end' firstColor' secondColor' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawPoint,The method has 5 parameters. Parameters: position' color' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,FillCircle,The method has 8 parameters. Parameters: center' innerRadius' outerRadius' innerColor' outerColor' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,FillRing,The method has 13 parameters. Parameters: center' innerRadius' outerRadius' innerColorStart' outerColorStart' innerColorEnd' outerColorEnd' startAngle' endAngle' quality' layer' worldSpace' blendState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeEllipse,The method has 12 parameters. Parameters: center' radius' innerColor' outerColor' fillMode' fillOffset' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeEllipse,The method has 14 parameters. Parameters: center' radius' outlineRadius' innerColor' outerColor' outlineColor' fillMode' fillOffset' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeLineSegment,The method has 12 parameters. Parameters: a' b' radius' innerColor' outerColor' gradientAlongLine' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeLineSegment,The method has 15 parameters. Parameters: a' b' startRadius' endRadius' outlineRadius' innerColor' outerColor' outlineColor' gradientAlongLine' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeRectangle,The method has 13 parameters. Parameters: tl' br' radius' innerColor' outerColor' fillMode' fillOffset' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeRectangle,The method has 15 parameters. Parameters: tl' br' radius' outlineRadius' innerColor' outerColor' outlineColor' fillMode' fillOffset' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeTriangle,The method has 13 parameters. Parameters: a' b' c' radius' innerColor' outerColor' fillOffset' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeTriangle,The method has 15 parameters. Parameters: a' b' c' radius' outlineRadius' innerColor' outerColor' outlineColor' fillOffset' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeQuadraticBezier,The method has 11 parameters. Parameters: a' b' c' radius' color' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeQuadraticBezier,The method has 14 parameters. Parameters: a' b' c' radius' outlineRadius' innerColor' outerColor' outlineColor' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeArc,The method has 15 parameters. Parameters: center' startAngleDegrees' sizeDegrees' ringRadius' fillRadius' outlineRadius' innerColor' outerColor' outlineColor' layer' worldSpace' blendState' texture' textureRegion' samplerState
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,GetBitmapBatch,The method has 5 parameters. Parameters: layer' worldSpace' blendState' samplerState' customMaterial
Long Parameter List,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,GetRasterShapeBatch,The method has 5 parameters. Parameters: layer' worldSpace' blendState' texture' samplerState
Long Parameter List,Squared.Render.Convenience,CachedBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,CachedBatch,The method has 11 parameters. Parameters: cbt' container' layer' worldSpace' rasterizerState' depthStencilState' blendState' samplerState' customMaterial' useZBuffer' depthPrePass
Long Parameter List,Squared.Render.Convenience,CachedBatches,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,TryGet,The method has 12 parameters. Parameters: result' cbt' container' layer' worldSpace' rasterizerState' depthStencilState' blendState' samplerState' customMaterial' useZBuffer' depthPrePass
Long Parameter List,Squared.Render.RasterShape,RasterShapeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,New,The method has 8 parameters. Parameters: container' layer' materials' texture' desiredSamplerState' rasterizerState' depthStencilState' blendState
Long Parameter List,Squared.Render.Internal,BufferGenerator<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,PrepareToFillBuffer,The method has 6 parameters. Parameters: currentBufferEntry' vertexOffset' indexOffset' additionalVertexCount' additionalIndexCount' forceExclusiveBuffer
Long Parameter List,Squared.Render.Internal,HardwareBufferEntry,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,HardwareBufferEntry,The method has 5 parameters. Parameters: buffer' vertexOffset' indexOffset' sourceVertexCount' sourceIndexCount
Long Parameter List,Squared.Render.Internal,SoftwareBuffer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Initialize,The method has 5 parameters. Parameters: vertices' indices' hardwareBuffer' hardwareVertexOffset' hardwareIndexOffset
Long Parameter List,Squared.Render.Text,StringLayout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,StringLayout,The method has 6 parameters. Parameters: position' size' lineHeight' firstCharacter' lastCharacter' drawCalls
Long Parameter List,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,WrapWord,The method has 6 parameters. Parameters: buffer' firstOffset' firstIndex' lastIndex' effectiveScale' effectiveLineSpacing
Long Parameter List,Squared.Render.Evil,EffectUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,D3DXCreateEffectEx,The method has 10 parameters. Parameters: pDevice' pData' dataLen' pDefines' pInclude' pSkipConstants' flags' pPool' ppEffect' ppCompilationErrors
Long Parameter List,Squared.Render.Evil,TextureUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,D3DXLoadSurfaceFromMemory,The method has 10 parameters. Parameters: pDestSurface' pDestPalette' pDestRect' pSrcMemory' srcFormat' srcPitch' pSrcPalette' pSrcRect' filter' colorKey
Long Parameter List,Squared.Render.Evil,TextureUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,SetDataFast,The method has 6 parameters. Parameters: texture' level' pData' width' height' pitch
Long Parameter List,Squared.Render.Evil,TextureUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,SetData,The method has 7 parameters. Parameters: texture' pSurface' pData' width' height' pitch' pixelFormat
Long Parameter List,Squared.Render.Evil,TextureUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,SetData,The method has 7 parameters. Parameters: texture' pSurface' pData' destRect' pitch' sourceRect' pixelFormat
Long Parameter List,Squared.Render.Evil,TextureUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,GetDataFast,The method has 6 parameters. Parameters: texture' level' rect' data' startIndex' elementCount
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter ScreenSpaceShadowedBitmapWithDiscard is 36.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter WorldSpaceShadowedBitmapWithDiscard is 35.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter ScreenSpacePalettedBitmapWithDiscard is 36.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter WorldSpacePalettedBitmapWithDiscard is 35.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter ScreenSpaceHueBitmapWithDiscard is 31.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter WorldSpaceHueBitmapWithDiscard is 30.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter ScreenSpaceLightmappedsRGBBitmap is 32.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter WorldSpaceLightmappedsRGBBitmap is 31.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter ScreenSpaceHorizontalGaussianBlur is 33.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter ScreenSpaceVerticalGaussianBlur is 31.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter WorldSpaceHorizontalGaussianBlur is 32.
Long Identifier,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,,The length of the parameter WorldSpaceVerticalGaussianBlur is 30.
Long Identifier,Squared.Render,DeviceManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,,The length of the parameter CaptureRenderTargetTransitionStacks is 35.
Long Identifier,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,,The length of the parameter _SynchronousDrawFinishedSignal is 30.
Long Identifier,Squared.Render.Convenience,RenderStates,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,,The length of the parameter SubtractiveBlendNonPremultiplied is 32.
Long Identifier,Squared.Render.Internal,BufferGenerator<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,,The length of the parameter MaxSoftwareBuffersPerHardwareBuffer is 35.
Long Statement,Squared.Render,BatchGroup,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BatchGroup.cs,ToString,The length of the statement  "            return string.Format("{4} {0} #{1} {2} material={3}"' Name' Index' StateString' Material' (this is RenderTargetBatchGroup) ? "RT Batch" : "Batch"); " is 147.
Long Statement,Squared.Render,ColorLUT,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ColorLUT.cs,CreateIdentity,The length of the statement  "                    tex = new RenderTarget2D(coordinator.Device' width' height' false' surfaceFormat' DepthFormat.None' 0' RenderTargetUsage.PreserveContents); " is 139.
Long Statement,Squared.Render,ViewTransform,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,CreateOrthographic,The length of the statement  "            return CreateOrthographic(viewport.X' viewport.Y' viewport.Width' viewport.Height' viewport.MinDepth' viewport.MaxDepth); " is 121.
Long Statement,Squared.Render,ViewTransform,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,CreateOrthographic,The length of the statement  "            var projection = Matrix.CreateOrthographicOffCenter(offsetX' width + offsetX2' height + offsetY2' offsetY' zNearPlane' zFarPlane); " is 130.
Long Statement,Squared.Render,MaterialSetBase,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MaterialSet.cs,GetUniformBindingSlow,The length of the statement  "                        "Uniform bindings must be allocated on the thread that owns the material. An attempt was made to allocate a binding for '" +  " is 124.
Long Statement,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,AdjustPoolCapacities,The length of the statement  "            ListBatch<BitmapDrawCall>.AdjustPoolCapacities(smallItemSizeLimit' largeItemSizeLimit' smallPoolCapacity' largePoolCapacity); " is 125.
Long Statement,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,Issue,The length of the statement  "//                                     throw new InvalidOperationException("UseZBuffer set to true but depth buffer is disabled"); " is 130.
Long Statement,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,IssueDrawCall,The length of the statement  "                device.DrawIndexedPrimitives(call.PrimitiveType' call.BaseVertex' call.MinVertexIndex' call.NumVertices' call.StartIndex' call.PrimitiveCount); " is 143.
Long Statement,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,Add,The length of the statement  "                throw new InternalBufferOverflowException("This GeometryBatch contains too many primitives. Split your primitives into multiple batches."); " is 139.
Long Statement,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,Issue,The length of the statement  "                        manager.Device.DrawIndexedPrimitives(da.PrimitiveType' 0' da.VertexOffset' da.VertexCount' da.IndexOffset' da.PrimitiveCount); " is 126.
Long Statement,Squared.Render,DeviceManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,UpdateTargetInfo,The length of the statement  "                    CachedCurrentRenderTarget = new RenderTargetStackEntry(rts' CachedCurrentRenderTarget.Batch' CachedCurrentRenderTarget.StackTrace); " is 131.
Long Statement,Squared.Render,PrimitiveBatch<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderPrimitives.cs,Issue,The length of the statement  "                            call.PrimitiveType' call.Vertices' call.VertexOffset' call.VertexCount' call.Indices' call.IndexOffset' call.PrimitiveCount " is 123.
Long Statement,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,RunPendingDraws,The length of the statement  "                    if (!DoSynchronousDrawToRenderTarget(pd.RenderTarget' pd.Materials' pd.Handler' pd.UserData' ref pd.ViewTransform' "Pending Draw")) " is 131.
Long Statement,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,NotifyPendingDrawCompletions,The length of the statement  "                        cpd.OnComplete.SetResult(null' new Exception("No way to generate completion result for type " + cpd.OnComplete.ResultType)); " is 124.
Long Statement,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMembers,The length of the statement  "                var pGetParameterDesc = COMUtils.GetMethodFromVTable<DGetParameterDesc>(pUnboxedEffect' KnownMethodSlots.GetParameterDesc); " is 123.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The length of the statement  "                        material = Materials.GetBitmapMaterial(worldSpace ?? WorldSpace' RasterizerState' DepthStencilState' blendState ?? BlendState' UseDiscard); " is 139.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The length of the statement  "            Draw(ref drawCall' layer: layer' worldSpace: worldSpace' blendState: blendState' samplerState: samplerState' material: material); " is 129.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The length of the statement  "            Draw(ref drawCall' layer: layer' worldSpace: worldSpace' blendState: blendState' samplerState: samplerState' material: material); " is 129.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,Draw,The length of the statement  "            Draw(ref drawCall' layer: layer' worldSpace: worldSpace' blendState: blendState' samplerState: samplerState' material: material); " is 129.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,DrawMultiple,The length of the statement  "                        material = Materials.GetBitmapMaterial(worldSpace ?? WorldSpace' RasterizerState' DepthStencilState' blendState ?? BlendState' UseDiscard); " is 139.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,SetViewport,The length of the statement  "            SetViewportBatch.AddNew(Container' layer.GetValueOrDefault(Layer)' Materials.SetViewport' rectangle' updateViewTransform' Materials); " is 133.
Long Statement,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,FillRing,The length of the statement  "                gb.AddFilledRing(center' innerRadius' outerRadius' innerColorStart' outerColorStart' innerColorEnd' outerColorEnd' startAngle' endAngle' quality); " is 146.
Long Statement,Squared.Render.RasterShape,RasterShapeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,Prepare,The length of the statement  "                        Parameters = new Vector4(dc.OutlineSize' dc.SoftOutline ? 0.0f : 1.0f' dc.BlendInLinearSpace ? 1.0f : 0.0f' dc.OutlineGammaMinusOne)' " is 133.
Long Statement,Squared.Render.Internal,BufferGenerator<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The length of the statement  "                throw new ArgumentOutOfRangeException("vertexCount"' vertexCount' "Maximum vertex count on this platform is " + MaxVerticesPerHardwareBuffer); " is 142.
Long Statement,Squared.Render.Internal,BufferGenerator<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The length of the statement  "                // This is because while Allocate is thread-safe' consumers are allowed to write to their allocations without synchronization' " is 126.
Long Statement,Squared.Render.Internal,BufferGenerator<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The length of the statement  "                // Flush() is responsible for doing all these copies to ensure that all vertex data eventually makes it into the large array " is 124.
Long Statement,Squared.Render.Internal,SoftwareBuffer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,ToString,The length of the statement  "                return String.Format("<Software Buffer #{0} ({1} - {2})>"' Id' IsInitialized ? "initialized" : "invalid"' HardwareBuffer); " is 122.
Long Statement,Squared.Render.Internal,XNABufferPair<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The length of the statement  "            Vertices = new DynamicVertexBuffer(RenderManager.DeviceManager.Device' typeof(TVertex)' VertexCount' BufferUsage.WriteOnly); " is 124.
Long Statement,Squared.Render.Internal,XNABufferPair<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The length of the statement  "            Interlocked.Add(ref RenderManager.TotalVertexBytes' System.Runtime.InteropServices.Marshal.SizeOf(typeof(TVertex)) * VertexCount); " is 130.
Long Statement,Squared.Render.Internal,XNABufferPair<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The length of the statement  "            Indices = new DynamicIndexBuffer(RenderManager.DeviceManager.Device' IndexElementSize.SixteenBits' IndexCount' BufferUsage.WriteOnly); " is 134.
Long Statement,Squared.Render.Internal,XNABufferPair<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Dispose,The length of the statement  "            Interlocked.Add(ref RenderManager.TotalVertexBytes' System.Runtime.InteropServices.Marshal.SizeOf(typeof(TVertex)) * -VertexCount); " is 131.
Long Statement,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,AppendText,The length of the statement  "                        WrapWord(buffer' wordStartOffset' wordStartWritePosition' bufferWritePosition - 1' effectiveScale' effectiveLineSpacing); " is 121.
Long Statement,Squared.Render.Evil,GraphicsDeviceUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,GetRefreshRate,The length of the statement  "            var getDisplayMode = (GetDisplayModeDelegate)Marshal.GetDelegateForFunctionPointer(new IntPtr(pGetDisplayMode)' typeof(GetDisplayModeDelegate)); " is 144.
Long Statement,Squared.Render.Evil,TextureUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Evil.cs,SetData,The length of the statement  "                var rv = D3DXLoadSurfaceFromMemory(pSurface' null' pDestRect' pData' pixelFormat' pitch' null' pSourceRect' D3DX_FILTER.NONE' 0); " is 129.
Complex Conditional,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,AddRange,The conditional expression  "(offset == null) && (multiplyColor == null) && (addColor == null) &&                  (userData == null) && (sortKey == null) && (scale == null)"  is complex.
Complex Conditional,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,PrepareDrawCalls,The conditional expression  "(UseZBuffer && ZBufferOnlySorting) ||                   DisableSortKeys ||                  (UseZBuffer && DepthPrePassOnly)"  is complex.
Empty Catch Block,Squared.Render,RenderManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,CreateNewBufferGenerators,The method has an empty catch block.
Empty Catch Block,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,FlushDisposeList,The method has an empty catch block.
Magic Number,Squared.Render,Batch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Batch.cs,WaitForSuspend,The following statement contains a magic number: !mre.Wait(1000)
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,DefaultMaterialSet,The following statement contains a magic number: DefaultDitheringSettings = new DitheringSettings {                  Unit = 255'                  Strength = 1.0f'                  FrameIndex = 0              };
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,Gaussian,The following statement contains a magic number: double value = -(x * x) / (2.0 * sigma * sigma);
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,IntegrateGaussian,The following statement contains a magic number: return ((b - a) / 6.0) *                  (                      Gaussian(sigma' a) + 4.0 *                       Gaussian(sigma' (a + b) / 2.0) +                       Gaussian(sigma' b)                  );
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,IntegrateGaussian,The following statement contains a magic number: return ((b - a) / 6.0) *                  (                      Gaussian(sigma' a) + 4.0 *                       Gaussian(sigma' (a + b) / 2.0) +                       Gaussian(sigma' b)                  );
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,IntegrateGaussian,The following statement contains a magic number: return ((b - a) / 6.0) *                  (                      Gaussian(sigma' a) + 4.0 *                       Gaussian(sigma' (a + b) / 2.0) +                       Gaussian(sigma' b)                  );
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: int weightCount = 1 + (tapsMinusOne / 2);
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: tapCount / 2 * 2 == tapCount
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: tapCount / 2 * 2 == tapCount
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: double x = i - (tapsMinusOne / 2.0);
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: double value = IntegrateGaussian(sigma' x - 0.5' x + 0.5);
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: double value = IntegrateGaussian(sigma' x - 0.5' x + 0.5);
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: var scaled = unscaled * 10;
Magic Number,Squared.Render,DefaultMaterialSet,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DefaultMaterialSet.cs,SetGaussianBlurParameters,The following statement contains a magic number: p["InverseTapDivisor"]?.SetValue((float)(1.0 / (sum * 10)));
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,EnsureCapacity,The following statement contains a magic number: capacity <= 4
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,CreateList,The following statement contains a magic number: Storage.Count > 2
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,CreateList,The following statement contains a magic number: Storage.Count > 3
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,Add_Fast,The following statement contains a magic number: switch (i) {                  case 0:                      Storage.Item1 = item;                      break;                  case 1:                      Storage.Item2 = item;                      break;                  case 2:                      Storage.Item3 = item;                      break;                  case 3:                      Storage.Item4 = item;                      break;              }
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,Add_Fast,The following statement contains a magic number: switch (i) {                  case 0:                      Storage.Item1 = item;                      break;                  case 1:                      Storage.Item2 = item;                      break;                  case 2:                      Storage.Item3 = item;                      break;                  case 3:                      Storage.Item4 = item;                      break;              }
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,Add,The following statement contains a magic number: _HasList || (Storage.Count >= 4)
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,AddRange,The following statement contains a magic number: newCount <= 4
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,OverwriteWith,The following statement contains a magic number: (count > 4) || _HasList
Magic Number,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,Sort,The following statement contains a magic number: Storage.Count == 2
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,MipGenerator,The following statement contains a magic number: double fv = i / 255.0;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,MipGenerator,The following statement contains a magic number: ToLinearTable[i] = fv / 12.92;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,MipGenerator,The following statement contains a magic number: fv < 0.04045
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,MipGenerator,The following statement contains a magic number: i < 256
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,FromLinear,The following statement contains a magic number: scaled = 12.92 * v;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,FromLinear,The following statement contains a magic number: v <= 0.0031308
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,FromLinear,The following statement contains a magic number: return (byte)(scaled * 255.0);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Average_sRGB,The following statement contains a magic number: return FromLinear(sum / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: (destWidth < srcWidth / 2) || (destHeight < srcHeight / 2)
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: (destWidth < srcWidth / 2) || (destHeight < srcHeight / 2)
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: var srcRowSize = srcWidth * 4;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: byte* srcRow = pSrc + ((y * 2) * srcRowSize);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: byte* destRow = pDest + (y * destWidth * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: var a = srcRow + ((x * 2) * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: var a = srcRow + ((x * 2) * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: var b = a + 4;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: var result = destRow + (x * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[0] = (byte)((a[0] + b[0] + c[0] + d[0]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[1] = (byte)((a[1] + b[1] + c[1] + d[1]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[2] = (byte)((a[2] + b[2] + c[2] + d[2]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[2] = (byte)((a[2] + b[2] + c[2] + d[2]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[2] = (byte)((a[2] + b[2] + c[2] + d[2]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[2] = (byte)((a[2] + b[2] + c[2] + d[2]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[2] = (byte)((a[2] + b[2] + c[2] + d[2]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[2] = (byte)((a[2] + b[2] + c[2] + d[2]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[3] = (byte)((a[3] + b[3] + c[3] + d[3]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[3] = (byte)((a[3] + b[3] + c[3] + d[3]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[3] = (byte)((a[3] + b[3] + c[3] + d[3]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[3] = (byte)((a[3] + b[3] + c[3] + d[3]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[3] = (byte)((a[3] + b[3] + c[3] + d[3]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Color,The following statement contains a magic number: result[3] = (byte)((a[3] + b[3] + c[3] + d[3]) / 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: (destWidth < srcWidth / 2) || (destHeight < srcHeight / 2)
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: (destWidth < srcWidth / 2) || (destHeight < srcHeight / 2)
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: var srcRowSize = srcWidth * 4;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: byte* srcRow = pSrc + ((y * 2) * srcRowSize);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: byte* destRow = pDest + (y * destWidth * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: var a = srcRow + ((x * 2) * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: var a = srcRow + ((x * 2) * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: var b = a + 4;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: var result = destRow + (x * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[2] = Average_sRGB(a[2]' b[2]' c[2]' d[2]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[2] = Average_sRGB(a[2]' b[2]' c[2]' d[2]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[2] = Average_sRGB(a[2]' b[2]' c[2]' d[2]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[2] = Average_sRGB(a[2]' b[2]' c[2]' d[2]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[2] = Average_sRGB(a[2]' b[2]' c[2]' d[2]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[3] = Average_sRGB(a[3]' b[3]' c[3]' d[3]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[3] = Average_sRGB(a[3]' b[3]' c[3]' d[3]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[3] = Average_sRGB(a[3]' b[3]' c[3]' d[3]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[3] = Average_sRGB(a[3]' b[3]' c[3]' d[3]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBColor,The following statement contains a magic number: result[3] = Average_sRGB(a[3]' b[3]' c[3]' d[3]);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: (destWidth < srcWidth / 2) || (destHeight < srcHeight / 2)
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: (destWidth < srcWidth / 2) || (destHeight < srcHeight / 2)
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: var srcRowSize = srcWidth * 4;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: byte* srcRow = pSrc + ((y * 2) * srcRowSize);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: byte* destRow = pDest + (y * destWidth * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: var a = srcRow + ((x * 2) * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: var a = srcRow + ((x * 2) * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: var b = a + 4;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: var result = destRow + (x * 4);
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: result[0] = result[1] = result[2] = result[3] = gray;
Magic Number,Squared.Render,MipGenerator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,sRGBPAGray,The following statement contains a magic number: result[0] = result[1] = result[2] = result[3] = gray;
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,DynamicAtlas,The following statement contains a magic number: var mipSize1 = (width / 2) * (height / 2);
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,DynamicAtlas,The following statement contains a magic number: var mipSize1 = (width / 2) * (height / 2);
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,DynamicAtlas,The following statement contains a magic number: var mipSize2 = (width / 4) * (height / 4);
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,DynamicAtlas,The following statement contains a magic number: var mipSize2 = (width / 4) * (height / 4);
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,GenerateMips,The following statement contains a magic number: var destWidth = srcWidth / 2;
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,GenerateMips,The following statement contains a magic number: var destHeight = srcHeight / 2;
Magic Number,Squared.Render,DynamicAtlas<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,GenerateMips,The following statement contains a magic number: Evil.TextureUtils.SetDataFast(Texture' (uint)i' pDest' destWidth' destHeight' (uint)(destWidth * 4));
Magic Number,Squared.Render,Reservation,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DynamicAtlas.cs,Reservation,The following statement contains a magic number: Stack = new StackTrace(2' true);
Magic Number,Squared.Render,Frame,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Frame.cs,Prepare,The following statement contains a magic number: !Monitor.TryEnter(PrepareLock' 5000)
Magic Number,Squared.Render,Material,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Materials.cs,Preload,The following statement contains a magic number: tempVb = new VertexBuffer(deviceManager.Device' hint.VertexFormats[i]' hint.HasIndices ? 4 : 6' BufferUsage.WriteOnly);
Magic Number,Squared.Render,Material,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Materials.cs,Preload,The following statement contains a magic number: tempVb = new VertexBuffer(deviceManager.Device' hint.VertexFormats[i]' hint.HasIndices ? 4 : 6' BufferUsage.WriteOnly);
Magic Number,Squared.Render,Material,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Materials.cs,Preload,The following statement contains a magic number: deviceManager.Device.DrawInstancedPrimitives(                      PrimitiveType.TriangleList' 0' 0' 4' 0' 2' 1                  );
Magic Number,Squared.Render,Material,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Materials.cs,Preload,The following statement contains a magic number: deviceManager.Device.DrawInstancedPrimitives(                      PrimitiveType.TriangleList' 0' 0' 4' 0' 2' 1                  );
Magic Number,Squared.Render,MaterialSetBase,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MaterialSet.cs,PreloadShaders,The following statement contains a magic number: var tempIb = new IndexBuffer(dm.Device' IndexElementSize.SixteenBits' 6' BufferUsage.WriteOnly);
Magic Number,Squared.Render,BitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BitmapBatch.cs,PrepareDrawCalls,The following statement contains a magic number: Squared.Render.NativeBatch.RecordPrimitives(_DrawCalls.Count * 2);
Magic Number,Squared.Render,MultimaterialBitmapBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\MultimaterialBitmapBatch.cs,PrepareDrawCalls,The following statement contains a magic number: Squared.Render.NativeBatch.RecordPrimitives(_DrawCalls.Count * 2);
Magic Number,Squared.Render,BaseObjectPool<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,BaseObjectPool,The following statement contains a magic number: _Pool = new UnorderedList<T>(Math.Max(poolCapacity / 2' 64));
Magic Number,Squared.Render,BaseObjectPool<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,BaseObjectPool,The following statement contains a magic number: _Pool = new UnorderedList<T>(Math.Max(poolCapacity / 2' 64));
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >>= 16;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: l |= 16;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >= 1 << 16
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >>= 8;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: l |= 8;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >= 1 << 8
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >>= 4;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: l |= 4;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >= 1 << 4
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >>= 2;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: l |= 2;
Magic Number,Squared.Render,ArrayPoolAllocator<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Pools.cs,IntLog2,The following statement contains a magic number: x >= 1 << 2
Magic Number,Squared.Render,BitmapVertex,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapVertex,The following statement contains a magic number: Elements = new VertexElement[] {                  new VertexElement( Marshal.OffsetOf(tThis' "Position").ToInt32()'                       VertexElementFormat.Vector3' VertexElementUsage.Position' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture1Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture2Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 2 )'                  // ScaleOrigin                  new VertexElement( Marshal.OffsetOf(tThis' "Scale").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 3 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Rotation").ToInt32()'                       VertexElementFormat.Single' VertexElementUsage.Position' 4 )'                  new VertexElement( Marshal.OffsetOf(tThis' "MultiplyColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "AddColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "UserData").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Color' 2 )'                  new VertexElement( Marshal.OffsetOf(tThis' "WorldSpace").ToInt32()'                       VertexElementFormat.Short2' VertexElementUsage.BlendIndices' 1 )'              };
Magic Number,Squared.Render,BitmapVertex,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapVertex,The following statement contains a magic number: Elements = new VertexElement[] {                  new VertexElement( Marshal.OffsetOf(tThis' "Position").ToInt32()'                       VertexElementFormat.Vector3' VertexElementUsage.Position' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture1Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture2Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 2 )'                  // ScaleOrigin                  new VertexElement( Marshal.OffsetOf(tThis' "Scale").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 3 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Rotation").ToInt32()'                       VertexElementFormat.Single' VertexElementUsage.Position' 4 )'                  new VertexElement( Marshal.OffsetOf(tThis' "MultiplyColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "AddColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "UserData").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Color' 2 )'                  new VertexElement( Marshal.OffsetOf(tThis' "WorldSpace").ToInt32()'                       VertexElementFormat.Short2' VertexElementUsage.BlendIndices' 1 )'              };
Magic Number,Squared.Render,BitmapVertex,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapVertex,The following statement contains a magic number: Elements = new VertexElement[] {                  new VertexElement( Marshal.OffsetOf(tThis' "Position").ToInt32()'                       VertexElementFormat.Vector3' VertexElementUsage.Position' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture1Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture2Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 2 )'                  // ScaleOrigin                  new VertexElement( Marshal.OffsetOf(tThis' "Scale").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 3 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Rotation").ToInt32()'                       VertexElementFormat.Single' VertexElementUsage.Position' 4 )'                  new VertexElement( Marshal.OffsetOf(tThis' "MultiplyColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "AddColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "UserData").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Color' 2 )'                  new VertexElement( Marshal.OffsetOf(tThis' "WorldSpace").ToInt32()'                       VertexElementFormat.Short2' VertexElementUsage.BlendIndices' 1 )'              };
Magic Number,Squared.Render,BitmapVertex,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,BitmapVertex,The following statement contains a magic number: Elements = new VertexElement[] {                  new VertexElement( Marshal.OffsetOf(tThis' "Position").ToInt32()'                       VertexElementFormat.Vector3' VertexElementUsage.Position' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture1Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Texture2Region").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 2 )'                  // ScaleOrigin                  new VertexElement( Marshal.OffsetOf(tThis' "Scale").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Position' 3 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Rotation").ToInt32()'                       VertexElementFormat.Single' VertexElementUsage.Position' 4 )'                  new VertexElement( Marshal.OffsetOf(tThis' "MultiplyColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "AddColor").ToInt32()'                       VertexElementFormat.Color' VertexElementUsage.Color' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "UserData").ToInt32()'                       VertexElementFormat.Vector4' VertexElementUsage.Color' 2 )'                  new VertexElement( Marshal.OffsetOf(tThis' "WorldSpace").ToInt32()'                       VertexElementFormat.Short2' VertexElementUsage.BlendIndices' 1 )'              };
Magic Number,Squared.Render,QuadUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,CreateCornerBuffer,The following statement contains a magic number: result = cornerGenerator.Allocate(4' 6' true);
Magic Number,Squared.Render,QuadUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,CreateCornerBuffer,The following statement contains a magic number: result = cornerGenerator.Allocate(4' 6' true);
Magic Number,Squared.Render,QuadUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,CreateCornerBuffer,The following statement contains a magic number: !cornerGenerator.TryGetCachedBuffer("QuadCorners"' 4' 6' out result)
Magic Number,Squared.Render,QuadUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,CreateCornerBuffer,The following statement contains a magic number: !cornerGenerator.TryGetCachedBuffer("QuadCorners"' 4' 6' out result)
Magic Number,Squared.Render,QuadUtils,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,CreateCornerBuffer,The following statement contains a magic number: i < 4
Magic Number,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,GetIndexArray,The following statement contains a magic number: const int rounding = 4096;
Magic Number,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,GetIndexArray,The following statement contains a magic number: var size = ((minimumSize + (rounding - 1)) / rounding) * rounding + 16;
Magic Number,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,AllocateNativeBatches,The following statement contains a magic number: nativeBatchCapacity = Math.Min(NativeBatchCapacityLimit + 2' _DrawCalls.Count / 8);
Magic Number,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,AllocateNativeBatches,The following statement contains a magic number: nativeBatchCapacity = Math.Min(NativeBatchCapacityLimit + 2' _DrawCalls.Count / 8);
Magic Number,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,Issue,The following statement contains a magic number: device.DrawInstancedPrimitives(                                      PrimitiveType.TriangleList'                                       0' _CornerBuffer.HardwareVertexOffset' 4'                                       _CornerBuffer.HardwareIndexOffset' 2'                                       nb.VertexCount                                  );
Magic Number,Squared.Render,BitmapBatchBase<TDrawCall>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,Issue,The following statement contains a magic number: device.DrawInstancedPrimitives(                                      PrimitiveType.TriangleList'                                       0' _CornerBuffer.HardwareVertexOffset' 4'                                       _CornerBuffer.HardwareIndexOffset' 2'                                       nb.VertexCount                                  );
Magic Number,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,IssueDrawCall,The following statement contains a magic number: twoBindings?.Length != 2
Magic Number,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,IssueDrawCall,The following statement contains a magic number: threeBindings?.Length != 3
Magic Number,Squared.Render,NativeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,IssueDrawCall,The following statement contains a magic number: threeBindings[2] = new VertexBufferBinding(call.VertexBuffer3' call.VertexOffset3' 1);
Magic Number,Squared.Render,BitmapDrawCall,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderBitmaps.cs,Crop,The following statement contains a magic number: Math.Abs(Rotation) >= 0.01
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddOutlinedQuad,The following statement contains a magic number: Add(ref dc' 4' OutlinedQuadIndices.Length);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareOutlinedQuad,The following statement contains a magic number: var vw = vb.GetWriter(4);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddFilledQuad,The following statement contains a magic number: Add(ref dc' 4' QuadIndices.Length);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareQuad,The following statement contains a magic number: var vw = vb.GetWriter(4);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddGradientFilledQuad,The following statement contains a magic number: Add(ref dc' 4' QuadIndices.Length);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareGradientQuad,The following statement contains a magic number: var vw = vb.GetWriter(4);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddQuadBorder,The following statement contains a magic number: Add(ref dc' 8' QuadBorderIndices.Length);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareQuadBorder,The following statement contains a magic number: var vw = vb.GetWriter(8);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddLine,The following statement contains a magic number: Add(ref dc' 2' LineIndices.Length);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareLine,The following statement contains a magic number: var vw = vb.GetWriter(2);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: float scale = Arithmetic.Clamp(3.75f - quality' 2' 5);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: float scale = Arithmetic.Clamp(3.75f - quality' 2' 5);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: float scale = Arithmetic.Clamp(3.75f - quality' 2' 5);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: var result = (int)Math.Ceiling(Math.Abs(radius.X + radius.Y) / scale) + 8;
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: result = 8;
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: result < 8
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: result = 2048;
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,ComputeRingPoints,The following statement contains a magic number: result > 2048
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddFilledRing,The following statement contains a magic number: Add(ref dc' numPoints * 2' (numPoints - 1) * 6);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,AddFilledRing,The following statement contains a magic number: Add(ref dc' numPoints * 2' (numPoints - 1) * 6);
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: const int vertexStride = 2;
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: const int indexStride = 6;
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,GeometryBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderGeometry.cs,_PrepareRing,The following statement contains a magic number: fixed (ushort * pIndices = &iw.Storage.Array[iw.Storage.Offset])              for (int i = 0' j = 0' k = 0; i < numPoints; i++' j += vertexStride' k += indexStride) {                  cos = (float)Math.Cos(a);                  sin = (float)Math.Sin(a);                    vertexInner.Position.X = dc.Vector0.X + (float)(cos * dc.Vector1.X);                  vertexInner.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector1.Y);                  vertexInner.Color = Color.Lerp(dc.Color0' dc.Color2' colorA);                  pVertices[j] = vertexInner;                    vertexOuter.Position.X = dc.Vector0.X + (float)(cos * dc.Vector2.X);                  vertexOuter.Position.Y = dc.Vector0.Y + (float)(sin * dc.Vector2.Y);                  vertexOuter.Color = Color.Lerp(dc.Color1' dc.Color3' colorA);                  pVertices[j + 1] = vertexOuter;                    if (i == (numPoints - 1))                      break;                    pIndices[k]     = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 1] = (ushort)(j + 1 + vw.IndexOffset);                  pIndices[k + 2] = (ushort)(j + 3 + vw.IndexOffset);                  pIndices[k + 3] = (ushort)(j + 2 + vw.IndexOffset);                  pIndices[k + 4] = (ushort)(j +     vw.IndexOffset);                  pIndices[k + 5] = (ushort)(j + 3 + vw.IndexOffset);                    a += step;                  colorA += colorStep;              }
Magic Number,Squared.Render,RenderExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ComputePrimitiveCount,The following statement contains a magic number: switch (primitiveType) {                  case PrimitiveType.LineStrip:                      return vertexCount - 1;                  case PrimitiveType.LineList:                      return vertexCount / 2;                  case PrimitiveType.TriangleStrip:                      return vertexCount - 2;                  case PrimitiveType.TriangleList:                      return vertexCount / 3;                  default:                      throw new ArgumentException();              }
Magic Number,Squared.Render,RenderExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ComputePrimitiveCount,The following statement contains a magic number: switch (primitiveType) {                  case PrimitiveType.LineStrip:                      return vertexCount - 1;                  case PrimitiveType.LineList:                      return vertexCount / 2;                  case PrimitiveType.TriangleStrip:                      return vertexCount - 2;                  case PrimitiveType.TriangleList:                      return vertexCount / 3;                  default:                      throw new ArgumentException();              }
Magic Number,Squared.Render,RenderExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ComputePrimitiveCount,The following statement contains a magic number: switch (primitiveType) {                  case PrimitiveType.LineStrip:                      return vertexCount - 1;                  case PrimitiveType.LineList:                      return vertexCount / 2;                  case PrimitiveType.TriangleStrip:                      return vertexCount - 2;                  case PrimitiveType.TriangleList:                      return vertexCount / 3;                  default:                      throw new ArgumentException();              }
Magic Number,Squared.Render,RenderExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ComputeVertexCount,The following statement contains a magic number: switch (primitiveType) {                  case PrimitiveType.LineStrip:                      return primitiveCount + 1;                  case PrimitiveType.LineList:                      return primitiveCount * 2;                  case PrimitiveType.TriangleStrip:                      return primitiveCount + 2;                  case PrimitiveType.TriangleList:                      return primitiveCount * 3;                  default:                      throw new ArgumentException();              }
Magic Number,Squared.Render,RenderExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ComputeVertexCount,The following statement contains a magic number: switch (primitiveType) {                  case PrimitiveType.LineStrip:                      return primitiveCount + 1;                  case PrimitiveType.LineList:                      return primitiveCount * 2;                  case PrimitiveType.TriangleStrip:                      return primitiveCount + 2;                  case PrimitiveType.TriangleList:                      return primitiveCount * 3;                  default:                      throw new ArgumentException();              }
Magic Number,Squared.Render,RenderExtensionMethods,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ComputeVertexCount,The following statement contains a magic number: switch (primitiveType) {                  case PrimitiveType.LineStrip:                      return primitiveCount + 1;                  case PrimitiveType.LineList:                      return primitiveCount * 2;                  case PrimitiveType.TriangleStrip:                      return primitiveCount + 2;                  case PrimitiveType.TriangleList:                      return primitiveCount * 3;                  default:                      throw new ArgumentException();              }
Magic Number,Squared.Render,DeviceManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,Finish,The following statement contains a magic number: int threshold = 2;
Magic Number,Squared.Render,RenderManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ResetDeviceState,The following statement contains a magic number: const int numStages = 16;
Magic Number,Squared.Render,RenderManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,ResetDeviceState,The following statement contains a magic number: const int numVertexStages = 4;
Magic Number,Squared.Render,PrepareManager,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderManager.cs,PrepareMany,The following statement contains a magic number: const int blockSize = 128;
Magic Number,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,EndDraw,The following statement contains a magic number: false && sw.Elapsed.TotalMilliseconds >= 17
Magic Number,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,TryWaitForPresentToStart,The following statement contains a magic number: Thread.SpinWait(50);
Magic Number,Squared.Render,RenderCoordinator,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderCoordinator.cs,TryWaitForPresentToStart,The following statement contains a magic number: Thread.SpinWait(10);
Magic Number,Squared.Render,MultithreadedGame,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderGame.cs,MultithreadedGame,The following statement contains a magic number: var threadCount = Math.Min(Math.Max(2' Environment.ProcessorCount + 1)' 4);
Magic Number,Squared.Render,MultithreadedGame,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderGame.cs,MultithreadedGame,The following statement contains a magic number: var threadCount = Math.Min(Math.Max(2' Environment.ProcessorCount + 1)' 4);
Magic Number,Squared.Render,MultithreadedGame,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\ThreadedRenderGame.cs,MultithreadedGame,The following statement contains a magic number: ThreadGroup = new ThreadGroup(threadCount' threadCount' true' comThreadingModel: ApartmentState.MTA) {                  NewThreadBusyThresholdMs = 2.0f              };
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: float temp = pMatrix[4];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[4] = pMatrix[1];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: temp = pMatrix[8];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[8] = pMatrix[2];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[8] = pMatrix[2];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[2] = temp;
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: temp = pMatrix[12];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[12] = pMatrix[3];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[12] = pMatrix[3];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[3] = temp;
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: temp = pMatrix[9];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[9] = pMatrix[6];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[9] = pMatrix[6];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[6] = temp;
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: temp = pMatrix[13];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[13] = pMatrix[7];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[13] = pMatrix[7];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[7] = temp;
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: temp = pMatrix[14];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[14] = pMatrix[11];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[14] = pMatrix[11];
Magic Number,Squared.Render,UniformBinding<T>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,InPlaceTranspose,The following statement contains a magic number: pMatrix[11] = temp;
Magic Number,Squared.Render,Storage,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,Storage,The following statement contains a magic number: const int size = 1024 * 4;
Magic Number,Squared.Render,Storage,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,Storage,The following statement contains a magic number: const int size = 1024 * 4;
Magic Number,Squared.Render,UniformBindingKey,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,UniformBindingKey,The following statement contains a magic number: HashCode = Type.GetHashCode() ^                   (UniformName.GetHashCode() << 8);
Magic Number,Squared.Render,UniformBindingTable,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBinding.cs,Add,The following statement contains a magic number: var newLength = id + 12;
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMembers,The following statement contains a magic number: i < 999
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: var startVector = offset / 16;
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: var endVector = endpoint / 16;
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: valueSize <= 16
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: switch (desc.Class) {                      case D3DXPARAMETER_CLASS.MATRIX_COLUMNS:                      case D3DXPARAMETER_CLASS.MATRIX_ROWS:                          fixups.Add(new Fixup(                              sourceOffset' (int)offset' valueSize' (int)valueSize'                               (desc.Class == D3DXPARAMETER_CLASS.MATRIX_ROWS)                          ));                          break;                        case D3DXPARAMETER_CLASS.SCALAR:                      case D3DXPARAMETER_CLASS.VECTOR:                          fixups.Add(new Fixup(                              sourceOffset' (int)offset' valueSize' (int)valueSize'                               false                          ));                          break;                        case D3DXPARAMETER_CLASS.STRUCT:                          FixupMembers(fixups' field.FieldType' hMember' sourceOffset' ref uploadSize);                          break;                        case D3DXPARAMETER_CLASS.OBJECT:                          // FIXME: Texture2D?                          valueSize = 4;                          break;                        default:                          throw new UniformBindingException("Parameter type not implemented: " + desc.Class.ToString());                  }
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: var paddedSize = ((valueSize + 15) / 16) * 16;
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: var paddedSize = ((valueSize + 15) / 16) * 16;
Magic Number,Squared.Render,Layout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\UniformBindingLayout.cs,FixupMember,The following statement contains a magic number: var paddedSize = ((valueSize + 15) / 16) * 16;
Magic Number,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeArc,The following statement contains a magic number: var centerAngleDegrees = startAngleDegrees + (sizeDegrees / 2);
Magic Number,Squared.Render.Convenience,ImperativeRenderer,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,RasterizeArc,The following statement contains a magic number: var sizeRadians = MathHelper.ToRadians(sizeDegrees / 2);
Magic Number,Squared.Render.Convenience,CachedBatches,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,GetItemAtIndex,The following statement contains a magic number: switch (index) {                      case 0:                          result = Batch0;                          break;                      case 1:                          result = Batch1;                          break;                      case 2:                          result = Batch2;                          break;                      case 3:                          result = Batch3;                          break;                      default:                          throw new ArgumentOutOfRangeException("index");                  }
Magic Number,Squared.Render.Convenience,CachedBatches,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,GetItemAtIndex,The following statement contains a magic number: switch (index) {                      case 0:                          result = Batch0;                          break;                      case 1:                          result = Batch1;                          break;                      case 2:                          result = Batch2;                          break;                      case 3:                          result = Batch3;                          break;                      default:                          throw new ArgumentOutOfRangeException("index");                  }
Magic Number,Squared.Render.Convenience,CachedBatches,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,SetItemAtIndex,The following statement contains a magic number: switch (index) {                      case 0:                          Batch0 = value;                          break;                      case 1:                          Batch1 = value;                          break;                      case 2:                          Batch2 = value;                          break;                      case 3:                          Batch3 = value;                          break;                      default:                          throw new ArgumentOutOfRangeException("index");                  }
Magic Number,Squared.Render.Convenience,CachedBatches,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\Convenience.cs,SetItemAtIndex,The following statement contains a magic number: switch (index) {                      case 0:                          Batch0 = value;                          break;                      case 1:                          Batch1 = value;                          break;                      case 2:                          Batch2 = value;                          break;                      case 3:                          Batch3 = value;                          break;                      default:                          throw new ArgumentOutOfRangeException("index");                  }
Magic Number,Squared.Render.RasterShape,RasterShapeVertex,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,RasterShapeVertex,The following statement contains a magic number: Elements = new VertexElement[] {                  new VertexElement( Marshal.OffsetOf(tThis' "PointsAB").ToInt32()'                      VertexElementFormat.Vector4' VertexElementUsage.Position' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "PointsCD").ToInt32()'                      VertexElementFormat.Vector4' VertexElementUsage.Position' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Parameters").ToInt32()'                      VertexElementFormat.Vector4' VertexElementUsage.TextureCoordinate' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "TextureRegion").ToInt32()'                      VertexElementFormat.Vector4' VertexElementUsage.TextureCoordinate' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "CenterColor").ToInt32()'                      VertexElementFormat.Color' VertexElementUsage.Color' 0 )'                  new VertexElement( Marshal.OffsetOf(tThis' "EdgeColor").ToInt32()'                      VertexElementFormat.Color' VertexElementUsage.Color' 1 )'                  new VertexElement( Marshal.OffsetOf(tThis' "OutlineColor").ToInt32()'                      VertexElementFormat.Color' VertexElementUsage.Color' 2 )'                  new VertexElement( Marshal.OffsetOf(tThis' "Type").ToInt32()'                      VertexElementFormat.Short2' VertexElementUsage.BlendIndices' 1)              };
Magic Number,Squared.Render.RasterShape,RasterShapeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,Prepare,The following statement contains a magic number: NativeBatch.RecordPrimitives(count * 2);
Magic Number,Squared.Render.RasterShape,RasterShapeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,Issue,The following statement contains a magic number: device.DrawInstancedPrimitives(                          PrimitiveType.TriangleList'                           0' _CornerBuffer.HardwareVertexOffset' 4'                           _CornerBuffer.HardwareIndexOffset' 2'                           sb.InstanceCount                      );
Magic Number,Squared.Render.RasterShape,RasterShapeBatch,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RasterShapes.cs,Issue,The following statement contains a magic number: device.DrawInstancedPrimitives(                          PrimitiveType.TriangleList'                           0' _CornerBuffer.HardwareVertexOffset' 4'                           _CornerBuffer.HardwareIndexOffset' 2'                           sb.InstanceCount                      );
Magic Number,Squared.Render.Internal,BufferGenerator<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,AllocateSuitablySizedHardwareBuffer,The following statement contains a magic number: buffer.Age = Arithmetic.Clamp(buffer.Age - 2' 0' MaxBufferAge);
Magic Number,Squared.Render.Internal,XNABufferPair<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Allocate,The following statement contains a magic number: Interlocked.Add(ref RenderManager.TotalIndexBytes' 2 * IndexCount);
Magic Number,Squared.Render.Internal,XNABufferPair<TVertex>,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\BufferGenerator.cs,Dispose,The following statement contains a magic number: Interlocked.Add(ref RenderManager.TotalIndexBytes' 2 * -IndexCount);
Magic Number,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,Snap,The following statement contains a magic number: switch (alignToPixels.Horizontal) {                  case PixelAlignmentMode.Floor:                      x = (float)Math.Floor(pos.X);                      break;                  case PixelAlignmentMode.FloorHalf:                      x = (float)Math.Floor(pos.X * 2) / 2;                      break;                  default:                      x = pos.X;                      break;              }
Magic Number,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,Snap,The following statement contains a magic number: switch (alignToPixels.Horizontal) {                  case PixelAlignmentMode.Floor:                      x = (float)Math.Floor(pos.X);                      break;                  case PixelAlignmentMode.FloorHalf:                      x = (float)Math.Floor(pos.X * 2) / 2;                      break;                  default:                      x = pos.X;                      break;              }
Magic Number,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,Snap,The following statement contains a magic number: switch (alignToPixels.Vertical) {                  case PixelAlignmentMode.Floor:                      y = (float)Math.Floor(pos.Y);                      break;                  case PixelAlignmentMode.FloorHalf:                      y = (float)Math.Floor(pos.Y * 2) / 2;                      break;                  default:                      y = pos.Y;                      break;              }
Magic Number,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,Snap,The following statement contains a magic number: switch (alignToPixels.Vertical) {                  case PixelAlignmentMode.Floor:                      y = (float)Math.Floor(pos.Y);                      break;                  case PixelAlignmentMode.FloorHalf:                      y = (float)Math.Floor(pos.Y * 2) / 2;                      break;                  default:                      y = pos.Y;                      break;              }
Magic Number,Squared.Render.Text,StringLayoutEngine,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\RenderText.cs,AlignLine,The following statement contains a magic number: whitespace /= 2;
Magic Number,Squared.Render.Text,DynamicStringLayout,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\TextUtils.cs,Get,The following statement contains a magic number: var newCapacity = 1 << (int)Math.Ceiling(Math.Log(capacity' 2));
Missing Default,Squared.Render,DenseList,D:\research\architectureSmells\repos1\sq_Fracture\Squared\RenderLib\DenseList.cs,Add_Fast,The following switch statement is missing a default case: switch (i) {                  case 0:                      Storage.Item1 = item;                      break;                  case 1:                      Storage.Item2 = item;                      break;                  case 2:                      Storage.Item3 = item;                      break;                  case 3:                      Storage.Item4 = item;                      break;              }
