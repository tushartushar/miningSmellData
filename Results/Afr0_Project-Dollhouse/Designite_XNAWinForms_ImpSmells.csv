Implementation smell,Namespace,Class,File,Method,Description
Long Method,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The method has 147 lines of code.
Long Method,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The method has 203 lines of code.
Complex Method,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,Cyclomatic complexity of the method is 33
Complex Method,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,Form1,Cyclomatic complexity of the method is 8
Complex Method,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstHeads_SelectedIndexChanged,Cyclomatic complexity of the method is 10
Complex Method,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,Cyclomatic complexity of the method is 8
Complex Method,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,Read,Cyclomatic complexity of the method is 10
Long Statement,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,Form1_OnFrameMove,The length of the statement  "	mWorldMat = Matrix.Identity * Matrix.CreateScale (m_Scale) * Matrix.CreateRotationX (m_RotationX) * Matrix.CreateRotationY (m_RotationY) * Matrix.CreateRotationZ (m_RotationZ); " is 176.
Long Statement,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_DeviceReset,The length of the statement  "	mProjectionMat = Matrix.CreatePerspectiveFieldOfView (MathHelper.Pi / 4.0f' (float)pDevice.PresentationParameters.BackBufferWidth / (float)pDevice.PresentationParameters.BackBufferHeight' 1.0f' 100.0f); " is 202.
Long Statement,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,aboutTSODressUpToolStripMenuItem_Click,The length of the statement  "	MessageBox.Show ("Version: 0.6\r\nCode and design by Mats 'Afr0' Vederhus & ddfzcsm\r\nThanks to Don Hopkins' Eric 'Bobo' Bowman & Andrew D'Addesio"' "About TSO DressUp"); " is 171.
Long Statement,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The length of the statement  "	this.panelViewport.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 237.
Long Statement,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,TransformVertices,The length of the statement  "			var translatedMatrix = Matrix.CreateTranslation (new Vector3 (relativeVertex.Vertex.Coord.X' relativeVertex.Vertex.Coord.Y' relativeVertex.Vertex.Coord.Z)) * bone.AbsoluteMatrix; " is 178.
Long Statement,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,TransformVertices,The length of the statement  "			translatedMatrix = Matrix.CreateTranslation (new Vector3 (relativeVertex.Vertex.NormalCoord.X' relativeVertex.Vertex.NormalCoord.Y' relativeVertex.Vertex.NormalCoord.Z)) * bone.AbsoluteMatrix; " is 192.
Long Statement,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The length of the statement  "			Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]); " is 176.
Long Statement,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The length of the statement  "			Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]); " is 192.
Long Statement,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The length of the statement  "			Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]); " is 214.
Long Statement,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The length of the statement  "			Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]); " is 234.
Long Statement,Dressup,XNAWinForm,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\XNAWinForm.cs,panelViewport_BackColorChanged,The length of the statement  "	this.mBackColor = new Microsoft.Xna.Framework.Graphics.Color (panelViewport.BackColor.R' panelViewport.BackColor.G' panelViewport.BackColor.B); " is 143.
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,Anim,The following statement contains a magic number: m_Duration = Reader.ReadSingle () / 1000;  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,Anim,The following statement contains a magic number: Reader.BaseStream.Seek (m_TranslationsTableOffset + 12 * m_NumTranslations' SeekOrigin.Begin);  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,Anim,The following statement contains a magic number: Reader.BaseStream.Seek (m_RotationsTableOffset + 16 * m_NumRotations' SeekOrigin.Begin);  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Mot.Duration = Reader.ReadSingle () / 1000;  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasTranslation != 0) {  	Mot.Translations = new float[Mot.NumFrames' 3];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_TranslationsTableOffset + 12 * Mot.TranslationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Translations [i' 0] = Reader.ReadSingle ();  		Mot.Translations [i' 1] = Reader.ReadSingle ();  		Mot.Translations [i' 2] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasTranslation != 0) {  	Mot.Translations = new float[Mot.NumFrames' 3];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_TranslationsTableOffset + 12 * Mot.TranslationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Translations [i' 0] = Reader.ReadSingle ();  		Mot.Translations [i' 1] = Reader.ReadSingle ();  		Mot.Translations [i' 2] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasTranslation != 0) {  	Mot.Translations = new float[Mot.NumFrames' 3];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_TranslationsTableOffset + 12 * Mot.TranslationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Translations [i' 0] = Reader.ReadSingle ();  		Mot.Translations [i' 1] = Reader.ReadSingle ();  		Mot.Translations [i' 2] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Mot.Translations = new float[Mot.NumFrames' 3];  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Reader.BaseStream.Seek (m_TranslationsTableOffset + 12 * Mot.TranslationsOffset' SeekOrigin.Begin);  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: for (int i = 0; i < Mot.NumFrames; i++) {  	Mot.Translations [i' 0] = Reader.ReadSingle ();  	Mot.Translations [i' 1] = Reader.ReadSingle ();  	Mot.Translations [i' 2] = Reader.ReadSingle ();  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Mot.Translations [i' 2] = Reader.ReadSingle ();  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasRotation != 0) {  	Mot.Rotations = new float[Mot.NumFrames' 4];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_RotationsTableOffset + 16 * Mot.RotationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Rotations [i' 0] = Reader.ReadSingle ();  		Mot.Rotations [i' 1] = -Reader.ReadSingle ();  		Mot.Rotations [i' 2] = -Reader.ReadSingle ();  		Mot.Rotations [i' 3] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasRotation != 0) {  	Mot.Rotations = new float[Mot.NumFrames' 4];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_RotationsTableOffset + 16 * Mot.RotationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Rotations [i' 0] = Reader.ReadSingle ();  		Mot.Rotations [i' 1] = -Reader.ReadSingle ();  		Mot.Rotations [i' 2] = -Reader.ReadSingle ();  		Mot.Rotations [i' 3] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasRotation != 0) {  	Mot.Rotations = new float[Mot.NumFrames' 4];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_RotationsTableOffset + 16 * Mot.RotationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Rotations [i' 0] = Reader.ReadSingle ();  		Mot.Rotations [i' 1] = -Reader.ReadSingle ();  		Mot.Rotations [i' 2] = -Reader.ReadSingle ();  		Mot.Rotations [i' 3] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: if (Mot.HasRotation != 0) {  	Mot.Rotations = new float[Mot.NumFrames' 4];  	long CurrentOffset = Reader.BaseStream.Position;  	Reader.BaseStream.Seek (m_RotationsTableOffset + 16 * Mot.RotationsOffset' SeekOrigin.Begin);  	for (int i = 0; i < Mot.NumFrames; i++) {  		Mot.Rotations [i' 0] = Reader.ReadSingle ();  		Mot.Rotations [i' 1] = -Reader.ReadSingle ();  		Mot.Rotations [i' 2] = -Reader.ReadSingle ();  		Mot.Rotations [i' 3] = Reader.ReadSingle ();  	}  	Reader.BaseStream.Seek (CurrentOffset' SeekOrigin.Begin);  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Mot.Rotations = new float[Mot.NumFrames' 4];  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Reader.BaseStream.Seek (m_RotationsTableOffset + 16 * Mot.RotationsOffset' SeekOrigin.Begin);  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: for (int i = 0; i < Mot.NumFrames; i++) {  	Mot.Rotations [i' 0] = Reader.ReadSingle ();  	Mot.Rotations [i' 1] = -Reader.ReadSingle ();  	Mot.Rotations [i' 2] = -Reader.ReadSingle ();  	Mot.Rotations [i' 3] = Reader.ReadSingle ();  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: for (int i = 0; i < Mot.NumFrames; i++) {  	Mot.Rotations [i' 0] = Reader.ReadSingle ();  	Mot.Rotations [i' 1] = -Reader.ReadSingle ();  	Mot.Rotations [i' 2] = -Reader.ReadSingle ();  	Mot.Rotations [i' 3] = Reader.ReadSingle ();  }  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Mot.Rotations [i' 2] = -Reader.ReadSingle ();  
Magic Number,Dressup,Anim,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Anim.cs,ReadMotion,The following statement contains a magic number: Mot.Rotations [i' 3] = Reader.ReadSingle ();  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	//TODO: Figure out when to use avatardata2 and avatardata3...  	string FileName = GlobalSettings.Default.StartupPath + "avatardata\\animations\\animations.dat";  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	} else  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	ulong FileID = Convert.ToUInt64 (Node.Attributes ["assetID"].Value' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,ContentManager,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\ContentManager.cs,ContentManager,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	string HexID = RemovePadding (Node.Attributes ["assetID"].Value);  	ulong FileID = Convert.ToUInt64 (HexID' 16);  	string FileName = "";  	if (Node.Attributes ["key"].Value.Contains (".dat")) {  		FileName = GlobalSettings.Default.StartupPath + Node.Attributes ["key"].Value;  	}  	if (!m_Resources.ContainsKey (FileID))  		m_Resources.Add (FileID' FileName);  }  
Magic Number,Dressup,Endian,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Endian.cs,SwapInt16,The following statement contains a magic number: return (short)(((v & 0xff) << 8) | ((v >> 8) & 0xff));  
Magic Number,Dressup,Endian,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Endian.cs,SwapInt16,The following statement contains a magic number: return (short)(((v & 0xff) << 8) | ((v >> 8) & 0xff));  
Magic Number,Dressup,Endian,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Endian.cs,SwapUInt16,The following statement contains a magic number: return (ushort)(((v & 0xff) << 8) | ((v >> 8) & 0xff));  
Magic Number,Dressup,Endian,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Endian.cs,SwapUInt16,The following statement contains a magic number: return (ushort)(((v & 0xff) << 8) | ((v >> 8) & 0xff));  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstHeads_SelectedIndexChanged,The following statement contains a magic number: foreach (KeyValuePair<ulong' string> Pair in ContentManager.Resources) {  	//HAndGroup files are used to group together different hand meshes and textures.  	if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16) && Type == "Hand") {  		Hag HandGroup = new Hag (ContentManager.GetResourceFromLongID (Pair.Key));  		m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (HandGroup.Appearances [0]));  		LstAppearances.Items.Clear ();  		foreach (ulong AppearanceID in HandGroup.Appearances)  			LstAppearances.Items.Add (AppearanceID);  		List<Binding> Bindings = new List<Binding> ();  		foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  			Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  		m_RenderSim.AddLHandTexture (this.Device' Bindings [0].TextureAssetID);  		m_RenderSim.AddLHandMesh (Bindings [0].MeshAssetID);  		break;  	} else {  		m_HeadSelected = true;  		m_BodySelected = false;  		//Check if the selected hexstring equals a ulong ID in ContentManager.  		if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  			PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  			m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  			m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  			LstAppearances.Items.Clear ();  			LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  			LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  			LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  			List<Binding> Bindings = new List<Binding> ();  			foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  				Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  			m_RenderSim.AddHeadTexture (this.Device' Bindings [0].TextureAssetID);  			m_RenderSim.AddHeadMesh (Bindings [0].MeshAssetID);  			break;  		}  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstHeads_SelectedIndexChanged,The following statement contains a magic number: foreach (KeyValuePair<ulong' string> Pair in ContentManager.Resources) {  	//HAndGroup files are used to group together different hand meshes and textures.  	if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16) && Type == "Hand") {  		Hag HandGroup = new Hag (ContentManager.GetResourceFromLongID (Pair.Key));  		m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (HandGroup.Appearances [0]));  		LstAppearances.Items.Clear ();  		foreach (ulong AppearanceID in HandGroup.Appearances)  			LstAppearances.Items.Add (AppearanceID);  		List<Binding> Bindings = new List<Binding> ();  		foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  			Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  		m_RenderSim.AddLHandTexture (this.Device' Bindings [0].TextureAssetID);  		m_RenderSim.AddLHandMesh (Bindings [0].MeshAssetID);  		break;  	} else {  		m_HeadSelected = true;  		m_BodySelected = false;  		//Check if the selected hexstring equals a ulong ID in ContentManager.  		if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  			PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  			m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  			m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  			LstAppearances.Items.Clear ();  			LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  			LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  			LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  			List<Binding> Bindings = new List<Binding> ();  			foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  				Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  			m_RenderSim.AddHeadTexture (this.Device' Bindings [0].TextureAssetID);  			m_RenderSim.AddHeadMesh (Bindings [0].MeshAssetID);  			break;  		}  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstHeads_SelectedIndexChanged,The following statement contains a magic number: if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16) && Type == "Hand") {  	Hag HandGroup = new Hag (ContentManager.GetResourceFromLongID (Pair.Key));  	m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (HandGroup.Appearances [0]));  	LstAppearances.Items.Clear ();  	foreach (ulong AppearanceID in HandGroup.Appearances)  		LstAppearances.Items.Add (AppearanceID);  	List<Binding> Bindings = new List<Binding> ();  	foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  		Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  	m_RenderSim.AddLHandTexture (this.Device' Bindings [0].TextureAssetID);  	m_RenderSim.AddLHandMesh (Bindings [0].MeshAssetID);  	break;  } else {  	m_HeadSelected = true;  	m_BodySelected = false;  	//Check if the selected hexstring equals a ulong ID in ContentManager.  	if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  		PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  		m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  		m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  		LstAppearances.Items.Clear ();  		LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  		LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  		LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  		List<Binding> Bindings = new List<Binding> ();  		foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  			Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  		m_RenderSim.AddHeadTexture (this.Device' Bindings [0].TextureAssetID);  		m_RenderSim.AddHeadMesh (Bindings [0].MeshAssetID);  		break;  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstHeads_SelectedIndexChanged,The following statement contains a magic number: if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16) && Type == "Hand") {  	Hag HandGroup = new Hag (ContentManager.GetResourceFromLongID (Pair.Key));  	m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (HandGroup.Appearances [0]));  	LstAppearances.Items.Clear ();  	foreach (ulong AppearanceID in HandGroup.Appearances)  		LstAppearances.Items.Add (AppearanceID);  	List<Binding> Bindings = new List<Binding> ();  	foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  		Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  	m_RenderSim.AddLHandTexture (this.Device' Bindings [0].TextureAssetID);  	m_RenderSim.AddLHandMesh (Bindings [0].MeshAssetID);  	break;  } else {  	m_HeadSelected = true;  	m_BodySelected = false;  	//Check if the selected hexstring equals a ulong ID in ContentManager.  	if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  		PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  		m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  		m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  		LstAppearances.Items.Clear ();  		LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  		LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  		LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  		List<Binding> Bindings = new List<Binding> ();  		foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  			Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  		m_RenderSim.AddHeadTexture (this.Device' Bindings [0].TextureAssetID);  		m_RenderSim.AddHeadMesh (Bindings [0].MeshAssetID);  		break;  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstHeads_SelectedIndexChanged,The following statement contains a magic number: if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  	PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  	m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  	m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  	LstAppearances.Items.Clear ();  	LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  	LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  	LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  	List<Binding> Bindings = new List<Binding> ();  	foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  		Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  	m_RenderSim.AddHeadTexture (this.Device' Bindings [0].TextureAssetID);  	m_RenderSim.AddHeadMesh (Bindings [0].MeshAssetID);  	break;  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstBodies_SelectedIndexChanged,The following statement contains a magic number: foreach (KeyValuePair<ulong' string> Pair in ContentManager.Resources) {  	//Check if the selected hexstring equals a ulong ID in ContentManager.  	if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  		PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  		m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  		m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  		LstAppearances.Items.Clear ();  		LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  		LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  		LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  		List<Binding> Bindings = new List<Binding> ();  		foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  			Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  		m_RenderSim.AddBodyTexture (this.Device' Bindings [0].TextureAssetID);  		//The file selected was most likely a body-mesh' so apply the adult skeleton to it.  		if (Pair.Value.Contains ("bodies")) {  			m_RenderSim.AddBodyMesh (Bindings [0].MeshAssetID);  			break;  		}  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstBodies_SelectedIndexChanged,The following statement contains a magic number: if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16)) {  	PurchasableObject PO = new PurchasableObject (ContentManager.GetResourceFromLongID (Pair.Key));  	m_CurrentOutfit = new Outfit (ContentManager.GetResourceFromLongID (PO.OutfitID));  	m_CurrentAppearance = new Appearance (ContentManager.GetResourceFromLongID (m_CurrentOutfit.LightAppearanceID));  	LstAppearances.Items.Clear ();  	LstAppearances.Items.Add (m_CurrentOutfit.LightAppearanceID);  	LstAppearances.Items.Add (m_CurrentOutfit.MediumAppearanceID);  	LstAppearances.Items.Add (m_CurrentOutfit.DarkAppearanceID);  	List<Binding> Bindings = new List<Binding> ();  	foreach (ulong BindingID in m_CurrentAppearance.BindingIDs)  		Bindings.Add (new Binding (ContentManager.GetResourceFromLongID (BindingID)));  	m_RenderSim.AddBodyTexture (this.Device' Bindings [0].TextureAssetID);  	//The file selected was most likely a body-mesh' so apply the adult skeleton to it.  	if (Pair.Value.Contains ("bodies")) {  		m_RenderSim.AddBodyMesh (Bindings [0].MeshAssetID);  		break;  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstAnimations_SelectedIndexChanged,The following statement contains a magic number: foreach (KeyValuePair<ulong' string> Pair in ContentManager.Resources) {  	//Check if the selected hexstring equals a ulong ID in ContentManager.  	if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16))  		m_CurrentAnim = new Anim (ContentManager.GetResourceFromLongID (Pair.Key));  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,LstAnimations_SelectedIndexChanged,The following statement contains a magic number: if (Pair.Key == Convert.ToUInt64 (SelectedStr' 16))  	m_CurrentAnim = new Anim (ContentManager.GetResourceFromLongID (Pair.Key));  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (m_LoadBodyComplete) {  	if (!m_RenderSkeleton) {  		foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  			// Draw  			m_BodyEffect.Begin ();  			m_BodyEffect.Techniques [0].Passes [0].Begin ();  			VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  			Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  			Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  			Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  			Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  			Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  			Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  			pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  			m_BodyEffect.Techniques [0].Passes [0].End ();  			m_BodyEffect.End ();  		}  		m_RenderSim.GetBodyMesh ().TransformVertices (m_RenderSim.SimSkeleton.RootBone);  		m_RenderSim.GetBodyMesh ().ProcessMesh (m_RenderSim.SimSkeleton' false);  	} else {  		DrawSkeleton (m_RenderSim.SimSkeleton);  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (m_LoadBodyComplete) {  	if (!m_RenderSkeleton) {  		foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  			// Draw  			m_BodyEffect.Begin ();  			m_BodyEffect.Techniques [0].Passes [0].Begin ();  			VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  			Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  			Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  			Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  			Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  			Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  			Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  			pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  			m_BodyEffect.Techniques [0].Passes [0].End ();  			m_BodyEffect.End ();  		}  		m_RenderSim.GetBodyMesh ().TransformVertices (m_RenderSim.SimSkeleton.RootBone);  		m_RenderSim.GetBodyMesh ().ProcessMesh (m_RenderSim.SimSkeleton' false);  	} else {  		DrawSkeleton (m_RenderSim.SimSkeleton);  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (m_LoadBodyComplete) {  	if (!m_RenderSkeleton) {  		foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  			// Draw  			m_BodyEffect.Begin ();  			m_BodyEffect.Techniques [0].Passes [0].Begin ();  			VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  			Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  			Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  			Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  			Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  			Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  			Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  			pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  			m_BodyEffect.Techniques [0].Passes [0].End ();  			m_BodyEffect.End ();  		}  		m_RenderSim.GetBodyMesh ().TransformVertices (m_RenderSim.SimSkeleton.RootBone);  		m_RenderSim.GetBodyMesh ().ProcessMesh (m_RenderSim.SimSkeleton' false);  	} else {  		DrawSkeleton (m_RenderSim.SimSkeleton);  	}  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (!m_RenderSkeleton) {  	foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  		// Draw  		m_BodyEffect.Begin ();  		m_BodyEffect.Techniques [0].Passes [0].Begin ();  		VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  		Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  		Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  		Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  		Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  		Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  		Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  		pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  		m_BodyEffect.Techniques [0].Passes [0].End ();  		m_BodyEffect.End ();  	}  	m_RenderSim.GetBodyMesh ().TransformVertices (m_RenderSim.SimSkeleton.RootBone);  	m_RenderSim.GetBodyMesh ().ProcessMesh (m_RenderSim.SimSkeleton' false);  } else {  	DrawSkeleton (m_RenderSim.SimSkeleton);  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (!m_RenderSkeleton) {  	foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  		// Draw  		m_BodyEffect.Begin ();  		m_BodyEffect.Techniques [0].Passes [0].Begin ();  		VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  		Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  		Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  		Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  		Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  		Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  		Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  		pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  		m_BodyEffect.Techniques [0].Passes [0].End ();  		m_BodyEffect.End ();  	}  	m_RenderSim.GetBodyMesh ().TransformVertices (m_RenderSim.SimSkeleton.RootBone);  	m_RenderSim.GetBodyMesh ().ProcessMesh (m_RenderSim.SimSkeleton' false);  } else {  	DrawSkeleton (m_RenderSim.SimSkeleton);  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (!m_RenderSkeleton) {  	foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  		// Draw  		m_BodyEffect.Begin ();  		m_BodyEffect.Techniques [0].Passes [0].Begin ();  		VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  		Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  		Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  		Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  		Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  		Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  		Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  		pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  		m_BodyEffect.Techniques [0].Passes [0].End ();  		m_BodyEffect.End ();  	}  	m_RenderSim.GetBodyMesh ().TransformVertices (m_RenderSim.SimSkeleton.RootBone);  	m_RenderSim.GetBodyMesh ().ProcessMesh (m_RenderSim.SimSkeleton' false);  } else {  	DrawSkeleton (m_RenderSim.SimSkeleton);  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  	// Draw  	m_BodyEffect.Begin ();  	m_BodyEffect.Techniques [0].Passes [0].Begin ();  	VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  	Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  	Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  	Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  	Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  	Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  	Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  	pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  	m_BodyEffect.Techniques [0].Passes [0].End ();  	m_BodyEffect.End ();  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  	// Draw  	m_BodyEffect.Begin ();  	m_BodyEffect.Techniques [0].Passes [0].Begin ();  	VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  	Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  	Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  	Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  	Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  	Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  	Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  	pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  	m_BodyEffect.Techniques [0].Passes [0].End ();  	m_BodyEffect.End ();  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: foreach (Face Fce in m_RenderSim.GetBodyMesh ().FaceData) {  	// Draw  	m_BodyEffect.Begin ();  	m_BodyEffect.Techniques [0].Passes [0].Begin ();  	VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  	Vertex [0] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA];  	Vertex [1] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB];  	Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  	Vertex [0].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  	Vertex [1].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  	Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  	pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  	m_BodyEffect.Techniques [0].Passes [0].End ();  	m_BodyEffect.End ();  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: Vertex [2] = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC];  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: Vertex [2].TextureCoordinate = m_RenderSim.GetBodyMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (m_LoadHeadComplete) {  	foreach (Face Fce in m_RenderSim.GetHeadMesh ().FaceData) {  		// Draw  		m_HeadEffect.Begin ();  		m_HeadEffect.Techniques [0].Passes [0].Begin ();  		VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  		Vertex [0] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA];  		Vertex [1] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB];  		Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  		Vertex [0].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  		Vertex [1].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  		Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  		pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  		m_HeadEffect.Techniques [0].Passes [0].End ();  		m_HeadEffect.End ();  	}  	m_RenderSim.GetHeadMesh ().ProcessMesh (m_RenderSim.SimSkeleton' true);  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (m_LoadHeadComplete) {  	foreach (Face Fce in m_RenderSim.GetHeadMesh ().FaceData) {  		// Draw  		m_HeadEffect.Begin ();  		m_HeadEffect.Techniques [0].Passes [0].Begin ();  		VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  		Vertex [0] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA];  		Vertex [1] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB];  		Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  		Vertex [0].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  		Vertex [1].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  		Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  		pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  		m_HeadEffect.Techniques [0].Passes [0].End ();  		m_HeadEffect.End ();  	}  	m_RenderSim.GetHeadMesh ().ProcessMesh (m_RenderSim.SimSkeleton' true);  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: if (m_LoadHeadComplete) {  	foreach (Face Fce in m_RenderSim.GetHeadMesh ().FaceData) {  		// Draw  		m_HeadEffect.Begin ();  		m_HeadEffect.Techniques [0].Passes [0].Begin ();  		VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  		Vertex [0] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA];  		Vertex [1] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB];  		Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  		Vertex [0].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  		Vertex [1].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  		Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  		pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  		m_HeadEffect.Techniques [0].Passes [0].End ();  		m_HeadEffect.End ();  	}  	m_RenderSim.GetHeadMesh ().ProcessMesh (m_RenderSim.SimSkeleton' true);  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: foreach (Face Fce in m_RenderSim.GetHeadMesh ().FaceData) {  	// Draw  	m_HeadEffect.Begin ();  	m_HeadEffect.Techniques [0].Passes [0].Begin ();  	VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  	Vertex [0] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA];  	Vertex [1] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB];  	Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  	Vertex [0].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  	Vertex [1].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  	Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  	pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  	m_HeadEffect.Techniques [0].Passes [0].End ();  	m_HeadEffect.End ();  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: foreach (Face Fce in m_RenderSim.GetHeadMesh ().FaceData) {  	// Draw  	m_HeadEffect.Begin ();  	m_HeadEffect.Techniques [0].Passes [0].Begin ();  	VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  	Vertex [0] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA];  	Vertex [1] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB];  	Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  	Vertex [0].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  	Vertex [1].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  	Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  	pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  	m_HeadEffect.Techniques [0].Passes [0].End ();  	m_HeadEffect.End ();  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: foreach (Face Fce in m_RenderSim.GetHeadMesh ().FaceData) {  	// Draw  	m_HeadEffect.Begin ();  	m_HeadEffect.Techniques [0].Passes [0].Begin ();  	VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];  	Vertex [0] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA];  	Vertex [1] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB];  	Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  	Vertex [0].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexA].TextureCoordinate;  	Vertex [1].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexB].TextureCoordinate;  	Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  	pDevice.DrawUserPrimitives<VertexPositionNormalTexture> (PrimitiveType.TriangleList' Vertex' 0' 1);  	m_HeadEffect.Techniques [0].Passes [0].End ();  	m_HeadEffect.End ();  }  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: Vertex [2] = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC];  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,mWinForm_OnFrameRender,The following statement contains a magic number: Vertex [2].TextureCoordinate = m_RenderSim.GetHeadMesh ().VertexTexNormalPositions [Fce.VertexC].TextureCoordinate;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panelViewport.Location = new System.Drawing.Point (12' 67);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panelViewport.Location = new System.Drawing.Point (12' 67);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panelViewport.Size = new System.Drawing.Size (605' 858);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panelViewport.Size = new System.Drawing.Size (605' 858);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point (623' 24);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point (623' 24);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size (294' 913);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size (294' 913);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 3;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAnimations.Location = new System.Drawing.Point (13' 702);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAnimations.Location = new System.Drawing.Point (13' 702);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAnimations.Size = new System.Drawing.Size (269' 199);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAnimations.Size = new System.Drawing.Size (269' 199);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAnimations.TabIndex = 6;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstBodies.Location = new System.Drawing.Point (13' 263);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstBodies.Location = new System.Drawing.Point (13' 263);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstBodies.Size = new System.Drawing.Size (269' 212);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstBodies.Size = new System.Drawing.Size (269' 212);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstBodies.TabIndex = 5;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAppearances.Location = new System.Drawing.Point (13' 521);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAppearances.Location = new System.Drawing.Point (13' 521);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAppearances.Size = new System.Drawing.Size (269' 147);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAppearances.Size = new System.Drawing.Size (269' 147);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstAppearances.TabIndex = 5;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstHeads.Location = new System.Drawing.Point (13' 43);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstHeads.Location = new System.Drawing.Point (13' 43);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstHeads.Size = new System.Drawing.Size (269' 173);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstHeads.Size = new System.Drawing.Size (269' 173);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LstHeads.TabIndex = 5;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAnimations.Location = new System.Drawing.Point (10' 686);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAnimations.Location = new System.Drawing.Point (10' 686);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAnimations.Size = new System.Drawing.Size (103' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAnimations.Size = new System.Drawing.Size (103' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAnimations.TabIndex = 4;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAppearances.Location = new System.Drawing.Point (10' 505);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAppearances.Location = new System.Drawing.Point (10' 505);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAppearances.Size = new System.Drawing.Size (115' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAppearances.Size = new System.Drawing.Size (115' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.LblAppearances.TabIndex = 4;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (10' 16);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (10' 16);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (82' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (82' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 4;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (10' 234);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (10' 234);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (84' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (84' 13);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 4;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size (917' 24);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size (917' 24);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.TabIndex = 4;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size (37' 20);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size (37' 20);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.exitToolStripMenuItem.Size = new System.Drawing.Size (92' 22);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.exitToolStripMenuItem.Size = new System.Drawing.Size (92' 22);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.helpToolStripMenuItem.Size = new System.Drawing.Size (44' 20);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.helpToolStripMenuItem.Size = new System.Drawing.Size (44' 20);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.aboutTSODressUpToolStripMenuItem.Size = new System.Drawing.Size (178' 22);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.aboutTSODressUpToolStripMenuItem.Size = new System.Drawing.Size (178' 22);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnSkeleton.Location = new System.Drawing.Point (510' 35);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnSkeleton.Location = new System.Drawing.Point (510' 35);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnSkeleton.Size = new System.Drawing.Size (95' 23);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnSkeleton.Size = new System.Drawing.Size (95' 23);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnSkeleton.TabIndex = 5;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnAnimation.Location = new System.Drawing.Point (403' 35);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnAnimation.Location = new System.Drawing.Point (403' 35);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnAnimation.Size = new System.Drawing.Size (91' 23);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnAnimation.Size = new System.Drawing.Size (91' 23);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.BtnAnimation.TabIndex = 6;  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (917' 937);  
Magic Number,Dressup,Form1,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (917' 937);  
Magic Number,Dressup,Hag,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Hag.cs,Hag,The following statement contains a magic number: for (int i = 0; i < 17; i++) {  	m_Appearances.Add (Endian.SwapUInt64 (Reader.ReadUInt64 ()));  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,ProcessMesh,The following statement contains a magic number: for (int i = 0; i < TotalVertexCount; i++) {  	NormVerticies [i] = new VertexPositionNormalTexture ();  	NormVerticies [i].Position.X = TransformedVertices [i].Vertex.Coord.X;  	NormVerticies [i].Position.Y = TransformedVertices [i].Vertex.Coord.Y;  	NormVerticies [i].Position.Z = TransformedVertices [i].Vertex.Coord.Z;  	NormVerticies [i].Normal.X = TransformedVertices [i].Vertex.NormalCoord.X;  	NormVerticies [i].Normal.Y = TransformedVertices [i].Vertex.NormalCoord.Y;  	NormVerticies [i].Normal.Z = TransformedVertices [i].Vertex.NormalCoord.Z;  	if (IsHeadMesh) {  		//Transform the head vertices' position by the absolute transform  		//for the headbone (which is always bone 17) to render the head in place.  		NormVerticies [i].Position = Vector3.Transform (Vertex [i].Vertex.Coord' Skel.Bones [16].AbsoluteMatrix);  		//Transform the head normals' position by the absolute transform  		//for the headbone (which is always bone 17) to render the head in place.  		NormVerticies [i].Normal = Vector3.Transform (Vertex [i].Vertex.NormalCoord' Skel.Bones [16].AbsoluteMatrix);  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,ProcessMesh,The following statement contains a magic number: for (int i = 0; i < TotalVertexCount; i++) {  	NormVerticies [i] = new VertexPositionNormalTexture ();  	NormVerticies [i].Position.X = TransformedVertices [i].Vertex.Coord.X;  	NormVerticies [i].Position.Y = TransformedVertices [i].Vertex.Coord.Y;  	NormVerticies [i].Position.Z = TransformedVertices [i].Vertex.Coord.Z;  	NormVerticies [i].Normal.X = TransformedVertices [i].Vertex.NormalCoord.X;  	NormVerticies [i].Normal.Y = TransformedVertices [i].Vertex.NormalCoord.Y;  	NormVerticies [i].Normal.Z = TransformedVertices [i].Vertex.NormalCoord.Z;  	if (IsHeadMesh) {  		//Transform the head vertices' position by the absolute transform  		//for the headbone (which is always bone 17) to render the head in place.  		NormVerticies [i].Position = Vector3.Transform (Vertex [i].Vertex.Coord' Skel.Bones [16].AbsoluteMatrix);  		//Transform the head normals' position by the absolute transform  		//for the headbone (which is always bone 17) to render the head in place.  		NormVerticies [i].Normal = Vector3.Transform (Vertex [i].Vertex.NormalCoord' Skel.Bones [16].AbsoluteMatrix);  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,ProcessMesh,The following statement contains a magic number: if (IsHeadMesh) {  	//Transform the head vertices' position by the absolute transform  	//for the headbone (which is always bone 17) to render the head in place.  	NormVerticies [i].Position = Vector3.Transform (Vertex [i].Vertex.Coord' Skel.Bones [16].AbsoluteMatrix);  	//Transform the head normals' position by the absolute transform  	//for the headbone (which is always bone 17) to render the head in place.  	NormVerticies [i].Normal = Vector3.Transform (Vertex [i].Vertex.NormalCoord' Skel.Bones [16].AbsoluteMatrix);  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,ProcessMesh,The following statement contains a magic number: if (IsHeadMesh) {  	//Transform the head vertices' position by the absolute transform  	//for the headbone (which is always bone 17) to render the head in place.  	NormVerticies [i].Position = Vector3.Transform (Vertex [i].Vertex.Coord' Skel.Bones [16].AbsoluteMatrix);  	//Transform the head normals' position by the absolute transform  	//for the headbone (which is always bone 17) to render the head in place.  	NormVerticies [i].Normal = Vector3.Transform (Vertex [i].Vertex.NormalCoord' Skel.Bones [16].AbsoluteMatrix);  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,ProcessMesh,The following statement contains a magic number: NormVerticies [i].Position = Vector3.Transform (Vertex [i].Vertex.Coord' Skel.Bones [16].AbsoluteMatrix);  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,ProcessMesh,The following statement contains a magic number: NormVerticies [i].Normal = Vector3.Transform (Vertex [i].Vertex.NormalCoord' Skel.Bones [16].AbsoluteMatrix);  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: for (int i = 0; i < Animation.Motions.Count; i++) {  	int BoneIndex = Skel.FindBone (Animation.Motions [i].BoneName' i);  	if (BoneIndex == -1)  		continue;  	int Frame = (int)(AnimationTime * 30);  	float FractionShown = AnimationTime * 30 - Frame;  	int NextFrame = (Frame + 1 != Animation.Motions [0].NumFrames) ? Frame + 1 : 0;  	if (Animation.Motions [i].HasTranslation == 1) {  		Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  		Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  		Vector3 UpdatedTranslation = new Vector3 ();  		UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  		UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  		UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  		Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  	}  	if (Animation.Motions [i].HasRotation == 1) {  		Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  		Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  		//Use Slerp to interpolate  		float W1' W2 = 1.0f;  		float CosTheta = DotProduct (Rotation' NextRotation);  		if (CosTheta < 0) {  			CosTheta *= -1;  			W2 *= -1;  		}  		float Theta = (float)Math.Acos (CosTheta);  		float SinTheta = (float)Math.Sin (Theta);  		if (SinTheta > 0.001f) {  			W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  			W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  		} else {  			W1 = 1.0f - FractionShown;  			W2 = FractionShown;  		}  		Quaternion UpdatedRotation = new Quaternion ();  		UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  		UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  		UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  		UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  		Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  		Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  		Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  		Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  	}  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: if (Animation.Motions [i].HasTranslation == 1) {  	Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  	Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  	Vector3 UpdatedTranslation = new Vector3 ();  	UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  	UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  	UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  	Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: if (Animation.Motions [i].HasTranslation == 1) {  	Vector3 Translation = new Vector3 (Animation.Motions [i].Translations [Frame' 0]' Animation.Motions [i].Translations [Frame' 1]' Animation.Motions [i].Translations [Frame' 2]);  	Vector3 NextTranslation = new Vector3 (Animation.Motions [i].Translations [NextFrame' 0]' Animation.Motions [i].Translations [NextFrame' 1]' Animation.Motions [i].Translations [NextFrame' 2]);  	Vector3 UpdatedTranslation = new Vector3 ();  	UpdatedTranslation.X = (1 - FractionShown) * Translation.X + FractionShown * NextTranslation.X;  	UpdatedTranslation.Y = (1 - FractionShown) * Translation.Y + FractionShown * NextTranslation.Y;  	UpdatedTranslation.Z = (1 - FractionShown) * Translation.Z + FractionShown * NextTranslation.Z;  	Skel.Bones [BoneIndex].Translation = UpdatedTranslation;  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: if (Animation.Motions [i].HasRotation == 1) {  	Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  	Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  	//Use Slerp to interpolate  	float W1' W2 = 1.0f;  	float CosTheta = DotProduct (Rotation' NextRotation);  	if (CosTheta < 0) {  		CosTheta *= -1;  		W2 *= -1;  	}  	float Theta = (float)Math.Acos (CosTheta);  	float SinTheta = (float)Math.Sin (Theta);  	if (SinTheta > 0.001f) {  		W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  		W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  	} else {  		W1 = 1.0f - FractionShown;  		W2 = FractionShown;  	}  	Quaternion UpdatedRotation = new Quaternion ();  	UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  	UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  	UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  	UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  	Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  	Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  	Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  	Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: if (Animation.Motions [i].HasRotation == 1) {  	Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  	Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  	//Use Slerp to interpolate  	float W1' W2 = 1.0f;  	float CosTheta = DotProduct (Rotation' NextRotation);  	if (CosTheta < 0) {  		CosTheta *= -1;  		W2 *= -1;  	}  	float Theta = (float)Math.Acos (CosTheta);  	float SinTheta = (float)Math.Sin (Theta);  	if (SinTheta > 0.001f) {  		W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  		W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  	} else {  		W1 = 1.0f - FractionShown;  		W2 = FractionShown;  	}  	Quaternion UpdatedRotation = new Quaternion ();  	UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  	UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  	UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  	UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  	Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  	Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  	Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  	Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: if (Animation.Motions [i].HasRotation == 1) {  	Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  	Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  	//Use Slerp to interpolate  	float W1' W2 = 1.0f;  	float CosTheta = DotProduct (Rotation' NextRotation);  	if (CosTheta < 0) {  		CosTheta *= -1;  		W2 *= -1;  	}  	float Theta = (float)Math.Acos (CosTheta);  	float SinTheta = (float)Math.Sin (Theta);  	if (SinTheta > 0.001f) {  		W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  		W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  	} else {  		W1 = 1.0f - FractionShown;  		W2 = FractionShown;  	}  	Quaternion UpdatedRotation = new Quaternion ();  	UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  	UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  	UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  	UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  	Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  	Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  	Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  	Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  }  
Magic Number,Dressup,Mesh,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\Mesh.cs,AdvanceFrame,The following statement contains a magic number: if (Animation.Motions [i].HasRotation == 1) {  	Quaternion Rotation = new Quaternion (Animation.Motions [i].Rotations [Frame' 0]' Animation.Motions [i].Rotations [Frame' 1]' Animation.Motions [i].Rotations [Frame' 2]' Animation.Motions [i].Rotations [Frame' 3]);  	Quaternion NextRotation = new Quaternion (Animation.Motions [i].Rotations [NextFrame' 0]' Animation.Motions [i].Rotations [NextFrame' 1]' Animation.Motions [i].Rotations [NextFrame' 2]' Animation.Motions [i].Rotations [NextFrame' 3]);  	//Use Slerp to interpolate  	float W1' W2 = 1.0f;  	float CosTheta = DotProduct (Rotation' NextRotation);  	if (CosTheta < 0) {  		CosTheta *= -1;  		W2 *= -1;  	}  	float Theta = (float)Math.Acos (CosTheta);  	float SinTheta = (float)Math.Sin (Theta);  	if (SinTheta > 0.001f) {  		W1 = (float)Math.Sin ((1.0f - FractionShown) * Theta) / SinTheta;  		W2 *= (float)Math.Sin (FractionShown * Theta) / SinTheta;  	} else {  		W1 = 1.0f - FractionShown;  		W2 = FractionShown;  	}  	Quaternion UpdatedRotation = new Quaternion ();  	UpdatedRotation.X = W1 * Rotation.X + W2 * NextRotation.X;  	UpdatedRotation.Y = W1 * Rotation.Y + W2 * NextRotation.Y;  	UpdatedRotation.Z = W1 * Rotation.Z + W2 * NextRotation.Z;  	UpdatedRotation.W = W1 * Rotation.W + W2 * NextRotation.W;  	Skel.Bones [BoneIndex].Rotation.X = UpdatedRotation.X;  	Skel.Bones [BoneIndex].Rotation.Y = UpdatedRotation.Y;  	Skel.Bones [BoneIndex].Rotation.Z = UpdatedRotation.Z;  	Skel.Bones [BoneIndex].Rotation.W = UpdatedRotation.W;  }  
Magic Number,Dressup,XNAWinForm,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\XNAWinForm.cs,InitializeComponent,The following statement contains a magic number: this.panelViewport.Size = new System.Drawing.Size (518' 377);  
Magic Number,Dressup,XNAWinForm,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\XNAWinForm.cs,InitializeComponent,The following statement contains a magic number: this.panelViewport.Size = new System.Drawing.Size (518' 377);  
Magic Number,Dressup,XNAWinForm,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\XNAWinForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (518' 377);  
Magic Number,Dressup,XNAWinForm,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\TSO MeshViewer\XNAWinForms\XNAWinForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (518' 377);  
