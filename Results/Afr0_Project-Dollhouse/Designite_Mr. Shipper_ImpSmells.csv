Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,Cyclomatic complexity of the method is 20
Complex Method,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,Cyclomatic complexity of the method is 30
Long Parameter List,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,Filter,The method has 5 parameters.
Long Statement,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,SanitizeFilename,The length of the statement  "	return Filename.Replace (".bmp"' "").Replace (".tga"' "").Replace ("'"' "").Replace ("-"' "_").Replace (".ttf"' "").Replace (".wve"' "").Replace (".png"' "").Replace (" "' "_").Replace ("1024_768frame"' "_1024_768frame").Replace (".anim"' "").Replace (".mesh"' "").Replace (".skel"' "").Replace (".col"' "").Replace (".ffn"' "").Replace (".cur"' "").Replace (".po"' "").Replace (".oft"' "").Replace (".hag"' "").Replace (".jpg"' "").Replace (".max"' "").Replace (".bnd"' "").Replace (".apr"' ""); " is 496.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateUIGraphicsDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\uigraphics.xml")); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateUIGraphicsDatabase,The length of the statement  "                        .Replace("0x"' "") + "\"/>");*/Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 208.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateUIGraphicsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 213.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateCollectionsDatabase,The length of the statement  "			Writer.WriteLine ("          " + HelperFuncs.SanitizeFilename (Path.GetFileName (KVP.Key.Filename)) + " = " + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "'"); " is 199.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateCollectionsDatabase,The length of the statement  "			Writer.WriteLine ("          " + HelperFuncs.SanitizeFilename (Path.GetFileName (KVP.Key.Filename)) + " = " + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID))); " is 193.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateCollectionsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateCollectionsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GeneratePurchasablesDatabase,The length of the statement  "	AddFilesFromDir (GlobalSettings.Default.StartupPath + "avatardata2\\bodies\\"' "purchasables"' ref PurchasablesEntries); " is 120.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GeneratePurchasablesDatabase,The length of the statement  "	AddFilesFromDir (GlobalSettings.Default.StartupPath + "avatardata3\\bodies\\"' "purchasables"' ref PurchasablesEntries); " is 120.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GeneratePurchasablesDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\purchasables.xml")); " is 125.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GeneratePurchasablesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GeneratePurchasablesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateOutfitsDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\alloutfits.xml")); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateOutfitsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateOutfitsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAppearancesDatabase,The length of the statement  "	AddFilesFromDir (GlobalSettings.Default.StartupPath + "avatardata\\accessories\\"' "appearances"' ref AppearancesEntries); " is 122.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAppearancesDatabase,The length of the statement  "	AddFilesFromDir (GlobalSettings.Default.StartupPath + "avatardata2\\accessories\\"' "appearances"' ref AppearancesEntries); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAppearancesDatabase,The length of the statement  "	AddFilesFromDir (GlobalSettings.Default.StartupPath + "avatardata3\\accessories\\"' "appearances"' ref AppearancesEntries); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAppearancesDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\appearances.xml")); " is 124.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAppearancesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAppearancesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateThumbnailsDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\thumbnails.xml")); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateThumbnailsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateThumbnailsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateMeshDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateMeshDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateTexturesDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\textures.xml")); " is 121.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateTexturesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateTexturesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateBindingsDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\bindings.xml")); " is 121.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateBindingsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateBindingsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateHandGroupsDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\handgroups.xml")); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateHandGroupsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateHandGroupsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateCitiesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateCitiesDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAnimationsDatabase,The length of the statement  "	StreamWriter Writer = new StreamWriter (File.Create (GlobalSettings.Default.StartupPath + "packingslips\\animations.xml")); " is 123.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAnimationsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + KVP.Value + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 177.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,GenerateAnimationsDatabase,The length of the statement  "			Writer.WriteLine ("  " + "<DefineAssetString key=\"" + DirInfo.Parent + "\\" + Path.GetFileName (KVP.Value) + "\" assetID=\"" + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "\"/>"); " is 220.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,WriteCSEnum,The length of the statement  "			Writer.WriteLine ("          " + HelperFuncs.SanitizeFilename (KVP.Key.Filename.Replace ("\\"' "_")) + " = " + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID)) + "'"); " is 200.
Long Statement,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,WriteCSEnum,The length of the statement  "			Writer.WriteLine ("          " + HelperFuncs.SanitizeFilename (KVP.Key.Filename.Replace ("\\"' "_")) + " = " + "0x" + string.Format ("{0:X}"' HelperFuncs.ToID (KVP.Key.TypeID' KVP.Key.FileID))); " is 194.
Magic Number,Mr.Shipper,Database,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Database.cs,BuildEntryDatabase,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	ulong ID = Convert.ToUInt64 (Node.Attributes ["assetID"].Value' 16);  	AccessoryFilter.Add (ID);  }  
Magic Number,Mr.Shipper,Database,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Database.cs,BuildEntryDatabase,The following statement contains a magic number: foreach (XmlNode Node in NodeList) {  	ulong ID = Convert.ToUInt64 (Node.Attributes ["assetID"].Value' 16);  	AnimFilter.Add (ID);  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,bestK,The following statement contains a magic number: return (int)Math.Round (Math.Log (2.0) * bestM (capacity' errorRate) / capacity);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,bestM,The following statement contains a magic number: return (int)Math.Ceiling (capacity * Math.Log (errorRate' (1.0 / Math.Pow (2' Math.Log (2.0)))));  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,bestM,The following statement contains a magic number: return (int)Math.Ceiling (capacity * Math.Log (errorRate' (1.0 / Math.Pow (2' Math.Log (2.0)))));  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,bestErrorRate,The following statement contains a magic number: if (c != 0)  	return c;  else  	return (float)Math.Pow (0.6185' int.MaxValue / capacity);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,bestErrorRate,The following statement contains a magic number: return (float)Math.Pow (0.6185' int.MaxValue / capacity);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: unchecked {  	x = ~x + (x << 15);  	// x = (x << 15) - x- 1' as (~x) + y is equivalent to y - x - 1 in two's complement representation  	x = x ^ (x >> 12);  	x = x + (x << 2);  	x = x ^ (x >> 4);  	x = x * 2057;  	// x = (x + (x << 3)) + (x<< 11);  	x = x ^ (x >> 16);  	return (int)x;  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: unchecked {  	x = ~x + (x << 15);  	// x = (x << 15) - x- 1' as (~x) + y is equivalent to y - x - 1 in two's complement representation  	x = x ^ (x >> 12);  	x = x + (x << 2);  	x = x ^ (x >> 4);  	x = x * 2057;  	// x = (x + (x << 3)) + (x<< 11);  	x = x ^ (x >> 16);  	return (int)x;  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: unchecked {  	x = ~x + (x << 15);  	// x = (x << 15) - x- 1' as (~x) + y is equivalent to y - x - 1 in two's complement representation  	x = x ^ (x >> 12);  	x = x + (x << 2);  	x = x ^ (x >> 4);  	x = x * 2057;  	// x = (x + (x << 3)) + (x<< 11);  	x = x ^ (x >> 16);  	return (int)x;  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: unchecked {  	x = ~x + (x << 15);  	// x = (x << 15) - x- 1' as (~x) + y is equivalent to y - x - 1 in two's complement representation  	x = x ^ (x >> 12);  	x = x + (x << 2);  	x = x ^ (x >> 4);  	x = x * 2057;  	// x = (x + (x << 3)) + (x<< 11);  	x = x ^ (x >> 16);  	return (int)x;  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: unchecked {  	x = ~x + (x << 15);  	// x = (x << 15) - x- 1' as (~x) + y is equivalent to y - x - 1 in two's complement representation  	x = x ^ (x >> 12);  	x = x + (x << 2);  	x = x ^ (x >> 4);  	x = x * 2057;  	// x = (x + (x << 3)) + (x<< 11);  	x = x ^ (x >> 16);  	return (int)x;  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: unchecked {  	x = ~x + (x << 15);  	// x = (x << 15) - x- 1' as (~x) + y is equivalent to y - x - 1 in two's complement representation  	x = x ^ (x >> 12);  	x = x + (x << 2);  	x = x ^ (x >> 4);  	x = x * 2057;  	// x = (x + (x << 3)) + (x<< 11);  	x = x ^ (x >> 16);  	return (int)x;  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: x = ~x + (x << 15);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: x = x ^ (x >> 12);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: x = x + (x << 2);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: x = x ^ (x >> 4);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: x = x * 2057;  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashInt32,The following statement contains a magic number: x = x ^ (x >> 16);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: for (int i = 0; i < s.Length; i++) {  	hash += s [i];  	hash += (hash << 10);  	hash ^= (hash >> 6);  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: for (int i = 0; i < s.Length; i++) {  	hash += s [i];  	hash += (hash << 10);  	hash ^= (hash >> 6);  }  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: hash += (hash << 10);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: hash ^= (hash >> 6);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: hash += (hash << 3);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: hash ^= (hash >> 11);  
Magic Number,Mr.Shipper,Filter,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Filter.cs,hashString,The following statement contains a magic number: hash += (hash << 15);  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: switch (Filetype) {  case ".bmp":  	return 0x856DDBAC;  //Not compressed with Persist/RefPack  case ".tga":  	return 2;  case ".skel":  	return 5;  case ".anim":  	return 7;  case ".mesh":  	return 9;  case ".bnd":  	return 11;  case ".apr":  	return 12;  case ".oft":  	return 13;  case ".po":  	return 15;  case ".col":  	return 16;  case ".hag":  	return 18;  case ".jpg":  	return 20;  case ".png":  	return 24;  //Not compressed with Persist/RefPack  case ".mad":  	return 0x0A8B0E70;  case ".utk":  	return 0x1B6B9806;  case ".xa":  	return 0x1D07EB4B;  case ".mp3":  	return 0x3CEC2B47;  case ".trk":  	return 0x5D73A611;  case ".hit":  	return 0x7B1ACFCD;  default:  	return 0;  }  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 2;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 5;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 7;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 9;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 11;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 12;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 13;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 15;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 16;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 18;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 20;  
Magic Number,Mr.Shipper,HelperFuncs,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\HelperFuncs.cs,GetTypeID,The following statement contains a magic number: return 24;  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string Dir in Dirs) {  	if (Filetype != "") {  		if (Dir.Contains (Filetype)) {  			string[] Files = Directory.GetFiles (Dir);  			string[] SubDirs = Directory.GetDirectories (Dir);  			foreach (string Fle in Files) {  				if (Fle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (Fle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  			foreach (string SubDir in SubDirs) {  				Files = Directory.GetFiles (SubDir);  				foreach (string SubFle in Files) {  					if (SubFle.Contains (".dat")) {  						FAR3Archive Archive = new FAR3Archive (SubFle);  						Archive.ReadArchive (false);  						foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  							Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  					} else {  						FAR3Entry Entry = new FAR3Entry ();  						Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  						Entry.FileID = HelperFuncs.GetFileID (Entry);  						Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  						HelperFuncs.CheckCollision (Entry.FileID' Entries);  						//Ignore fonts to minimize the risk of ID collisions.  						if (!Entry.Filename.Contains (".ttf")) {  							if (!Entry.Filename.Contains (".ffn"))  								Entries.Add (Entry' Entry.Filename);  						}  					}  				}  			}  		}  	} else//Filetype was empty' so just add all filetypes found...  	 {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string Dir in Dirs) {  	if (Filetype != "") {  		if (Dir.Contains (Filetype)) {  			string[] Files = Directory.GetFiles (Dir);  			string[] SubDirs = Directory.GetDirectories (Dir);  			foreach (string Fle in Files) {  				if (Fle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (Fle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  			foreach (string SubDir in SubDirs) {  				Files = Directory.GetFiles (SubDir);  				foreach (string SubFle in Files) {  					if (SubFle.Contains (".dat")) {  						FAR3Archive Archive = new FAR3Archive (SubFle);  						Archive.ReadArchive (false);  						foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  							Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  					} else {  						FAR3Entry Entry = new FAR3Entry ();  						Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  						Entry.FileID = HelperFuncs.GetFileID (Entry);  						Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  						HelperFuncs.CheckCollision (Entry.FileID' Entries);  						//Ignore fonts to minimize the risk of ID collisions.  						if (!Entry.Filename.Contains (".ttf")) {  							if (!Entry.Filename.Contains (".ffn"))  								Entries.Add (Entry' Entry.Filename);  						}  					}  				}  			}  		}  	} else//Filetype was empty' so just add all filetypes found...  	 {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string Dir in Dirs) {  	if (Filetype != "") {  		if (Dir.Contains (Filetype)) {  			string[] Files = Directory.GetFiles (Dir);  			string[] SubDirs = Directory.GetDirectories (Dir);  			foreach (string Fle in Files) {  				if (Fle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (Fle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  			foreach (string SubDir in SubDirs) {  				Files = Directory.GetFiles (SubDir);  				foreach (string SubFle in Files) {  					if (SubFle.Contains (".dat")) {  						FAR3Archive Archive = new FAR3Archive (SubFle);  						Archive.ReadArchive (false);  						foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  							Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  					} else {  						FAR3Entry Entry = new FAR3Entry ();  						Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  						Entry.FileID = HelperFuncs.GetFileID (Entry);  						Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  						HelperFuncs.CheckCollision (Entry.FileID' Entries);  						//Ignore fonts to minimize the risk of ID collisions.  						if (!Entry.Filename.Contains (".ttf")) {  							if (!Entry.Filename.Contains (".ffn"))  								Entries.Add (Entry' Entry.Filename);  						}  					}  				}  			}  		}  	} else//Filetype was empty' so just add all filetypes found...  	 {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string Dir in Dirs) {  	if (Filetype != "") {  		if (Dir.Contains (Filetype)) {  			string[] Files = Directory.GetFiles (Dir);  			string[] SubDirs = Directory.GetDirectories (Dir);  			foreach (string Fle in Files) {  				if (Fle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (Fle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  			foreach (string SubDir in SubDirs) {  				Files = Directory.GetFiles (SubDir);  				foreach (string SubFle in Files) {  					if (SubFle.Contains (".dat")) {  						FAR3Archive Archive = new FAR3Archive (SubFle);  						Archive.ReadArchive (false);  						foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  							Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  					} else {  						FAR3Entry Entry = new FAR3Entry ();  						Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  						Entry.FileID = HelperFuncs.GetFileID (Entry);  						Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  						HelperFuncs.CheckCollision (Entry.FileID' Entries);  						//Ignore fonts to minimize the risk of ID collisions.  						if (!Entry.Filename.Contains (".ttf")) {  							if (!Entry.Filename.Contains (".ffn"))  								Entries.Add (Entry' Entry.Filename);  						}  					}  				}  			}  		}  	} else//Filetype was empty' so just add all filetypes found...  	 {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (true);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (Filetype != "") {  	if (Dir.Contains (Filetype)) {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision (Entry.FileID' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (false);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  } else//Filetype was empty' so just add all filetypes found...   {  	string[] Files = Directory.GetFiles (Dir);  	string[] SubDirs = Directory.GetDirectories (Dir);  	foreach (string Fle in Files) {  		if (Fle.Contains (".dat")) {  			FAR3Archive Archive = new FAR3Archive (Fle);  			Archive.ReadArchive (true);  			foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  				Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  		} else {  			FAR3Entry Entry = new FAR3Entry ();  			Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  			Entry.FileID = HelperFuncs.GetFileID (Entry);  			Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  			HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  			//Ignore fonts to minimize the risk of ID collisions.  			if (!Entry.Filename.Contains (".ttf")) {  				if (!Entry.Filename.Contains (".ffn"))  					Entries.Add (Entry' Entry.Filename);  			}  		}  	}  	foreach (string SubDir in SubDirs) {  		Files = Directory.GetFiles (SubDir);  		foreach (string SubFle in Files) {  			if (SubFle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (SubFle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (Filetype != "") {  	if (Dir.Contains (Filetype)) {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision (Entry.FileID' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (false);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  } else//Filetype was empty' so just add all filetypes found...   {  	string[] Files = Directory.GetFiles (Dir);  	string[] SubDirs = Directory.GetDirectories (Dir);  	foreach (string Fle in Files) {  		if (Fle.Contains (".dat")) {  			FAR3Archive Archive = new FAR3Archive (Fle);  			Archive.ReadArchive (true);  			foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  				Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  		} else {  			FAR3Entry Entry = new FAR3Entry ();  			Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  			Entry.FileID = HelperFuncs.GetFileID (Entry);  			Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  			HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  			//Ignore fonts to minimize the risk of ID collisions.  			if (!Entry.Filename.Contains (".ttf")) {  				if (!Entry.Filename.Contains (".ffn"))  					Entries.Add (Entry' Entry.Filename);  			}  		}  	}  	foreach (string SubDir in SubDirs) {  		Files = Directory.GetFiles (SubDir);  		foreach (string SubFle in Files) {  			if (SubFle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (SubFle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (Filetype != "") {  	if (Dir.Contains (Filetype)) {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision (Entry.FileID' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (false);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  } else//Filetype was empty' so just add all filetypes found...   {  	string[] Files = Directory.GetFiles (Dir);  	string[] SubDirs = Directory.GetDirectories (Dir);  	foreach (string Fle in Files) {  		if (Fle.Contains (".dat")) {  			FAR3Archive Archive = new FAR3Archive (Fle);  			Archive.ReadArchive (true);  			foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  				Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  		} else {  			FAR3Entry Entry = new FAR3Entry ();  			Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  			Entry.FileID = HelperFuncs.GetFileID (Entry);  			Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  			HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  			//Ignore fonts to minimize the risk of ID collisions.  			if (!Entry.Filename.Contains (".ttf")) {  				if (!Entry.Filename.Contains (".ffn"))  					Entries.Add (Entry' Entry.Filename);  			}  		}  	}  	foreach (string SubDir in SubDirs) {  		Files = Directory.GetFiles (SubDir);  		foreach (string SubFle in Files) {  			if (SubFle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (SubFle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (Filetype != "") {  	if (Dir.Contains (Filetype)) {  		string[] Files = Directory.GetFiles (Dir);  		string[] SubDirs = Directory.GetDirectories (Dir);  		foreach (string Fle in Files) {  			if (Fle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (Fle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  				HelperFuncs.CheckCollision (Entry.FileID' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  		foreach (string SubDir in SubDirs) {  			Files = Directory.GetFiles (SubDir);  			foreach (string SubFle in Files) {  				if (SubFle.Contains (".dat")) {  					FAR3Archive Archive = new FAR3Archive (SubFle);  					Archive.ReadArchive (false);  					foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  						Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  				} else {  					FAR3Entry Entry = new FAR3Entry ();  					Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  					Entry.FileID = HelperFuncs.GetFileID (Entry);  					Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  					HelperFuncs.CheckCollision (Entry.FileID' Entries);  					//Ignore fonts to minimize the risk of ID collisions.  					if (!Entry.Filename.Contains (".ttf")) {  						if (!Entry.Filename.Contains (".ffn"))  							Entries.Add (Entry' Entry.Filename);  					}  				}  			}  		}  	}  } else//Filetype was empty' so just add all filetypes found...   {  	string[] Files = Directory.GetFiles (Dir);  	string[] SubDirs = Directory.GetDirectories (Dir);  	foreach (string Fle in Files) {  		if (Fle.Contains (".dat")) {  			FAR3Archive Archive = new FAR3Archive (Fle);  			Archive.ReadArchive (true);  			foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  				Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  		} else {  			FAR3Entry Entry = new FAR3Entry ();  			Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  			Entry.FileID = HelperFuncs.GetFileID (Entry);  			Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  			HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  			//Ignore fonts to minimize the risk of ID collisions.  			if (!Entry.Filename.Contains (".ttf")) {  				if (!Entry.Filename.Contains (".ffn"))  					Entries.Add (Entry' Entry.Filename);  			}  		}  	}  	foreach (string SubDir in SubDirs) {  		Files = Directory.GetFiles (SubDir);  		foreach (string SubFle in Files) {  			if (SubFle.Contains (".dat")) {  				FAR3Archive Archive = new FAR3Archive (SubFle);  				Archive.ReadArchive (true);  				foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  					Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  			} else {  				FAR3Entry Entry = new FAR3Entry ();  				Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  				Entry.FileID = HelperFuncs.GetFileID (Entry);  				Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  				HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  				//Ignore fonts to minimize the risk of ID collisions.  				if (!Entry.Filename.Contains (".ttf")) {  					if (!Entry.Filename.Contains (".ffn"))  						Entries.Add (Entry' Entry.Filename);  				}  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string Fle in Files) {  	if (Fle.Contains (".dat")) {  		FAR3Archive Archive = new FAR3Archive (Fle);  		Archive.ReadArchive (true);  		foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  			Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  	} else {  		FAR3Entry Entry = new FAR3Entry ();  		Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  		Entry.FileID = HelperFuncs.GetFileID (Entry);  		Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  		HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  		//Ignore fonts to minimize the risk of ID collisions.  		if (!Entry.Filename.Contains (".ttf")) {  			if (!Entry.Filename.Contains (".ffn"))  				Entries.Add (Entry' Entry.Filename);  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string Fle in Files) {  	if (Fle.Contains (".dat")) {  		FAR3Archive Archive = new FAR3Archive (Fle);  		Archive.ReadArchive (true);  		foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  			Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  	} else {  		FAR3Entry Entry = new FAR3Entry ();  		Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  		Entry.FileID = HelperFuncs.GetFileID (Entry);  		Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  		HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  		//Ignore fonts to minimize the risk of ID collisions.  		if (!Entry.Filename.Contains (".ttf")) {  			if (!Entry.Filename.Contains (".ffn"))  				Entries.Add (Entry' Entry.Filename);  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (Fle.Contains (".dat")) {  	FAR3Archive Archive = new FAR3Archive (Fle);  	Archive.ReadArchive (true);  	foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  		Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  } else {  	FAR3Entry Entry = new FAR3Entry ();  	Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  	Entry.FileID = HelperFuncs.GetFileID (Entry);  	Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  	HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  	//Ignore fonts to minimize the risk of ID collisions.  	if (!Entry.Filename.Contains (".ttf")) {  		if (!Entry.Filename.Contains (".ffn"))  			Entries.Add (Entry' Entry.Filename);  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (Fle.Contains (".dat")) {  	FAR3Archive Archive = new FAR3Archive (Fle);  	Archive.ReadArchive (true);  	foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  		Entries.Add (Entry' Fle.Replace (GlobalSettings.Default.StartupPath' ""));  } else {  	FAR3Entry Entry = new FAR3Entry ();  	Entry.Filename = Fle.Replace (GlobalSettings.Default.StartupPath' "");  	Entry.FileID = HelperFuncs.GetFileID (Entry);  	Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (Fle));  	HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  	//Ignore fonts to minimize the risk of ID collisions.  	if (!Entry.Filename.Contains (".ttf")) {  		if (!Entry.Filename.Contains (".ffn"))  			Entries.Add (Entry' Entry.Filename);  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string SubDir in SubDirs) {  	Files = Directory.GetFiles (SubDir);  	foreach (string SubFle in Files) {  		if (SubFle.Contains (".dat")) {  			FAR3Archive Archive = new FAR3Archive (SubFle);  			Archive.ReadArchive (true);  			foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  				Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  		} else {  			FAR3Entry Entry = new FAR3Entry ();  			Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  			Entry.FileID = HelperFuncs.GetFileID (Entry);  			Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  			HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  			//Ignore fonts to minimize the risk of ID collisions.  			if (!Entry.Filename.Contains (".ttf")) {  				if (!Entry.Filename.Contains (".ffn"))  					Entries.Add (Entry' Entry.Filename);  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string SubDir in SubDirs) {  	Files = Directory.GetFiles (SubDir);  	foreach (string SubFle in Files) {  		if (SubFle.Contains (".dat")) {  			FAR3Archive Archive = new FAR3Archive (SubFle);  			Archive.ReadArchive (true);  			foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  				Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  		} else {  			FAR3Entry Entry = new FAR3Entry ();  			Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  			Entry.FileID = HelperFuncs.GetFileID (Entry);  			Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  			HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  			//Ignore fonts to minimize the risk of ID collisions.  			if (!Entry.Filename.Contains (".ttf")) {  				if (!Entry.Filename.Contains (".ffn"))  					Entries.Add (Entry' Entry.Filename);  			}  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string SubFle in Files) {  	if (SubFle.Contains (".dat")) {  		FAR3Archive Archive = new FAR3Archive (SubFle);  		Archive.ReadArchive (true);  		foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  			Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  	} else {  		FAR3Entry Entry = new FAR3Entry ();  		Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  		Entry.FileID = HelperFuncs.GetFileID (Entry);  		Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  		HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  		//Ignore fonts to minimize the risk of ID collisions.  		if (!Entry.Filename.Contains (".ttf")) {  			if (!Entry.Filename.Contains (".ffn"))  				Entries.Add (Entry' Entry.Filename);  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: foreach (string SubFle in Files) {  	if (SubFle.Contains (".dat")) {  		FAR3Archive Archive = new FAR3Archive (SubFle);  		Archive.ReadArchive (true);  		foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  			Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  	} else {  		FAR3Entry Entry = new FAR3Entry ();  		Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  		Entry.FileID = HelperFuncs.GetFileID (Entry);  		Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  		HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  		//Ignore fonts to minimize the risk of ID collisions.  		if (!Entry.Filename.Contains (".ttf")) {  			if (!Entry.Filename.Contains (".ffn"))  				Entries.Add (Entry' Entry.Filename);  		}  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (SubFle.Contains (".dat")) {  	FAR3Archive Archive = new FAR3Archive (SubFle);  	Archive.ReadArchive (true);  	foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  		Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  } else {  	FAR3Entry Entry = new FAR3Entry ();  	Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  	Entry.FileID = HelperFuncs.GetFileID (Entry);  	Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  	HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  	//Ignore fonts to minimize the risk of ID collisions.  	if (!Entry.Filename.Contains (".ttf")) {  		if (!Entry.Filename.Contains (".ffn"))  			Entries.Add (Entry' Entry.Filename);  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: if (SubFle.Contains (".dat")) {  	FAR3Archive Archive = new FAR3Archive (SubFle);  	Archive.ReadArchive (true);  	foreach (FAR3Entry Entry in Archive.GrabAllEntries ())  		Entries.Add (Entry' SubFle.Replace (GlobalSettings.Default.StartupPath' ""));  } else {  	FAR3Entry Entry = new FAR3Entry ();  	Entry.Filename = SubFle.Replace (GlobalSettings.Default.StartupPath' "");  	Entry.FileID = HelperFuncs.GetFileID (Entry);  	Entry.TypeID = HelperFuncs.GetTypeID (Path.GetExtension (SubFle));  	HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  	//Ignore fonts to minimize the risk of ID collisions.  	if (!Entry.Filename.Contains (".ttf")) {  		if (!Entry.Filename.Contains (".ffn"))  			Entries.Add (Entry' Entry.Filename);  	}  }  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  
Magic Number,Mr.Shipper,Program,F:\newReposMay17\Afr0_Project-Dollhouse\Other\tools\Mr. Shipper\Mr. Shipper\Program.cs,AddFilesFromDir,The following statement contains a magic number: HelperFuncs.CheckCollision ((ulong)(((ulong)Entry.FileID) << 32 | ((ulong)(Entry.TypeID >> 32)))' Entries);  
