Implementation smell,Namespace,Class,File,Method,Description
Long Method,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The method has 189 lines of code.
Long Method,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The method has 113 lines of code.
Long Method,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Update,The method has 120 lines of code.
Complex Method,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,Cyclomatic complexity of the method is 30
Complex Method,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,Cyclomatic complexity of the method is 8
Complex Method,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,Gonzo.Elements,UIControl,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIControl.cs,UIControl,Cyclomatic complexity of the method is 13
Complex Method,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,Cyclomatic complexity of the method is 14
Complex Method,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,Cyclomatic complexity of the method is 31
Complex Method,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Window_TextInput,Cyclomatic complexity of the method is 13
Complex Method,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Update,Cyclomatic complexity of the method is 33
Complex Method,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,Cyclomatic complexity of the method is 10
Long Parameter List,Gonzo,UIScreen,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\UIScreen.cs,UIScreen,The method has 6 parameters. Parameters: Manager' Name' SBatch' ScreenPosition' ScreenSize' UIScriptPath
Long Parameter List,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The method has 8 parameters. Parameters: Name' Pos' Screen' Tex' Caption' Font' ScaleToText' Parent
Long Parameter List,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,UIElement,The method has 5 parameters. Parameters: Name' Position' Size' Screen' Parent
Long Parameter List,Gonzo.Elements,UIImage,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIImage.cs,DrawTextureTo,The method has 5 parameters. Parameters: SBatch' Scale' From' To' LayerDepth
Long Parameter List,Gonzo.Elements,NineSlicer,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIImage.cs,NineSlicer,The method has 7 parameters. Parameters: Position' TextureWidth' TextureHeight' LeftPadding' RightPadding' TopPadding' BottomPadding
Long Parameter List,Gonzo.Elements,NineSlicer,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIImage.cs,Calculate,The method has 6 parameters. Parameters: X' Y' LeftPadding' RightPadding' TopPadding' BottomPadding
Long Parameter List,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The method has 8 parameters. Parameters: StrCaption' ID' TextPosition' Size' Clr' Font' Screen' Alignment
Long Parameter List,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The method has 10 parameters. Parameters: Name' ID' DrawBackground' Multiline' TextEditPosition' Size' Font' Screen' Tooltip' Parent
Long Parameter List,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,DrawBorder,The method has 5 parameters. Parameters: SBatch' TexData' rectangleToDraw' thicknessOfBorder' borderColor
Long Statement,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,DrawBorder,The length of the statement  "            SBatch.Draw(pixel' new Rectangle(rectangleToDraw.X' rectangleToDraw.Y' rectangleToDraw.Width' thicknessOfBorder)' borderColor); " is 127.
Long Statement,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,DrawBorder,The length of the statement  "            SBatch.Draw(pixel' new Rectangle(rectangleToDraw.X' rectangleToDraw.Y' thicknessOfBorder' rectangleToDraw.Height)' borderColor); " is 128.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' Image.Slicer.TCenter_Scale' Image.Slicer.TCenter' Image.Position + new Vector2(Image.Slicer.LeftPadding' 0)' Depth); " is 144.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' null' Image.Slicer.TRight' Image.Position + new Vector2(Image.Slicer.Width - Image.Slicer.RightPadding' 0)' Depth); " is 143.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' Image.Slicer.CLeft_Scale' Image.Slicer.CLeft' Image.Position + new Vector2(0' Image.Slicer.TopPadding)' null); " is 138.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' Image.Slicer.CCenter_Scale' Image.Slicer.CCenter' Image.Position + new Vector2(Image.Slicer.LeftPadding' Image.Slicer.TopPadding)' Depth); " is 166.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' Image.Slicer.CRight_Scale' Image.Slicer.CRight' Image.Position + new Vector2(Image.Slicer.Width - Image.Slicer.RightPadding' Image.Slicer.TopPadding)' Depth); " is 186.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' Image.Slicer.BCenter_Scale' Image.Slicer.BCenter' Image.Position + new Vector2(Image.Slicer.LeftPadding' BottomY)' Depth); " is 150.
Long Statement,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The length of the statement  "                Image.DrawTextureTo(SBatch' null' Image.Slicer.BRight' Image.Position + new Vector2(Image.Slicer.Width - Image.Slicer.RightPadding' BottomY)' Depth); " is 149.
Complex Conditional,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,PixelCheck,The conditional expression  "pixelPosition.X >= 0 && pixelPosition.X < Width &&                  pixelPosition.Y >= 0 && pixelPosition.Y < Image.Texture.Height"  is complex.
Magic Number,Gonzo,Resolution,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Resolution.cs,ResetViewport,The following statement contains a magic number: int height = (int)(width / targetAspectRatio + .5f);
Magic Number,Gonzo,Resolution,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Resolution.cs,ResetViewport,The following statement contains a magic number: width = (int)(height * targetAspectRatio + .5f);
Magic Number,Gonzo,Resolution,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Resolution.cs,ResetViewport,The following statement contains a magic number: viewport.X = (_Device.PreferredBackBufferWidth / 2) - (width / 2);
Magic Number,Gonzo,Resolution,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Resolution.cs,ResetViewport,The following statement contains a magic number: viewport.X = (_Device.PreferredBackBufferWidth / 2) - (width / 2);
Magic Number,Gonzo,Resolution,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Resolution.cs,ResetViewport,The following statement contains a magic number: viewport.Y = (_Device.PreferredBackBufferHeight / 2) - (height / 2);
Magic Number,Gonzo,Resolution,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Resolution.cs,ResetViewport,The following statement contains a magic number: viewport.Y = (_Device.PreferredBackBufferHeight / 2) - (height / 2);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: m_SourcePosition = new Vector2((Image.Texture.Width / (4)) * 2' 0.0f);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: m_SourcePosition = new Vector2((Image.Texture.Width / (4)) * 2' 0.0f);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: m_Size.X = (Image.Texture.Width) / (4);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (FontSize)                  {                      case 9:                          m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;                  }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (FontSize)                  {                      case 9:                          m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;                  }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (FontSize)                  {                      case 9:                          m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;                  }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (FontSize)                  {                      case 9:                          m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;                  }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (FontSize)                  {                      case 9:                          m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;                  }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColor.A = 255;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColor.B = (byte)Node.TextColor.Numbers[2];
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColorSelected.A = 255;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColorSelected.B = (byte)Node.TextColorSelected.Numbers[2];
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColorHighlighted.A = 255;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColorHighlighted.B = (byte)Node.TextColorHighlighted.Numbers[2];
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColorDisabled.A = 255;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: TextColorDisabled.B = (byte)Node.TextColorDisabled.Numbers[2];
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: m_SourcePosition = new Vector2((Image.Texture.Width / 4) * 2' 0.0f);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: m_SourcePosition = new Vector2((Image.Texture.Width / 4) * 2' 0.0f);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;                  default:                      m_Font = Screen.Font12px;                      break;              }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;                  default:                      m_Font = Screen.Font12px;                      break;              }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;                  default:                      m_Font = Screen.Font12px;                      break;              }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;                  default:                      m_Font = Screen.Font12px;                      break;              }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;                  default:                      m_Font = Screen.Font12px;                      break;              }
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following statement contains a magic number: m_Size.X = Image.Texture.Width / 4;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,ScaleToText,The following statement contains a magic number: m_XScale += 0.5f;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,ScaleToText,The following statement contains a magic number: float HalfX = m_Size.X / 2;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,ScaleToText,The following statement contains a magic number: float HalfY = m_Size.Y / 2;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,ScaleToText,The following statement contains a magic number: m_TextPosition.X += (HalfX * m_XScale) - (m_Font.MeasureString(m_Text).X / 2);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,ScaleToText,The following statement contains a magic number: m_TextPosition.Y += HalfY - (m_Font.MeasureString(m_Text).Y / 2);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,AddImage,The following statement contains a magic number: m_Size.X = Image.Texture.Width / 4;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,AddImage,The following statement contains a magic number: m_SourcePosition = new Vector2((Image.Texture.Width / 4) * 2' 0.0f);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,AddImage,The following statement contains a magic number: m_SourcePosition = new Vector2((Image.Texture.Width / 4) * 2' 0.0f);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,Update,The following statement contains a magic number: float HalfX = m_Size.X / 2;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,Update,The following statement contains a magic number: float HalfY = m_Size.Y / 2;
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,Update,The following statement contains a magic number: m_TextPosition.X += (HalfX * m_XScale) - (m_Font.MeasureString(m_Text).X / 2);
Magic Number,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,Update,The following statement contains a magic number: m_TextPosition.Y += HalfY - (m_Font.MeasureString(m_Text).Y / 2);
Magic Number,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,GetLayerDepth,The following statement contains a magic number: switch(Depth)              {                  case LayerDepth.Default:                      return 0.0f;                  case LayerDepth.ImageLayer:                      return 0.8f;                  case LayerDepth.ButtonLayer:                      return 0.9f;                  case LayerDepth.DialogLayer:                      return 0.10f;                  case LayerDepth.TextLayer:                      return 0.11f;                  default:                      return 0.0f;              }
Magic Number,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,GetLayerDepth,The following statement contains a magic number: switch(Depth)              {                  case LayerDepth.Default:                      return 0.0f;                  case LayerDepth.ImageLayer:                      return 0.8f;                  case LayerDepth.ButtonLayer:                      return 0.9f;                  case LayerDepth.DialogLayer:                      return 0.10f;                  case LayerDepth.TextLayer:                      return 0.11f;                  default:                      return 0.0f;              }
Magic Number,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,GetLayerDepth,The following statement contains a magic number: switch(Depth)              {                  case LayerDepth.Default:                      return 0.0f;                  case LayerDepth.ImageLayer:                      return 0.8f;                  case LayerDepth.ButtonLayer:                      return 0.9f;                  case LayerDepth.DialogLayer:                      return 0.10f;                  case LayerDepth.TextLayer:                      return 0.11f;                  default:                      return 0.0f;              }
Magic Number,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,GetLayerDepth,The following statement contains a magic number: switch(Depth)              {                  case LayerDepth.Default:                      return 0.0f;                  case LayerDepth.ImageLayer:                      return 0.8f;                  case LayerDepth.ButtonLayer:                      return 0.9f;                  case LayerDepth.DialogLayer:                      return 0.10f;                  case LayerDepth.TextLayer:                      return 0.11f;                  default:                      return 0.0f;              }
Magic Number,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,PixelCheck,The following statement contains a magic number: ((PixelData[0] & 0xFF000000) >> 24) > 20
Magic Number,Gonzo.Elements,UIElement,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIElement.cs,PixelCheck,The following statement contains a magic number: ((PixelData[0] & 0xFF000000) >> 24) > 20
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: m_TextColor.A = 255;
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: m_TextColor.B = (byte)Node.Color.Numbers[2];
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: m_TextColor.A = 255;
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following statement contains a magic number: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following statement contains a magic number: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_CursorVisibilityTimer = new Timer(100);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_FrameTimer = new Timer(500);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: Image.Slicer = new NineSlicer(new Vector2(0' 0)' (int)Image.Texture.Width' (int)Image.Texture.Width' 15' 15' 15' 15);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: Image.Slicer = new NineSlicer(new Vector2(0' 0)' (int)Image.Texture.Width' (int)Image.Texture.Width' 15' 15' 15' 15);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: Image.Slicer = new NineSlicer(new Vector2(0' 0)' (int)Image.Texture.Width' (int)Image.Texture.Width' 15' 15' 15' 15);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: Image.Slicer = new NineSlicer(new Vector2(0' 0)' (int)Image.Texture.Width' (int)Image.Texture.Width' 15' 15' 15' 15);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: TextColor = new Color(Node.Color.Numbers[0]' Node.Color.Numbers[1]' Node.Color.Numbers[2]);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_BackColor = new Color(Node.Color.Numbers[0]' Node.Color.Numbers[1]' Node.Color.Numbers[2]);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_CursorColor = new Color(Node.CursorColor.Numbers[0]' Node.CursorColor.Numbers[1]' Node.CursorColor.Numbers[2]);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_FrameColor = new Color(Node.FrameColor.Numbers[0]' Node.FrameColor.Numbers[1]' Node.FrameColor.Numbers[2]);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_CursorVisibilityTimer = new Timer(100);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following statement contains a magic number: m_FrameTimer = new Timer(190);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Update,The following statement contains a magic number: repeatSince.CompareTo(TimeSpan.FromMilliseconds(1000f / m_RepsPerSec)) > 0
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: SBatch.GraphicsDevice.ScissorRectangle = new Rectangle((int)(this.Position.X)' (int)(this.Position.Y)'                  (int)((Size.X) - 5)' (int)(Size.Y));
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: DrawBorder(SBatch' m_FrameTex' new Rectangle((int)(this.Position.X)' (int)(this.Position.Y)'                  (int)(Size.X - 5)' (int)(Size.Y))' 3' Color.Red);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: DrawBorder(SBatch' m_FrameTex' new Rectangle((int)(this.Position.X)' (int)(this.Position.Y)'                  (int)(Size.X - 5)' (int)(Size.Y))' 3' Color.Red);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: DrawBorder(SBatch' m_FrameTex' new Rectangle((int)(Position.X)'                           (int)(Position.Y)'                          (int)(Size.X - 5)' (int)(Size.Y))' 3' m_FrameColor);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: DrawBorder(SBatch' m_FrameTex' new Rectangle((int)(Position.X)'                           (int)(Position.Y)'                          (int)(Size.X - 5)' (int)(Size.Y))' 3' m_FrameColor);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: DrawBorder(SBatch' m_FrameTex' new Rectangle((int)(Position.X)'                          (int)(Position.Y)'                          (int)(Size.X - 5)'                          (int)(Size.Y))' 3' m_FrameColor);
Magic Number,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Draw,The following statement contains a magic number: DrawBorder(SBatch' m_FrameTex' new Rectangle((int)(Position.X)'                          (int)(Position.Y)'                          (int)(Size.X - 5)'                          (int)(Size.Y))' 3' m_FrameColor);
Missing Default,Gonzo.Elements,UIButton,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UIButton.cs,UIButton,The following switch statement is missing a default case: switch (FontSize)                  {                      case 9:                          m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;                  }
Missing Default,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following switch statement is missing a default case: switch (Font)              {                      case 7:                          m_Font = Screen.Font9px; //TODO: Fixme.                          break;                      case 9:                      m_Font = Screen.Font9px;                          break;                      case 10:                          m_Font = Screen.Font10px;                          break;                      case 11:                          m_Font = Screen.Font11px;                          break;                      case 12:                          m_Font = Screen.Font12px;                          break;                      case 14:                          m_Font = Screen.Font14px;                          break;                      case 16:                          m_Font = Screen.Font16px;                          break;              }
Missing Default,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,UILabel,The following switch statement is missing a default case: switch (Font)              {                  case 7:                      m_Font = Screen.Font9px; //TODO: Fixme.                      break;                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 11:                      m_Font = Screen.Font11px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Missing Default,Gonzo.Elements,UILabel,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UILabel.cs,AlignText,The following switch statement is missing a default case: switch (m_Alignment)              {                  case TextAlignment.Left_Top:                      //Is there a need to modify position at all here??                      break;                  case TextAlignment.Left_Center:                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Top:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Center_Center:                      LocalCopy.X += (m_Size.X / 2) - (Measurement.X / 2);                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Top:                      LocalCopy.X += m_Size.X - Measurement.X;                      Position = LocalCopy;                      break;                  case TextAlignment.Right_Center:                      LocalCopy.X += m_Size.X - Measurement.X;                      LocalCopy.Y += (m_Size.Y / 2) - (Measurement.Y / 2);                      Position = LocalCopy;                      break;              }
Missing Default,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following switch statement is missing a default case: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Missing Default,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,UITextEdit,The following switch statement is missing a default case: switch (Font)              {                  case 9:                      m_Font = Screen.Font9px;                      break;                  case 10:                      m_Font = Screen.Font10px;                      break;                  case 12:                      m_Font = Screen.Font12px;                      break;                  case 14:                      m_Font = Screen.Font14px;                      break;                  case 16:                      m_Font = Screen.Font16px;                      break;              }
Missing Default,Gonzo.Elements,UITextEdit,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Gonzo\Gonzo\Elements\UITextEdit.cs,Update,The following switch statement is missing a default case: switch (K)                          {                              case Keys.Up:                                  if (m_RepChar != Keys.Up || m_LastRep != DateTime.Now)                                  {                                      if (m_MultiLine)                                          MoveCursorUp();                                  }                                  break;                              case Keys.Down:                                  if (m_RepChar != Keys.Down || m_LastRep != DateTime.Now)                                  {                                      if (m_MultiLine)                                          MoveCursorDown();                                  }                                  break;                              case Keys.Left:                                  MoveCursorLeft();                                  break;                              case Keys.Right:                                  MoveCursorRight();                                  break;                              case Keys.Back:                                  if (m_RepChar != Keys.Back || m_LastRep != DateTime.Now)                                      RemoveText();                                  break;                              case Keys.LeftShift:                                  m_CapitalLetters = true;                                  break;                              case Keys.RightShift:                                  m_CapitalLetters = true;                                  break;                              case Keys.Enter:                                  AddNewline();                                  break;                          }
