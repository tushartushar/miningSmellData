Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CryptoSample,Cryptography,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Cryptography.cs,EncryptData,The following statement contains a magic number: using (var Algorithm = new ECDiffieHellmanCng(PrivateKey))              {                  using (CngKey PubKey = CngKey.Import(PubKeyBlob'                        CngKeyBlobFormat.EccPublicBlob))                  {                      byte[] SymmetricKey = Algorithm.DeriveKeyMaterial(PubKey);                      Console.WriteLine("EncryptedStream: Created symmetric key with " +                          "public key information: {0}"' Convert.ToBase64String(SymmetricKey));                        AesCryptoServiceProvider AES = new AesCryptoServiceProvider();                      AES.Key = SymmetricKey;                      AES.IV = InitializationVector;                      int NBytes = AES.BlockSize >> 3; //No idea...                        using (MemoryStream EncryptedStream = new MemoryStream())                      {                          using (ICryptoTransform Encryptor = AES.CreateEncryptor())                          {                              var cs = new CryptoStream(EncryptedStream' Encryptor' CryptoStreamMode.Write);                              cs.Write(DataToEncrypt' NBytes' DataToEncrypt.Length - NBytes);                              cs.FlushFinalBlock();                                return EncryptedStream.ToArray();                          }                      }                  }              }
Magic Number,CryptoSample,Cryptography,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Cryptography.cs,DecryptData,The following statement contains a magic number: using (var Algorithm = new ECDiffieHellmanCng(PrivateKey))              {                  using (CngKey PubKey = CngKey.Import(PubKeyBlob'                        CngKeyBlobFormat.EccPublicBlob))                  {                      byte[] SymmetricKey = Algorithm.DeriveKeyMaterial(PubKey);                      Console.WriteLine("DecryptedStream: Created symmetric key with " +                          "public key information: {0}"' Convert.ToBase64String(SymmetricKey));                        AesCryptoServiceProvider AES = new AesCryptoServiceProvider();                      AES.Key = SymmetricKey;                      AES.IV = InitializationVector;                      int NBytes = AES.BlockSize >> 3; //No idea...                        using (ICryptoTransform Decryptor = AES.CreateDecryptor())                      {                          using (MemoryStream DecryptedStream = new MemoryStream())                          {                              var cs = new CryptoStream(DecryptedStream' Decryptor' CryptoStreamMode.Write);                              cs.Write(DataToDecrypt' NBytes' DataToDecrypt.Length - NBytes);                              cs.FlushFinalBlock();                                return DecryptedStream.ToArray();                          }                      }                  }              }
Magic Number,CryptoSample,PacketHandlers,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\PacketHandlers.cs,InitialClientConnect,The following statement contains a magic number: ChallengeResponse = new byte[16];
Magic Number,CryptoSample,Program,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Program.cs,RunAsClient,The following statement contains a magic number: NetworkFacade.Client = new NetworkClient("127.0.0.1"' 12345);
Magic Number,CryptoSample,Program,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Program.cs,RunAsClient,The following statement contains a magic number: while (true)              {                  Thread.Sleep(1000);              }
Magic Number,CryptoSample,Program,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Program.cs,RunAsServer,The following statement contains a magic number: NetworkFacade.Listener.Initialize(new IPEndPoint(IPAddress.Parse("127.0.0.1")' 12345));
Magic Number,CryptoSample,Program,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Program.cs,RunAsServer,The following statement contains a magic number: while (true)              {                  Thread.Sleep(1000);              }
Missing Default,CryptoSample,Program,C:\repos\Afr0_Project-Dollhouse\Other\libs\GonzoNet\tests\CryptoSample\CryptoSample\Program.cs,Main,The following switch statement is missing a default case: switch (Answer)              {                  case "Y":                      RunAsServer();                      break;                  case "y":                      RunAsServer();                      break;                  case "N":                      RunAsClient();                      break;                  case "n":                      RunAsClient();                      break;              }
