Implementation smell,Namespace,Class,File,Method,Description
Long Method,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The method has 319 lines of code.
Complex Method,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,ChangeOutfit,Cyclomatic complexity of the method is 14
Complex Method,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,Cyclomatic complexity of the method is 37
Complex Method,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,TransformVertices,Cyclomatic complexity of the method is 10
Long Statement,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,TransformVertices,The length of the statement  "                            Matrix translatedMatrix = Matrix.CreateTranslation(new Vector3(relativeVertex.Position.X' relativeVertex.Position.Y' relativeVertex.Position.Z)) * bone.AbsoluteMatrix; " is 167.
Long Statement,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,TransformVertices,The length of the statement  "                            translatedMatrix = Matrix.CreateTranslation(new Vector3(relativeVertex.Normal.X' relativeVertex.Normal.Y' relativeVertex.Normal.Z)) * bone.AbsoluteMatrix; " is 154.
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,DegreesToRadians,The following statement contains a magic number: return (Math.PI / 180) * Angle;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Update,The following statement contains a magic number: double Multiplier = Math.Sin((Math.PI * 2) * Phase);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Position = HeadMesh.TransformedVertices[(int)Fce.Z].Position;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].TextureCoordinate = HeadMesh.TransformedVertices[(int)Fce.Z].TextureCoordinate;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Normal = HeadMesh.TransformedVertices[(int)Fce.Z].Normal;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Position = AccessoryMesh.TransformedVertices[(int)Fce.Z].Position;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].TextureCoordinate = AccessoryMesh.TransformedVertices[(int)Fce.Z].TextureCoordinate;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Normal = AccessoryMesh.TransformedVertices[(int)Fce.Z].Normal;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Position = BodyMesh.TransformedVertices[(int)Fce.Z].Position;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].TextureCoordinate = BodyMesh.TransformedVertices[(int)Fce.Z].TextureCoordinate;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Normal = BodyMesh.TransformedVertices[(int)Fce.Z].Normal;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Position = LeftHandMesh.TransformedVertices[(int)Fce.Z].Position;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: VertexPositionNormalTexture[] Vertex = new VertexPositionNormalTexture[3];
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,Render,The following statement contains a magic number: Vertex[2].Position = RightHandMesh.TransformedVertices[(int)Fce.Z].Position;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: float Duration = (float)Animation.Motions[0].FrameCount / 30;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: int Frame = (int)(m_AnimationTime * 30);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: float FractionShown = m_AnimationTime * 30 - Frame;
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: Vector3 Translation = new Vector3(                          Animation.Translations[Frame + Animation.Motions[i].FirstTranslationIndex' 0]'                          Animation.Translations[Frame + Animation.Motions[i].FirstTranslationIndex' 1]'                          Animation.Translations[Frame + Animation.Motions[i].FirstTranslationIndex' 2]);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: Vector3 NextTranslation = new Vector3(                          Animation.Translations[NextFrame + Animation.Motions[i].FirstTranslationIndex' 0]'                          Animation.Translations[NextFrame + Animation.Motions[i].FirstTranslationIndex' 1]'                          Animation.Translations[NextFrame + Animation.Motions[i].FirstTranslationIndex' 2]);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: Quaternion Rotation = new Quaternion(                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 0]'                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 1]'                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 2]'                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 3]);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: Quaternion Rotation = new Quaternion(                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 0]'                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 1]'                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 2]'                          Animation.Rotations[Frame + Animation.Motions[i].FirstRotationIndex' 3]);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: Quaternion NextRotation = new Quaternion(                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 0]'                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 1]'                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 2]'                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 3]);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: Quaternion NextRotation = new Quaternion(                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 0]'                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 1]'                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 2]'                          Animation.Rotations[NextFrame + Animation.Motions[i].FirstRotationIndex' 3]);
Magic Number,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,AdvanceFrame,The following statement contains a magic number: SinTheta > 0.001f
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M11 = 1.0f - 2.0f * (y2 + z2);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M12 = 2.0f * (xy - wz);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M13 = 2.0f * (xz + wy);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M21 = 2.0f * (xy + wz);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M22 = 1.0f - 2.0f * (x2 + z2);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M23 = 2.0f * (yz - wx);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M31 = 2.0f * (xz - wy);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M32 = 2.0f * (yz + wx);
Magic Number,Vitaboy,Helpers,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\Helpers.cs,FindQuaternionMatrix,The following statement contains a magic number: mtxIn.M33 = 1.0f - 2.0f * (x2 + y2);
Missing Default,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,ChangeOutfit,The following switch statement is missing a default case: switch (Bnd.Bone)                      {                          case "L_HAND":                              LeftHandMesh = FileManager.GetMesh(Bnd.MeshID.UniqueID);                              LeftHandTexture = FileManager.GetTexture(Bnd.TextureID.UniqueID);                              break;                      }
Missing Default,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,ChangeOutfit,The following switch statement is missing a default case: switch (Bnd.Bone)                      {                          case "R_HAND":                              RightHandMesh = FileManager.GetMesh(Bnd.MeshID.UniqueID);                              RightHandTexture = FileManager.GetTexture(Bnd.TextureID.UniqueID);                              break;                      }
Missing Default,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,ChangeOutfit,The following switch statement is missing a default case: switch (Bnd.Bone)                  {                      case "PELVIS":                          BodyMesh = FileManager.GetMesh(Bnd.MeshID.UniqueID);                          BodyTexture = FileManager.GetTexture(Bnd.TextureID.UniqueID);                          break;                      case "HEAD":                          if (HeadMesh == null)                          {                              HeadMesh = FileManager.GetMesh(Bnd.MeshID.UniqueID);                              HeadTexture = FileManager.GetTexture(Bnd.TextureID.UniqueID);                          }                          else                          {                              AccessoryMesh = FileManager.GetMesh(Bnd.MeshID.UniqueID);                              AccessoryTexture = FileManager.GetTexture(Bnd.TextureID.UniqueID);                          }                          break;                  }
Missing Default,Vitaboy,AvatarBase,D:\research\architectureSmells\repos\Afr0_Project-Dollhouse\TSOClient\Vitaboy\Vitaboy\AvatarBase.cs,TransformVertices,The following switch statement is missing a default case: switch (MshType)              {                  case MeshType.Head:                      for (int i = 0; i < Msh.TotalVertexCount; i++)                      {                          //Transform the head vertices' position by the absolute transform                          //for the headbone (which is always bone 17) to render the head in place.                          Msh.TransformedVertices[i].Position = Vector3.Transform(Msh.RealVertices[i].Position'                              Skel.Bones[Skel.FindBone("HEAD")].AbsoluteMatrix);                            Msh.TransformedVertices[i].TextureCoordinate = Msh.RealVertices[i].TextureCoordinate;                            //Transform the head normals' position by the absolute transform                          //for the headbone (which is always bone 17) to render the head in place.                          Msh.TransformedVertices[i].Normal = Vector3.Transform(Msh.RealVertices[i].Normal'                              Skel.Bones[Skel.FindBone("HEAD")].AbsoluteMatrix);                      }                        return;                    case MeshType.Body:                      BoneBinding boneBinding = Msh.BoneBindings.FirstOrDefault(x => Msh.Bones[(int)x.BoneIndex] == bone.Name);                        if (boneBinding != null)                      {                          for (int i = 0; i < boneBinding.RealVertexCount; i++)                          {                              int vertexIndex = (int)boneBinding.FirstRealVertexIndex + i;                              VertexPositionNormalTexture relativeVertex = Msh.RealVertices[vertexIndex];                                Matrix translatedMatrix = Matrix.CreateTranslation(new Vector3(relativeVertex.Position.X' relativeVertex.Position.Y' relativeVertex.Position.Z)) * bone.AbsoluteMatrix;                              Msh.TransformedVertices[vertexIndex].Position = Vector3.Transform(Vector3.Zero' translatedMatrix);                                Msh.TransformedVertices[vertexIndex].TextureCoordinate = relativeVertex.TextureCoordinate;                                //Normals...                              translatedMatrix = Matrix.CreateTranslation(new Vector3(relativeVertex.Normal.X' relativeVertex.Normal.Y' relativeVertex.Normal.Z)) * bone.AbsoluteMatrix;                              Msh.TransformedVertices[vertexIndex].Normal = Vector3.Transform(Vector3.Zero' translatedMatrix);                          }                      }                        foreach (var child in bone.Children)                          TransformVertices(Msh' child' MshType);                        break;                    case MeshType.LHand:                      for (int i = 0; i < Msh.TotalVertexCount; i++)                      {                          //Transform the left hand vertices' position by the absolute transform                          //for the left handbone (which is always bone 10) to render the left hand in place.                          Msh.TransformedVertices[i].Position = Vector3.Transform(Msh.RealVertices[i].Position'                              Skel.Bones[Skel.FindBone("L_HAND")].AbsoluteMatrix);                            //Transform the left hand normals' position by the absolute transform                          //for the left handbone (which is always bone 10) to render the left hand in place.                          Msh.TransformedVertices[i].Normal = Vector3.Transform(Msh.RealVertices[i].Normal'                              Skel.Bones[Skel.FindBone("L_HAND")].AbsoluteMatrix);                      }                        return;                    case MeshType.RHand:                      for (int i = 0; i < Msh.TotalVertexCount; i++)                      {                          //Transform the right hand vertices' position by the absolute transform                          //for the right handbone (which is always bone 15) to render the right hand in place.                          Msh.TransformedVertices[i].Position = Vector3.Transform(Msh.RealVertices[i].Position'                              Skel.Bones[Skel.FindBone("R_HAND")].AbsoluteMatrix);                            //Transform the right hand normals' position by the absolute transform                          //for the right handbone (which is always bone 15) to render the right hand in place.                          Msh.TransformedVertices[i].Normal = Vector3.Transform(Msh.RealVertices[i].Normal'                              Skel.Bones[Skel.FindBone("R_HAND")].AbsoluteMatrix);                      }                        return;              }
