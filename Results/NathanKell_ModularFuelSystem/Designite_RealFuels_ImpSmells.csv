Implementation smell,Namespace,Class,File,Method,Description
Long Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetConfigInfo,The method has 100 lines of code.
Long Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The method has 261 lines of code.
Long Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,DoConfig,The method has 166 lines of code.
Long Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,engineManagerGUI,The method has 179 lines of code.
Long Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnLoad,The method has 122 lines of code.
Long Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The method has 185 lines of code.
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnLoad,Cyclomatic complexity of the method is 13
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,TLTInfo,Cyclomatic complexity of the method is 12
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetConfigInfo,Cyclomatic complexity of the method is 25
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,Cyclomatic complexity of the method is 57
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,DoConfig,Cyclomatic complexity of the method is 37
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,Cyclomatic complexity of the method is 10
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,engineManagerGUI,Cyclomatic complexity of the method is 28
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetSpecifiedModule,Cyclomatic complexity of the method is 12
Complex Method,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetSpecifiedModules,Cyclomatic complexity of the method is 12
Complex Method,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,CreateEngine,Cyclomatic complexity of the method is 9
Complex Method,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,OnLoad,Cyclomatic complexity of the method is 20
Complex Method,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateThrottle,Cyclomatic complexity of the method is 9
Complex Method,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateSolver,Cyclomatic complexity of the method is 10
Complex Method,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,Cyclomatic complexity of the method is 8
Complex Method,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,IgnitionUpdate,Cyclomatic complexity of the method is 12
Complex Method,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,CalculatePerformance,Cyclomatic complexity of the method is 12
Complex Method,RealFuels,EntryCostManager,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\EntryCosts\UpgradeManager.cs,FillUpgrades,Cyclomatic complexity of the method is 12
Complex Method,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,FillAttachedTanks,Cyclomatic complexity of the method is 14
Complex Method,RealFuels,MFSSettings,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\MFSSettings.cs,Initialize,Cyclomatic complexity of the method is 20
Complex Method,RealFuels,Utilities,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Utilities.cs,FindResources,Cyclomatic complexity of the method is 8
Complex Method,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,DeleteTank,Cyclomatic complexity of the method is 8
Complex Method,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,UpdateTank,Cyclomatic complexity of the method is 10
Complex Method,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,AddTank,Cyclomatic complexity of the method is 8
Complex Method,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,InitializeAmounts,Cyclomatic complexity of the method is 9
Complex Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnLoad,Cyclomatic complexity of the method is 19
Complex Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,UpdateTankType,Cyclomatic complexity of the method is 17
Complex Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,UpdateUsedBy,Cyclomatic complexity of the method is 11
Complex Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnStartRF,Cyclomatic complexity of the method is 8
Complex Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,Cyclomatic complexity of the method is 37
Complex Method,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,Cyclomatic complexity of the method is 12
Complex Method,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,Cyclomatic complexity of the method is 10
Complex Method,RealFuels.TechLevels,TechLevel,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\TechLevels\TechLevel.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,RealFuels.TechLevels,TechLevel,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\TechLevels\TechLevel.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,RealFuels.TechLevels,TechLevel,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\TechLevels\TechLevel.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,RealFuels.TechLevels,TechLevel,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\TechLevels\TechLevel.cs,MaxTL,Cyclomatic complexity of the method is 8
Complex Method,RealFuels.TechLevels,TechLevel,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\TechLevels\TechLevel.cs,MinTL,Cyclomatic complexity of the method is 8
Complex Method,RealFuels.Ullage,UllageModule,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageModule.cs,FixedUpdate,Cyclomatic complexity of the method is 8
Long Parameter List,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetSpecifiedModule,The method has 5 parameters. Parameters: p' eID' mIdx' eType' weakType
Long Parameter List,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetSpecifiedModules,The method has 5 parameters. Parameters: p' eID' mIdx' eType' weakType
Long Parameter List,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateSolver,The method has 7 parameters. Parameters: ambientTherm' altitude' vel' mach' sIgnited' oxygen' underwater
Long Parameter List,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The method has 17 parameters. Parameters: nMinFlow' nMaxFlow' nAtmosphereCurve' nAtmCurve' nVelCurve' nAtmCurveIsp' nVelCurveIsp' nDisableUnderwater' nThrottleResponseRate' nChamberNominalTemp' nMachLimit' nMachMult' nFlowMultMin' nFlowMultCap' nFlowMultSharp' nVaryThrust' nSeed
Long Parameter List,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,AnalyticInfo,The method has 9 parameters. Parameters: fi' sunAndBodyIn' backgroundRadiation' radArea' absEmissRatio' internalFlux' convCoeff' ambientTemp' maxPartTemp
Long Parameter List,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,AnalyticInfo,The method has 9 parameters. Parameters: fi' sunAndBodyIn' backgroundRadiation' radArea' absEmissRatio' internalFlux' convCoeff' ambientTemp' maxPartTemp
Long Parameter List,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The method has 5 parameters. Parameters: localAcceleration' rotation' deltaTime' ventingAcc' fuelRatio
Long Identifier,RealFuels,RFSettings,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\RFSettings.cs,,The length of the parameter techLevelScienceEntryCostFraction is 33.
Long Identifier,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,,The length of the parameter throttlePressureFedStartupMult is 30.
Long Statement,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,Start,The length of the statement  "            Debug.Log(String.Format("[CompatibilityChecker] Running checker version {0} from '{1}'"' _version' Assembly.GetExecutingAssembly().GetName().Name)); " is 148.
Long Statement,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,Start,The length of the statement  "                            Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 161.
Long Statement,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,Start,The length of the statement  "                            Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsUnityCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 166.
Long Statement,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,Start,The length of the statement  "                message += ((message == String.Empty) ? "Some" : "\n\nAdditionally' some") + " installed mods may be incompatible with this version of Kerbal Space Program. Features may be broken or disabled. Please check for updates to the listed mods."; " is 239.
Long Statement,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,Start,The length of the statement  "                    message += String.Format("\n\nThese mods are incompatible with KSP {0}.{1}.{2}:\n\n"' Versioning.version_major' Versioning.version_minor' Versioning.Revision); " is 159.
Long Statement,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,Start,The length of the statement  "                PopupDialog.SpawnPopupDialog(new Vector2(0' 0)' new Vector2(0' 0)' "CompatibilityChecker"' "Incompatible Mods Detected"' message' "OK"' true' HighLogic.UISkin); " is 160.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UpdateTFInterops,The length of the statement  "                    tfInterface.InvokeMember("AddInteropValue"' tfBindingFlags' null' null' new System.Object[] { this.part' isMaster ? "engineConfig" : "vernierConfig"' configuration' "RealFuels" }); " is 180.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,TLTInfo,The length of the statement  "                    retStr += "' Mass: " + part.mass.ToString("N3") + " (was " + (origMass * RFSettings.Instance.EngineMassMultiplier).ToString("N3") + ")"; " is 136.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetConfigInfo,The length of the statement  "                    info += "' min " + (float.Parse(config.GetValue("minThrust")) / float.Parse(config.GetValue(thrustRating)) * 100f).ToString("N0") + "%"; " is 136.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetConfigInfo,The length of the statement  "                info += "    (" + (scale * cst).ToString("N0") + " extra cost)\n"; // FIXME should get cost from TL' but this should be safe " is 124.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The length of the statement  "                    Debug.LogError("*RFMEC* Could not find appropriate module of type " + type + "' with ID=" + engineID + " and index " + moduleIndex); " is 132.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The length of the statement  "                        Dictionary<Propellant' ProtoStageIconInfo> boxes = (Dictionary<Propellant' ProtoStageIconInfo>)(field.GetValue(pModule)); " is 121.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The length of the statement  "                            if (!HighLogic.LoadedSceneIsEditor && !(HighLogic.LoadedSceneIsFlight && vessel != null && vessel.situation == Vessel.Situations.PRELAUNCH)) // fix for prelaunch " is 161.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The length of the statement  "                                int remaining = (int)(part.Modules["ModuleEngineIgnitor"].GetType().GetField("ignitionsRemained").GetValue(part.Modules["ModuleEngineIgnitor"])); " is 145.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The length of the statement  "                Debug.LogWarning("*RFMEC* WARNING could not find configuration of name " + configuration + " for part " + part.name + ": Attempting to locate fallback configuration."); " is 168.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The length of the statement  "                    Debug.LogError("*RFMEC* ERROR unable to locate any fallbacks for configuration " + configuration + "'\n Current nodes:" + Utilities.PrintConfigs(configs)); " is 155.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UnlockedConfig,The length of the statement  "            if (EntryCostManager.Instance != null && HighLogic.CurrentGame != null && HighLogic.CurrentGame.Mode != Game.Modes.SANDBOX) " is 123.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UnlockedConfig,The length of the statement  "                return EntryCostManager.Instance.ConfigUnlocked((RFSettings.Instance.usePartNameInConfigUnlock ? Utilities.GetPartName(p) : string.Empty) + config.GetValue("name")); " is 165.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,CanConfig,The length of the statement  "            if (HighLogic.CurrentGame.Mode == Game.Modes.SANDBOX || ResearchAndDevelopment.GetTechnologyState(config.GetValue("techRequired")) == RDTech.State.Available) " is 157.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UnlockedTL,The length of the statement  "            if (EntryCostManager.Instance != null && HighLogic.CurrentGame != null && HighLogic.CurrentGame.Mode != Game.Modes.SANDBOX) " is 123.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,CostTL,The length of the statement  "            if (cTL.Load(cfg' techNodes' engineType' techLevel) && oTL.Load(cfg' techNodes' engineType' origTechLevel) && part.partInfo != null) " is 132.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The length of the statement  "            if (!(showRFGUI && inPartsEditor) && !(EditorLogic.fetch.editorScreen == EditorScreen.Actions && EditorActionGroups.Instance.GetSelectedParts().Contains(part))) " is 160.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The length of the statement  "            guiWindowRect = GUILayout.Window(unchecked((int)part.persistentId)' guiWindowRect' engineManagerGUI' "Configure " + part.partInfo.title' Styles.styleEditorPanel); " is 162.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,engineManagerGUI,The length of the statement  "                GUILayout.Label(ratedBurnTime + "<b>Engine mass:</b> " + part.mass.ToString("N3") + "t\n" + pModule.GetInfo() + "\n" + TLTInfo() + "\n" + "Total cost: " + (part.partInfo.cost + part.GetModuleCosts(part.partInfo.cost)).ToString("0")); " is 233.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UpdateSymmetryCounterparts,The length of the statement  "                ModuleEngineConfigs engine = GetSpecifiedModule(part.symmetryCounterparts[j]' engineID' mIdx' this.GetType().Name' false) as ModuleEngineConfigs; " is 145.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UpdateOtherModules,The length of the statement  "                    ModuleEngineConfigs otherM = GetSpecifiedModule(part' node.values[i].name' -1' this.GetType().Name' false) as ModuleEngineConfigs; " is 130.
Long Statement,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,ConfigSaveLoad,The length of the statement  "                    /*Debug.Log("*RFMEC* ERROR: part " + partName + " already in database! Current count = " + configs.Count + "' db count = " + RFSettings.Instance.engineConfigs[partName].Count); " is 176.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,OnLoad,The length of the statement  "                    throttleResponseRate = (float)(RFSettings.Instance.throttlingRate / Math.Log(Math.Max(RFSettings.Instance.throttlingClamp' Math.Sqrt(part.mass * maxThrust * maxThrust)))); " is 171.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The length of the statement  "            Fields["ignitions"].guiActive = Fields["ignitions"].guiActiveEditor = (ignitions >= 0 && RFSettings.Instance.limitedIgnitions); " is 127.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The length of the statement  "            igniteFailIgnitions = new ScreenMessage("<color=orange>[" + part.partInfo.title + "]: no ignitions remaining!</color>"' 5f' ScreenMessageStyle.UPPER_CENTER); " is 157.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The length of the statement  "            igniteFailResources = new ScreenMessage("<color=orange>[" + part.partInfo.title + "]: insufficient resources to ignite!</color>"' 5f' ScreenMessageStyle.UPPER_CENTER); " is 167.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The length of the statement  "            ullageFail = new ScreenMessage("<color=orange>[" + part.partInfo.title + "]: vapor in feedlines' shut down!</color>"' 5f' ScreenMessageStyle.UPPER_CENTER); " is 155.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateThrottle,The length of the statement  "                            thisTick *= 0.0005f + 4.05f * currentThrottle * throttleStartupMult * (pressureFed ? throttlePressureFedStartupMult : 1f); " is 122.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Activate,The length of the statement  "                ScreenMessages.PostScreenMessage("<color=orange>[" + part.partInfo.title + "]: Cannot activate while stowed!</color>"' 6f' ScreenMessageStyle.UPPER_LEFT); " is 154.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateSolver,The length of the statement  "                    thrustCurveRatio = (float)((propellants[curveProp].totalResourceAvailable / propellants[curveProp].totalResourceCapacity)); " is 123.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateSolver,The length of the statement  "            // heatProduction = (float)(scaleRecip * extHeatkW / PhysicsGlobals.InternalHeatProductionFactor * part.thermalMassReciprocal); " is 127.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                    output += String.Format("<b> Static Thrust: </b>{0} kN (TWR {1})' {2}\n"' (thrustASL).ToString("0.0##")' (thrustASL / weight).ToString("0.0##")' (throttleLocked ? "throttle locked" : "unthrottleable")); " is 202.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                    output += String.Format("<b>Max. Static Thrust: </b>{0} kN (TWR {1})\n"' (thrustASL).ToString("0.0##")' (thrustASL / weight).ToString("0.0##")); " is 144.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                    output += String.Format("<b>Min. Static Thrust: </b>{0} kN (TWR {1})\n"' (thrustASL * minThrottle).ToString("0.0##")' (thrustASL * minThrottle / weight).ToString("0.0##")); " is 172.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                    velCurve.FindMinMaxValue(out vMin' out vMax' out tMin' out tMax); // get the max mult' and thus report maximum thrust possible. " is 127.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                    output += String.Format("<b>Max. Thrust: </b>{0} kN at Mach {1} (TWR {2})\n"' (thrustASL * vMax).ToString("0.0##")' tMax.ToString("0.#")' (thrustASL * vMax / weight).ToString("0.0##")); " is 185.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Thrust (Vac): </b>{0} kN (TWR {1})' {2}\n"' (thrustVac).ToString("0.0##")' (thrustVac / weight).ToString("0.0##")' suffix); " is 151.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Thrust (ASL): </b>{0} kN (TWR {1})' {2}\n"' (thrustASL).ToString("0.0##")' (thrustASL / weight).ToString("0.0##")' suffix); " is 151.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Thrust: </b>{0} kN (TWR {1})' {2}\n"' (thrustVac).ToString("0.0##")' (thrustVac / weight).ToString("0.0##")' suffix); " is 145.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Max. Thrust (Vac): </b>{0} kN (TWR {1})\n"' (thrustVac).ToString("0.0##")' (thrustVac / weight).ToString("0.0##")); " is 143.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Max. Thrust (ASL): </b>{0} kN (TWR {1})\n"' (thrustASL).ToString("0.0##")' (thrustASL / weight).ToString("0.0##")); " is 143.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Min. Thrust (Vac): </b>{0} kN (TWR {1})\n"' (thrustVac * minThrottle).ToString("0.0##")' (thrustVac * minThrottle / weight).ToString("0.0##")); " is 171.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Min. Thrust (ASL): </b>{0} kN (TWR {1})\n"' (thrustASL * minThrottle).ToString("0.0##")' (thrustASL * minThrottle / weight).ToString("0.0##")); " is 171.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Max. Thrust: </b>{0} kN (TWR {1})\n"' (thrustVac).ToString("0.0##")' (thrustVac / weight).ToString("0.0##")); " is 137.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The length of the statement  "                        output += String.Format("<b>Min. Thrust: </b>{0} kN (TWR {1})\n"' (thrustVac * minThrottle).ToString("0.0##")' (thrustVac * minThrottle / weight).ToString("0.0##")); " is 165.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetUllageIgnition,The length of the statement  "            output += (output != string.Empty ? "' " : string.Empty) + "Ignitions: " + ((!RFSettings.Instance.limitedIgnitions || ignitions < 0) ? "Unlimited" : (ignitions > 0 ? ignitions.ToString() : "Ground only")); " is 205.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetInfo,The length of the statement  "            output += "<b>Engine Isp: </b>" + (atmosphereCurve.Evaluate(1f)).ToString("0.###") + " (ASL) - " + (atmosphereCurve.Evaluate(0f)).ToString("0.###") + " (Vac.)\n"; " is 162.
Long Statement,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,IgnitionUpdate,The length of the statement  "                                            print("*RF* part " + part.partInfo.title + " requested " + req + " " + ignitionResources[i].name + " but got " + amt + ". MinResource now " + minResource); " is 155.
Long Statement,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The length of the statement  "            if (atmosphereCurve.Curve.keys.Length == 2 && atmosphereCurve.Curve.keys[0].value != atmosphereCurve.Curve.keys[1].value) " is 121.
Long Statement,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,CalculatePerformance,The length of the statement  "                // removed t0 from next calculation; under some circumstances t0 can spike during staging/decoupling resulting in engine part destruction even on an unfired engine. " is 164.
Long Statement,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,FixedUpdate,The length of the statement  "            if (HighLogic.LoadedSceneIsFlight && part.parent != null && part.vessel != null && !flightIntegrator.isAnalytical && enablePump) " is 128.
Long Statement,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,FillAttachedTanks,The length of the statement  "                        if (tank.amount < tank.maxAmount && tank.fillable && r.flowMode != PartResource.FlowMode.None && d.resourceTransferMode == ResourceTransferMode.PUMP && r.flowState) " is 164.
Long Statement,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,FillAttachedTanks,The length of the statement  "                            if (partResource.flowMode != PartResource.FlowMode.None && partResource.info.resourceTransferMode == ResourceTransferMode.PUMP && partResource.flowState) " is 153.
Long Statement,RealFuels,Utilities,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Utilities.cs,PrintCurve,The length of the statement  "                Debug.Log("key = " + fc.Curve.keys[i].time + " " + fc.Curve.keys[i].value + " " + fc.Curve.keys[i].inTangent + " " + fc.Curve.keys[i].outTangent); " is 146.
Long Statement,RealFuels,Utilities,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Utilities.cs,FindResources,The length of the statement  "            if (flow == ResourceFlowMode.STACK_PRIORITY_SEARCH || flow == ResourceFlowMode.STAGE_PRIORITY_FLOW_BALANCE || flow == ResourceFlowMode.STAGE_STACK_FLOW || flow == ResourceFlowMode.STAGE_STACK_FLOW_BALANCE) " is 205.
Long Statement,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,DeleteTank,The length of the statement  "                // probably shouldn't GET here since the part should already have this resource and we should always have left the unmanaged portion remaining. " is 143.
Long Statement,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,DeleteTank,The length of the statement  "                        // probably shouldn't GET here since the part should already have this resource and we should always have left the unmanaged portion remaining. " is 143.
Long Statement,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,AddTank,The length of the statement  "			//Debug.Log ($"[MFT] AddTank {res.resourceName} {res.amount} {res.maxAmount} {res.flowState} {res.isTweakable} {res.isVisible} {res.hideFlow} {res.flowMode}"); " is 159.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnAwake,The length of the statement  "                    //Debug.Log("[ModuleFuelTanks.OnAwake()] unmanagedResources was initialized with count = " + unmanagedResources.Count.ToString()); " is 130.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnLoad,The length of the statement  "                    if (!unmanagedResourceNodes[i].HasValue("name") || !unmanagedResourceNodes[i].HasValue("amount") || !unmanagedResourceNodes[i].HasValue("maxAmount")) " is 149.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnLoad,The length of the statement  "                            //Debug.Log("[ModuleFuelTanks.OnLoad()] modified UnmanagedResource: " + name + "; amount = " + amount + " / maxAmount = " + maxAmount); " is 135.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,Update,The length of the statement  "            bool partIsSelectedInActionsScreen = inEditorActionsScreen && (EditorActionGroups.Instance?.GetSelectedParts().Contains(part) ?? false); " is 136.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,ChangeTotalVolume,The length of the statement  "                Debug.LogWarning("[ModularFuelTanks] caught DIV/0 in ChangeTotalVolume. Setting volume/totalVolume and exiting function"); " is 122.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateMass,The length of the statement  "				double resourceMass = part.Resources.Cast<PartResource> ().Sum (partResource => partResource.maxAmount* partResource.info.density); " is 131.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnStartRF,The length of the statement  "            Fields[nameof(debug0Display)].guiActive = this.supportsBoiloff && (RFSettings.Instance.debugBoilOff || RFSettings.Instance.debugBoilOffPAW); " is 140.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnStartRF,The length of the statement  "            Fields[nameof(debug1Display)].guiActive = this.supportsBoiloff && (RFSettings.Instance.debugBoilOff || RFSettings.Instance.debugBoilOffPAW); " is 140.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,OnStartRF,The length of the statement  "            Fields[nameof(debug2Display)].guiActive = this.supportsBoiloff && (RFSettings.Instance.debugBoilOff || RFSettings.Instance.debugBoilOffPAW); " is 140.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The length of the statement  "            // TODO tie this into insulation configuration GUI! Also' we should handle MLI separately and as part skin-internal conduction. (DONE) " is 134.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The length of the statement  "                double normalizationFactor = 1 / (PhysicsGlobals.SkinInternalConductionFactor * PhysicsGlobals.ConductionFactor * PhysicsGlobals.ThermalConvergenceFactor * 10 * 0.5); " is 166.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The length of the statement  "                double insulationFactor = Math.Abs(GetMLITransferRate(part.skinTemperature' part.temperature) / (part.skinTemperature - part.temperature)) * 0.001; " is 147.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The length of the statement  "                part.heatConductivity = normalizationFactor * 1 / ((1 / insulationFactor) + (1 / part.partInfo.partPrefab.skinInternalConductionMult)); " is 135.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateAnalyticInsulationFactor,The length of the statement  "                part.analyticInternalInsulationFactor = (1 / PhysicsGlobals.AnalyticLerpRateInternal) * (insulationFactor * totalTankArea / part.thermalMass) * RFSettings.Instance.analyticInsulationMultiplier * part.partInfo.partPrefab.analyticInternalInsulationFactor; " is 253.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,DebugSkinInternalConduction,The length of the statement  "                double num15 = part.skinExposedAreaFrac * part.radiativeArea * num12 * PhysicsGlobals.SkinInternalConductionFactor * part.skinInternalConductionMult; " is 149.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,FixedUpdate,The length of the statement  "                    Fields[nameof(debug3Display)].guiActive = (RFSettings.Instance.debugBoilOff || RFSettings.Instance.debugBoilOffPAW) && this.supportsBoiloff && TimeWarp.CurrentRate > PhysicsGlobals.ThermalMaxIntegrationWarp; " is 207.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                //Debug.Log("internalFlux = " + part.thermalInternalFlux.ToString() + "' thermalInternalFluxPrevious =" + part.thermalInternalFluxPrevious.ToString() + "' analytic internal flux = " + previewInternalFluxAdjust.ToString()); " is 222.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                    string MLIText = totalMLILayers > 0 ? GetMLITransferRate(part.skinTemperature' part.temperature).ToString("F4") : "No MLI"; " is 123.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                    debug0Display = part.temperature.ToString("F4") + "(" + MLIText + " * " + (part.radiativeArea * part.skinExposedAreaFrac).ToString("F2") + "m2)"; " is 145.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                        // because of what we're doing in CalculateAnalyticInsulationFactor()' it will take too much time to reach that temperature so " is 126.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                            hotTemp = Math.Max(((hotTemp * part.thermalMass) - (tank.temperature * part.resourceThermalMass)) / (part.thermalMass - part.resourceThermalMass)' part.temperature); " is 165.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                            double wettedArea = tank.totalArea; // disabled until proper wetted vs ullage conduction can be done (tank.amount / tank.maxAmount); " is 132.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                                    double retainedAmount = part.RequestResource(tank.boiloffProductResource.id' boiloffProductAmount' ResourceFlowMode.STAGE_PRIORITY_FLOW); " is 137.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                            // [RealFuels.ModuleFuelTankRF] proceduralTankRealFuels Analytic Temp = 256.679360297684' Analytic Internal = 256.679360297684' Analytic Skin = 256.679360297684 " is 160.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                            // [RealFuels.ModuleFuelTankRF] proceduralTankRealFuels deltaTime = 17306955.5092776' heat lost = 6638604.21227684' thermalMassReciprocal = 0.00444787360733243 " is 159.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                                        print("boiloff function running with delta time of " + deltaTime.ToString() + "(vessel.lastUT =" + (Planetarium.GetUniversalTime() - vessel.lastUT).ToString("F4") + " seconds ago)"); " is 182.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The length of the statement  "                                print(part.name + " deltaTime = " + deltaTime + "' heat lost = " + heatLost + "' thermalMassReciprocal = " + part.thermalMassReciprocal); " is 137.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The length of the statement  "            // This allows a rough guess as to individual tank surface area based on ratio of tank volume to total volume but it breaks down at very small fractions " is 152.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The length of the statement  "            // if for any reason our totalTankArea is still 0 (no drag cubes available yet or analytic temp routines executed first) " is 120.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The length of the statement  "                    tank.totalArea = Math.Max(Math.Pow(Math.PI' 1.0 / 3.0) * Math.Pow((tankMaxAmount / 1000.0) * 6' 2.0 / 3.0)' totalTankArea * tank.tankRatio); " is 140.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The length of the statement  "                Debug.Log("[RealFuels.ModuleFuelTankRF] " + part.name + ".GetModuleSize()" + part.GetModuleSize(Vector3.zero).ToString("F2")); " is 126.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,SetAnalyticTemperature,The length of the statement  "                print(part.name + " Analytic Temp = " + analyticTemp.ToString() + "' Analytic Internal = " + predictedInternalTemp.ToString() + "' Analytic Skin = " + predictedSkinTemp.ToString()); " is 181.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetInternalTemperature,The length of the statement  "            // During analytic' pin our internal temperature. We'll figure out the difference and apply as much boiloff flux as needed for this to be valid. " is 144.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The length of the statement  "            double QcCoefficient = 0.0000000895; // typical MLI conductive flux coefficient. Possible tech upgrade target based on spacing mechanism between layers? " is 152.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The length of the statement  "            //double QvCoefficient = 3.65; // 14.600; // 14600; // not even sure how this is right: convective contribution will be MURDEROUS. " is 130.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The length of the statement  "            double radiation = (QrCoefficient * emissivity * (Math.Pow(outerTemperature' 4.67) - Math.Pow(innerTemperature' 4.67))) / totalMLILayers; " is 137.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The length of the statement  "            double conduction = ((QcCoefficient * Math.Pow(layerDensity' 2.63) * ((outerTemperature + innerTemperature) / 2)) / (totalMLILayers + 1)) * (outerTemperature - innerTemperature); " is 178.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The length of the statement  "            double convection = RFSettings.Instance.QvCoefficient * ((vessel.staticPressurekPa * 7.500616851) * (Math.Pow(outerTemperature' 0.52) - Math.Pow(innerTemperature' 0.52))) / totalMLILayers; " is 188.
Long Statement,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetDewarTransferRate,The length of the statement  "            double emissivity = 0.005074871897; // corrected and rounded value for concentric surfaces' actual emissivity of each surface is assumed to be 0.01 for silvered or aluminized coating " is 182.
Long Statement,RealFuels.Tanks,TankDefinition,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankDefinition.cs,Load,The length of the statement  "					//Debug.LogWarning ("[MFT] Unable to initialize tank definition for resource \"" + tank.name + "\" in tank definition \"" + name + "\" as this resource is not defined."); " is 170.
Long Statement,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,EnsureFreshAddLabelCache,The length of the statement  "					string label = "Max: " + maxVolStr + " (+" + ModuleFuelTanks.FormatMass((float)(tank_module.AvailableVolume * tank.mass)) + " )"; " is 129.
Long Statement,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The length of the statement  "            guiWindowRect = GUILayout.Window (GetInstanceID ()' guiWindowRect' GUIWindow' "Fuel Tanks for " + tank_module.part.partInfo.title' Styles.styleEditorPanel); " is 156.
Long Statement,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,DisplayMass,The length of the statement  "			GUILayout.Label ("Mass: " + tank_module.massDisplay + "' Cost " + tank_module.GetModuleCost (0' ModifierStagingSituation.CURRENT).ToString ("N1")); " is 147.
Long Statement,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,UpdateTank,The length of the statement  "					//Debug.LogWarning ("[MFT] Removing tank as empty input " + tank.name + " amount: " + tank.maxAmountExpression ?? "null"); " is 122.
Long Statement,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,TankLine,The length of the statement  "            // the unmanaged resource changes make this additional check for tank.maxAmount necessary but it may be that it should replace the other PartResource check outright - needs some thought " is 185.
Long Statement,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,TankLine,The length of the statement  "			if (tank_module.part.Resources.Contains (tank.name) && tank_module.part.Resources[tank.name].maxAmount > 0 && tank.maxAmount > 0) { " is 131.
Long Statement,RealFuels.TechLevels,TechLevel,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\TechLevels\TechLevel.cs,CanTL,The length of the statement  "                return HighLogic.CurrentGame.Mode == Game.Modes.SANDBOX || nTL.techRequired.Equals("") || ResearchAndDevelopment.GetTechnologyState(nTL.techRequired) == RDTech.State.Available; " is 176.
Long Statement,RealFuels.Ullage,UllageSet,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSet.cs,Update,The length of the statement  "                    if(!double.IsNaN(tmp)) // Ordinarily we'd set to 0 if capacity = 0' but if so engine will flame out' so we just toss the result. " is 128.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Load,The length of the statement  "                string str = "*U* Sim for " + name + " loaded from node. H'R: " + ullageHeightMin + "/" + ullageHeightMax + "' " + ullageRadialMin + "/" + ullageRadialMax + ". UT: " + UT; " is 171.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "            //Debug.Log("Ullage: dt: " + deltaTime.ToString("F2") + " localAcc: " + localAcceleration.ToString() + " rotateRate: " + rotation.ToString()); " is 142.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                double ventingConst = Math.Min(1d' (1d - ventingAcc / RFSettings.Instance.ventingAccThreshold) * fuelRatioFactorRecip * utTimeDelta); " is 133.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                ullageHeightMin = UtilMath.LerpUnclamped(ullageHeightMin' 0.05d' RFSettings.Instance.naturalDiffusionRateY * ventingConst); " is 123.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                ullageHeightMax = UtilMath.LerpUnclamped(ullageHeightMax' 0.95d' RFSettings.Instance.naturalDiffusionRateY * ventingConst); " is 123.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                ullageRadialMin = UtilMath.LerpUnclamped(ullageRadialMin' 0.00d' RFSettings.Instance.naturalDiffusionRateX * ventingConst); " is 123.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                ullageRadialMax = UtilMath.LerpUnclamped(ullageRadialMax' 0.95d' RFSettings.Instance.naturalDiffusionRateX * ventingConst); " is 123.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "            double radialFac = Math.Abs(localAccelerationAmount.y) * RFSettings.Instance.translateAxialCoefficientX * fuelRatioFactor; " is 122.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "            //Debug.Log("Ullage: Height: (" + ullageHeightMin.ToString("F2") + " - " + ullageHeightMax.ToString("F2") + ") Radius: (" + ullageRadialMin.ToString("F2") + " - " + ullageRadialMax.ToString("F2") + ")"); " is 203.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "            double bLevel = UtilMath.Clamp((ullageHeightMax - ullageHeightMin) * (ullageRadialMax - ullageRadialMin) * 10d * UtilMath.Clamp(8.2d - 8d * fuelRatio' 0.0d' 8.2d) - 1.0d' 0.0d' 15.0d); " is 184.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                    + "\nUllage Height Min/Max " + ullageHeightMin + "/" + ullageHeightMax + "' Radial Min/Max " + ullageRadialMin + "/" + ullageRadialMax " is 134.
Long Statement,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The length of the statement  "                    + "\nInputs: Time = " + deltaTime + "' UT delta = " + utTimeDelta + "' Acc " + localAcceleration + "' Rot " + rotation + "' FR " + fuelRatio); " is 142.
Complex Conditional,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The conditional expression  "field.FieldType == typeof(FloatCurve) &&                          ((field.Name.Equals("atmosphereCurve") && delAtmo)                          || (field.Name.Equals("atmCurve") && delDens)                          || (field.Name.Equals("velCurve") && delVel))"  is complex.
Complex Conditional,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The conditional expression  "!HighLogic.LoadedSceneIsEditor && !(HighLogic.LoadedSceneIsFlight && vessel != null && vessel.situation == Vessel.Situations.PRELAUNCH)"  is complex.
Complex Conditional,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The conditional expression  "!compatible || !isMaster || !HighLogic.LoadedSceneIsEditor || EditorLogic.fetch == null"  is complex.
Complex Conditional,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The conditional expression  "!(showRFGUI && inPartsEditor) && !(EditorLogic.fetch.editorScreen == EditorScreen.Actions && EditorActionGroups.Instance.GetSelectedParts().Contains(part))"  is complex.
Complex Conditional,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateSolver,The conditional expression  "EngineIgnited && ignited && throttledUp && rfSolver.GetRunning()"  is complex.
Complex Conditional,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,IgnitionUpdate,The conditional expression  "ignitions == 0 && RFSettings.Instance.limitedIgnitions && !CheatOptions.InfinitePropellant && !externalIgnition"  is complex.
Complex Conditional,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,FixedUpdate,The conditional expression  "HighLogic.LoadedSceneIsFlight && part.parent != null && part.vessel != null && !flightIntegrator.isAnalytical && enablePump"  is complex.
Complex Conditional,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,FillAttachedTanks,The conditional expression  "tank.amount < tank.maxAmount && tank.fillable && r.flowMode != PartResource.FlowMode.None && d.resourceTransferMode == ResourceTransferMode.PUMP && r.flowState"  is complex.
Complex Conditional,RealFuels,Utilities,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Utilities.cs,FindResources,The conditional expression  "flow == ResourceFlowMode.STACK_PRIORITY_SEARCH || flow == ResourceFlowMode.STAGE_PRIORITY_FLOW_BALANCE || flow == ResourceFlowMode.STAGE_STACK_FLOW || flow == ResourceFlowMode.STAGE_STACK_FLOW_BALANCE"  is complex.
Complex Conditional,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The conditional expression  "totalMLILayers > 0 && totalVolume > 0 && !(double.IsNaN(part.temperature) || double.IsNaN(part.skinTemperature))"  is complex.
Empty Catch Block,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,UpdateTFInterops,The method has an empty catch block.
Empty Catch Block,RealFuels,TestFlightWrapper,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\TestFlightWrapper.cs,AddInteropValue,The method has an empty catch block.
Magic Number,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,IsCompatible,The following statement contains a magic number: Versioning.version_major != 1  				|| Versioning.version_minor != 7
Magic Number,RealFuels,CompatibilityChecker,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\assembly\Checkers.cs,IsWin64,The following statement contains a magic number: return (IntPtr.Size == 8) && (Environment.OSVersion.Platform == PlatformID.Win32NT);
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,TLTInfo,The following statement contains a magic number: retStr += "' MinThr " + (100f * configThrottle).ToString("N0") + "%";
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetInfo,The following statement contains a magic number: configs.Count < 2
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,GetConfigInfo,The following statement contains a magic number: info += "' min " + (float.Parse(config.GetValue("minThrust")) / float.Parse(config.GetValue(thrustRating)) * 100f).ToString("N0") + "%";
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The following statement contains a magic number: part.Resources["ElectricCharge"].maxAmount = 0.1;
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,SetConfiguration,The following statement contains a magic number: part.Resources.Contains("ElectricCharge") && part.Resources["ElectricCharge"].maxAmount < 0.1
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,ThrustTL,The following statement contains a magic number: return (float)Math.Round((double)thrust * ThrustTL(cfg)' 6);
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,MassTL,The following statement contains a magic number: return (float)Math.Round((double)mass * MassTL()' 6);
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: int posAdd = inPartsEditor ? 256 : 0;
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect(posAdd + 430 * posMult' 365' 430' (Screen.height - 365));
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect(posAdd + 430 * posMult' 365' 430' (Screen.height - 365));
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect(posAdd + 430 * posMult' 365' 430' (Screen.height - 365));
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect(posAdd + 430 * posMult' 365' 430' (Screen.height - 365));
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: int offset = inPartsEditor ? -222 : 440;
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: int offset = inPartsEditor ? -222 : 440;
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: int width = inPartsEditor ? 220 : 300;
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: int width = inPartsEditor ? 220 : 300;
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(guiWindowRect.xMin + offset' mousePos.y - 5' width' 200)' myToolTip' Styles.styleEditorTooltip);
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,OnGUI,The following statement contains a magic number: GUI.Label(new Rect(guiWindowRect.xMin + offset' mousePos.y - 5' width' 200)' myToolTip' Styles.styleEditorTooltip);
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,engineManagerGUI,The following statement contains a magic number: GUILayout.Space (20);
Magic Number,RealFuels,ModuleEngineConfigs,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEngineConfigs.cs,engineManagerGUI,The following statement contains a magic number: counterTT > 4
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,CreateEngine,The following statement contains a magic number: maxEngineTemp = 2000d;
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,CreateEngine,The following statement contains a magic number: chamberNominalTemp = 950d;
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The following statement contains a magic number: igniteFailIgnitions = new ScreenMessage("<color=orange>[" + part.partInfo.title + "]: no ignitions remaining!</color>"' 5f' ScreenMessageStyle.UPPER_CENTER);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The following statement contains a magic number: igniteFailResources = new ScreenMessage("<color=orange>[" + part.partInfo.title + "]: insufficient resources to ignite!</color>"' 5f' ScreenMessageStyle.UPPER_CENTER);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Start,The following statement contains a magic number: ullageFail = new ScreenMessage("<color=orange>[" + part.partInfo.title + "]: vapor in feedlines' shut down!</color>"' 5f' ScreenMessageStyle.UPPER_CENTER);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateThrottle,The following statement contains a magic number: float requiredThrottle = Mathf.Lerp(minThrottle' 1f' requestedThrottle * thrustPercentage * 0.01f);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,UpdateThrottle,The following statement contains a magic number: actualThrottle = (int)(currentThrottle * 100f);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,Activate,The following statement contains a magic number: ScreenMessages.PostScreenMessage("<color=orange>[" + part.partInfo.title + "]: Cannot activate while stowed!</color>"' 6f' ScreenMessageStyle.UPPER_LEFT);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,ThrottleString,The following statement contains a magic number: return "' " + (minThrottle * 100f).ToString("N0") + "% min throttle";
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The following statement contains a magic number: double thrustASL = (engineSolver.GetThrust() * 0.001d);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The following statement contains a magic number: var weight = part.mass * (Planetarium.fetch?.Home?.GeeASL * 9.80665 ?? 9.80665);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetThrustInfo,The following statement contains a magic number: var weight = part.mass * (Planetarium.fetch?.Home?.GeeASL * 9.80665 ?? 9.80665);
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetInfo,The following statement contains a magic number: unitsUsed += " (" + (unitsSec * def.density * 1000f).ToString("N4") + " kg)";
Magic Number,RealFuels,ModuleEnginesRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\ModuleEnginesRF.cs,GetInfo,The following statement contains a magic number: output += "<b>Flameout under: </b>" + (ignitionThreshold * 100f).ToString("0.#") + "% of requirement remaining.\n";
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The following statement contains a magic number: minFlow = nMinFlow * 1000d;
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The following statement contains a magic number: maxFlow = nMaxFlow * 1000d;
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The following statement contains a magic number: chamberTemp = 288d;
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The following statement contains a magic number: float minIsp = 0.0001f;
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,InitializeOverallEngineData,The following statement contains a magic number: atmosphereCurve.Curve.keys.Length == 2 && atmosphereCurve.Curve.keys[0].value != atmosphereCurve.Curve.keys[1].value
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,CalculatePerformance,The following statement contains a magic number: Isp = atmosphereCurve.Evaluate((float)(p0 * 0.001d * PhysicsGlobals.KpaToAtmospheres)) * ispMult;
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,FlowMult,The following statement contains a magic number: flowMult *= atmCurve.Evaluate((float)(rho * (1d / 1.225d)));
Magic Number,RealFuels,SolverRF,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Engines\SolverRF.cs,FlowMult,The following statement contains a magic number: return Math.Max(flowMult' 1e-5);
Magic Number,RealFuels,RefuelingPump,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Pumps\RefuelingPump.cs,AnalyticInfo,The following statement contains a magic number: enablePump && fi.timeSinceLastUpdate < double.MaxValue * 0.99
Magic Number,RealFuels,Utilities,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Utilities.cs,FormatFlux,The following statement contains a magic number: return KSPUtil.PrintSI(flux * 1e3' unit' 4);
Magic Number,RealFuels,Utilities,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Utilities.cs,FormatFlux,The following statement contains a magic number: return KSPUtil.PrintSI(flux * 1e3' unit' 4);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.fontSize = 12;
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.textColor = new Color32(207'207'207'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.textColor = new Color32(207'207'207'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.textColor = new Color32(207'207'207'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.textColor = new Color32(207'207'207'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.border = new RectOffset(3' 3' 3' 3);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.border = new RectOffset(3' 3' 3' 3);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.border = new RectOffset(3' 3' 3' 3);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.border = new RectOffset(3' 3' 3' 3);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.padding = new RectOffset(4' 4' 6' 4);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.padding = new RectOffset(4' 4' 6' 4);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.padding = new RectOffset(4' 4' 6' 4);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorTooltip.padding = new RectOffset(4' 4' 6' 4);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.background = CreateColorPixel(new Color32(7'54'66'200));
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.border = new RectOffset(27' 27' 27' 27);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.border = new RectOffset(27' 27' 27' 27);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.border = new RectOffset(27' 27' 27' 27);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.border = new RectOffset(27' 27' 27' 27);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.padding = new RectOffset(10' 10' 10' 10);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.padding = new RectOffset(10' 10' 10' 10);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.padding = new RectOffset(10' 10' 10' 10);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.padding = new RectOffset(10' 10' 10' 10);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.textColor = new Color32(147'161'161'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.textColor = new Color32(147'161'161'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.textColor = new Color32(147'161'161'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.normal.textColor = new Color32(147'161'161'255);
Magic Number,RealFuels,Styles,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Utilities\Styles.cs,InitStyles,The following statement contains a magic number: styleEditorPanel.fontSize = 12;
Magic Number,RealFuels.Tanks,FuelTank,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\FuelTank.cs,InitializeAmounts,The following statement contains a magic number: maxAmount = v * utilization * module.volume * 0.01;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,ChangeVolume,The following statement contains a magic number: ChangeTotalVolume (newVolume * 100 / utilization);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,ChangeTotalVolume,The following statement contains a magic number: double newVolume = Math.Round (newTotalVolume * utilization * 0.01d' 4);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,ChangeTotalVolume,The following statement contains a magic number: double newVolume = Math.Round (newTotalVolume * utilization * 0.01d' 4);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,FormatMass,The following statement contains a magic number: return KSPUtil.PrintSI (mass * 1e6' "g"' 4);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,FormatMass,The following statement contains a magic number: return KSPUtil.PrintSI (mass * 1e6' "g"' 4);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,FormatMass,The following statement contains a magic number: return KSPUtil.PrintSI (mass' "t"' 4);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateMass,The following statement contains a magic number: Math.Abs(availRounded) < 0.001d
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,UpdateTweakableMenu,The following statement contains a magic number: activeEditor = (AvailableVolume >= 0.001);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,UpdateUsedBy,The following statement contains a magic number: bool activeEditor = (AvailableVolume >= 0.001);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The following statement contains a magic number: double normalizationFactor = 1 / (PhysicsGlobals.SkinInternalConductionFactor * PhysicsGlobals.ConductionFactor * PhysicsGlobals.ThermalConvergenceFactor * 10 * 0.5);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The following statement contains a magic number: double normalizationFactor = 1 / (PhysicsGlobals.SkinInternalConductionFactor * PhysicsGlobals.ConductionFactor * PhysicsGlobals.ThermalConvergenceFactor * 10 * 0.5);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateInsulation,The following statement contains a magic number: double insulationFactor = Math.Abs(GetMLITransferRate(part.skinTemperature' part.temperature) / (part.skinTemperature - part.temperature)) * 0.001;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,DebugSkinInternalConduction,The following statement contains a magic number: double num12 = part.ptd.conductionMult * 0.5;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,DebugSkinInternalConduction,The following statement contains a magic number: num14 > 0.001 || num14 < -0.001
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,DebugSkinInternalConduction,The following statement contains a magic number: num14 > 0.001 || num14 < -0.001
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The following statement contains a magic number: tankList.Count > 0 && lowestTankTemperature < 300d && MFSSettings.radiatorMinTempMult >= 0d
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The following statement contains a magic number: Q *= 0.001d;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The following statement contains a magic number: debug2Display += (massLost * 1000 * 3600).ToString("F4") + "kg/hr";
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankBoiloff,The following statement contains a magic number: debug2Display += (massLost * 1000 * 3600).ToString("F4") + "kg/hr";
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The following statement contains a magic number: i< 6
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The following statement contains a magic number: tank.totalArea = Math.Max(Math.Pow(Math.PI' 1.0 / 3.0) * Math.Pow((tankMaxAmount / 1000.0) * 6' 2.0 / 3.0)' totalTankArea * tank.tankRatio);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The following statement contains a magic number: tank.totalArea = Math.Max(Math.Pow(Math.PI' 1.0 / 3.0) * Math.Pow((tankMaxAmount / 1000.0) * 6' 2.0 / 3.0)' totalTankArea * tank.tankRatio);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The following statement contains a magic number: tank.totalArea = Math.Max(Math.Pow(Math.PI' 1.0 / 3.0) * Math.Pow((tankMaxAmount / 1000.0) * 6' 2.0 / 3.0)' totalTankArea * tank.tankRatio);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The following statement contains a magic number: tank.totalArea = Math.Max(Math.Pow(Math.PI' 1.0 / 3.0) * Math.Pow((tankMaxAmount / 1000.0) * 6' 2.0 / 3.0)' totalTankArea * tank.tankRatio);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateTankArea,The following statement contains a magic number: tank.totalArea = Math.Max(Math.Pow(Math.PI' 1.0 / 3.0) * Math.Pow((tankMaxAmount / 1000.0) * 6' 2.0 / 3.0)' totalTankArea * tank.tankRatio);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,CalculateLowestTankTemperature,The following statement contains a magic number: lowestTankTemperature = 300;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double QrCoefficient = 0.0000000004944;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double QcCoefficient = 0.0000000895;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double emissivity = 0.03;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double layerDensity = 10.055;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double radiation = (QrCoefficient * emissivity * (Math.Pow(outerTemperature' 4.67) - Math.Pow(innerTemperature' 4.67))) / totalMLILayers;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double radiation = (QrCoefficient * emissivity * (Math.Pow(outerTemperature' 4.67) - Math.Pow(innerTemperature' 4.67))) / totalMLILayers;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double conduction = ((QcCoefficient * Math.Pow(layerDensity' 2.63) * ((outerTemperature + innerTemperature) / 2)) / (totalMLILayers + 1)) * (outerTemperature - innerTemperature);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double conduction = ((QcCoefficient * Math.Pow(layerDensity' 2.63) * ((outerTemperature + innerTemperature) / 2)) / (totalMLILayers + 1)) * (outerTemperature - innerTemperature);
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double convection = RFSettings.Instance.QvCoefficient * ((vessel.staticPressurekPa * 7.500616851) * (Math.Pow(outerTemperature' 0.52) - Math.Pow(innerTemperature' 0.52))) / totalMLILayers;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double convection = RFSettings.Instance.QvCoefficient * ((vessel.staticPressurekPa * 7.500616851) * (Math.Pow(outerTemperature' 0.52) - Math.Pow(innerTemperature' 0.52))) / totalMLILayers;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetMLITransferRate,The following statement contains a magic number: double convection = RFSettings.Instance.QvCoefficient * ((vessel.staticPressurekPa * 7.500616851) * (Math.Pow(outerTemperature' 0.52) - Math.Pow(innerTemperature' 0.52))) / totalMLILayers;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetDewarTransferRate,The following statement contains a magic number: double emissivity = 0.005074871897;
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetDewarTransferRate,The following statement contains a magic number: return PhysicsGlobals.StefanBoltzmanConstant * emissivity * area * (Math.Pow(hot'4) - Math.Pow(cold'4));
Magic Number,RealFuels.Tanks,ModuleFuelTanks,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\ModuleFuelTanks.cs,GetDewarTransferRate,The following statement contains a magic number: return PhysicsGlobals.StefanBoltzmanConstant * emissivity * area * (Math.Pow(hot'4) - Math.Pow(cold'4));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect (430 * posMult' 365' 438' (Screen.height - 365));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect (430 * posMult' 365' 438' (Screen.height - 365));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect (430 * posMult' 365' 438' (Screen.height - 365));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: guiWindowRect = new Rect (430 * posMult' 365' 438' (Screen.height - 365));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: tooltipRect = new Rect (guiWindowRect.xMin + 440' mousePos.y-5' 300' 20);
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: tooltipRect = new Rect (guiWindowRect.xMin + 440' mousePos.y-5' 300' 20);
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: tooltipRect = new Rect (guiWindowRect.xMin + 440' mousePos.y-5' 300' 20);
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,OnGUI,The following statement contains a magic number: tooltipRect = new Rect (guiWindowRect.xMin + 440' mousePos.y-5' 300' 20);
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,GUIWindow,The following statement contains a magic number: GUILayout.Space (20);
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,GUIWindow,The following statement contains a magic number: Math.Round (tank_module.AvailableVolume' 4) < 0
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,GUIWindow,The following statement contains a magic number: counterTT > 4
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,UpdateTank,The following statement contains a magic number: GUILayout.Button ("Update"' GUILayout.Width (53))
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,RemoveTank,The following statement contains a magic number: GUILayout.Button ("Remove"' GUILayout.Width (58))
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,EditTank,The following statement contains a magic number: GUILayout.Label (" "' GUILayout.Width (5));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,EditTank,The following statement contains a magic number: tank.maxAmountExpression = GUILayout.TextField (tank.maxAmountExpression' style' GUILayout.Width (127));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,AddTank,The following statement contains a magic number: GUILayout.Label (addLabelCache[tank.name]' GUILayout.Width (150));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,AddTank,The following statement contains a magic number: GUILayout.Button ("Add"' GUILayout.Width (120))
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,NoRoom,The following statement contains a magic number: GUILayout.Label ("  No room for tank."' GUILayout.Width (150));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,TankLine,The following statement contains a magic number: GUILayout.Label (" " + tank' GUILayout.Width (115));
Magic Number,RealFuels.Tanks,TankWindow,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Tanks\TankWindow.cs,GUIEngines,The following statement contains a magic number: tank_module.usedBy.Count > 0 && tank_module.AvailableVolume >= 0.001
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Reset,The following statement contains a magic number: ullageHeightMin = 0.05d;
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Reset,The following statement contains a magic number: ullageHeightMax = 0.95d;
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Reset,The following statement contains a magic number: ullageRadialMax = 0.95d;
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double fuelRatioFactor = (0.5d + fuelRatio) * (1d / 1.4d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double fuelRatioFactor = (0.5d + fuelRatio) * (1d / 1.4d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMin = UtilMath.LerpUnclamped(ullageHeightMin' 0.05d' RFSettings.Instance.naturalDiffusionRateY * ventingConst);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax = UtilMath.LerpUnclamped(ullageHeightMax' 0.95d' RFSettings.Instance.naturalDiffusionRateY * ventingConst);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMax = UtilMath.LerpUnclamped(ullageRadialMax' 0.95d' RFSettings.Instance.naturalDiffusionRateX * ventingConst);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMin = UtilMath.Clamp(ullageHeightMin + heightFac' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax = UtilMath.Clamp(ullageHeightMax + heightFac' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMin = UtilMath.Clamp(ullageRadialMin - radialFac' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMax = UtilMath.Clamp(ullageRadialMax + radialFac' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMin = UtilMath.Clamp(ullageHeightMin - sideY' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax = UtilMath.Clamp(ullageHeightMax + sideY' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMin = UtilMath.Clamp(ullageRadialMin + sideX' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMax = UtilMath.Clamp(ullageRadialMax + sideX' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMin = UtilMath.Clamp(ullageHeightMin + ypY' 0.0d' 0.45d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMin < 0.45d
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax = UtilMath.Clamp(ullageHeightMax + ypY' 0.1d' 0.55d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax = UtilMath.Clamp(ullageHeightMax + ypY' 0.1d' 0.55d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax < 0.55d
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMin = UtilMath.Clamp(ullageRadialMin - ypX' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMax = UtilMath.Clamp(ullageRadialMax + ypX' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMin = UtilMath.Clamp(ullageHeightMin - absRotY' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageHeightMax = UtilMath.Clamp(ullageHeightMax + absRotY' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMin = UtilMath.Clamp(ullageRadialMin - absRotX' 0.0d' 0.9d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: ullageRadialMax = UtilMath.Clamp(ullageRadialMax - absRotX' 0.1d' 1.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double bLevel = UtilMath.Clamp((ullageHeightMax - ullageHeightMin) * (ullageRadialMax - ullageRadialMin) * 10d * UtilMath.Clamp(8.2d - 8d * fuelRatio' 0.0d' 8.2d) - 1.0d' 0.0d' 15.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double bLevel = UtilMath.Clamp((ullageHeightMax - ullageHeightMin) * (ullageRadialMax - ullageRadialMin) * 10d * UtilMath.Clamp(8.2d - 8d * fuelRatio' 0.0d' 8.2d) - 1.0d' 0.0d' 15.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double bLevel = UtilMath.Clamp((ullageHeightMax - ullageHeightMin) * (ullageRadialMax - ullageRadialMin) * 10d * UtilMath.Clamp(8.2d - 8d * fuelRatio' 0.0d' 8.2d) - 1.0d' 0.0d' 15.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double bLevel = UtilMath.Clamp((ullageHeightMax - ullageHeightMin) * (ullageRadialMax - ullageRadialMin) * 10d * UtilMath.Clamp(8.2d - 8d * fuelRatio' 0.0d' 8.2d) - 1.0d' 0.0d' 15.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double bLevel = UtilMath.Clamp((ullageHeightMax - ullageHeightMin) * (ullageRadialMax - ullageRadialMin) * 10d * UtilMath.Clamp(8.2d - 8d * fuelRatio' 0.0d' 8.2d) - 1.0d' 0.0d' 15.0d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double pVertical = UtilMath.Clamp01(1.0d - (ullageHeightMin - 0.1d) * 5d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double pVertical = UtilMath.Clamp01(1.0d - (ullageHeightMin - 0.1d) * 5d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double pHorizontal = UtilMath.Clamp01(1.0d - (ullageRadialMin - 0.1d) * 5d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: double pHorizontal = UtilMath.Clamp01(1.0d - (ullageRadialMin - 0.1d) * 5d);
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: propellantStability = Math.Max(0.0d' 1.0d - (pVertical * pHorizontal * (0.75d + Math.Sqrt(bLevel))));
Magic Number,RealFuels.Ullage,UllageSimulator,C:\research\architectureSmells\repos\NathanKell_ModularFuelSystem\Source\Ullage\UllageSimulator.cs,Update,The following statement contains a magic number: propellantStability < 0.5d
