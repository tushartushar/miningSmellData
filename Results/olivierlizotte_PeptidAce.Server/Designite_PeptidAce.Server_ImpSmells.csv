Implementation smell,Namespace,Class,File,Method,Description
Long Method,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The method has 108 lines of code.
Complex Method,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,Cyclomatic complexity of the method is 21
Complex Method,PeptidAce.Numerics,SequenceStore,C:\repos\olivierlizotte_PeptidAce.Server\Numerics\SequenceStore.cs,FindPeptides,Cyclomatic complexity of the method is 10
Complex Method,PeptidAce.Numerics,SequenceStore,C:\repos\olivierlizotte_PeptidAce.Server\Numerics\SequenceStore.cs,GetPeptides,Cyclomatic complexity of the method is 13
Complex Method,PeptidAce.Numerics,SequenceStore,C:\repos\olivierlizotte_PeptidAce.Server\Numerics\SequenceStore.cs,BuildStore,Cyclomatic complexity of the method is 9
Long Parameter List,PeptidAce.SpectrumView.Data,PeptideView,C:\repos\olivierlizotte_PeptidAce.Server\SpectrumView\Data\PeptideView.cs,PeptideView,The method has 6 parameters.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "            samples.Add(new Sample(1'1'1' @"G:\Thibault\Olivier\DistillerReplacement\FM_FL_NTA_+TBIB_membrane_1_750mM_PeptidAce_Filt100.mgf"' " is 129.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "            PeptidAce.Dev.Methods.MatchedSpectra.CompareReports(@"G:\Thibault\-=Proteomics_Raw_Data=-\ELITE\JUN27_2012\Cluster Celine\M PeptideDb Occ10_189409_0_true.csv"'" is 159.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "                                                                @"G:\Thibault\-=Proteomics_Raw_Data=-\ELITE\JUN27_2012\Cluster Celine\McanonicalDb_RNAseq_06feb2014_AllModif_188894_0_true.csv"'" is 128.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "                                                            //@"C:\_IRIC\Data\Eric\Sumo\Align\UniprotHuman.fa");//*//*PeptidAce.Utilities.Methods.ContaminantRemoval.FromRaw(@"G:\Thibault\-=Proteomics_Raw_Data=-\ELITE\FEB19_2014\FL-blanc-Ab_140221010652.raw"' new string[]{" is 212.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "	//PeptidAce.Methods.RawRtExtractor.FromFolderToCSV(@"G:\Thibault\-=Proteomics_Raw_Data=-\Tyers_ProhitsStorage\QEXACTIVE\Cdc34-Ubi\NOV24_2013\"); " is 144.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "            @"G:\Thibault\-=Proteomics_Raw_Data=-\Tyers_ProhitsStorage\QEXACTIVE\Cdc34-Ubi\NOV24_2013\PeptidesMaps\100000\MascotReport_Dataset_CLPeptide_q_Cdc34_Ub_dataset__id__exact_178.csv"'" is 180.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "            @"G:\Thibault\-=Proteomics_Raw_Data=-\Tyers_ProhitsStorage\QEXACTIVE\Cdc34-Ubi\NOV24_2013\PeptidesMaps\100000MascotReport_Dataset_CLPeptide_q_Cdc34_Ub_dataset__id__exact_178_WithRt.csv");//*///PeptidAce.Utilities.Fasta.FastaHelper.AppendProteinDescriptionToMascotReport(@"C:\Users\caronlio\Downloads\Rgenome RNAseq only DB cluster_all BS_matrix_Olivier.csv"' " is 358.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "	//                                                                            @"G:\Thibault\Olivier\Databases\lightR_transcriptome_2013-11-5_WithReverse.fasta"' " is 160.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "	//                                                                            @"C:\Users\caronlio\Downloads\Rgenome RNAseq only DB cluster_all BS_matrix_Olivier_WithProtDesc.csv"); " is 180.
Long Statement,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Main,The length of the statement  "	//Numerics.SourceStore.FillStore(@"G:\Thibault\-=Proteomics_Raw_Data=-\ELITE\DEC09_2013"' Numerics.SourceStore.GetDictionary()); " is 128.
Long Statement,PeptidAce.Numerics,SequenceStore,C:\repos\olivierlizotte_PeptidAce.Server\Numerics\SequenceStore.cs,GetPeptides,The length of the statement  "						double score = DotNetMHC.Analysis.PeptideCoverage.PSMScoreMatch (modMasses' sequence.Length' spectrum.PrecursorCharge' spectrum' options); " is 138.
Long Statement,PeptidAce.Numerics,SequenceStore,C:\repos\olivierlizotte_PeptidAce.Server\Numerics\SequenceStore.cs,GetPeptides,The length of the statement  "				double score = DotNetMHC.Analysis.PeptideCoverage.PSMScoreMatch (masses' sequence.Length' spectrum.PrecursorCharge' spectrum' options); " is 135.
Long Statement,PeptidAce.Numerics,SequenceStore,C:\repos\olivierlizotte_PeptidAce.Server\Numerics\SequenceStore.cs,BuildStore,The length of the statement  "		Combinations<char> combinations = new Combinations<char> (new List<char> (PeptidAce.AminoAcidMasses.VALID_AMINO_ACIDS)' size' GenerateOption.WithRepetition); " is 157.
Complex Conditional,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,Execute,The conditional expression  "tttype.IsClass && tttype.IsPublic && (splits.Length == 1 || tttype.FullName.Contains (splits [1]))"  is complex.
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: try {  	ConSolUser user = Sol.GetConSolUser (socket);  	if (user == null) {  		if (!message.Contains ("Register"))  			SendRegisterInfo (socket);  		else {  			dynamic obj = JsonConvert.DeserializeObject (message);  			if (((string)obj.Type).CompareTo ("Register") == 0)  				Register (obj.Name.Value' socket);  		}  	}  	else {  		// <3 dynamics  		dynamic obj = JsonConvert.DeserializeObject (message);  		switch ((string)obj.Type) {  		case "Message":  			break;  		case "Menu":  			break;  		case "Command":  			if (user == null || string.IsNullOrEmpty (user.Name))  				SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  			else  				Execute (obj.Command.Value' user);  			//Sol.Execute(obj.Command.Value);  			break;  		case "DisplaySpectrum":  			if (obj.Data.length > 2)  				ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  			else  				ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  			break;  		case "ListSources":  			ListSources (user);  			break;  		case "NameChange":  			//NameChange(obj.Name.Value' context);  			break;  		}  		//*/  	}  }  catch (Exception e)// Bad JSON! For shame.   {  	Console.WriteLine ("Received uninterpretable data from " + socket.ConnectionInfo);  	Console.WriteLine (e.StackTrace);  	if (!string.IsNullOrEmpty (message))  		Console.WriteLine (" => " + message);  	//var r = new Response { Type = "Error"' Message = e.Message };  	//SendError(JsonConvert.SerializeObject(r)' context);  	//context.Send(JsonConvert.SerializeObject(r));  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: try {  	ConSolUser user = Sol.GetConSolUser (socket);  	if (user == null) {  		if (!message.Contains ("Register"))  			SendRegisterInfo (socket);  		else {  			dynamic obj = JsonConvert.DeserializeObject (message);  			if (((string)obj.Type).CompareTo ("Register") == 0)  				Register (obj.Name.Value' socket);  		}  	}  	else {  		// <3 dynamics  		dynamic obj = JsonConvert.DeserializeObject (message);  		switch ((string)obj.Type) {  		case "Message":  			break;  		case "Menu":  			break;  		case "Command":  			if (user == null || string.IsNullOrEmpty (user.Name))  				SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  			else  				Execute (obj.Command.Value' user);  			//Sol.Execute(obj.Command.Value);  			break;  		case "DisplaySpectrum":  			if (obj.Data.length > 2)  				ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  			else  				ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  			break;  		case "ListSources":  			ListSources (user);  			break;  		case "NameChange":  			//NameChange(obj.Name.Value' context);  			break;  		}  		//*/  	}  }  catch (Exception e)// Bad JSON! For shame.   {  	Console.WriteLine ("Received uninterpretable data from " + socket.ConnectionInfo);  	Console.WriteLine (e.StackTrace);  	if (!string.IsNullOrEmpty (message))  		Console.WriteLine (" => " + message);  	//var r = new Response { Type = "Error"' Message = e.Message };  	//SendError(JsonConvert.SerializeObject(r)' context);  	//context.Send(JsonConvert.SerializeObject(r));  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: if (user == null) {  	if (!message.Contains ("Register"))  		SendRegisterInfo (socket);  	else {  		dynamic obj = JsonConvert.DeserializeObject (message);  		if (((string)obj.Type).CompareTo ("Register") == 0)  			Register (obj.Name.Value' socket);  	}  }  else {  	// <3 dynamics  	dynamic obj = JsonConvert.DeserializeObject (message);  	switch ((string)obj.Type) {  	case "Message":  		break;  	case "Menu":  		break;  	case "Command":  		if (user == null || string.IsNullOrEmpty (user.Name))  			SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  		else  			Execute (obj.Command.Value' user);  		//Sol.Execute(obj.Command.Value);  		break;  	case "DisplaySpectrum":  		if (obj.Data.length > 2)  			ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  		else  			ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  		break;  	case "ListSources":  		ListSources (user);  		break;  	case "NameChange":  		//NameChange(obj.Name.Value' context);  		break;  	}  	//*/  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: if (user == null) {  	if (!message.Contains ("Register"))  		SendRegisterInfo (socket);  	else {  		dynamic obj = JsonConvert.DeserializeObject (message);  		if (((string)obj.Type).CompareTo ("Register") == 0)  			Register (obj.Name.Value' socket);  	}  }  else {  	// <3 dynamics  	dynamic obj = JsonConvert.DeserializeObject (message);  	switch ((string)obj.Type) {  	case "Message":  		break;  	case "Menu":  		break;  	case "Command":  		if (user == null || string.IsNullOrEmpty (user.Name))  			SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  		else  			Execute (obj.Command.Value' user);  		//Sol.Execute(obj.Command.Value);  		break;  	case "DisplaySpectrum":  		if (obj.Data.length > 2)  			ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  		else  			ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  		break;  	case "ListSources":  		ListSources (user);  		break;  	case "NameChange":  		//NameChange(obj.Name.Value' context);  		break;  	}  	//*/  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: switch ((string)obj.Type) {  case "Message":  	break;  case "Menu":  	break;  case "Command":  	if (user == null || string.IsNullOrEmpty (user.Name))  		SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  	else  		Execute (obj.Command.Value' user);  	//Sol.Execute(obj.Command.Value);  	break;  case "DisplaySpectrum":  	if (obj.Data.length > 2)  		ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  	else  		ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  	break;  case "ListSources":  	ListSources (user);  	break;  case "NameChange":  	//NameChange(obj.Name.Value' context);  	break;  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: switch ((string)obj.Type) {  case "Message":  	break;  case "Menu":  	break;  case "Command":  	if (user == null || string.IsNullOrEmpty (user.Name))  		SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  	else  		Execute (obj.Command.Value' user);  	//Sol.Execute(obj.Command.Value);  	break;  case "DisplaySpectrum":  	if (obj.Data.length > 2)  		ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  	else  		ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  	break;  case "ListSources":  	ListSources (user);  	break;  case "NameChange":  	//NameChange(obj.Name.Value' context);  	break;  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: if (obj.Data.length > 2)  	ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  else  	ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: if (obj.Data.length > 2)  	ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  else  	ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following statement contains a magic number: ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,ValidateName,The following statement contains a magic number: if (name.Length > 3 && name.Length < 25) {  	isValid = true;  }  
Magic Number,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,ValidateName,The following statement contains a magic number: if (name.Length > 3 && name.Length < 25) {  	isValid = true;  }  
Magic Number,PeptidAce.SpectrumView,Viewer,C:\repos\olivierlizotte_PeptidAce.Server\SpectrumView\Viewer.cs,CreateView,The following statement contains a magic number: if (options == null)  	options = DotNetMHC.MHCSearcher.CreateOptions (new string[] {  		""  	}' ""' 15' 0.05' consol);  
Magic Number,PeptidAce.SpectrumView,Viewer,C:\repos\olivierlizotte_PeptidAce.Server\SpectrumView\Viewer.cs,CreateView,The following statement contains a magic number: if (options == null)  	options = DotNetMHC.MHCSearcher.CreateOptions (new string[] {  		""  	}' ""' 15' 0.05' consol);  
Magic Number,PeptidAce.SpectrumView,Viewer,C:\repos\olivierlizotte_PeptidAce.Server\SpectrumView\Viewer.cs,CreateView,The following statement contains a magic number: options = DotNetMHC.MHCSearcher.CreateOptions (new string[] {  	""  }' ""' 15' 0.05' consol);  
Magic Number,PeptidAce.SpectrumView,Viewer,C:\repos\olivierlizotte_PeptidAce.Server\SpectrumView\Viewer.cs,CreateView,The following statement contains a magic number: options = DotNetMHC.MHCSearcher.CreateOptions (new string[] {  	""  }' ""' 15' 0.05' consol);  
Missing Default,PeptidAce,AceServer,C:\repos\olivierlizotte_PeptidAce.Server\Program.cs,OnReceive,The following switch statement is missing a default case: switch ((string)obj.Type) {  case "Message":  	break;  case "Menu":  	break;  case "Command":  	if (user == null || string.IsNullOrEmpty (user.Name))  		SendError ("You must log in if you want to send commands to the PeptidAce Server"' socket);  	else  		Execute (obj.Command.Value' user);  	//Sol.Execute(obj.Command.Value);  	break;  case "DisplaySpectrum":  	if (obj.Data.length > 2)  		ShowSpectrum (obj.Data [0]' obj.Data [1]' obj.Data [2]' user);  	else  		ShowSpectrum (obj.Data [0]' obj.Data [1]' ""' user);  	break;  case "ListSources":  	ListSources (user);  	break;  case "NameChange":  	//NameChange(obj.Name.Value' context);  	break;  }  
