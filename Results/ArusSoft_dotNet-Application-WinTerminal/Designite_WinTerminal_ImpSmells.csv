Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,Cyclomatic complexity of the method is 17
Complex Method,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,buttonTextTerminalClear_Click,Cyclomatic complexity of the method is 18
Complex Method,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,Cyclomatic complexity of the method is 21
Complex Method,ArusSoft,Settings,C:\repos\ArusSoft_dotNet-Application-WinTerminal\Settings.cs,Save,Cyclomatic complexity of the method is 22
Complex Method,ArusSoft,Settings,C:\repos\ArusSoft_dotNet-Application-WinTerminal\Settings.cs,Load,Cyclomatic complexity of the method is 32
Long Statement,ArusSoft,CommandLibraryForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\CommandLibraryForm.cs,textCategoryAdd_KeyUp,The length of the statement  "	if (e.KeyCode == Keys.Enter && textCategoryAdd.Text.Trim () != String.Empty && Global.DBHelp.Categories.Local.FirstOrDefault (q => q.Title == textCategoryAdd.Text.Trim ()) == null) { " is 182.
Long Statement,ArusSoft,CommandLibraryForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\CommandLibraryForm.cs,textCommandAdd_KeyUp,The length of the statement  "	if (e.KeyCode == Keys.Enter && textCommandAdd.Text.Trim () != String.Empty && Global.DBHelp.CommandHelps.Local.FirstOrDefault (q => q.Title == textCommandAdd.Text.Trim ()) == null && comboCommandCategory.SelectedItem != null) { " is 227.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The length of the statement  "			Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height); " is 173.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The length of the statement  "		if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) { " is 216.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The length of the statement  "			int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X); " is 187.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The length of the statement  "			int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y); " is 189.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The length of the statement  "		MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 121.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The length of the statement  "		this.Invoke (new Action<string' Color' RichTextBox> (WriteTerminal)' "// New Command -------------------------------------------------------------------" + Environment.NewLine' Color.Yellow' textTerminal1); " is 206.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The length of the statement  "		this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (0' output.IndexOf ('>') + 1)' Color.Gray' new Font ("Consolas"' 12' FontStyle.Bold)' SelectedTerminal); " is 196.
Long Statement,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The length of the statement  "		this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (output.IndexOf ('>') + 1' output.Length - output.IndexOf ('>') - 1)' Color.Lime' new Font ("Times New Roman"' 12' FontStyle.Underline | FontStyle.Bold)' SelectedTerminal); " is 264.
Long Statement,ArusSoft,Settings,C:\repos\ArusSoft_dotNet-Application-WinTerminal\Settings.cs,Save,The length of the statement  "							writer.WriteElementString (property.Name' value == null ? "" : ((Point)value).X.ToString () + ";" + ((Point)value).Y.ToString ()); " is 130.
Long Statement,ArusSoft,Settings,C:\repos\ArusSoft_dotNet-Application-WinTerminal\Settings.cs,Save,The length of the statement  "							writer.WriteElementString (property.Name' value == null ? "" : ((Size)value).Width.ToString () + ";" + ((Size)value).Height.ToString ()); " is 137.
Long Statement,ArusSoft,Settings,C:\repos\ArusSoft_dotNet-Application-WinTerminal\Settings.cs,Save,The length of the statement  "							writer.WriteElementString (property.Name' (property.GetValue (this' null) == null) ? "" : property.GetValue (this' null).ToString ()); " is 134.
Complex Conditional,ArusSoft,CommandLibraryForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\CommandLibraryForm.cs,textCommandAdd_KeyUp,The conditional expression  "e.KeyCode == Keys.Enter && textCommandAdd.Text.Trim () != String.Empty && Global.DBHelp.CommandHelps.Local.FirstOrDefault (q => q.Title == textCommandAdd.Text.Trim ()) == null && comboCommandCategory.SelectedItem != null"  is complex.
Complex Conditional,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The conditional expression  "Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200"  is complex.
Magic Number,ArusSoft,CommandLibraryForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\CommandLibraryForm.cs,listCommands_Resize,The following statement contains a magic number: listCommands.Columns [0].Width = listCommands.Width - 3;  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,MainForm_Load,The following statement contains a magic number: if (output.Length > 3)  	for (int i = 0; i < 3; i++) {  		outputCommand (output [i]' true' textTerminal1);  		textTerminal1.AppendText (Environment.NewLine);  	}  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,MainForm_Load,The following statement contains a magic number: if (output.Length > 3)  	for (int i = 0; i < 3; i++) {  		outputCommand (output [i]' true' textTerminal1);  		textTerminal1.AppendText (Environment.NewLine);  	}  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,MainForm_Load,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	outputCommand (output [i]' true' textTerminal1);  	textTerminal1.AppendText (Environment.NewLine);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: try {  	if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  		Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  		Global.Settings.Save ();  	}  	Size = Global.Settings.Size;  	if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  		int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  		int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  		Global.Settings.Location = new Point (x' y);  		Global.Settings.Save ();  	}  	Location = Global.Settings.Location;  }  catch (Exception e) {  	MessageBox.Show ("Error apply setting:" + e.Message' "Error apply settings"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  	Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  	Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  	Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  	Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  	Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Size.Width < 450 || Global.Settings.Size.Height < 300) {  	Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: Global.Settings.Size = new Size (Global.Settings.Size.Width < 450 ? 450 : Global.Settings.Size.Width' Global.Settings.Size.Height < 300 ? 300 : Global.Settings.Size.Height);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  	int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  	int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  	Global.Settings.Location = new Point (x' y);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  	int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  	int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  	Global.Settings.Location = new Point (x' y);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  	int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  	int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  	Global.Settings.Location = new Point (x' y);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  	int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  	int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  	Global.Settings.Location = new Point (x' y);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  	int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  	int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  	Global.Settings.Location = new Point (x' y);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,ApplySettings,The following statement contains a magic number: if (Global.Settings.Location.X < 0 || Global.Settings.Location.Y < 0 || Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 300 || Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200) {  	int x = Global.Settings.Location.X < 0 ? 0 : (Global.Settings.Location.X > Screen.PrimaryScreen.Bounds.Width - 200 ? Screen.PrimaryScreen.Bounds.Width - 300 : Global.Settings.Location.X);  	int y = Global.Settings.Location.Y < 0 ? 0 : (Global.Settings.Location.Y > Screen.PrimaryScreen.Bounds.Height - 200 ? Screen.PrimaryScreen.Bounds.Height - 200 : Global.Settings.Location.Y);  	Global.Settings.Location = new Point (x' y);  	Global.Settings.Save ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following statement contains a magic number: if (command.Trim () != String.Empty) {  	comboCommand.Enabled = false;  	switch (tabTerminal.SelectedIndex) {  	case 0:  		SelectedTerminal = textTerminal1;  		break;  	case 1:  		SelectedTerminal = textTerminal2;  		break;  	case 2:  		SelectedTerminal = textTerminal3;  		break;  	case 3:  		SelectedTerminal = textTerminal4;  		break;  	case 4:  		SelectedTerminal = textTerminal5;  		break;  	}  	Command newCommand = new Command () {  		DateCreate = DateTime.Now'  		CommandText = command'  		Terminal = tabTerminal.SelectedIndex'  		TerminalLine = SelectedTerminal.Text.Length  	};  	Global.DB.Commands.Add (newCommand);  	listHistory.Items.Insert (0' new ListViewItem (newCommand.CommandText) {  		Tag = newCommand  	});  	if (!comboCommand.Items.Contains (newCommand.CommandText))  		comboCommand.Items.Insert (0' newCommand.CommandText);  	backgroundRunCommand.RunWorkerAsync (newCommand);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following statement contains a magic number: if (command.Trim () != String.Empty) {  	comboCommand.Enabled = false;  	switch (tabTerminal.SelectedIndex) {  	case 0:  		SelectedTerminal = textTerminal1;  		break;  	case 1:  		SelectedTerminal = textTerminal2;  		break;  	case 2:  		SelectedTerminal = textTerminal3;  		break;  	case 3:  		SelectedTerminal = textTerminal4;  		break;  	case 4:  		SelectedTerminal = textTerminal5;  		break;  	}  	Command newCommand = new Command () {  		DateCreate = DateTime.Now'  		CommandText = command'  		Terminal = tabTerminal.SelectedIndex'  		TerminalLine = SelectedTerminal.Text.Length  	};  	Global.DB.Commands.Add (newCommand);  	listHistory.Items.Insert (0' new ListViewItem (newCommand.CommandText) {  		Tag = newCommand  	});  	if (!comboCommand.Items.Contains (newCommand.CommandText))  		comboCommand.Items.Insert (0' newCommand.CommandText);  	backgroundRunCommand.RunWorkerAsync (newCommand);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following statement contains a magic number: if (command.Trim () != String.Empty) {  	comboCommand.Enabled = false;  	switch (tabTerminal.SelectedIndex) {  	case 0:  		SelectedTerminal = textTerminal1;  		break;  	case 1:  		SelectedTerminal = textTerminal2;  		break;  	case 2:  		SelectedTerminal = textTerminal3;  		break;  	case 3:  		SelectedTerminal = textTerminal4;  		break;  	case 4:  		SelectedTerminal = textTerminal5;  		break;  	}  	Command newCommand = new Command () {  		DateCreate = DateTime.Now'  		CommandText = command'  		Terminal = tabTerminal.SelectedIndex'  		TerminalLine = SelectedTerminal.Text.Length  	};  	Global.DB.Commands.Add (newCommand);  	listHistory.Items.Insert (0' new ListViewItem (newCommand.CommandText) {  		Tag = newCommand  	});  	if (!comboCommand.Items.Contains (newCommand.CommandText))  		comboCommand.Items.Insert (0' newCommand.CommandText);  	backgroundRunCommand.RunWorkerAsync (newCommand);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	SelectedTerminal = textTerminal1;  	break;  case 1:  	SelectedTerminal = textTerminal2;  	break;  case 2:  	SelectedTerminal = textTerminal3;  	break;  case 3:  	SelectedTerminal = textTerminal4;  	break;  case 4:  	SelectedTerminal = textTerminal5;  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	SelectedTerminal = textTerminal1;  	break;  case 1:  	SelectedTerminal = textTerminal2;  	break;  case 2:  	SelectedTerminal = textTerminal3;  	break;  case 3:  	SelectedTerminal = textTerminal4;  	break;  case 4:  	SelectedTerminal = textTerminal5;  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	SelectedTerminal = textTerminal1;  	break;  case 1:  	SelectedTerminal = textTerminal2;  	break;  case 2:  	SelectedTerminal = textTerminal3;  	break;  case 3:  	SelectedTerminal = textTerminal4;  	break;  case 4:  	SelectedTerminal = textTerminal5;  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The following statement contains a magic number: if (buttonTerminalApplyColor.Checked) {  	this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (0' output.IndexOf ('>') + 1)' Color.Gray' new Font ("Consolas"' 12' FontStyle.Bold)' SelectedTerminal);  	this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (output.IndexOf ('>') + 1' output.Length - output.IndexOf ('>') - 1)' Color.Lime' new Font ("Times New Roman"' 12' FontStyle.Underline | FontStyle.Bold)' SelectedTerminal);  }  else  	this.Invoke (new Action<string' RichTextBox> (WriteTerminal)' output' SelectedTerminal);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The following statement contains a magic number: if (buttonTerminalApplyColor.Checked) {  	this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (0' output.IndexOf ('>') + 1)' Color.Gray' new Font ("Consolas"' 12' FontStyle.Bold)' SelectedTerminal);  	this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (output.IndexOf ('>') + 1' output.Length - output.IndexOf ('>') - 1)' Color.Lime' new Font ("Times New Roman"' 12' FontStyle.Underline | FontStyle.Bold)' SelectedTerminal);  }  else  	this.Invoke (new Action<string' RichTextBox> (WriteTerminal)' output' SelectedTerminal);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The following statement contains a magic number: this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (0' output.IndexOf ('>') + 1)' Color.Gray' new Font ("Consolas"' 12' FontStyle.Bold)' SelectedTerminal);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The following statement contains a magic number: this.Invoke (new Action<string' Color' Font' RichTextBox> (WriteTerminal)' output.Substring (output.IndexOf ('>') + 1' output.Length - output.IndexOf ('>') - 1)' Color.Lime' new Font ("Times New Roman"' 12' FontStyle.Underline | FontStyle.Bold)' SelectedTerminal);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,backgroundRunCommand_DoWork,The following statement contains a magic number: for (int i = 0; i < outputStandart.Length - 3; i++) {  	newCommand.CommandOutput += outputStandart [i] + Environment.NewLine;  	this.Invoke (new Action<string' bool' RichTextBox> (outputCommand)' outputStandart [i]' true' SelectedTerminal);  	this.Invoke (new Action<string> (SelectedTerminal.AppendText)' Environment.NewLine);  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,WriteTerminal,The following statement contains a magic number: WriteTerminal (text.ToString ()' textColor' new Font ("Consolas"' 12' FontStyle.Regular)' control);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,WriteTerminal,The following statement contains a magic number: WriteTerminal (text.ToString ()' Color.White' new Font ("Consolas"' 12' FontStyle.Regular)' control);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,WriteTerminal,The following statement contains a magic number: WriteTerminal (text' textColor' new Font ("Consolas"' 12' FontStyle.Regular)' control);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,WriteTerminal,The following statement contains a magic number: WriteTerminal (text' Color.White' new Font ("Consolas"' 12' FontStyle.Regular)' control);  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,buttonTextTerminalClear_Click,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	textTerminal1.Clear ();  	break;  case 1:  	textTerminal2.Clear ();  	break;  case 2:  	textTerminal3.Clear ();  	break;  case 3:  	textTerminal4.Clear ();  	break;  case 4:  	textTerminal5.Clear ();  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,buttonTextTerminalClear_Click,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	textTerminal1.Clear ();  	break;  case 1:  	textTerminal2.Clear ();  	break;  case 2:  	textTerminal3.Clear ();  	break;  case 3:  	textTerminal4.Clear ();  	break;  case 4:  	textTerminal5.Clear ();  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,buttonTextTerminalClear_Click,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	textTerminal1.Clear ();  	break;  case 1:  	textTerminal2.Clear ();  	break;  case 2:  	textTerminal3.Clear ();  	break;  case 3:  	textTerminal4.Clear ();  	break;  case 4:  	textTerminal5.Clear ();  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: if (listHistory.SelectedItems != null && listHistory.SelectedItems.Count > 0) {  	Command cmd = (listHistory.SelectedItems [0].Tag as Command);  	if (cmd.Terminal != -1 && cmd.TerminalLine != -1) {  		tabTerminal.SelectedIndex = cmd.Terminal;  		RichTextBox terminal = null;  		switch (tabTerminal.SelectedIndex) {  		case 0:  			terminal = textTerminal1;  			break;  		case 1:  			terminal = textTerminal2;  			break;  		case 2:  			terminal = textTerminal3;  			break;  		case 3:  			terminal = textTerminal4;  			break;  		case 4:  			terminal = textTerminal5;  			break;  		}  		terminal.SelectionStart = cmd.TerminalLine;  		terminal.ScrollToCaret ();  	}  	textHistoryOutputStandart.Clear ();  	if (cmd.CommandOutput != null && cmd.CommandOutput != String.Empty) {  		string[] outputStandart = cmd.CommandOutput.Split (new string[] {  			Environment.NewLine  		}' StringSplitOptions.None);  		for (int i = 0; i < outputStandart.Length; i++) {  			outputCommand (outputStandart [i]' true' textHistoryOutputStandart);  			textHistoryOutputStandart.AppendText (Environment.NewLine);  		}  	}  	if (cmd.CommandError != null && cmd.CommandError != String.Empty) {  		textHistoryOutputError.Clear ();  		splitOutput.Panel2Collapsed = false;  		string[] outputError = cmd.CommandError.Split (new string[] {  			Environment.NewLine  		}' StringSplitOptions.None);  		for (int i = 0; i < outputError.Length; i++) {  			outputCommand (outputError [i]' false' textHistoryOutputError);  			textHistoryOutputError.AppendText (Environment.NewLine);  		}  	}  	else  		splitOutput.Panel2Collapsed = true;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: if (listHistory.SelectedItems != null && listHistory.SelectedItems.Count > 0) {  	Command cmd = (listHistory.SelectedItems [0].Tag as Command);  	if (cmd.Terminal != -1 && cmd.TerminalLine != -1) {  		tabTerminal.SelectedIndex = cmd.Terminal;  		RichTextBox terminal = null;  		switch (tabTerminal.SelectedIndex) {  		case 0:  			terminal = textTerminal1;  			break;  		case 1:  			terminal = textTerminal2;  			break;  		case 2:  			terminal = textTerminal3;  			break;  		case 3:  			terminal = textTerminal4;  			break;  		case 4:  			terminal = textTerminal5;  			break;  		}  		terminal.SelectionStart = cmd.TerminalLine;  		terminal.ScrollToCaret ();  	}  	textHistoryOutputStandart.Clear ();  	if (cmd.CommandOutput != null && cmd.CommandOutput != String.Empty) {  		string[] outputStandart = cmd.CommandOutput.Split (new string[] {  			Environment.NewLine  		}' StringSplitOptions.None);  		for (int i = 0; i < outputStandart.Length; i++) {  			outputCommand (outputStandart [i]' true' textHistoryOutputStandart);  			textHistoryOutputStandart.AppendText (Environment.NewLine);  		}  	}  	if (cmd.CommandError != null && cmd.CommandError != String.Empty) {  		textHistoryOutputError.Clear ();  		splitOutput.Panel2Collapsed = false;  		string[] outputError = cmd.CommandError.Split (new string[] {  			Environment.NewLine  		}' StringSplitOptions.None);  		for (int i = 0; i < outputError.Length; i++) {  			outputCommand (outputError [i]' false' textHistoryOutputError);  			textHistoryOutputError.AppendText (Environment.NewLine);  		}  	}  	else  		splitOutput.Panel2Collapsed = true;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: if (listHistory.SelectedItems != null && listHistory.SelectedItems.Count > 0) {  	Command cmd = (listHistory.SelectedItems [0].Tag as Command);  	if (cmd.Terminal != -1 && cmd.TerminalLine != -1) {  		tabTerminal.SelectedIndex = cmd.Terminal;  		RichTextBox terminal = null;  		switch (tabTerminal.SelectedIndex) {  		case 0:  			terminal = textTerminal1;  			break;  		case 1:  			terminal = textTerminal2;  			break;  		case 2:  			terminal = textTerminal3;  			break;  		case 3:  			terminal = textTerminal4;  			break;  		case 4:  			terminal = textTerminal5;  			break;  		}  		terminal.SelectionStart = cmd.TerminalLine;  		terminal.ScrollToCaret ();  	}  	textHistoryOutputStandart.Clear ();  	if (cmd.CommandOutput != null && cmd.CommandOutput != String.Empty) {  		string[] outputStandart = cmd.CommandOutput.Split (new string[] {  			Environment.NewLine  		}' StringSplitOptions.None);  		for (int i = 0; i < outputStandart.Length; i++) {  			outputCommand (outputStandart [i]' true' textHistoryOutputStandart);  			textHistoryOutputStandart.AppendText (Environment.NewLine);  		}  	}  	if (cmd.CommandError != null && cmd.CommandError != String.Empty) {  		textHistoryOutputError.Clear ();  		splitOutput.Panel2Collapsed = false;  		string[] outputError = cmd.CommandError.Split (new string[] {  			Environment.NewLine  		}' StringSplitOptions.None);  		for (int i = 0; i < outputError.Length; i++) {  			outputCommand (outputError [i]' false' textHistoryOutputError);  			textHistoryOutputError.AppendText (Environment.NewLine);  		}  	}  	else  		splitOutput.Panel2Collapsed = true;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: if (cmd.Terminal != -1 && cmd.TerminalLine != -1) {  	tabTerminal.SelectedIndex = cmd.Terminal;  	RichTextBox terminal = null;  	switch (tabTerminal.SelectedIndex) {  	case 0:  		terminal = textTerminal1;  		break;  	case 1:  		terminal = textTerminal2;  		break;  	case 2:  		terminal = textTerminal3;  		break;  	case 3:  		terminal = textTerminal4;  		break;  	case 4:  		terminal = textTerminal5;  		break;  	}  	terminal.SelectionStart = cmd.TerminalLine;  	terminal.ScrollToCaret ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: if (cmd.Terminal != -1 && cmd.TerminalLine != -1) {  	tabTerminal.SelectedIndex = cmd.Terminal;  	RichTextBox terminal = null;  	switch (tabTerminal.SelectedIndex) {  	case 0:  		terminal = textTerminal1;  		break;  	case 1:  		terminal = textTerminal2;  		break;  	case 2:  		terminal = textTerminal3;  		break;  	case 3:  		terminal = textTerminal4;  		break;  	case 4:  		terminal = textTerminal5;  		break;  	}  	terminal.SelectionStart = cmd.TerminalLine;  	terminal.ScrollToCaret ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: if (cmd.Terminal != -1 && cmd.TerminalLine != -1) {  	tabTerminal.SelectedIndex = cmd.Terminal;  	RichTextBox terminal = null;  	switch (tabTerminal.SelectedIndex) {  	case 0:  		terminal = textTerminal1;  		break;  	case 1:  		terminal = textTerminal2;  		break;  	case 2:  		terminal = textTerminal3;  		break;  	case 3:  		terminal = textTerminal4;  		break;  	case 4:  		terminal = textTerminal5;  		break;  	}  	terminal.SelectionStart = cmd.TerminalLine;  	terminal.ScrollToCaret ();  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	terminal = textTerminal1;  	break;  case 1:  	terminal = textTerminal2;  	break;  case 2:  	terminal = textTerminal3;  	break;  case 3:  	terminal = textTerminal4;  	break;  case 4:  	terminal = textTerminal5;  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	terminal = textTerminal1;  	break;  case 1:  	terminal = textTerminal2;  	break;  case 2:  	terminal = textTerminal3;  	break;  case 3:  	terminal = textTerminal4;  	break;  case 4:  	terminal = textTerminal5;  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following statement contains a magic number: switch (tabTerminal.SelectedIndex) {  case 0:  	terminal = textTerminal1;  	break;  case 1:  	terminal = textTerminal2;  	break;  case 2:  	terminal = textTerminal3;  	break;  case 3:  	terminal = textTerminal4;  	break;  case 4:  	terminal = textTerminal5;  	break;  }  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_Resize,The following statement contains a magic number: listHistory.Columns [0].Width = listHistory.Width - 3;  
Magic Number,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHelp_Resize,The following statement contains a magic number: listHelp.Columns [0].Width = listHelp.Width - 3;  
Missing Default,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,RunCommand,The following switch statement is missing a default case: switch (tabTerminal.SelectedIndex) {  case 0:  	SelectedTerminal = textTerminal1;  	break;  case 1:  	SelectedTerminal = textTerminal2;  	break;  case 2:  	SelectedTerminal = textTerminal3;  	break;  case 3:  	SelectedTerminal = textTerminal4;  	break;  case 4:  	SelectedTerminal = textTerminal5;  	break;  }  
Missing Default,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,buttonTextTerminalClear_Click,The following switch statement is missing a default case: switch (tabTerminal.SelectedIndex) {  case 0:  	textTerminal1.Clear ();  	break;  case 1:  	textTerminal2.Clear ();  	break;  case 2:  	textTerminal3.Clear ();  	break;  case 3:  	textTerminal4.Clear ();  	break;  case 4:  	textTerminal5.Clear ();  	break;  }  
Missing Default,ArusSoft,MainForm,C:\repos\ArusSoft_dotNet-Application-WinTerminal\MainForm.cs,listHistory_SelectedIndexChanged,The following switch statement is missing a default case: switch (tabTerminal.SelectedIndex) {  case 0:  	terminal = textTerminal1;  	break;  case 1:  	terminal = textTerminal2;  	break;  case 2:  	terminal = textTerminal3;  	break;  case 3:  	terminal = textTerminal4;  	break;  case 4:  	terminal = textTerminal5;  	break;  }  
Missing Default,ArusSoft,Settings,C:\repos\ArusSoft_dotNet-Application-WinTerminal\Settings.cs,Load,The following switch statement is missing a default case: switch (property.PropertyType.Name) {  case "String":  	property.SetValue (this' reader.Value' null);  	break;  case "Int32":  	property.SetValue (this' Int32.Parse (reader.Value)' null);  	break;  case "Double":  	property.SetValue (this' Double.Parse (reader.Value)' null);  	break;  case "DateTime":  	property.SetValue (this' DateTime.Parse (reader.Value)' null);  	break;  case "Point":  	property.SetValue (this' (Point)(new PointConverter ()).ConvertFromString (reader.Value)' null);  	break;  case "Size":  	property.SetValue (this' (Size)(new SizeConverter ()).ConvertFromString (reader.Value)' null);  	break;  case "Color":  	property.SetValue (this' Color.FromArgb (Int32.Parse (reader.Value))' null);  	break;  case "Boolean":  	property.SetValue (this' Boolean.Parse (reader.Value)' null);  	break;  }  
