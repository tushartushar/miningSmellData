Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OtpSharp,InMemoryKey,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\InMemoryKey.cs,CreateHmacHash,Cyclomatic complexity of the method is 9
Complex Method,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,FromUrl,Cyclomatic complexity of the method is 8
Complex Method,OtpSharp,Ntp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Ntp.cs,GetTimeCorrectionFromNist,Cyclomatic complexity of the method is 8
Long Parameter List,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,GetTotpUrl,The method has 5 parameters.
Long Parameter List,OtpSharp,Totp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Totp.cs,Totp,The method has 5 parameters.
Long Parameter List,OtpSharp,Totp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Totp.cs,Totp,The method has 5 parameters.
Long Statement,NoesisLabs.OathMultiFactorAuthenticationProvider,AuthenticationAdapter,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\AuthenticationAdapter.cs,IsAvailableForUser,The length of the statement  "	DirectorySearcher mySearcher = new DirectorySearcher (entry' "(&(objectClass=user)(objectCategory=person)(userPrincipalName=" + upn + "))"); " is 140.
Long Statement,NoesisLabs.OathMultiFactorAuthenticationProvider,AuthenticationAdapter,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\AuthenticationAdapter.cs,TryEndAuthentication,The length of the statement  "			new Claim ("http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod"' "http://schemas.microsoft.com/ws/2012/12/authmethod/otp") " is 148.
Long Statement,NoesisLabs.OathMultiFactorAuthenticationProvider,AuthenticationAdapter,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\AuthenticationAdapter.cs,ValidateProofData,The length of the statement  "	bool isVerified = otp.VerifyTotp ((string)proofData.Properties [TOKEN_FORM_FIELD_NAME]' out step' new VerificationWindow (previous: 1' future: 1)); " is 147.
Long Statement,NoesisLabs.OathMultiFactorAuthenticationProvider,AuthenticationAdapter,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\AuthenticationAdapter.cs,ValidateProofData,The length of the statement  "		throw new ExternalAuthenticationException (String.Format (Resources.TokenAlreadyUsedMessage' "[" + this.upn + "] [" + step.ToString () + "]")' authContext); " is 156.
Long Statement,NoesisLabs.OathMultiFactorAuthenticationProvider,AuthenticationAdapter,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\AuthenticationAdapter.cs,GetEncodedSecretKey,The length of the statement  "	DirectorySearcher mySearcher = new DirectorySearcher (entry' "(&(objectClass=user)(objectCategory=person)(userPrincipalName=" + upn + "))"); " is 140.
Long Statement,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,GetBaseKeyUrl,The length of the statement  "	var url = string.Format ("otpauth://{0}/{1}?{2}={3}"' otpType.ToString ().ToLowerInvariant ()' System.Web.HttpUtility.UrlEncode (user)' UrlConstants.SecretParameter' Base32Encoder.Encode (key)); " is 194.
Long Statement,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,FromUrl,The length of the statement  "		throw new ArgumentException (string.Format ("rawUrl contains an invalid operation {0}. Must be hotp or totp"' otpTypeString)); " is 126.
Long Statement,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,HotpFromUrl,The length of the statement  "	if (!ValidateQueryStringFields (collection' UrlConstants.AlgorithmParameter' UrlConstants.CounterParameter' UrlConstants.DigitsParameter' UrlConstants.SecretParameter)) " is 168.
Long Statement,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,TotpFromUrl,The length of the statement  "	if (!ValidateQueryStringFields (collection' UrlConstants.AlgorithmParameter' UrlConstants.DigitsParameter' UrlConstants.PeriodParameter' UrlConstants.SecretParameter)) " is 167.
Long Statement,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,TotpFromUrl,The length of the statement  "			throw new ArgumentException (string.Format ("Invalid digits {0}' must be a number"' collection [UrlConstants.DigitsParameter])); " is 128.
Long Statement,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The length of the statement  "			throw new ArgumentException (string.Format ("Invalid digits {0}' must be a number"' collection [UrlConstants.DigitsParameter])); " is 128.
Long Statement,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The length of the statement  "	return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000; " is 192.
Long Statement,OtpSharp,Totp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Totp.cs,VerifyTotp,The length of the statement  "	return this.VerifyTotpForSpecificTime (this.correctedTime.GetCorrectedTime (timestamp)' totp' window' out timeStepMatched); " is 123.
Magic Number,Base32,Base32Encoder,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Base32\Base32Encoder.cs,Encode,The following statement contains a magic number: foreach (byte workingByte in data) {  	workingValue = (byte)(workingValue | (workingByte >> (byteBitCount - remainingBits)));  	outputBuffer [currentPosition++] = encodingChars [workingValue];  	if (remainingBits <= byteBitCount - encodedBitCount) {  		workingValue = (byte)((workingByte >> (byteBitCount - encodedBitCount - remainingBits)) & 31);  		outputBuffer [currentPosition++] = encodingChars [workingValue];  		remainingBits += encodedBitCount;  	}  	remainingBits -= byteBitCount - encodedBitCount;  	workingValue = (byte)((workingByte << remainingBits) & 31);  }  
Magic Number,Base32,Base32Encoder,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Base32\Base32Encoder.cs,Encode,The following statement contains a magic number: foreach (byte workingByte in data) {  	workingValue = (byte)(workingValue | (workingByte >> (byteBitCount - remainingBits)));  	outputBuffer [currentPosition++] = encodingChars [workingValue];  	if (remainingBits <= byteBitCount - encodedBitCount) {  		workingValue = (byte)((workingByte >> (byteBitCount - encodedBitCount - remainingBits)) & 31);  		outputBuffer [currentPosition++] = encodingChars [workingValue];  		remainingBits += encodedBitCount;  	}  	remainingBits -= byteBitCount - encodedBitCount;  	workingValue = (byte)((workingByte << remainingBits) & 31);  }  
Magic Number,Base32,Base32Encoder,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Base32\Base32Encoder.cs,Encode,The following statement contains a magic number: if (remainingBits <= byteBitCount - encodedBitCount) {  	workingValue = (byte)((workingByte >> (byteBitCount - encodedBitCount - remainingBits)) & 31);  	outputBuffer [currentPosition++] = encodingChars [workingValue];  	remainingBits += encodedBitCount;  }  
Magic Number,Base32,Base32Encoder,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Base32\Base32Encoder.cs,Encode,The following statement contains a magic number: workingValue = (byte)((workingByte >> (byteBitCount - encodedBitCount - remainingBits)) & 31);  
Magic Number,Base32,Base32Encoder,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Base32\Base32Encoder.cs,Encode,The following statement contains a magic number: workingValue = (byte)((workingByte << remainingBits) & 31);  
Magic Number,OtpSharp,Hotp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Hotp.cs,Compute,The following statement contains a magic number: return Otp.Digits (rawValue' 6);  
Magic Number,OtpSharp,InMemoryKey,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\InMemoryKey.cs,IsPlatformSupported,The following statement contains a magic number: lock (platformSupportSync) {  	if (platformSupportTested)  		return platformSupported;  	else {  		try {  			var dummyData = new byte[16];  			ProtectedMemory.Protect (dummyData' MemoryProtectionScope.SameProcess);  			platformSupported = true;  		}  		catch (PlatformNotSupportedException) {  			platformSupported = false;  		}  		finally {  			platformSupportTested = true;  		}  		return platformSupported;  	}  }  
Magic Number,OtpSharp,InMemoryKey,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\InMemoryKey.cs,IsPlatformSupported,The following statement contains a magic number: if (platformSupportTested)  	return platformSupported;  else {  	try {  		var dummyData = new byte[16];  		ProtectedMemory.Protect (dummyData' MemoryProtectionScope.SameProcess);  		platformSupported = true;  	}  	catch (PlatformNotSupportedException) {  		platformSupported = false;  	}  	finally {  		platformSupportTested = true;  	}  	return platformSupported;  }  
Magic Number,OtpSharp,InMemoryKey,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\InMemoryKey.cs,IsPlatformSupported,The following statement contains a magic number: try {  	var dummyData = new byte[16];  	ProtectedMemory.Protect (dummyData' MemoryProtectionScope.SameProcess);  	platformSupported = true;  }  catch (PlatformNotSupportedException) {  	platformSupported = false;  }  finally {  	platformSupportTested = true;  }  
Magic Number,OtpSharp,KeyGeneration,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyGeneration.cs,LengthForMode,The following statement contains a magic number: switch (mode) {  case OtpHashMode.Sha256:  	return 32;  case OtpHashMode.Sha512:  	return 64;  default:  	//case OtpHashMode.Sha1:  	return 20;  }  
Magic Number,OtpSharp,KeyGeneration,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyGeneration.cs,LengthForMode,The following statement contains a magic number: switch (mode) {  case OtpHashMode.Sha256:  	return 32;  case OtpHashMode.Sha512:  	return 64;  default:  	//case OtpHashMode.Sha1:  	return 20;  }  
Magic Number,OtpSharp,KeyGeneration,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyGeneration.cs,LengthForMode,The following statement contains a magic number: switch (mode) {  case OtpHashMode.Sha256:  	return 32;  case OtpHashMode.Sha512:  	return 64;  default:  	//case OtpHashMode.Sha1:  	return 20;  }  
Magic Number,OtpSharp,KeyGeneration,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyGeneration.cs,LengthForMode,The following statement contains a magic number: return 32;  
Magic Number,OtpSharp,KeyGeneration,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyGeneration.cs,LengthForMode,The following statement contains a magic number: return 64;  
Magic Number,OtpSharp,KeyGeneration,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyGeneration.cs,LengthForMode,The following statement contains a magic number: return 20;  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,GetTotpUrl,The following statement contains a magic number: if (step != 30)  	url += CreateParameter (UrlConstants.PeriodParameter' step);  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,GetBaseKeyUrl,The following statement contains a magic number: if (size != 6 && size != 8)  	throw new ArgumentException ("size must be 6 or 8");  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,GetBaseKeyUrl,The following statement contains a magic number: if (size != 6 && size != 8)  	throw new ArgumentException ("size must be 6 or 8");  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,GetBaseKeyUrl,The following statement contains a magic number: if (size == 8)  	url += CreateParameter (UrlConstants.DigitsParameter' size);  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The following statement contains a magic number: if (collection.AllKeys.Contains (UrlConstants.DigitsParameter)) {  	if (int.TryParse (collection [UrlConstants.DigitsParameter]' out localDigits)) {  		if (localDigits != 6 && localDigits != 8)  			throw new ArgumentException (string.Format ("Invalid Digits {0}' must be 6 or 8"' localDigits));  		else  			digits = localDigits;  	}  	else  		throw new ArgumentException (string.Format ("Invalid digits {0}' must be a number"' collection [UrlConstants.DigitsParameter]));  }  else  	digits = localDigits;  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The following statement contains a magic number: if (collection.AllKeys.Contains (UrlConstants.DigitsParameter)) {  	if (int.TryParse (collection [UrlConstants.DigitsParameter]' out localDigits)) {  		if (localDigits != 6 && localDigits != 8)  			throw new ArgumentException (string.Format ("Invalid Digits {0}' must be 6 or 8"' localDigits));  		else  			digits = localDigits;  	}  	else  		throw new ArgumentException (string.Format ("Invalid digits {0}' must be a number"' collection [UrlConstants.DigitsParameter]));  }  else  	digits = localDigits;  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The following statement contains a magic number: if (int.TryParse (collection [UrlConstants.DigitsParameter]' out localDigits)) {  	if (localDigits != 6 && localDigits != 8)  		throw new ArgumentException (string.Format ("Invalid Digits {0}' must be 6 or 8"' localDigits));  	else  		digits = localDigits;  }  else  	throw new ArgumentException (string.Format ("Invalid digits {0}' must be a number"' collection [UrlConstants.DigitsParameter]));  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The following statement contains a magic number: if (int.TryParse (collection [UrlConstants.DigitsParameter]' out localDigits)) {  	if (localDigits != 6 && localDigits != 8)  		throw new ArgumentException (string.Format ("Invalid Digits {0}' must be 6 or 8"' localDigits));  	else  		digits = localDigits;  }  else  	throw new ArgumentException (string.Format ("Invalid digits {0}' must be a number"' collection [UrlConstants.DigitsParameter]));  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The following statement contains a magic number: if (localDigits != 6 && localDigits != 8)  	throw new ArgumentException (string.Format ("Invalid Digits {0}' must be 6 or 8"' localDigits));  else  	digits = localDigits;  
Magic Number,OtpSharp,KeyUrl,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\KeyUrl.cs,ParseAndValidateQueryString,The following statement contains a magic number: if (localDigits != 6 && localDigits != 8)  	throw new ArgumentException (string.Format ("Invalid Digits {0}' must be 6 or 8"' localDigits));  else  	digits = localDigits;  
Magic Number,OtpSharp,Ntp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Ntp.cs,GetTimeCorrectionFromNist,The following statement contains a magic number: foreach (string server in servers) {  	#if NET35  	#else  	token.ThrowIfCancellationRequested ();  	#endif  	try {  		string response = null;  		using (var client = new TcpClient (server' 13)) {  			var stream = client.GetStream ();  			using (var reader = new StreamReader (stream)) {  				response = reader.ReadToEnd ();  			}  		}  		DateTime networkTime;  		if (TryParseResponse (response' out networkTime)) {  			return new TimeCorrection (networkTime);  		}  	}  	catch (Exception e) {  		Debug.Write (e.Message);  		continue;  		// Loop around and try again on a different endpoint  	}  }  
Magic Number,OtpSharp,Ntp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Ntp.cs,GetTimeCorrectionFromNist,The following statement contains a magic number: try {  	string response = null;  	using (var client = new TcpClient (server' 13)) {  		var stream = client.GetStream ();  		using (var reader = new StreamReader (stream)) {  			response = reader.ReadToEnd ();  		}  	}  	DateTime networkTime;  	if (TryParseResponse (response' out networkTime)) {  		return new TimeCorrection (networkTime);  	}  }  catch (Exception e) {  	Debug.Write (e.Message);  	continue;  	// Loop around and try again on a different endpoint  }  
Magic Number,OtpSharp,Ntp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Ntp.cs,GetTimeCorrectionFromNist,The following statement contains a magic number: using (var client = new TcpClient (server' 13)) {  	var stream = client.GetStream ();  	using (var reader = new StreamReader (stream)) {  		response = reader.ReadToEnd ();  	}  }  
Magic Number,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The following statement contains a magic number: return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000;  
Magic Number,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The following statement contains a magic number: return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000;  
Magic Number,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The following statement contains a magic number: return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000;  
Magic Number,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The following statement contains a magic number: return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000;  
Magic Number,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The following statement contains a magic number: return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000;  
Magic Number,OtpSharp,Otp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Otp.cs,CalculateOtp,The following statement contains a magic number: return (hmacComputedHash [offset] & 0x7f) << 24 | (hmacComputedHash [offset + 1] & 0xff) << 16 | (hmacComputedHash [offset + 2] & 0xff) << 8 | (hmacComputedHash [offset + 3] & 0xff) % 1000000;  
Magic Number,OtpSharp,Totp,C:\repos\NoesisLabs_OathMultiFactorAuthenticationProvider\src\NoesisLabs.OathMultiFactorAuthenticationProvider\Otp-Sharp\Totp.cs,VerifyParameters,The following statement contains a magic number: if (!(totpSize <= 10))  	throw new ArgumentOutOfRangeException ("totpSize");  
