Implementation smell,Namespace,Class,File,Method,Description
Long Method,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnWaveClear,The method has 108 lines of code.
Long Method,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The method has 129 lines of code.
Complex Method,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnPermaActive,Cyclomatic complexity of the method is 8
Complex Method,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,Cyclomatic complexity of the method is 12
Complex Method,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnWaveClear,Cyclomatic complexity of the method is 20
Complex Method,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,Cyclomatic complexity of the method is 19
Complex Method,Kalista,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SoulBoundSaver.cs,Obj_AI_Base_OnProcessSpellCast,Cyclomatic complexity of the method is 8
Long Identifier,Kalista,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Damages.cs,,The length of the parameter rawRendDamagePerSpearMultiplier is 31.
Long Statement,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnPermaActive,The length of the statement  "                    ObjectManager.Get<Obj_AI_Minion>().Any(m => m.IsValidTarget(E.Range) && (m.BaseSkinName.Contains("MinionSiege") || m.BaseSkinName.Contains("Dragon") || m.BaseSkinName.Contains("Baron")) && m.IsRendKillable())) " is 209.
Long Statement,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The length of the statement  "            var target = TargetSelector.GetTarget(Q.IsEnabledAndReady(Mode.COMBO) ? Q.Range : (E.Range * 1.2f)' TargetSelector.DamageType.Physical); " is 136.
Long Statement,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The length of the statement  "                if (E.IsEnabled(Mode.COMBO) && (E.Instance.State == SpellState.Ready || E.Instance.State == SpellState.Surpressed) && target.HasRendBuff()) " is 139.
Long Statement,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The length of the statement  "                            // Check if a minion can die with one AA and E. Also' the AA minion has be be behind the player direction for a further leap " is 124.
Long Statement,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The length of the statement  "                            var minion = VectorHelper.GetDashObjects(minions).Find(m => m.Health > player.GetAutoAttackDamage(m) && m.Health < player.GetAutoAttackDamage(m) + Damages.GetRendDamage(m' 1)); " is 176.
Long Statement,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnWaveClear,The length of the statement  "                            var colliding = LeagueSharp.Common.Collision.GetCollision(new List<Vector3>() { player.ServerPosition.Extend(Prediction.GetPrediction(input).UnitPosition' Q.Range) }' input) " is 173.
Long Statement,Kalista,CustomDamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\CustomDamageIndicator.cs,Drawing_OnDraw,The length of the statement  "                    var startPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + damagePercentage * BAR_WIDTH)' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5); " is 150.
Long Statement,Kalista,CustomDamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\CustomDamageIndicator.cs,Drawing_OnDraw,The length of the statement  "                    var endPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + currentHealthPercentage * BAR_WIDTH) + 1' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5); " is 159.
Long Statement,Kalista,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Damages.cs,GetRendDamage,The length of the statement  "            return ((float)player.CalcDamage(target' Damage.DamageType.Physical' GetRawRendDamage(target' customStacks)) - Config.SliderLinks["spellReductionE"].Value.Value) * 0.98f; " is 170.
Long Statement,Kalista,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Damages.cs,GetRawRendDamage,The length of the statement  "                return (rawRendDamage[SpellManager.E.Level - 1] + rawRendDamageMultiplier[SpellManager.E.Level - 1] * player.TotalAttackDamage()) + // Base damage " is 146.
Long Statement,Kalista,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Damages.cs,GetRawRendDamage,The length of the statement  "                       (rawRendDamagePerSpear[SpellManager.E.Level - 1] + rawRendDamagePerSpearMultiplier[SpellManager.E.Level - 1] * player.TotalAttackDamage()); // Damage per spear " is 159.
Long Statement,Kalista,ItemManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ItemManager.cs,UseYoumuu,The length of the statement  "            if (Config.BoolLinks["itemsYoumuu"].Value && YOUMUU.IsReady() && target.IsValidTarget(Orbwalking.GetRealAutoAttackRange(player) + 50)) " is 134.
Long Statement,Kalista,Program,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Program.cs,Drawing_OnDraw,The length of the statement  "                Render.Circle.DrawCircle(ActiveModes.fleeTargetPosition.Value' 50' ActiveModes.wallJumpPossible ? Color.Green : SpellManager.Q.IsReady() ? Color.Red : Color.Teal' 10); " is 167.
Long Statement,Kalista,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SoulBoundSaver.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                    if ((!(sender is Obj_AI_Hero) || args.SData.IsAutoAttack()) && args.Target != null && args.Target.NetworkId == SoulBound.NetworkId) " is 131.
Long Statement,Kalista,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SoulBoundSaver.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                        _incomingDamage.Add(SoulBound.ServerPosition.Distance(sender.ServerPosition) / args.SData.MissileSpeed + Game.Time' (float)sender.GetAutoAttackDamage(SoulBound)); " is 162.
Long Statement,Kalista,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SoulBoundSaver.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                            if (slot == attacker.GetSpellSlot("SummonerDot") && args.Target != null && args.Target.NetworkId == SoulBound.NetworkId) " is 120.
Long Statement,Kalista,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\UpdateChecker.cs,Initialize,The length of the statement  "                        var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path)); " is 126.
Long Statement,Kalista,VectorHelper,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\VectorHelper.cs,GetDashObjects,The length of the statement  "            var apexPoint = player.ServerPosition.To2D() + (player.ServerPosition.To2D() - Game.CursorPos.To2D()).Normalized() * Orbwalking.GetRealAutoAttackRange(player); " is 159.
Long Statement,Kalista,VectorHelper,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\VectorHelper.cs,GetDashObjects,The length of the statement  "            return objects.Where(o => VectorHelper.IsLyingInCone(o.ServerPosition.To2D()' apexPoint' player.ServerPosition.To2D()' Math.PI)).OrderBy(o => o.Distance(apexPoint' true)).ToList(); " is 180.
Complex Conditional,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnPermaActive,The conditional expression  "Config.BoolLinks["miscBigE"].Value &&                      ObjectManager.Get<Obj_AI_Minion>().Any(m => m.IsValidTarget(E.Range) && (m.BaseSkinName.Contains("MinionSiege") || m.BaseSkinName.Contains("Dragon") || m.BaseSkinName.Contains("Baron")) && m.IsRendKillable())"  is complex.
Complex Conditional,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The conditional expression  "E.IsEnabled(Mode.COMBO) && (E.Instance.State == SpellState.Ready || E.Instance.State == SpellState.Surpressed) && target.HasRendBuff()"  is complex.
Complex Conditional,Kalista,Extensions,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Extensions.cs,HasUndyingBuff,The conditional expression  "target.ChampionName == "Tryndamere" &&                  target.Buffs.Any(b => b.Caster.NetworkId == target.NetworkId && b.IsValidBuff() && b.DisplayName == "Undying Rage")"  is complex.
Complex Conditional,Kalista,Extensions,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Extensions.cs,HasUndyingBuff,The conditional expression  "HeroManager.Allies.Any(o =>                      !o.IsMe &&                      o.Buffs.Any(b => b.Caster.NetworkId == target.NetworkId && b.IsValidBuff() && b.DisplayName == "PoppyDITarget"))"  is complex.
Complex Conditional,Kalista,ItemManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ItemManager.cs,UseBotrk,The conditional expression  "Config.BoolLinks["itemsBotrk"].Value && BOTRK.IsReady() && target.IsValidTarget(BOTRK.Range) &&                  player.Health + player.GetItemDamage(target' Damage.DamageItems.Botrk) < player.MaxHealth"  is complex.
Complex Conditional,Kalista,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SoulBoundSaver.cs,Obj_AI_Base_OnProcessSpellCast,The conditional expression  "(!(sender is Obj_AI_Hero) || args.SData.IsAutoAttack()) && args.Target != null && args.Target.NetworkId == SoulBound.NetworkId"  is complex.
Complex Conditional,Kalista,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SoulBoundSaver.cs,Obj_AI_Base_OnProcessSpellCast,The conditional expression  "slot.HasFlag(SpellSlot.Q | SpellSlot.W | SpellSlot.E | SpellSlot.R) &&                                  ((args.Target != null && args.Target.NetworkId == SoulBound.NetworkId) ||                                  args.End.Distance(SoulBound.ServerPosition' true) < Math.Pow(args.SData.LineWidth' 2))"  is complex.
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The following statement contains a magic number: var target = TargetSelector.GetTarget(Q.IsEnabledAndReady(Mode.COMBO) ? Q.Range : (E.Range * 1.2f)' TargetSelector.DamageType.Physical);
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnCombo,The following statement contains a magic number: player.Distance(target' true) > Math.Pow(Orbwalking.GetRealAutoAttackRange(target)' 2)
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: Environment.TickCount - wallJumpInitTime > 500
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: wallCheck = VectorHelper.GetFirstWallPoint((Vector3)wallCheck' Game.CursorPos' 5);
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: float maxAngle = 80;
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: float step = maxAngle / 20;
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: currentAngle = (currentStep) * (float)Math.PI / 180;
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: checkPoint = wallPosition + 300 * direction.To3D();
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: Vector3 wallPositionOpposite = (Vector3)VectorHelper.GetFirstWallPoint((Vector3)wallCheck' wallPosition' 5);
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: player.Distance(wallPositionOpposite' true) < Math.Pow(300 - player.BoundingRadius / 2' 2)
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: player.Distance(wallPositionOpposite' true) < Math.Pow(300 - player.BoundingRadius / 2' 2)
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: player.Distance(wallPositionOpposite' true) < Math.Pow(300 - player.BoundingRadius / 2' 2)
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: player.GetPath(wallPositionOpposite).ToList().To2D().PathLength() - player.Distance(wallPositionOpposite) > 200
Magic Number,Kalista,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ActiveModes.cs,OnFlee,The following statement contains a magic number: Orbwalking.Orbwalk(target' movePosition' 90f' 0f' false' false);
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("comboNumE"' subMenu.AddLinkedSlider("Stacks for E"' 5' 1' 20));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("comboNumE"' subMenu.AddLinkedSlider("Stacks for E"' 5' 1' 20));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("comboActive"' subMenu.AddLinkedKeyBind("Combo active"' 32' KeyBindType.Press));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("harassMana"' subMenu.AddLinkedSlider("Mana usage in percent (%)"' 30));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("waveNumQ"' subMenu.AddLinkedSlider("Minion kill number for Q"' 3' 1' 10));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("waveNumQ"' subMenu.AddLinkedSlider("Minion kill number for Q"' 3' 1' 10));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("waveNumE"' subMenu.AddLinkedSlider("Minion kill number for E"' 2' 1' 10));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("waveNumE"' subMenu.AddLinkedSlider("Minion kill number for E"' 2' 1' 10));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("waveMana"' subMenu.AddLinkedSlider("Mana usage in percent (%)"' 30));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("spellReductionE"' subMenu.AddLinkedSlider("E damage reduction"' 20));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawDamageE"' subMenu.AddLinkedCircle("E damage on healthbar"' true' Color.FromArgb(150' Color.Green)' 0));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawRangeQ"' subMenu.AddLinkedCircle("Q range"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.Q.Range));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawRangeW"' subMenu.AddLinkedCircle("W range"' true' Color.FromArgb(150' Color.MediumPurple)' SpellManager.W.Range));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawRangeEsmall"' subMenu.AddLinkedCircle("E range (leaving)"' false' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range - 200));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawRangeEsmall"' subMenu.AddLinkedCircle("E range (leaving)"' false' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range - 200));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawRangeEactual"' subMenu.AddLinkedCircle("E range (actual)"' true' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range));
Magic Number,Kalista,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Config.cs,Config,The following statement contains a magic number: ProcessLink("drawRangeR"' subMenu.AddLinkedCircle("R range"' false' Color.FromArgb(150' Color.Red)' SpellManager.R.Range));
Magic Number,Kalista,CustomDamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\CustomDamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: var startPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + damagePercentage * BAR_WIDTH)' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5);
Magic Number,Kalista,CustomDamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\CustomDamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: var endPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + currentHealthPercentage * BAR_WIDTH) + 1' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5);
Magic Number,Kalista,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Damages.cs,GetRendDamage,The following statement contains a magic number: return ((float)player.CalcDamage(target' Damage.DamageType.Physical' GetRawRendDamage(target' customStacks)) - Config.SliderLinks["spellReductionE"].Value.Value) * 0.98f;
Magic Number,Kalista,ItemManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\ItemManager.cs,UseYoumuu,The following statement contains a magic number: Config.BoolLinks["itemsYoumuu"].Value && YOUMUU.IsReady() && target.IsValidTarget(Orbwalking.GetRealAutoAttackRange(player) + 50)
Magic Number,Kalista,Program,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Program.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: Utility.DelayAction.Add(250' Orbwalking.ResetAutoAttackTimer);
Magic Number,Kalista,Program,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Program.cs,Drawing_OnDraw,The following statement contains a magic number: Render.Circle.DrawCircle(ActiveModes.fleeTargetPosition.Value' 50' ActiveModes.wallJumpPossible ? Color.Green : SpellManager.Q.IsReady() ? Color.Red : Color.Teal' 10);
Magic Number,Kalista,Program,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\Program.cs,Drawing_OnDraw,The following statement contains a magic number: Render.Circle.DrawCircle(ActiveModes.fleeTargetPosition.Value' 50' ActiveModes.wallJumpPossible ? Color.Green : SpellManager.Q.IsReady() ? Color.Red : Color.Teal' 10);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1150);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: W = new Spell(SpellSlot.W' 5000);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: E = new Spell(SpellSlot.E' 1000);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1500);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0.25f' 40' 2400' true' SkillshotType.SkillshotLine);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0.25f' 40' 2400' true' SkillshotType.SkillshotLine);
Magic Number,Kalista,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0.25f' 40' 2400' true' SkillshotType.SkillshotLine);
Magic Number,Kalista,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\UpdateChecker.cs,Initialize,The following statement contains a magic number: new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path));                          foreach (var line in data.Split('\n'))                          {                              // Skip comments                              if (line.StartsWith("//"))                              {                                  continue;                              }                                // Search for AssemblyVersion                              if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  var serverVersion = new System.Version(line.Substring(28' (line.Length - 4) - 28 + 1));                                    // Compare both versions                                  var assemblyName = Assembly.GetExecutingAssembly().GetName();                                  if (serverVersion > assemblyName.Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[{0}] Update available: {1} => {2}!"'                                              assemblyName.Name'                                              assemblyName.Version'                                              serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update:\n{0}"' e.Message);                      }                  }).Start();
Magic Number,Kalista,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\UpdateChecker.cs,Initialize,The following statement contains a magic number: new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path));                          foreach (var line in data.Split('\n'))                          {                              // Skip comments                              if (line.StartsWith("//"))                              {                                  continue;                              }                                // Search for AssemblyVersion                              if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  var serverVersion = new System.Version(line.Substring(28' (line.Length - 4) - 28 + 1));                                    // Compare both versions                                  var assemblyName = Assembly.GetExecutingAssembly().GetName();                                  if (serverVersion > assemblyName.Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[{0}] Update available: {1} => {2}!"'                                              assemblyName.Name'                                              assemblyName.Version'                                              serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update:\n{0}"' e.Message);                      }                  }).Start();
Magic Number,Kalista,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\UpdateChecker.cs,Initialize,The following statement contains a magic number: new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path));                          foreach (var line in data.Split('\n'))                          {                              // Skip comments                              if (line.StartsWith("//"))                              {                                  continue;                              }                                // Search for AssemblyVersion                              if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  var serverVersion = new System.Version(line.Substring(28' (line.Length - 4) - 28 + 1));                                    // Compare both versions                                  var assemblyName = Assembly.GetExecutingAssembly().GetName();                                  if (serverVersion > assemblyName.Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[{0}] Update available: {1} => {2}!"'                                              assemblyName.Name'                                              assemblyName.Version'                                              serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update:\n{0}"' e.Message);                      }                  }).Start();
Magic Number,Kalista,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\UpdateChecker.cs,Initialize,The following statement contains a magic number: new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path));                          foreach (var line in data.Split('\n'))                          {                              // Skip comments                              if (line.StartsWith("//"))                              {                                  continue;                              }                                // Search for AssemblyVersion                              if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  var serverVersion = new System.Version(line.Substring(28' (line.Length - 4) - 28 + 1));                                    // Compare both versions                                  var assemblyName = Assembly.GetExecutingAssembly().GetName();                                  if (serverVersion > assemblyName.Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[{0}] Update available: {1} => {2}!"'                                              assemblyName.Name'                                              assemblyName.Version'                                              serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update:\n{0}"' e.Message);                      }                  }).Start();
Magic Number,Kalista,VectorHelper,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\VectorHelper.cs,IsLyingInCone,The following statement contains a magic number: double halfAperture = aperture / 2;
Missing Default,Kalista,SpellQueue,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Kalista\SpellQueue.cs,Spellbook_OnCastSpell,The following switch statement is missing a default case: switch (args.Slot)                  {                      case SpellSlot.Q:                      case SpellSlot.W:                      case SpellSlot.E:                      case SpellSlot.R:                            if (IsReady)                          {                              // We are safe to cast a spell                              sendTime = TickCount;                          }                          else                          {                              // Don't allow the spellcast                              args.Process = false;                          }                          break;                  }
