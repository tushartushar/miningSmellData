Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,GetComboResult,Cyclomatic complexity of the method is 9
Long Statement,Essentials,Program,C:\repos\Hellsing_LeagueSharp\Essentials\Program.cs,Game_OnGameLoad,The length of the statement  "                        var data = await client.DownloadStringTaskAsync("https://raw.github.com/Hellsing/LeagueSharp/master/Essentials/Properties/AssemblyInfo.cs"); " is 140.
Long Statement,Essentials,Program,C:\repos\Hellsing_LeagueSharp\Essentials\Program.cs,Game_OnGameLoad,The length of the statement  "                                        Game.PrintChat("[Essentials] There is an updated version available: {0} => {1}!"' Assembly.GetExecutingAssembly().GetName().Version' serverVersion); " is 148.
Long Statement,Essentials.Summoners,Smite,C:\repos\Hellsing_LeagueSharp\Essentials\Summoners\Smite.cs,OnGameUpdate,The length of the statement  "                    if (monster.Distance(ObjectManager.Player' false) - (ObjectManager.Player.BoundingRadius + monster.BoundingRadius) > 500) " is 121.
Empty Catch Block,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,GetComboResult,The method has an empty catch block.
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,KillMarker,C:\repos\Hellsing_LeagueSharp\Essentials\KillMarker.cs,Initialize,The following statement contains a magic number: foreach (var enemy in HeroManager.Enemies)              {                  #region Sprite setup                    // Initialize the sprite                  var sprite = new Render.Sprite(Resources.DeathSkull' enemy.HPBarPosition);                    // Scale it down since it has a bigger resolution                  sprite.Scale = new Vector2(0.08f' 0.08f);                    sprite.PositionUpdate += () =>                  {                      return new Vector2(enemy.HPBarPosition.X + 140' enemy.HPBarPosition.Y + 10);                  };                    sprite.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawIcon.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position)) &&                          GetComboResult(enemy).IsKillable;                  };                    // Render sprite                  sprite.Add();                    #endregion                    #region Text setup                    // Initialize the text                  var text = new Render.Text(""' enemy' new Vector2(20' 50)' 18' new ColorBGRA(255' 255' 255' 255));                    text.VisibleCondition += s =>                  {                      return                          Enabled.Value &&                          DrawText.Value &&                          Render.OnScreen(Drawing.WorldToScreen(enemy.Position));                  };                    text.TextUpdate += () =>                  {                      return GetComboResult(enemy).Text;                  };                    // Set outlined and render text                  text.OutLined = true;                  text.Add();                    #endregion              }
Magic Number,Essentials,Program,C:\repos\Hellsing_LeagueSharp\Essentials\Program.cs,Game_OnGameLoad,The following statement contains a magic number: using (var client = new WebClient())              {                  new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync("https://raw.github.com/Hellsing/LeagueSharp/master/Essentials/Properties/AssemblyInfo.cs");                          foreach (var line in data.Split('\n'))                          {                              if (line.StartsWith("//"))                              {                                  continue;                              }                                if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  int length = (line.Length - 4) - 28 + 1;                                  var serverVersion = new System.Version(line.Substring(28' length));                                    // Compare both versions                                  if (serverVersion > Assembly.GetExecutingAssembly().GetName().Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[Essentials] There is an updated version available: {0} => {1}!"' Assembly.GetExecutingAssembly().GetName().Version' serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update: {0}"' e.Message);                      }                  }).Start();              }
Magic Number,Essentials,Program,C:\repos\Hellsing_LeagueSharp\Essentials\Program.cs,Game_OnGameLoad,The following statement contains a magic number: using (var client = new WebClient())              {                  new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync("https://raw.github.com/Hellsing/LeagueSharp/master/Essentials/Properties/AssemblyInfo.cs");                          foreach (var line in data.Split('\n'))                          {                              if (line.StartsWith("//"))                              {                                  continue;                              }                                if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  int length = (line.Length - 4) - 28 + 1;                                  var serverVersion = new System.Version(line.Substring(28' length));                                    // Compare both versions                                  if (serverVersion > Assembly.GetExecutingAssembly().GetName().Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[Essentials] There is an updated version available: {0} => {1}!"' Assembly.GetExecutingAssembly().GetName().Version' serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update: {0}"' e.Message);                      }                  }).Start();              }
Magic Number,Essentials,Program,C:\repos\Hellsing_LeagueSharp\Essentials\Program.cs,Game_OnGameLoad,The following statement contains a magic number: using (var client = new WebClient())              {                  new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync("https://raw.github.com/Hellsing/LeagueSharp/master/Essentials/Properties/AssemblyInfo.cs");                          foreach (var line in data.Split('\n'))                          {                              if (line.StartsWith("//"))                              {                                  continue;                              }                                if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  int length = (line.Length - 4) - 28 + 1;                                  var serverVersion = new System.Version(line.Substring(28' length));                                    // Compare both versions                                  if (serverVersion > Assembly.GetExecutingAssembly().GetName().Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[Essentials] There is an updated version available: {0} => {1}!"' Assembly.GetExecutingAssembly().GetName().Version' serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update: {0}"' e.Message);                      }                  }).Start();              }
Magic Number,Essentials,Program,C:\repos\Hellsing_LeagueSharp\Essentials\Program.cs,Game_OnGameLoad,The following statement contains a magic number: using (var client = new WebClient())              {                  new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync("https://raw.github.com/Hellsing/LeagueSharp/master/Essentials/Properties/AssemblyInfo.cs");                          foreach (var line in data.Split('\n'))                          {                              if (line.StartsWith("//"))                              {                                  continue;                              }                                if (line.StartsWith("[assembly: AssemblyVersion"))                              {                                  // TODO: Use Regex for this...                                  int length = (line.Length - 4) - 28 + 1;                                  var serverVersion = new System.Version(line.Substring(28' length));                                    // Compare both versions                                  if (serverVersion > Assembly.GetExecutingAssembly().GetName().Version)                                  {                                      Utility.DelayAction.Add(5000' () =>                                      {                                          Game.PrintChat("[Essentials] There is an updated version available: {0} => {1}!"' Assembly.GetExecutingAssembly().GetName().Version' serverVersion);                                      });                                  }                              }                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update: {0}"' e.Message);                      }                  }).Start();              }
Magic Number,Essentials.Summoners,Ignite,C:\repos\Hellsing_LeagueSharp\Essentials\Summoners\Ignite.cs,OnGameUpdate,The following statement contains a magic number: if (Enabled.Value)              {                  if (Q.Value && ObjectManager.Player.Spellbook.GetSpell(SpellSlot.Q).State == SpellState.Ready)                  {                      return;                  }                  if (W.Value && ObjectManager.Player.Spellbook.GetSpell(SpellSlot.W).State == SpellState.Ready)                  {                      return;                  }                  if (E.Value && ObjectManager.Player.Spellbook.GetSpell(SpellSlot.E).State == SpellState.Ready)                  {                      return;                  }                  if (R.Value && ObjectManager.Player.Spellbook.GetSpell(SpellSlot.R).State == SpellState.Ready)                  {                      return;                  }                    // Get a killable target with Ignite                  var target = HeroManager.Enemies.Find(                      o =>                           o.IsValidTarget(600) &&                          o.Health < ObjectManager.Player.GetSummonerSpellDamage(o' Damage.SummonerSpell.Ignite));                  if (target != null)                  {                      // Cast ignite on the target                      ObjectManager.Player.Spellbook.CastSpell(Slot' target);                  }              }
Magic Number,Essentials.Summoners,Smite,C:\repos\Hellsing_LeagueSharp\Essentials\Summoners\Smite.cs,OnGameUpdate,The following statement contains a magic number: if ((Enabled.Value || EnabledHold.Value.Active))              {                  // Get all enabled camps                  var enabled = EnabledCamps;                    foreach (var monster in ObjectManager.Get<Obj_AI_Minion>())                  {                      // Skip monsters which are out of smite range                      if (monster.Distance(ObjectManager.Player' false) - (ObjectManager.Player.BoundingRadius + monster.BoundingRadius) > 500)                      {                          continue;                      }                        // Check if a smite target is around                      if (enabled.Any(s => monster.BaseSkinName.Equals(s)))                      {                          // Found a smiteable monster' check it it's killable                          if (monster.Health < SmiteDamage)                          {                              // Cast smite                              ObjectManager.Player.Spellbook.CastSpell(Slot' monster);                              break;                          }                      }                  }              }
