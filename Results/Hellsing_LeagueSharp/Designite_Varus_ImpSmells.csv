Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Varus,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\ActiveModes.cs,OnCombo,Cyclomatic complexity of the method is 15
Complex Method,Varus,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\ActiveModes.cs,OnHarass,Cyclomatic complexity of the method is 16
Complex Method,Varus,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\ActiveModes.cs,OnJungleClear,Cyclomatic complexity of the method is 10
Complex Method,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,Cyclomatic complexity of the method is 8
Long Statement,Varus,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\ActiveModes.cs,OnCombo,The length of the statement  "                                    var distance = player.ServerPosition.Distance(prediction.UnitPosition + extraRange * (prediction.UnitPosition - player.ServerPosition).Normalized()' true); " is 155.
Long Statement,Varus,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\ActiveModes.cs,OnHarass,The length of the statement  "                                var distance = player.ServerPosition.Distance(prediction.UnitPosition + extraRange * (prediction.UnitPosition - player.ServerPosition).Normalized()' true); " is 155.
Long Statement,Varus,ActiveModes,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\ActiveModes.cs,OnHarass,The length of the statement  "                    if (W.Level == 0 || target.GetBlightStacks() >= Config.SliderLinks["harassStacksQ"].Value.Value || Q.GetRealDamage(target) > target.Health) " is 139.
Long Statement,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The length of the statement  "            ProcessLink("drawRangeQ"' subMenu.AddLinkedCircle("Q range"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.Q.Range)); " is 128.
Long Statement,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The length of the statement  "            ProcessLink("drawRangeQMax"' subMenu.AddLinkedCircle("Q range (max)"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.Q.ChargedMaxRange)); " is 147.
Long Statement,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The length of the statement  "            ProcessLink("drawRangeE"' subMenu.AddLinkedCircle("E range"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.E.Range)); " is 128.
Long Statement,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The length of the statement  "            ProcessLink("drawRangeR"' subMenu.AddLinkedCircle("R range"' true' Color.FromArgb(150' Color.DarkRed)' SpellManager.R.Range)); " is 126.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%). " is 147.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost. " is 137.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) + " is 128.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times). " is 128.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters). " is 178.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                        extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks()); " is 176.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds. " is 125.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds. " is 144.
Long Statement,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The length of the statement  "                    // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them. " is 133.
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("comboRangeQ"' subSubMenu.AddLinkedSlider("Extra range on cast"' 200' 0' 200));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("comboRangeQ"' subSubMenu.AddLinkedSlider("Extra range on cast"' 200' 0' 200));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("comboStacksQ"' subSubMenu.AddLinkedSlider("W stacks to begin the charge"' 3' 0' 3));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("comboStacksQ"' subSubMenu.AddLinkedSlider("W stacks to begin the charge"' 3' 0' 3));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("comboActive"' subMenu.AddLinkedKeyBind("Combo active"' 32' KeyBindType.Press));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("harassExtraRangeQ"' subSubMenu.AddLinkedSlider("Extra range on cast"' 200' 0' 200));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("harassExtraRangeQ"' subSubMenu.AddLinkedSlider("Extra range on cast"' 200' 0' 200));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("harassStacksQ"' subSubMenu.AddLinkedSlider("W stacks to begin the charge"' 0' 0' 3));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("harassMana"' subMenu.AddLinkedSlider("Mana usage in percent (%)"' 30));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("waveNumE"' subMenu.AddLinkedSlider("Hit number for E"' 3' 1' 10));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("waveNumE"' subMenu.AddLinkedSlider("Hit number for E"' 3' 1' 10));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("waveMana"' subMenu.AddLinkedSlider("Mana usage in percent (%)"' 30));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("drawRangeQ"' subMenu.AddLinkedCircle("Q range"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.Q.Range));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("drawRangeQMax"' subMenu.AddLinkedCircle("Q range (max)"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.Q.ChargedMaxRange));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("drawRangeE"' subMenu.AddLinkedCircle("E range"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.E.Range));
Magic Number,Varus,Config,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Config.cs,SetupMenu,The following statement contains a magic number: ProcessLink("drawRangeR"' subMenu.AddLinkedCircle("R range"' true' Color.FromArgb(150' Color.DarkRed)' SpellManager.R.Range));
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
Magic Number,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following statement contains a magic number: return (float)player.CalcDamage(target' damageType' damage) + extraDamage - 20;
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1600);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: E = new Spell(SpellSlot.E' 925);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1200);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0' 70' 1900' false' SkillshotType.SkillshotLine);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0' 70' 1900' false' SkillshotType.SkillshotLine);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetCharged("VarusQ"' "VarusQ"' 925' (int)Q.Range' 1.25f);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetCharged("VarusQ"' "VarusQ"' 925' (int)Q.Range' 1.25f);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: E.SetSkillshot(0.5f' 235' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: E.SetSkillshot(0.5f' 235' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: R.SetSkillshot(0.25f' 100' 1950' false' SkillshotType.SkillshotLine);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: R.SetSkillshot(0.25f' 100' 1950' false' SkillshotType.SkillshotLine);
Magic Number,Varus,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\SpellManager.cs,SpellManager,The following statement contains a magic number: R.SetSkillshot(0.25f' 100' 1950' false' SkillshotType.SkillshotLine);
Missing Default,Varus,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\Varus\Damages.cs,GetRealDamage,The following switch statement is missing a default case: switch (slot)              {                  case SpellSlot.Q:                        // First Cast: Varus starts drawing back his next shot' gradually increasing its range and damage.                      // Second Cast: Varus fires' dealing 10/47/83/120/157 (+1) to 15/70/125/180/235 (+1.6) physical damage' reduced by 15% per enemy hit (minimum 33%).                      // While preparing to shoot Varus' Movement Speed is slowed by 20%. After 4 seconds' Piercing Arrow fails but refunds half its Mana cost.                      var chargePercentage = SpellManager.Q.Range / SpellManager.Q.ChargedMaxRange;                      damage = (new float[] { 10' 47' 83' 120' 157 }[spellLevel] + new float[] { 5' 23' 42' 60' 78 }[spellLevel] * chargePercentage) +                          (1 + chargePercentage * 6) * player.TotalAttackDamage();                      break;                    case SpellSlot.W:                        // Passive: Varus' basic attacks deal 10/14/18/22/26 (+0.25) bonus magic damage and apply Blight for 6 seconds (stacks 3 times).                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 10' 14' 18' 22' 26 }[spellLevel] + 0.25f * player.TotalMagicalDamage();                        // Varus' other abilities detonate Blight' dealing magic damage equal to 2/2.75/3.5/4.25/5% (+0.02%) of the target's maximum Health per stack (Max: 360 total damage vs Monsters).                      if (target.GetBlightStacks() > 0)                      {                          extraDamage = (float)player.CalcDamage(target' Damage.DamageType.Magical' (new float[] { 2' 2.75f' 3.5f' 4.25f' 5 }[spellLevel] * target.MaxHealth) * target.GetBlightStacks());                          if (target is Obj_AI_Minion)                          {                              // Special case: max damage 360                              extraDamage = Math.Min(360' extraDamage);                          }                      }                      break;                    case SpellSlot.E:                        // Varus fires a hail of arrows that deals 65/100/135/170/205 (+0.6) physical damage and desecrates the ground for 4 seconds.                      // Desecrated Ground slows enemy Movement Speed by 25/30/35/40/45% and reduces healing effects by 50%.                      damage = new float[] { 65' 100' 135' 170' 205 }[spellLevel] + 0.6f * player.TotalAttackDamage();                      break;                    case SpellSlot.R:                        // Varus flings out a tendril of corruption that deals 150/250/350 (+1) magic damage and immobilizes the first enemy champion hit for 2 seconds.                      // The corruption then spreads towards nearby uninfected enemy champions' applying the same damage and immobilize if it reaches them.                      damageType = Damage.DamageType.Magical;                      damage = new float[] { 150' 250' 350 }[spellLevel] + player.TotalMagicalDamage();                      break;              }
