Implementation smell,Namespace,Class,File,Method,Description
Long Method,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The method has 143 lines of code.
Long Method,KalistaResurrection.Modes,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\WaveClear.cs,Execute,The method has 116 lines of code.
Complex Method,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnUpdate,Cyclomatic complexity of the method is 8
Complex Method,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnProcessSpellCast,Cyclomatic complexity of the method is 8
Complex Method,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,Cyclomatic complexity of the method is 19
Complex Method,KalistaResurrection.Modes,PermaActive,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\PermaActive.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,KalistaResurrection.Modes,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\WaveClear.cs,Execute,Cyclomatic complexity of the method is 20
Complex Method,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,Cyclomatic complexity of the method is 13
Long Identifier,KalistaResurrection,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Damages.cs,,The length of the parameter rawRendDamagePerSpearMultiplier is 31.
Long Statement,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The length of the statement  "                    RangeELeaving = Menu.AddLinkedCircle("E range (leaving)"' false' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range - 200); " is 129.
Long Statement,KalistaResurrection,DamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\DamageIndicator.cs,Drawing_OnDraw,The length of the statement  "                    var startPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + damagePercentage * BAR_WIDTH)' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5); " is 150.
Long Statement,KalistaResurrection,DamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\DamageIndicator.cs,Drawing_OnDraw,The length of the statement  "                    var endPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + currentHealthPercentage * BAR_WIDTH) + 1' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5); " is 159.
Long Statement,KalistaResurrection,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Damages.cs,GetRendDamage,The length of the statement  "            return ((float)Player.CalcDamage(target' Damage.DamageType.Physical' GetRawRendDamage(target' customStacks)) - 20) * 0.98f; " is 123.
Long Statement,KalistaResurrection,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Damages.cs,GetRawRendDamage,The length of the statement  "                return (rawRendDamage[SpellManager.E.Level - 1] + rawRendDamageMultiplier[SpellManager.E.Level - 1] * Player.TotalAttackDamage()) + // Base damage " is 146.
Long Statement,KalistaResurrection,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Damages.cs,GetRawRendDamage,The length of the statement  "                       (rawRendDamagePerSpear[SpellManager.E.Level - 1] + rawRendDamagePerSpearMultiplier[SpellManager.E.Level - 1] * Player.TotalAttackDamage()); // Damage per spear " is 159.
Long Statement,KalistaResurrection,ModeLogic,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\ModeLogic.cs,Initialize,The length of the statement  "                    Console.WriteLine("Failed to create new instance of {0}' Namespace: {1}!\nException: {2}\nTrace:\n{3}"' type.Name' type.Namespace' e.Message' e.StackTrace); " is 156.
Long Statement,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnProcessSpellCast,The length of the statement  "                    if ((!(sender is Obj_AI_Hero) || args.SData.IsAutoAttack()) && args.Target != null && args.Target.NetworkId == SoulBound.NetworkId) " is 131.
Long Statement,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnProcessSpellCast,The length of the statement  "                        _incomingDamage.Add(SoulBound.ServerPosition.Distance(sender.ServerPosition) / args.SData.MissileSpeed + Game.Time' (float)sender.GetAutoAttackDamage(SoulBound)); " is 162.
Long Statement,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnProcessSpellCast,The length of the statement  "                            if (slot == attacker.GetSpellSlot("SummonerDot") && args.Target != null && args.Target.NetworkId == SoulBound.NetworkId) " is 120.
Long Statement,KalistaResurrection,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\UpdateChecker.cs,Initialize,The length of the statement  "                        var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path)); " is 126.
Long Statement,KalistaResurrection,VectorHelper,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\VectorHelper.cs,GetDashObjects,The length of the statement  "            var apexPoint = Player.ServerPosition.To2D() + (Player.ServerPosition.To2D() - Game.CursorPos.To2D()).Normalized() * Orbwalking.GetRealAutoAttackRange(Player); " is 159.
Long Statement,KalistaResurrection,VectorHelper,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\VectorHelper.cs,GetDashObjects,The length of the statement  "            return objects.Where(o => VectorHelper.IsLyingInCone(o.ServerPosition.To2D()' apexPoint' Player.ServerPosition.To2D()' Math.PI)).OrderBy(o => o.Distance(apexPoint' true)).ToList(); " is 180.
Long Statement,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,OnDraw,The length of the statement  "                Render.Circle.DrawCircle(FleePosition' 50' IsJumpPossible ? Color.Green : SpellManager.Q.IsReady() ? Color.Red : Color.Teal' 10); " is 129.
Long Statement,KalistaResurrection.Modes,PermaActive,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\PermaActive.cs,Execute,The length of the statement  "                    ObjectManager.Get<Obj_AI_Minion>().Any(m => m.IsValidTarget(E.Range) && (m.BaseSkinName.Contains("MinionSiege") || m.BaseSkinName.Contains("Dragon") || m.BaseSkinName.Contains("Baron")) && m.IsRendKillable())) " is 209.
Long Statement,KalistaResurrection.Modes,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\WaveClear.cs,Execute,The length of the statement  "                            var colliding = LeagueSharp.Common.Collision.GetCollision(new List<Vector3>() { Player.ServerPosition.Extend(Prediction.GetPrediction(input).UnitPosition' Q.Range) }' input) " is 173.
Long Statement,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The length of the statement  "            var target = TargetSelector.GetTarget((Settings.UseQ && Q.IsReady()) ? Q.Range : (E.Range * 1.2f)' TargetSelector.DamageType.Physical); " is 135.
Long Statement,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The length of the statement  "                if (Settings.UseE && (E.Instance.State == SpellState.Ready || E.Instance.State == SpellState.Surpressed) && target.HasRendBuff()) " is 129.
Long Statement,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The length of the statement  "                            // Check if a minion can die with one AA and E. Also' the AA minion has be be behind the player direction for a further leap " is 124.
Long Statement,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The length of the statement  "                            var minion = VectorHelper.GetDashObjects(minions).Find(m => m.Health > Player.GetAutoAttackDamage(m) && m.Health < Player.GetAutoAttackDamage(m) + Damages.GetRendDamage(m' (m.HasRendBuff() ? m.GetRendBuff().Count + 1 : 1))); " is 224.
Complex Conditional,KalistaResurrection,Extensions,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Extensions.cs,HasUndyingBuff,The conditional expression  "target.ChampionName == "Tryndamere" &&                  target.Buffs.Any(b => b.Caster.NetworkId == target.NetworkId && b.IsValidBuff() && b.DisplayName == "Undying Rage")"  is complex.
Complex Conditional,KalistaResurrection,Extensions,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Extensions.cs,HasUndyingBuff,The conditional expression  "HeroManager.Allies.Any(o =>                      !o.IsMe &&                      o.Buffs.Any(b => b.Caster.NetworkId == target.NetworkId && b.IsValidBuff() && b.DisplayName == "PoppyDITarget"))"  is complex.
Complex Conditional,KalistaResurrection,ItemManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\ItemManager.cs,UseBotrk,The conditional expression  "Settings.UseBotrk && BOTRK.IsReady() && target.IsValidTarget(BOTRK.Range) &&                  player.Health + player.GetItemDamage(target' Damage.DamageItems.Botrk) < player.MaxHealth"  is complex.
Complex Conditional,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnProcessSpellCast,The conditional expression  "(!(sender is Obj_AI_Hero) || args.SData.IsAutoAttack()) && args.Target != null && args.Target.NetworkId == SoulBound.NetworkId"  is complex.
Complex Conditional,KalistaResurrection,SoulBoundSaver,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SoulBoundSaver.cs,OnProcessSpellCast,The conditional expression  "slot.HasFlag(SpellSlot.Q | SpellSlot.W | SpellSlot.E | SpellSlot.R) &&                                  ((args.Target != null && args.Target.NetworkId == SoulBound.NetworkId) ||                                  args.End.Distance(SoulBound.ServerPosition) < Math.Pow(args.SData.LineWidth' 2))"  is complex.
Complex Conditional,KalistaResurrection.Modes,PermaActive,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\PermaActive.cs,Execute,The conditional expression  "Settings.UseEBig &&                      ObjectManager.Get<Obj_AI_Minion>().Any(m => m.IsValidTarget(E.Range) && (m.BaseSkinName.Contains("MinionSiege") || m.BaseSkinName.Contains("Dragon") || m.BaseSkinName.Contains("Baron")) && m.IsRendKillable())"  is complex.
Complex Conditional,KalistaResurrection.Modes,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\WaveClear.cs,Execute,The conditional expression  "!(Settings.UseQ && Q.IsReady()) &&                  !(Settings.UseE && E.IsReady())"  is complex.
Complex Conditional,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The conditional expression  "!(Settings.UseQ && Q.IsReady()) && !(Settings.UseE && E.IsReady())"  is complex.
Complex Conditional,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The conditional expression  "Settings.UseE && (E.Instance.State == SpellState.Ready || E.Instance.State == SpellState.Surpressed) && target.HasRendBuff()"  is complex.
Magic Number,KalistaResurrection,Keys,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: Combo = Config.Combo.Menu.AddLinkedKeyBind("Active"' 32' KeyBindType.Press);
Magic Number,KalistaResurrection,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _numE = Menu.AddLinkedSlider("Min stacks to use E"' 5' 1' 20);
Magic Number,KalistaResurrection,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _numE = Menu.AddLinkedSlider("Min stacks to use E"' 5' 1' 20);
Magic Number,KalistaResurrection,Harass,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _mana = Menu.AddLinkedSlider("Minimum mana in %"' 30);
Magic Number,KalistaResurrection,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _numQ = Menu.AddLinkedSlider("Minion kill number for Q"' 3' 1' 10);
Magic Number,KalistaResurrection,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _numQ = Menu.AddLinkedSlider("Minion kill number for Q"' 3' 1' 10);
Magic Number,KalistaResurrection,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _numE = Menu.AddLinkedSlider("Minion kill number for E"' 2' 1' 10);
Magic Number,KalistaResurrection,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _numE = Menu.AddLinkedSlider("Minion kill number for E"' 2' 1' 10);
Magic Number,KalistaResurrection,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: _mana = Menu.AddLinkedSlider("Minimum mana in %"' 30);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: HealthbarE = Menu.AddLinkedCircle("E damage on healthbar"' true' Color.FromArgb(150' Color.Green)' 0);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: RangeQ = Menu.AddLinkedCircle("Q range"' true' Color.FromArgb(150' Color.IndianRed)' SpellManager.Q.Range);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: RangeW = Menu.AddLinkedCircle("W range"' true' Color.FromArgb(150' Color.MediumPurple)' SpellManager.W.Range);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: RangeELeaving = Menu.AddLinkedCircle("E range (leaving)"' false' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range - 200);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: RangeELeaving = Menu.AddLinkedCircle("E range (leaving)"' false' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range - 200);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: RangeE = Menu.AddLinkedCircle("E range (actual)"' true' Color.FromArgb(150' Color.DarkRed)' SpellManager.E.Range);
Magic Number,KalistaResurrection,Drawing,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Config.cs,Initialize,The following statement contains a magic number: RangeR = Menu.AddLinkedCircle("R range"' false' Color.FromArgb(150' Color.Red)' SpellManager.R.Range);
Magic Number,KalistaResurrection,Core,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Core.cs,OnUpdate,The following statement contains a magic number: Environment.TickCount - _lastTick >= 50
Magic Number,KalistaResurrection,DamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\DamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: var startPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + damagePercentage * BAR_WIDTH)' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5);
Magic Number,KalistaResurrection,DamageIndicator,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\DamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: var endPoint = new Vector2((int)(unit.HPBarPosition.X + BarOffset.X + currentHealthPercentage * BAR_WIDTH) + 1' (int)(unit.HPBarPosition.Y + BarOffset.Y) - 5);
Magic Number,KalistaResurrection,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Damages.cs,GetRendDamage,The following statement contains a magic number: return ((float)Player.CalcDamage(target' Damage.DamageType.Physical' GetRawRendDamage(target' customStacks)) - 20) * 0.98f;
Magic Number,KalistaResurrection,Damages,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Damages.cs,GetRendDamage,The following statement contains a magic number: return ((float)Player.CalcDamage(target' Damage.DamageType.Physical' GetRawRendDamage(target' customStacks)) - 20) * 0.98f;
Magic Number,KalistaResurrection,ItemManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\ItemManager.cs,UseYoumuu,The following statement contains a magic number: Settings.UseGhostblade && YOUMUU.IsReady() && target.IsValidTarget(Orbwalking.GetRealAutoAttackRange(player) + 50)
Magic Number,KalistaResurrection,Program,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Program.cs,OnProcessSpellCast,The following statement contains a magic number: Utility.DelayAction.Add(250' Orbwalking.ResetAutoAttackTimer);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1200);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: W = new Spell(SpellSlot.W' 5000);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: E = new Spell(SpellSlot.E' 1000);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1500);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0.35f' 40' 2400' true' SkillshotType.SkillshotLine);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0.35f' 40' 2400' true' SkillshotType.SkillshotLine);
Magic Number,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,SpellManager,The following statement contains a magic number: Q.SetSkillshot(0.35f' 40' 2400' true' SkillshotType.SkillshotLine);
Magic Number,KalistaResurrection,UpdateChecker,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\UpdateChecker.cs,Initialize,The following statement contains a magic number: new Thread(async () =>                  {                      try                      {                          var data = await client.DownloadStringTaskAsync(string.Format("https://raw.github.com/{0}/Properties/AssemblyInfo.cs"' path));                            var version =                              System.Version.Parse(new Regex("AssemblyFileVersion\\((\"(.+?)\")\\)").Match(data).Groups[1].Value.Replace(                                  "\""' ""));                            // Compare both versions                          var assemblyName = Assembly.GetExecutingAssembly().GetName();                          if (version > assemblyName.Version)                          {                              Utility.DelayAction.Add(5000' () =>                              {                                  Game.PrintChat("[{0}] Update available: {1} => {2}!"'                                      assemblyName.Name'                                      assemblyName.Version'                                      version);                              });                          }                      }                      catch (Exception e)                      {                          Console.WriteLine("An error occured while trying to check for an update:\n{0}"' e.Message);                      }                  }).Start();
Magic Number,KalistaResurrection,VectorHelper,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\VectorHelper.cs,IsLyingInCone,The following statement contains a magic number: double halfAperture = aperture / 2;
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Environment.TickCount - InitTime > 500
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: wallCheck = VectorHelper.GetFirstWallPoint((Vector3)wallCheck' Game.CursorPos' 5);
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: float maxAngle = 80;
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: float step = maxAngle / 20;
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: currentAngle = (currentStep) * (float)Math.PI / 180;
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: checkPoint = wallPosition + 300 * direction.To3D();
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Vector3 wallPositionOpposite = (Vector3)VectorHelper.GetFirstWallPoint((Vector3)wallCheck' wallPosition' 5);
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Player.Distance(wallPositionOpposite' true) < Math.Pow(300 - Player.BoundingRadius / 2' 2)
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Player.Distance(wallPositionOpposite' true) < Math.Pow(300 - Player.BoundingRadius / 2' 2)
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Player.Distance(wallPositionOpposite' true) < Math.Pow(300 - Player.BoundingRadius / 2' 2)
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Player.GetPath(wallPositionOpposite).ToList().To2D().PathLength() - Player.Distance(wallPositionOpposite) > 200
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,Execute,The following statement contains a magic number: Orbwalking.Orbwalk(target' movePosition' 90f' 0f' false' false);
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,OnDraw,The following statement contains a magic number: Render.Circle.DrawCircle(FleePosition' 50' IsJumpPossible ? Color.Green : SpellManager.Q.IsReady() ? Color.Red : Color.Teal' 10);
Magic Number,KalistaResurrection.Modes,Flee,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Flee.cs,OnDraw,The following statement contains a magic number: Render.Circle.DrawCircle(FleePosition' 50' IsJumpPossible ? Color.Green : SpellManager.Q.IsReady() ? Color.Red : Color.Teal' 10);
Magic Number,KalistaResurrection.Modes,WaveClear,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\WaveClear.cs,Execute,The following statement contains a magic number: ((Player.Mana / Player.MaxMana) * 100) < Settings.MinMana
Magic Number,KalistaResurrection.Modes,Harass,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Harass.cs,Execute,The following statement contains a magic number: ((Player.Mana / Player.MaxMana) * 100) < Settings.MinMana
Magic Number,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The following statement contains a magic number: var target = TargetSelector.GetTarget((Settings.UseQ && Q.IsReady()) ? Q.Range : (E.Range * 1.2f)' TargetSelector.DamageType.Physical);
Magic Number,KalistaResurrection.Modes,Combo,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Modes\Combo.cs,Execute,The following statement contains a magic number: Player.Distance(target' true) > Math.Pow(Orbwalking.GetRealAutoAttackRange(target)' 2)
Missing Default,KalistaResurrection,Hero,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\Hero.cs,OnWndProc,The following switch statement is missing a default case: switch (args.Msg)                  {                      case (uint)WindowsMessages.WM_KEYDOWN:                            ActiveMode = ActiveMode | mode;                          break;                        case (uint)WindowsMessages.WM_KEYUP:                            ActiveMode = ActiveMode ^ mode;                          break;                  }
Missing Default,KalistaResurrection,SpellManager,D:\research\architectureSmells\repos\Hellsing_LeagueSharp\KalistaResurrection\SpellManager.cs,GetSpellFromSlot,The following switch statement is missing a default case: switch (slot)              {                  case SpellSlot.Q:                      return Q;                  case SpellSlot.W:                      return W;                  case SpellSlot.E:                      return E;                  case SpellSlot.R:                      return R;              }
