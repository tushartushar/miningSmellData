Implementation smell,Namespace,Class,File,Method,Description
Long Method,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The method has 134 lines of code.
Long Method,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The method has 237 lines of code.
Long Parameter List,MettleSystems.dashCommerce.Core,ConfigurationDatumController,C:\repos\dashcommerce_dashcommerce-3\Core\Controllers\ConfigurationDatumController.cs,Insert,The method has 8 parameters. Parameters: Name' Type' ValueX' CreatedBy' CreatedDate' ModifiedBy' ModifiedDate' IsDeleted
Long Parameter List,MettleSystems.dashCommerce.Core,ConfigurationDatumController,C:\repos\dashcommerce_dashcommerce-3\Core\Controllers\ConfigurationDatumController.cs,Update,The method has 9 parameters. Parameters: ConfigurationDataId' Name' Type' ValueX' CreatedBy' CreatedDate' ModifiedBy' ModifiedDate' IsDeleted
Long Parameter List,MettleSystems.dashCommerce.Core,LogController,C:\repos\dashcommerce_dashcommerce-3\Core\Controllers\Generated\LogController.cs,Insert,The method has 16 parameters. Parameters: LogDate' Message' MessageType' UserAgent' RemoteHost' AuthUser' Referer' MachineName' FormData' QueryStringData' CookiesData' ExceptionType' ScriptName' ExceptionMessage' ExceptionSource' ExceptionStackTrace
Long Parameter List,MettleSystems.dashCommerce.Core,LogController,C:\repos\dashcommerce_dashcommerce-3\Core\Controllers\Generated\LogController.cs,Update,The method has 17 parameters. Parameters: LogID' LogDate' Message' MessageType' UserAgent' RemoteHost' AuthUser' Referer' MachineName' FormData' QueryStringData' CookiesData' ExceptionType' ScriptName' ExceptionMessage' ExceptionSource' ExceptionStackTrace
Long Parameter List,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,ResizeAndSave,The method has 5 parameters. Parameters: fileStream' fileName' finalPath' maxWidth' maxHeight
Long Parameter List,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,Insert,The method has 8 parameters. Parameters: varName' varType' varValueX' varCreatedBy' varCreatedDate' varModifiedBy' varModifiedDate' varIsDeleted
Long Parameter List,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,Update,The method has 9 parameters. Parameters: varConfigurationDataId' varName' varType' varValueX' varCreatedBy' varCreatedDate' varModifiedBy' varModifiedDate' varIsDeleted
Long Parameter List,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,Insert,The method has 16 parameters. Parameters: varLogDate' varMessage' varMessageType' varUserAgent' varRemoteHost' varAuthUser' varReferer' varMachineName' varFormData' varQueryStringData' varCookiesData' varExceptionType' varScriptName' varExceptionMessage' varExceptionSource' varExceptionStackTrace
Long Parameter List,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,Update,The method has 17 parameters. Parameters: varLogID' varLogDate' varMessage' varMessageType' varUserAgent' varRemoteHost' varAuthUser' varReferer' varMachineName' varFormData' varQueryStringData' varCookiesData' varExceptionType' varScriptName' varExceptionMessage' varExceptionSource' varExceptionStackTrace
Long Identifier,MettleSystems.dashCommerce.Core.Configuration,ConfigurationContants,C:\repos\dashcommerce_dashcommerce-3\Core\Configuration\ConfigurationContants.cs,,The length of the parameter ARGUMENT_CONFIGURATION_DATA_ID is 30.
Long Statement,MettleSystems.dashCommerce.Core.Caching.Manager,CacheHelper,C:\repos\dashcommerce_dashcommerce-3\Core\Caching\Manager\CacheHelper.cs,RemoveAll,The length of the statement  "             if (match(item.Contains("|") ? item.Substring(0' item.LastIndexOf("|")) : item))//this will remove the extra information from the end of the key. " is 145.
Long Statement,MettleSystems.dashCommerce.Core.Caching.Providers,HttpRuntimeCache,C:\repos\dashcommerce_dashcommerce-3\Core\Caching\Providers\HttpRuntimeCache.cs,Insert,The length of the statement  "      HttpRuntime.Cache.Insert(key' value' null' DateTime.Now.AddSeconds(cacheDurationInSeconds)' Cache.NoSlidingExpiration' priority' null); " is 135.
Long Statement,MettleSystems.dashCommerce.Core,ConfigurationDatumController,C:\repos\dashcommerce_dashcommerce-3\Core\Controllers\ConfigurationDatumController.cs,FetchByID,The length of the statement  "            ConfigurationDatumCollection coll = new ConfigurationDatumCollection().Where("ConfigurationDataId"' ConfigurationDataId).Load(); " is 128.
Long Statement,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,GetProductThumbnailUrl,The length of the statement  "        string thumbnail = imageUrl.Replace("product/"' string.Format("product/thumbs/{0}x{1}_"' siteSettings.ThumbSmallWidth' siteSettings.ThumbSmallHeight)); " is 151.
Long Statement,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,GetProductThumbnailUrl,The length of the statement  "            using (FileStream fs = File.Open(HttpContext.Current.Server.MapPath(imageUrl)' FileMode.Open' FileAccess.Read' FileShare.None)) { " is 129.
Long Statement,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,GetProductThumbnailUrl,The length of the statement  "              ImageProcess.ResizeAndSave(fs' Path.GetFileName(imageUrl)' HttpContext.Current.Server.MapPath(@"~/repository/product/thumbs/")' siteSettings.ThumbSmallWidth' siteSettings.ThumbSmallHeight); " is 189.
Long Statement,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,ResizeAndSave,The length of the statement  "        bool doWidthResize = (maxWidth > 0 && width > maxWidth && widthDiff > -1 && (widthDiff > heightDiff || maxHeight.Equals(0))); " is 125.
Long Statement,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,ResizeAndSave,The length of the statement  "        bool doHeightResize = (maxHeight > 0 && height > maxHeight && heightDiff > -1 && (heightDiff > widthDiff || maxWidth.Equals(0))); " is 129.
Long Statement,MettleSystems.dashCommerce.Core,Logger,C:\repos\dashcommerce_dashcommerce-3\Core\Logger.cs,GetCookiesAsString,The length of the statement  "        sb.Append(((i > 0) ? "&" : "") + thisContext.Server.UrlEncode(cookies[i].Name) + "=" + thisContext.Server.UrlEncode(cookies[i].Value)); " is 135.
Long Statement,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The length of the statement  "				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_ConfigurationData"' TableType.Table' DataService.GetInstance("dashCommerceProvider")); " is 154.
Long Statement,MettleSystems.dashCommerce.Core,Country,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Country.cs,GetTableSchema,The length of the statement  "				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Country"' TableType.Table' DataService.GetInstance("dashCommerceProvider")); " is 144.
Long Statement,MettleSystems.dashCommerce.Core,Country,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Country.cs,StateOrRegionRecords,The length of the statement  "			return new MettleSystems.dashCommerce.Core.StateOrRegionCollection().Where(StateOrRegion.Columns.CountryId' CountryId).Load(); " is 126.
Long Statement,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The length of the statement  "				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider")); " is 140.
Long Statement,MettleSystems.dashCommerce.Core,StateOrRegion,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\StateOrRegion.cs,GetTableSchema,The length of the statement  "				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_StateOrRegion"' TableType.Table' DataService.GetInstance("dashCommerceProvider")); " is 150.
Long Statement,MettleSystems.dashCommerce.Core,SPs,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\StoredProcedures.cs,FetchStateOrRegionByCountryCode,The length of the statement  "            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dashCommerce_Core_FetchStateOrRegionByCountryCode" ' DataService.GetInstance("dashCommerceProvider")); " is 162.
Long Statement,MettleSystems.dashCommerce.Core,SPs,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\StoredProcedures.cs,DeleteAllLogs,The length of the statement  "            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dashCommerce_Core_DeleteAllLogs" ' DataService.GetInstance("dashCommerceProvider")); " is 144.
Long Statement,MettleSystems.dashCommerce.Core,Validator,C:\repos\dashcommerce_dashcommerce-3\Core\Validator.cs,ValidateArgumentIsSerializable,The length of the statement  "        throw new ArgumentOutOfRangeException(argumentName' string.Format(PublicResources.ArgumentMustBeSerializableExceptionMessage' obj.GetType().Name)); " is 147.
Long Statement,MettleSystems.dashCommerce.Store,SiteSettings,C:\repos\dashcommerce_dashcommerce-3\Core\SiteSettings.cs,Load,The length of the statement  "        SiteSettings siteSettings = databaseConfigurationProvider.FetchConfigurationByName(SiteSettings.SECTION_NAME) as SiteSettings; " is 126.
Long Statement,MettleSystems.dashCommerce.Store,SiteSettings,C:\repos\dashcommerce_dashcommerce-3\Core\SiteSettings.cs,Load,The length of the statement  "        throw new Exception("Please make sure that you setup the Database' and the Connection String in the connectionString.config file."); " is 132.
Complex Conditional,MettleSystems.dashCommerce.Core,ImageProcess,C:\repos\dashcommerce_dashcommerce-3\Core\ImageProcess.cs,ResizeAndSave,The conditional expression  "doWidthResize || doHeightResize || (width.Equals(height) && widthDiff.Equals(heightDiff))"  is complex.
Magic Number,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_ConfigurationData"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarConfigurationDataId = new TableSchema.TableColumn(schema);  				colvarConfigurationDataId.ColumnName = "ConfigurationDataId";  				colvarConfigurationDataId.DataType = DbType.Int32;  				colvarConfigurationDataId.MaxLength = 0;  				colvarConfigurationDataId.AutoIncrement = true;  				colvarConfigurationDataId.IsNullable = false;  				colvarConfigurationDataId.IsPrimaryKey = true;  				colvarConfigurationDataId.IsForeignKey = false;  				colvarConfigurationDataId.IsReadOnly = false;  				colvarConfigurationDataId.DefaultSetting = @"";  				colvarConfigurationDataId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarConfigurationDataId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 100;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarType = new TableSchema.TableColumn(schema);  				colvarType.ColumnName = "Type";  				colvarType.DataType = DbType.String;  				colvarType.MaxLength = 300;  				colvarType.AutoIncrement = false;  				colvarType.IsNullable = false;  				colvarType.IsPrimaryKey = false;  				colvarType.IsForeignKey = false;  				colvarType.IsReadOnly = false;  				colvarType.DefaultSetting = @"";  				colvarType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarType);  				  				TableSchema.TableColumn colvarValueX = new TableSchema.TableColumn(schema);  				colvarValueX.ColumnName = "Value";  				colvarValueX.DataType = DbType.String;  				colvarValueX.MaxLength = 1073741823;  				colvarValueX.AutoIncrement = false;  				colvarValueX.IsNullable = false;  				colvarValueX.IsPrimaryKey = false;  				colvarValueX.IsForeignKey = false;  				colvarValueX.IsReadOnly = false;  				colvarValueX.DefaultSetting = @"";  				colvarValueX.ForeignKeyTableName = "";  				schema.Columns.Add(colvarValueX);  				  				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);  				colvarCreatedBy.ColumnName = "CreatedBy";  				colvarCreatedBy.DataType = DbType.String;  				colvarCreatedBy.MaxLength = 50;  				colvarCreatedBy.AutoIncrement = false;  				colvarCreatedBy.IsNullable = false;  				colvarCreatedBy.IsPrimaryKey = false;  				colvarCreatedBy.IsForeignKey = false;  				colvarCreatedBy.IsReadOnly = false;  				colvarCreatedBy.DefaultSetting = @"";  				colvarCreatedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedBy);  				  				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);  				colvarCreatedDate.ColumnName = "CreatedDate";  				colvarCreatedDate.DataType = DbType.DateTime;  				colvarCreatedDate.MaxLength = 0;  				colvarCreatedDate.AutoIncrement = false;  				colvarCreatedDate.IsNullable = false;  				colvarCreatedDate.IsPrimaryKey = false;  				colvarCreatedDate.IsForeignKey = false;  				colvarCreatedDate.IsReadOnly = false;  				  						colvarCreatedDate.DefaultSetting = @"(getutcdate())";  				colvarCreatedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedDate);  				  				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);  				colvarModifiedBy.ColumnName = "ModifiedBy";  				colvarModifiedBy.DataType = DbType.String;  				colvarModifiedBy.MaxLength = 50;  				colvarModifiedBy.AutoIncrement = false;  				colvarModifiedBy.IsNullable = false;  				colvarModifiedBy.IsPrimaryKey = false;  				colvarModifiedBy.IsForeignKey = false;  				colvarModifiedBy.IsReadOnly = false;  				colvarModifiedBy.DefaultSetting = @"";  				colvarModifiedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedBy);  				  				TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);  				colvarModifiedDate.ColumnName = "ModifiedDate";  				colvarModifiedDate.DataType = DbType.DateTime;  				colvarModifiedDate.MaxLength = 0;  				colvarModifiedDate.AutoIncrement = false;  				colvarModifiedDate.IsNullable = false;  				colvarModifiedDate.IsPrimaryKey = false;  				colvarModifiedDate.IsForeignKey = false;  				colvarModifiedDate.IsReadOnly = false;  				  						colvarModifiedDate.DefaultSetting = @"(getutcdate())";  				colvarModifiedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedDate);  				  				TableSchema.TableColumn colvarIsDeleted = new TableSchema.TableColumn(schema);  				colvarIsDeleted.ColumnName = "IsDeleted";  				colvarIsDeleted.DataType = DbType.Boolean;  				colvarIsDeleted.MaxLength = 0;  				colvarIsDeleted.AutoIncrement = false;  				colvarIsDeleted.IsNullable = false;  				colvarIsDeleted.IsPrimaryKey = false;  				colvarIsDeleted.IsForeignKey = false;  				colvarIsDeleted.IsReadOnly = false;  				colvarIsDeleted.DefaultSetting = @"";  				colvarIsDeleted.ForeignKeyTableName = "";  				schema.Columns.Add(colvarIsDeleted);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_ConfigurationData"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_ConfigurationData"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarConfigurationDataId = new TableSchema.TableColumn(schema);  				colvarConfigurationDataId.ColumnName = "ConfigurationDataId";  				colvarConfigurationDataId.DataType = DbType.Int32;  				colvarConfigurationDataId.MaxLength = 0;  				colvarConfigurationDataId.AutoIncrement = true;  				colvarConfigurationDataId.IsNullable = false;  				colvarConfigurationDataId.IsPrimaryKey = true;  				colvarConfigurationDataId.IsForeignKey = false;  				colvarConfigurationDataId.IsReadOnly = false;  				colvarConfigurationDataId.DefaultSetting = @"";  				colvarConfigurationDataId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarConfigurationDataId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 100;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarType = new TableSchema.TableColumn(schema);  				colvarType.ColumnName = "Type";  				colvarType.DataType = DbType.String;  				colvarType.MaxLength = 300;  				colvarType.AutoIncrement = false;  				colvarType.IsNullable = false;  				colvarType.IsPrimaryKey = false;  				colvarType.IsForeignKey = false;  				colvarType.IsReadOnly = false;  				colvarType.DefaultSetting = @"";  				colvarType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarType);  				  				TableSchema.TableColumn colvarValueX = new TableSchema.TableColumn(schema);  				colvarValueX.ColumnName = "Value";  				colvarValueX.DataType = DbType.String;  				colvarValueX.MaxLength = 1073741823;  				colvarValueX.AutoIncrement = false;  				colvarValueX.IsNullable = false;  				colvarValueX.IsPrimaryKey = false;  				colvarValueX.IsForeignKey = false;  				colvarValueX.IsReadOnly = false;  				colvarValueX.DefaultSetting = @"";  				colvarValueX.ForeignKeyTableName = "";  				schema.Columns.Add(colvarValueX);  				  				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);  				colvarCreatedBy.ColumnName = "CreatedBy";  				colvarCreatedBy.DataType = DbType.String;  				colvarCreatedBy.MaxLength = 50;  				colvarCreatedBy.AutoIncrement = false;  				colvarCreatedBy.IsNullable = false;  				colvarCreatedBy.IsPrimaryKey = false;  				colvarCreatedBy.IsForeignKey = false;  				colvarCreatedBy.IsReadOnly = false;  				colvarCreatedBy.DefaultSetting = @"";  				colvarCreatedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedBy);  				  				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);  				colvarCreatedDate.ColumnName = "CreatedDate";  				colvarCreatedDate.DataType = DbType.DateTime;  				colvarCreatedDate.MaxLength = 0;  				colvarCreatedDate.AutoIncrement = false;  				colvarCreatedDate.IsNullable = false;  				colvarCreatedDate.IsPrimaryKey = false;  				colvarCreatedDate.IsForeignKey = false;  				colvarCreatedDate.IsReadOnly = false;  				  						colvarCreatedDate.DefaultSetting = @"(getutcdate())";  				colvarCreatedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedDate);  				  				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);  				colvarModifiedBy.ColumnName = "ModifiedBy";  				colvarModifiedBy.DataType = DbType.String;  				colvarModifiedBy.MaxLength = 50;  				colvarModifiedBy.AutoIncrement = false;  				colvarModifiedBy.IsNullable = false;  				colvarModifiedBy.IsPrimaryKey = false;  				colvarModifiedBy.IsForeignKey = false;  				colvarModifiedBy.IsReadOnly = false;  				colvarModifiedBy.DefaultSetting = @"";  				colvarModifiedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedBy);  				  				TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);  				colvarModifiedDate.ColumnName = "ModifiedDate";  				colvarModifiedDate.DataType = DbType.DateTime;  				colvarModifiedDate.MaxLength = 0;  				colvarModifiedDate.AutoIncrement = false;  				colvarModifiedDate.IsNullable = false;  				colvarModifiedDate.IsPrimaryKey = false;  				colvarModifiedDate.IsForeignKey = false;  				colvarModifiedDate.IsReadOnly = false;  				  						colvarModifiedDate.DefaultSetting = @"(getutcdate())";  				colvarModifiedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedDate);  				  				TableSchema.TableColumn colvarIsDeleted = new TableSchema.TableColumn(schema);  				colvarIsDeleted.ColumnName = "IsDeleted";  				colvarIsDeleted.DataType = DbType.Boolean;  				colvarIsDeleted.MaxLength = 0;  				colvarIsDeleted.AutoIncrement = false;  				colvarIsDeleted.IsNullable = false;  				colvarIsDeleted.IsPrimaryKey = false;  				colvarIsDeleted.IsForeignKey = false;  				colvarIsDeleted.IsReadOnly = false;  				colvarIsDeleted.DefaultSetting = @"";  				colvarIsDeleted.ForeignKeyTableName = "";  				schema.Columns.Add(colvarIsDeleted);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_ConfigurationData"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_ConfigurationData"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarConfigurationDataId = new TableSchema.TableColumn(schema);  				colvarConfigurationDataId.ColumnName = "ConfigurationDataId";  				colvarConfigurationDataId.DataType = DbType.Int32;  				colvarConfigurationDataId.MaxLength = 0;  				colvarConfigurationDataId.AutoIncrement = true;  				colvarConfigurationDataId.IsNullable = false;  				colvarConfigurationDataId.IsPrimaryKey = true;  				colvarConfigurationDataId.IsForeignKey = false;  				colvarConfigurationDataId.IsReadOnly = false;  				colvarConfigurationDataId.DefaultSetting = @"";  				colvarConfigurationDataId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarConfigurationDataId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 100;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarType = new TableSchema.TableColumn(schema);  				colvarType.ColumnName = "Type";  				colvarType.DataType = DbType.String;  				colvarType.MaxLength = 300;  				colvarType.AutoIncrement = false;  				colvarType.IsNullable = false;  				colvarType.IsPrimaryKey = false;  				colvarType.IsForeignKey = false;  				colvarType.IsReadOnly = false;  				colvarType.DefaultSetting = @"";  				colvarType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarType);  				  				TableSchema.TableColumn colvarValueX = new TableSchema.TableColumn(schema);  				colvarValueX.ColumnName = "Value";  				colvarValueX.DataType = DbType.String;  				colvarValueX.MaxLength = 1073741823;  				colvarValueX.AutoIncrement = false;  				colvarValueX.IsNullable = false;  				colvarValueX.IsPrimaryKey = false;  				colvarValueX.IsForeignKey = false;  				colvarValueX.IsReadOnly = false;  				colvarValueX.DefaultSetting = @"";  				colvarValueX.ForeignKeyTableName = "";  				schema.Columns.Add(colvarValueX);  				  				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);  				colvarCreatedBy.ColumnName = "CreatedBy";  				colvarCreatedBy.DataType = DbType.String;  				colvarCreatedBy.MaxLength = 50;  				colvarCreatedBy.AutoIncrement = false;  				colvarCreatedBy.IsNullable = false;  				colvarCreatedBy.IsPrimaryKey = false;  				colvarCreatedBy.IsForeignKey = false;  				colvarCreatedBy.IsReadOnly = false;  				colvarCreatedBy.DefaultSetting = @"";  				colvarCreatedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedBy);  				  				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);  				colvarCreatedDate.ColumnName = "CreatedDate";  				colvarCreatedDate.DataType = DbType.DateTime;  				colvarCreatedDate.MaxLength = 0;  				colvarCreatedDate.AutoIncrement = false;  				colvarCreatedDate.IsNullable = false;  				colvarCreatedDate.IsPrimaryKey = false;  				colvarCreatedDate.IsForeignKey = false;  				colvarCreatedDate.IsReadOnly = false;  				  						colvarCreatedDate.DefaultSetting = @"(getutcdate())";  				colvarCreatedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedDate);  				  				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);  				colvarModifiedBy.ColumnName = "ModifiedBy";  				colvarModifiedBy.DataType = DbType.String;  				colvarModifiedBy.MaxLength = 50;  				colvarModifiedBy.AutoIncrement = false;  				colvarModifiedBy.IsNullable = false;  				colvarModifiedBy.IsPrimaryKey = false;  				colvarModifiedBy.IsForeignKey = false;  				colvarModifiedBy.IsReadOnly = false;  				colvarModifiedBy.DefaultSetting = @"";  				colvarModifiedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedBy);  				  				TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);  				colvarModifiedDate.ColumnName = "ModifiedDate";  				colvarModifiedDate.DataType = DbType.DateTime;  				colvarModifiedDate.MaxLength = 0;  				colvarModifiedDate.AutoIncrement = false;  				colvarModifiedDate.IsNullable = false;  				colvarModifiedDate.IsPrimaryKey = false;  				colvarModifiedDate.IsForeignKey = false;  				colvarModifiedDate.IsReadOnly = false;  				  						colvarModifiedDate.DefaultSetting = @"(getutcdate())";  				colvarModifiedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedDate);  				  				TableSchema.TableColumn colvarIsDeleted = new TableSchema.TableColumn(schema);  				colvarIsDeleted.ColumnName = "IsDeleted";  				colvarIsDeleted.DataType = DbType.Boolean;  				colvarIsDeleted.MaxLength = 0;  				colvarIsDeleted.AutoIncrement = false;  				colvarIsDeleted.IsNullable = false;  				colvarIsDeleted.IsPrimaryKey = false;  				colvarIsDeleted.IsForeignKey = false;  				colvarIsDeleted.IsReadOnly = false;  				colvarIsDeleted.DefaultSetting = @"";  				colvarIsDeleted.ForeignKeyTableName = "";  				schema.Columns.Add(colvarIsDeleted);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_ConfigurationData"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_ConfigurationData"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarConfigurationDataId = new TableSchema.TableColumn(schema);  				colvarConfigurationDataId.ColumnName = "ConfigurationDataId";  				colvarConfigurationDataId.DataType = DbType.Int32;  				colvarConfigurationDataId.MaxLength = 0;  				colvarConfigurationDataId.AutoIncrement = true;  				colvarConfigurationDataId.IsNullable = false;  				colvarConfigurationDataId.IsPrimaryKey = true;  				colvarConfigurationDataId.IsForeignKey = false;  				colvarConfigurationDataId.IsReadOnly = false;  				colvarConfigurationDataId.DefaultSetting = @"";  				colvarConfigurationDataId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarConfigurationDataId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 100;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarType = new TableSchema.TableColumn(schema);  				colvarType.ColumnName = "Type";  				colvarType.DataType = DbType.String;  				colvarType.MaxLength = 300;  				colvarType.AutoIncrement = false;  				colvarType.IsNullable = false;  				colvarType.IsPrimaryKey = false;  				colvarType.IsForeignKey = false;  				colvarType.IsReadOnly = false;  				colvarType.DefaultSetting = @"";  				colvarType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarType);  				  				TableSchema.TableColumn colvarValueX = new TableSchema.TableColumn(schema);  				colvarValueX.ColumnName = "Value";  				colvarValueX.DataType = DbType.String;  				colvarValueX.MaxLength = 1073741823;  				colvarValueX.AutoIncrement = false;  				colvarValueX.IsNullable = false;  				colvarValueX.IsPrimaryKey = false;  				colvarValueX.IsForeignKey = false;  				colvarValueX.IsReadOnly = false;  				colvarValueX.DefaultSetting = @"";  				colvarValueX.ForeignKeyTableName = "";  				schema.Columns.Add(colvarValueX);  				  				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);  				colvarCreatedBy.ColumnName = "CreatedBy";  				colvarCreatedBy.DataType = DbType.String;  				colvarCreatedBy.MaxLength = 50;  				colvarCreatedBy.AutoIncrement = false;  				colvarCreatedBy.IsNullable = false;  				colvarCreatedBy.IsPrimaryKey = false;  				colvarCreatedBy.IsForeignKey = false;  				colvarCreatedBy.IsReadOnly = false;  				colvarCreatedBy.DefaultSetting = @"";  				colvarCreatedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedBy);  				  				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);  				colvarCreatedDate.ColumnName = "CreatedDate";  				colvarCreatedDate.DataType = DbType.DateTime;  				colvarCreatedDate.MaxLength = 0;  				colvarCreatedDate.AutoIncrement = false;  				colvarCreatedDate.IsNullable = false;  				colvarCreatedDate.IsPrimaryKey = false;  				colvarCreatedDate.IsForeignKey = false;  				colvarCreatedDate.IsReadOnly = false;  				  						colvarCreatedDate.DefaultSetting = @"(getutcdate())";  				colvarCreatedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedDate);  				  				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);  				colvarModifiedBy.ColumnName = "ModifiedBy";  				colvarModifiedBy.DataType = DbType.String;  				colvarModifiedBy.MaxLength = 50;  				colvarModifiedBy.AutoIncrement = false;  				colvarModifiedBy.IsNullable = false;  				colvarModifiedBy.IsPrimaryKey = false;  				colvarModifiedBy.IsForeignKey = false;  				colvarModifiedBy.IsReadOnly = false;  				colvarModifiedBy.DefaultSetting = @"";  				colvarModifiedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedBy);  				  				TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);  				colvarModifiedDate.ColumnName = "ModifiedDate";  				colvarModifiedDate.DataType = DbType.DateTime;  				colvarModifiedDate.MaxLength = 0;  				colvarModifiedDate.AutoIncrement = false;  				colvarModifiedDate.IsNullable = false;  				colvarModifiedDate.IsPrimaryKey = false;  				colvarModifiedDate.IsForeignKey = false;  				colvarModifiedDate.IsReadOnly = false;  				  						colvarModifiedDate.DefaultSetting = @"(getutcdate())";  				colvarModifiedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedDate);  				  				TableSchema.TableColumn colvarIsDeleted = new TableSchema.TableColumn(schema);  				colvarIsDeleted.ColumnName = "IsDeleted";  				colvarIsDeleted.DataType = DbType.Boolean;  				colvarIsDeleted.MaxLength = 0;  				colvarIsDeleted.AutoIncrement = false;  				colvarIsDeleted.IsNullable = false;  				colvarIsDeleted.IsPrimaryKey = false;  				colvarIsDeleted.IsForeignKey = false;  				colvarIsDeleted.IsReadOnly = false;  				colvarIsDeleted.DefaultSetting = @"";  				colvarIsDeleted.ForeignKeyTableName = "";  				schema.Columns.Add(colvarIsDeleted);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_ConfigurationData"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,ConfigurationDatum,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\ConfigurationDatum.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_ConfigurationData"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarConfigurationDataId = new TableSchema.TableColumn(schema);  				colvarConfigurationDataId.ColumnName = "ConfigurationDataId";  				colvarConfigurationDataId.DataType = DbType.Int32;  				colvarConfigurationDataId.MaxLength = 0;  				colvarConfigurationDataId.AutoIncrement = true;  				colvarConfigurationDataId.IsNullable = false;  				colvarConfigurationDataId.IsPrimaryKey = true;  				colvarConfigurationDataId.IsForeignKey = false;  				colvarConfigurationDataId.IsReadOnly = false;  				colvarConfigurationDataId.DefaultSetting = @"";  				colvarConfigurationDataId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarConfigurationDataId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 100;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarType = new TableSchema.TableColumn(schema);  				colvarType.ColumnName = "Type";  				colvarType.DataType = DbType.String;  				colvarType.MaxLength = 300;  				colvarType.AutoIncrement = false;  				colvarType.IsNullable = false;  				colvarType.IsPrimaryKey = false;  				colvarType.IsForeignKey = false;  				colvarType.IsReadOnly = false;  				colvarType.DefaultSetting = @"";  				colvarType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarType);  				  				TableSchema.TableColumn colvarValueX = new TableSchema.TableColumn(schema);  				colvarValueX.ColumnName = "Value";  				colvarValueX.DataType = DbType.String;  				colvarValueX.MaxLength = 1073741823;  				colvarValueX.AutoIncrement = false;  				colvarValueX.IsNullable = false;  				colvarValueX.IsPrimaryKey = false;  				colvarValueX.IsForeignKey = false;  				colvarValueX.IsReadOnly = false;  				colvarValueX.DefaultSetting = @"";  				colvarValueX.ForeignKeyTableName = "";  				schema.Columns.Add(colvarValueX);  				  				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);  				colvarCreatedBy.ColumnName = "CreatedBy";  				colvarCreatedBy.DataType = DbType.String;  				colvarCreatedBy.MaxLength = 50;  				colvarCreatedBy.AutoIncrement = false;  				colvarCreatedBy.IsNullable = false;  				colvarCreatedBy.IsPrimaryKey = false;  				colvarCreatedBy.IsForeignKey = false;  				colvarCreatedBy.IsReadOnly = false;  				colvarCreatedBy.DefaultSetting = @"";  				colvarCreatedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedBy);  				  				TableSchema.TableColumn colvarCreatedDate = new TableSchema.TableColumn(schema);  				colvarCreatedDate.ColumnName = "CreatedDate";  				colvarCreatedDate.DataType = DbType.DateTime;  				colvarCreatedDate.MaxLength = 0;  				colvarCreatedDate.AutoIncrement = false;  				colvarCreatedDate.IsNullable = false;  				colvarCreatedDate.IsPrimaryKey = false;  				colvarCreatedDate.IsForeignKey = false;  				colvarCreatedDate.IsReadOnly = false;  				  						colvarCreatedDate.DefaultSetting = @"(getutcdate())";  				colvarCreatedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCreatedDate);  				  				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);  				colvarModifiedBy.ColumnName = "ModifiedBy";  				colvarModifiedBy.DataType = DbType.String;  				colvarModifiedBy.MaxLength = 50;  				colvarModifiedBy.AutoIncrement = false;  				colvarModifiedBy.IsNullable = false;  				colvarModifiedBy.IsPrimaryKey = false;  				colvarModifiedBy.IsForeignKey = false;  				colvarModifiedBy.IsReadOnly = false;  				colvarModifiedBy.DefaultSetting = @"";  				colvarModifiedBy.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedBy);  				  				TableSchema.TableColumn colvarModifiedDate = new TableSchema.TableColumn(schema);  				colvarModifiedDate.ColumnName = "ModifiedDate";  				colvarModifiedDate.DataType = DbType.DateTime;  				colvarModifiedDate.MaxLength = 0;  				colvarModifiedDate.AutoIncrement = false;  				colvarModifiedDate.IsNullable = false;  				colvarModifiedDate.IsPrimaryKey = false;  				colvarModifiedDate.IsForeignKey = false;  				colvarModifiedDate.IsReadOnly = false;  				  						colvarModifiedDate.DefaultSetting = @"(getutcdate())";  				colvarModifiedDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarModifiedDate);  				  				TableSchema.TableColumn colvarIsDeleted = new TableSchema.TableColumn(schema);  				colvarIsDeleted.ColumnName = "IsDeleted";  				colvarIsDeleted.DataType = DbType.Boolean;  				colvarIsDeleted.MaxLength = 0;  				colvarIsDeleted.AutoIncrement = false;  				colvarIsDeleted.IsNullable = false;  				colvarIsDeleted.IsPrimaryKey = false;  				colvarIsDeleted.IsForeignKey = false;  				colvarIsDeleted.IsReadOnly = false;  				colvarIsDeleted.DefaultSetting = @"";  				colvarIsDeleted.ForeignKeyTableName = "";  				schema.Columns.Add(colvarIsDeleted);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_ConfigurationData"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Country,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Country.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Country"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarCountryId = new TableSchema.TableColumn(schema);  				colvarCountryId.ColumnName = "CountryId";  				colvarCountryId.DataType = DbType.Int32;  				colvarCountryId.MaxLength = 0;  				colvarCountryId.AutoIncrement = true;  				colvarCountryId.IsNullable = false;  				colvarCountryId.IsPrimaryKey = true;  				colvarCountryId.IsForeignKey = false;  				colvarCountryId.IsReadOnly = false;  				colvarCountryId.DefaultSetting = @"";  				colvarCountryId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCountryId);  				  				TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);  				colvarCode.ColumnName = "Code";  				colvarCode.DataType = DbType.String;  				colvarCode.MaxLength = 2;  				colvarCode.AutoIncrement = false;  				colvarCode.IsNullable = false;  				colvarCode.IsPrimaryKey = false;  				colvarCode.IsForeignKey = false;  				colvarCode.IsReadOnly = false;  				colvarCode.DefaultSetting = @"";  				colvarCode.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCode);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 255;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Country"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Country,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Country.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Country"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarCountryId = new TableSchema.TableColumn(schema);  				colvarCountryId.ColumnName = "CountryId";  				colvarCountryId.DataType = DbType.Int32;  				colvarCountryId.MaxLength = 0;  				colvarCountryId.AutoIncrement = true;  				colvarCountryId.IsNullable = false;  				colvarCountryId.IsPrimaryKey = true;  				colvarCountryId.IsForeignKey = false;  				colvarCountryId.IsReadOnly = false;  				colvarCountryId.DefaultSetting = @"";  				colvarCountryId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCountryId);  				  				TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);  				colvarCode.ColumnName = "Code";  				colvarCode.DataType = DbType.String;  				colvarCode.MaxLength = 2;  				colvarCode.AutoIncrement = false;  				colvarCode.IsNullable = false;  				colvarCode.IsPrimaryKey = false;  				colvarCode.IsForeignKey = false;  				colvarCode.IsReadOnly = false;  				colvarCode.DefaultSetting = @"";  				colvarCode.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCode);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 255;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Country"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,Log,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\Log.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_Log"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarLogID = new TableSchema.TableColumn(schema);  				colvarLogID.ColumnName = "LogID";  				colvarLogID.DataType = DbType.Int32;  				colvarLogID.MaxLength = 0;  				colvarLogID.AutoIncrement = true;  				colvarLogID.IsNullable = false;  				colvarLogID.IsPrimaryKey = true;  				colvarLogID.IsForeignKey = false;  				colvarLogID.IsReadOnly = false;  				colvarLogID.DefaultSetting = @"";  				colvarLogID.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogID);  				  				TableSchema.TableColumn colvarLogDate = new TableSchema.TableColumn(schema);  				colvarLogDate.ColumnName = "LogDate";  				colvarLogDate.DataType = DbType.DateTime;  				colvarLogDate.MaxLength = 0;  				colvarLogDate.AutoIncrement = false;  				colvarLogDate.IsNullable = false;  				colvarLogDate.IsPrimaryKey = false;  				colvarLogDate.IsForeignKey = false;  				colvarLogDate.IsReadOnly = false;  				  						colvarLogDate.DefaultSetting = @"(getdate())";  				colvarLogDate.ForeignKeyTableName = "";  				schema.Columns.Add(colvarLogDate);  				  				TableSchema.TableColumn colvarMessage = new TableSchema.TableColumn(schema);  				colvarMessage.ColumnName = "Message";  				colvarMessage.DataType = DbType.String;  				colvarMessage.MaxLength = 2147483647;  				colvarMessage.AutoIncrement = false;  				colvarMessage.IsNullable = true;  				colvarMessage.IsPrimaryKey = false;  				colvarMessage.IsForeignKey = false;  				colvarMessage.IsReadOnly = false;  				colvarMessage.DefaultSetting = @"";  				colvarMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessage);  				  				TableSchema.TableColumn colvarMessageType = new TableSchema.TableColumn(schema);  				colvarMessageType.ColumnName = "MessageType";  				colvarMessageType.DataType = DbType.Byte;  				colvarMessageType.MaxLength = 0;  				colvarMessageType.AutoIncrement = false;  				colvarMessageType.IsNullable = false;  				colvarMessageType.IsPrimaryKey = false;  				colvarMessageType.IsForeignKey = false;  				colvarMessageType.IsReadOnly = false;  				colvarMessageType.DefaultSetting = @"";  				colvarMessageType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMessageType);  				  				TableSchema.TableColumn colvarUserAgent = new TableSchema.TableColumn(schema);  				colvarUserAgent.ColumnName = "UserAgent";  				colvarUserAgent.DataType = DbType.String;  				colvarUserAgent.MaxLength = 256;  				colvarUserAgent.AutoIncrement = false;  				colvarUserAgent.IsNullable = true;  				colvarUserAgent.IsPrimaryKey = false;  				colvarUserAgent.IsForeignKey = false;  				colvarUserAgent.IsReadOnly = false;  				colvarUserAgent.DefaultSetting = @"";  				colvarUserAgent.ForeignKeyTableName = "";  				schema.Columns.Add(colvarUserAgent);  				  				TableSchema.TableColumn colvarRemoteHost = new TableSchema.TableColumn(schema);  				colvarRemoteHost.ColumnName = "RemoteHost";  				colvarRemoteHost.DataType = DbType.String;  				colvarRemoteHost.MaxLength = 256;  				colvarRemoteHost.AutoIncrement = false;  				colvarRemoteHost.IsNullable = true;  				colvarRemoteHost.IsPrimaryKey = false;  				colvarRemoteHost.IsForeignKey = false;  				colvarRemoteHost.IsReadOnly = false;  				colvarRemoteHost.DefaultSetting = @"";  				colvarRemoteHost.ForeignKeyTableName = "";  				schema.Columns.Add(colvarRemoteHost);  				  				TableSchema.TableColumn colvarAuthUser = new TableSchema.TableColumn(schema);  				colvarAuthUser.ColumnName = "AuthUser";  				colvarAuthUser.DataType = DbType.String;  				colvarAuthUser.MaxLength = 64;  				colvarAuthUser.AutoIncrement = false;  				colvarAuthUser.IsNullable = true;  				colvarAuthUser.IsPrimaryKey = false;  				colvarAuthUser.IsForeignKey = false;  				colvarAuthUser.IsReadOnly = false;  				colvarAuthUser.DefaultSetting = @"";  				colvarAuthUser.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAuthUser);  				  				TableSchema.TableColumn colvarReferer = new TableSchema.TableColumn(schema);  				colvarReferer.ColumnName = "Referer";  				colvarReferer.DataType = DbType.String;  				colvarReferer.MaxLength = 512;  				colvarReferer.AutoIncrement = false;  				colvarReferer.IsNullable = true;  				colvarReferer.IsPrimaryKey = false;  				colvarReferer.IsForeignKey = false;  				colvarReferer.IsReadOnly = false;  				colvarReferer.DefaultSetting = @"";  				colvarReferer.ForeignKeyTableName = "";  				schema.Columns.Add(colvarReferer);  				  				TableSchema.TableColumn colvarMachineName = new TableSchema.TableColumn(schema);  				colvarMachineName.ColumnName = "MachineName";  				colvarMachineName.DataType = DbType.String;  				colvarMachineName.MaxLength = 32;  				colvarMachineName.AutoIncrement = false;  				colvarMachineName.IsNullable = true;  				colvarMachineName.IsPrimaryKey = false;  				colvarMachineName.IsForeignKey = false;  				colvarMachineName.IsReadOnly = false;  				colvarMachineName.DefaultSetting = @"";  				colvarMachineName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarMachineName);  				  				TableSchema.TableColumn colvarFormData = new TableSchema.TableColumn(schema);  				colvarFormData.ColumnName = "FormData";  				colvarFormData.DataType = DbType.String;  				colvarFormData.MaxLength = 2147483647;  				colvarFormData.AutoIncrement = false;  				colvarFormData.IsNullable = true;  				colvarFormData.IsPrimaryKey = false;  				colvarFormData.IsForeignKey = false;  				colvarFormData.IsReadOnly = false;  				colvarFormData.DefaultSetting = @"";  				colvarFormData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarFormData);  				  				TableSchema.TableColumn colvarQueryStringData = new TableSchema.TableColumn(schema);  				colvarQueryStringData.ColumnName = "QueryStringData";  				colvarQueryStringData.DataType = DbType.String;  				colvarQueryStringData.MaxLength = 512;  				colvarQueryStringData.AutoIncrement = false;  				colvarQueryStringData.IsNullable = true;  				colvarQueryStringData.IsPrimaryKey = false;  				colvarQueryStringData.IsForeignKey = false;  				colvarQueryStringData.IsReadOnly = false;  				colvarQueryStringData.DefaultSetting = @"";  				colvarQueryStringData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarQueryStringData);  				  				TableSchema.TableColumn colvarCookiesData = new TableSchema.TableColumn(schema);  				colvarCookiesData.ColumnName = "CookiesData";  				colvarCookiesData.DataType = DbType.String;  				colvarCookiesData.MaxLength = 2048;  				colvarCookiesData.AutoIncrement = false;  				colvarCookiesData.IsNullable = true;  				colvarCookiesData.IsPrimaryKey = false;  				colvarCookiesData.IsForeignKey = false;  				colvarCookiesData.IsReadOnly = false;  				colvarCookiesData.DefaultSetting = @"";  				colvarCookiesData.ForeignKeyTableName = "";  				schema.Columns.Add(colvarCookiesData);  				  				TableSchema.TableColumn colvarExceptionType = new TableSchema.TableColumn(schema);  				colvarExceptionType.ColumnName = "ExceptionType";  				colvarExceptionType.DataType = DbType.String;  				colvarExceptionType.MaxLength = 256;  				colvarExceptionType.AutoIncrement = false;  				colvarExceptionType.IsNullable = true;  				colvarExceptionType.IsPrimaryKey = false;  				colvarExceptionType.IsForeignKey = false;  				colvarExceptionType.IsReadOnly = false;  				colvarExceptionType.DefaultSetting = @"";  				colvarExceptionType.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionType);  				  				TableSchema.TableColumn colvarScriptName = new TableSchema.TableColumn(schema);  				colvarScriptName.ColumnName = "ScriptName";  				colvarScriptName.DataType = DbType.String;  				colvarScriptName.MaxLength = 256;  				colvarScriptName.AutoIncrement = false;  				colvarScriptName.IsNullable = true;  				colvarScriptName.IsPrimaryKey = false;  				colvarScriptName.IsForeignKey = false;  				colvarScriptName.IsReadOnly = false;  				colvarScriptName.DefaultSetting = @"";  				colvarScriptName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarScriptName);  				  				TableSchema.TableColumn colvarExceptionMessage = new TableSchema.TableColumn(schema);  				colvarExceptionMessage.ColumnName = "ExceptionMessage";  				colvarExceptionMessage.DataType = DbType.String;  				colvarExceptionMessage.MaxLength = 512;  				colvarExceptionMessage.AutoIncrement = false;  				colvarExceptionMessage.IsNullable = true;  				colvarExceptionMessage.IsPrimaryKey = false;  				colvarExceptionMessage.IsForeignKey = false;  				colvarExceptionMessage.IsReadOnly = false;  				colvarExceptionMessage.DefaultSetting = @"";  				colvarExceptionMessage.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionMessage);  				  				TableSchema.TableColumn colvarExceptionSource = new TableSchema.TableColumn(schema);  				colvarExceptionSource.ColumnName = "ExceptionSource";  				colvarExceptionSource.DataType = DbType.String;  				colvarExceptionSource.MaxLength = 256;  				colvarExceptionSource.AutoIncrement = false;  				colvarExceptionSource.IsNullable = true;  				colvarExceptionSource.IsPrimaryKey = false;  				colvarExceptionSource.IsForeignKey = false;  				colvarExceptionSource.IsReadOnly = false;  				colvarExceptionSource.DefaultSetting = @"";  				colvarExceptionSource.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionSource);  				  				TableSchema.TableColumn colvarExceptionStackTrace = new TableSchema.TableColumn(schema);  				colvarExceptionStackTrace.ColumnName = "ExceptionStackTrace";  				colvarExceptionStackTrace.DataType = DbType.String;  				colvarExceptionStackTrace.MaxLength = 2048;  				colvarExceptionStackTrace.AutoIncrement = false;  				colvarExceptionStackTrace.IsNullable = true;  				colvarExceptionStackTrace.IsPrimaryKey = false;  				colvarExceptionStackTrace.IsForeignKey = false;  				colvarExceptionStackTrace.IsReadOnly = false;  				colvarExceptionStackTrace.DefaultSetting = @"";  				colvarExceptionStackTrace.ForeignKeyTableName = "";  				schema.Columns.Add(colvarExceptionStackTrace);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_Log"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,StateOrRegion,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\StateOrRegion.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_StateOrRegion"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarStateOrRegionId = new TableSchema.TableColumn(schema);  				colvarStateOrRegionId.ColumnName = "StateOrRegionId";  				colvarStateOrRegionId.DataType = DbType.Int32;  				colvarStateOrRegionId.MaxLength = 0;  				colvarStateOrRegionId.AutoIncrement = true;  				colvarStateOrRegionId.IsNullable = false;  				colvarStateOrRegionId.IsPrimaryKey = true;  				colvarStateOrRegionId.IsForeignKey = false;  				colvarStateOrRegionId.IsReadOnly = false;  				colvarStateOrRegionId.DefaultSetting = @"";  				colvarStateOrRegionId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarStateOrRegionId);  				  				TableSchema.TableColumn colvarCountryId = new TableSchema.TableColumn(schema);  				colvarCountryId.ColumnName = "CountryId";  				colvarCountryId.DataType = DbType.Int32;  				colvarCountryId.MaxLength = 0;  				colvarCountryId.AutoIncrement = false;  				colvarCountryId.IsNullable = false;  				colvarCountryId.IsPrimaryKey = false;  				colvarCountryId.IsForeignKey = true;  				colvarCountryId.IsReadOnly = false;  				colvarCountryId.DefaultSetting = @"";  				  					colvarCountryId.ForeignKeyTableName = "dashCommerce_Core_Country";  				schema.Columns.Add(colvarCountryId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 50;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarAbbreviation = new TableSchema.TableColumn(schema);  				colvarAbbreviation.ColumnName = "Abbreviation";  				colvarAbbreviation.DataType = DbType.String;  				colvarAbbreviation.MaxLength = 6;  				colvarAbbreviation.AutoIncrement = false;  				colvarAbbreviation.IsNullable = false;  				colvarAbbreviation.IsPrimaryKey = false;  				colvarAbbreviation.IsForeignKey = false;  				colvarAbbreviation.IsReadOnly = false;  				colvarAbbreviation.DefaultSetting = @"";  				colvarAbbreviation.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAbbreviation);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_StateOrRegion"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,StateOrRegion,C:\repos\dashcommerce_dashcommerce-3\Core\Models\Generated\StateOrRegion.cs,GetTableSchema,The following statement contains a magic number: if(!IsSchemaInitialized)  			{  				//Schema declaration  				TableSchema.Table schema = new TableSchema.Table("dashCommerce_Core_StateOrRegion"' TableType.Table' DataService.GetInstance("dashCommerceProvider"));  				schema.Columns = new TableSchema.TableColumnCollection();  				schema.SchemaName = @"dbo";  				//columns  				  				TableSchema.TableColumn colvarStateOrRegionId = new TableSchema.TableColumn(schema);  				colvarStateOrRegionId.ColumnName = "StateOrRegionId";  				colvarStateOrRegionId.DataType = DbType.Int32;  				colvarStateOrRegionId.MaxLength = 0;  				colvarStateOrRegionId.AutoIncrement = true;  				colvarStateOrRegionId.IsNullable = false;  				colvarStateOrRegionId.IsPrimaryKey = true;  				colvarStateOrRegionId.IsForeignKey = false;  				colvarStateOrRegionId.IsReadOnly = false;  				colvarStateOrRegionId.DefaultSetting = @"";  				colvarStateOrRegionId.ForeignKeyTableName = "";  				schema.Columns.Add(colvarStateOrRegionId);  				  				TableSchema.TableColumn colvarCountryId = new TableSchema.TableColumn(schema);  				colvarCountryId.ColumnName = "CountryId";  				colvarCountryId.DataType = DbType.Int32;  				colvarCountryId.MaxLength = 0;  				colvarCountryId.AutoIncrement = false;  				colvarCountryId.IsNullable = false;  				colvarCountryId.IsPrimaryKey = false;  				colvarCountryId.IsForeignKey = true;  				colvarCountryId.IsReadOnly = false;  				colvarCountryId.DefaultSetting = @"";  				  					colvarCountryId.ForeignKeyTableName = "dashCommerce_Core_Country";  				schema.Columns.Add(colvarCountryId);  				  				TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);  				colvarName.ColumnName = "Name";  				colvarName.DataType = DbType.String;  				colvarName.MaxLength = 50;  				colvarName.AutoIncrement = false;  				colvarName.IsNullable = false;  				colvarName.IsPrimaryKey = false;  				colvarName.IsForeignKey = false;  				colvarName.IsReadOnly = false;  				colvarName.DefaultSetting = @"";  				colvarName.ForeignKeyTableName = "";  				schema.Columns.Add(colvarName);  				  				TableSchema.TableColumn colvarAbbreviation = new TableSchema.TableColumn(schema);  				colvarAbbreviation.ColumnName = "Abbreviation";  				colvarAbbreviation.DataType = DbType.String;  				colvarAbbreviation.MaxLength = 6;  				colvarAbbreviation.AutoIncrement = false;  				colvarAbbreviation.IsNullable = false;  				colvarAbbreviation.IsPrimaryKey = false;  				colvarAbbreviation.IsForeignKey = false;  				colvarAbbreviation.IsReadOnly = false;  				colvarAbbreviation.DefaultSetting = @"";  				colvarAbbreviation.ForeignKeyTableName = "";  				schema.Columns.Add(colvarAbbreviation);  				  				BaseSchema = schema;  				//add this schema to the provider  				//so we can query it later  				DataService.Providers["dashCommerceProvider"].AddSchema("dashCommerce_Core_StateOrRegion"'schema);  			}
Magic Number,MettleSystems.dashCommerce.Core,CoreUtility,C:\repos\dashcommerce_dashcommerce-3\Core\CoreUtility.cs,Generate4By4MaskedString,The following statement contains a magic number: for (int i = 1; i <= 16; i++) {          randomString += chars[rnd.Next(chars.Length)];          if (i < 16 && i % 4 == 0) {            randomString += "-";          }        }
Magic Number,MettleSystems.dashCommerce.Core,CoreUtility,C:\repos\dashcommerce_dashcommerce-3\Core\CoreUtility.cs,Generate4By4MaskedString,The following statement contains a magic number: for (int i = 1; i <= 16; i++) {          randomString += chars[rnd.Next(chars.Length)];          if (i < 16 && i % 4 == 0) {            randomString += "-";          }        }
Magic Number,MettleSystems.dashCommerce.Core,CoreUtility,C:\repos\dashcommerce_dashcommerce-3\Core\CoreUtility.cs,Generate4By4MaskedString,The following statement contains a magic number: for (int i = 1; i <= 16; i++) {          randomString += chars[rnd.Next(chars.Length)];          if (i < 16 && i % 4 == 0) {            randomString += "-";          }        }
Magic Number,MettleSystems.dashCommerce.Core.IO,FileWriter,C:\repos\dashcommerce_dashcommerce-3\Core\IO\FileWriter.cs,Write,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,MettleSystems.dashCommerce.Core.IO,FileWriter,C:\repos\dashcommerce_dashcommerce-3\Core\IO\FileWriter.cs,Write,The following statement contains a magic number: while((bytesRead = stream.Read(buffer' 0' 4096)) > 0) {          fileStream.Write(buffer' 0' bytesRead);        }
