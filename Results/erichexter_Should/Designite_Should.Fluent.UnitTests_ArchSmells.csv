Architecture smell,Project,Namespace,Cause,Responsible Classes,Participating Classes
God Component,Should.Fluent.UnitTests,Should.Fluent.UnitTests,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 250,Should.Fluent.UnitTests.be_bool_test_base' Should.Fluent.UnitTests.should_be_bool_context' Should.Fluent.UnitTests.should_not_be_bool_context' Should.Fluent.UnitTests.when_calling_true' Should.Fluent.UnitTests.when_calling_not_true' Should.Fluent.UnitTests.when_calling_false' Should.Fluent.UnitTests.when_calling_not_false' Should.Fluent.UnitTests.be_datetime_test_base' Should.Fluent.UnitTests.should_be_datetime_context' Should.Fluent.UnitTests.should_not_be_datetime_context' Should.Fluent.UnitTests.when_calling_today' Should.Fluent.UnitTests.when_calling_not_today' Should.Fluent.UnitTests.be_double_test_base' Should.Fluent.UnitTests.should_be_double_context' Should.Fluent.UnitTests.should_not_be_double_context' Should.Fluent.UnitTests.when_calling_double_positive' Should.Fluent.UnitTests.when_calling_double_not_positive' Should.Fluent.UnitTests.when_calling_double_negative' Should.Fluent.UnitTests.when_calling_double_not_negative' Should.Fluent.UnitTests.be_enumerable_test_base' Should.Fluent.UnitTests.should_be_enumerable_contex' Should.Fluent.UnitTests.should_not_be_enumerable_context' Should.Fluent.UnitTests.when_calling_empty' Should.Fluent.UnitTests.when_calling_not_empty' Should.Fluent.UnitTests.when_calling_enumerable_null' Should.Fluent.UnitTests.when_calling_enumerable_not_null' Should.Fluent.UnitTests.when_extending_IBe' Should.Fluent.UnitTests.when_extending_bestring' Should.Fluent.UnitTests.when_extending_be' Should.Fluent.UnitTests.be_guid_test_base' Should.Fluent.UnitTests.should_be_guid_context' Should.Fluent.UnitTests.should_not_be_guid_context' Should.Fluent.UnitTests.when_calling_guid_empty' Should.Fluent.UnitTests.when_calling_guid_not_empty' Should.Fluent.UnitTests.be_methodcallexpression_test_base' Should.Fluent.UnitTests.should_be_methodcallexpression_context' Should.Fluent.UnitTests.should_not_be_methodcallexpression_context' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_same_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_different_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_same_method_with_different_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_different_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_different_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_identical_method_with_same_parameters_but_from_different_class' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_identical_method_with_same_parameters_but_from_different_class' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_same_generic_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_different_generic_parameters' Should.Fluent.UnitTests.should_be_nullable_bool_context' Should.Fluent.UnitTests.should_not_be_nullable_bool_context' Should.Fluent.UnitTests.when_calling_nullable_bool_is_null' Should.Fluent.UnitTests.when_calling_nullable_bool_is_not_null' Should.Fluent.UnitTests.when_calling_nullable_true' Should.Fluent.UnitTests.when_calling_nullable_not_true' Should.Fluent.UnitTests.when_calling_nullable_false' Should.Fluent.UnitTests.when_calling_nullable_not_false' Should.Fluent.UnitTests.when_calling_nullable_true_with_null' Should.Fluent.UnitTests.when_calling_nullable_false_with_null' Should.Fluent.UnitTests.should_be_nullable_datetime_context' Should.Fluent.UnitTests.should_not_be_nullable_datetime' Should.Fluent.UnitTests.when_calling_nullable_datatime_is_null' Should.Fluent.UnitTests.when_calling_nullable_datetime_is_not_null' Should.Fluent.UnitTests.when_calling_nullable_today' Should.Fluent.UnitTests.when_calling_nullable_not_today' Should.Fluent.UnitTests.when_calling_nullable_today_with_null' Should.Fluent.UnitTests.be_string_test_base' Should.Fluent.UnitTests.should_be_string_context' Should.Fluent.UnitTests.should_not_be_string_context' Should.Fluent.UnitTests.when_calling_string_null' Should.Fluent.UnitTests.when_calling_string_not_null' Should.Fluent.UnitTests.when_calling_string_empty' Should.Fluent.UnitTests.when_calling_string_not_empty' Should.Fluent.UnitTests.when_calling_string_nullorempty' Should.Fluent.UnitTests.when_calling_string_not_nullorempty' Should.Fluent.UnitTests.be_test_base' Should.Fluent.UnitTests.should_be_context' Should.Fluent.UnitTests.should_not_be_context' Should.Fluent.UnitTests.when_calling_null' Should.Fluent.UnitTests.when_calling_not_null' Should.Fluent.UnitTests.when_calling_generic_oftype' Should.Fluent.UnitTests.when_calling_not_generic_oftype' Should.Fluent.UnitTests.when_calling_oftype' Should.Fluent.UnitTests.when_calling_not_oftype' Should.Fluent.UnitTests.when_calling_sameas' Should.Fluent.UnitTests.when_calling_not_sameas' Should.Fluent.UnitTests.when_calling_inrange' Should.Fluent.UnitTests.when_calling_not_inrange' Should.Fluent.UnitTests.when_calling_assignablefrom' Should.Fluent.UnitTests.when_calling_not_assignablefrom' Should.Fluent.UnitTests.when_calling_assignablefrom_generic' Should.Fluent.UnitTests.when_calling_not_assignablefrom_generic' Should.Fluent.UnitTests.should_datetime_mocked_context' Should.Fluent.UnitTests.when_calling_datetime_equal_with_tolerance' Should.Fluent.UnitTests.when_calling_datetime_not_equal_with_tolerance' Should.Fluent.UnitTests.when_calling_datetime_equal_with_precision' Should.Fluent.UnitTests.when_calling_datetime_with_not_equal_with_precision' Should.Fluent.UnitTests.result_should_be_target<T>' Should.Fluent.UnitTests.when_assert_are_equal_passes' Should.Fluent.UnitTests.when_assert_are_equal_fails' Should.Fluent.UnitTests.when_assert_are_not_equal_passes' Should.Fluent.UnitTests.when_assert_are_not_equal_fails' Should.Fluent.UnitTests.when_assert_doubles_are_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_doubles_are_equal_within_tolerance_fails' Should.Fluent.UnitTests.when_assert_doubles_are_not_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_doubles_are_not_equal_within_tolerance_fails' Should.Fluent.UnitTests.beahves_like_date_equality_spec' Should.Fluent.UnitTests.when_assert_dates_are_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_dates_are_equal_within_tolerance_fails' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_within_tolerance_fails' Should.Fluent.UnitTests.when_assert_dates_are_equal_with_precision_passes' Should.Fluent.UnitTests.when_assert_dates_are_equal_with_precision_fails' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_with_precision_passes' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_with_precision_fails' Should.Fluent.UnitTests.when_assert_not_null_passes' Should.Fluent.UnitTests.when_assert_not_null_fails' Should.Fluent.UnitTests.when_assert_null_passes' Should.Fluent.UnitTests.when_assert_null_fails' Should.Fluent.UnitTests.when_assert_true_passes' Should.Fluent.UnitTests.when_assert_true_fails' Should.Fluent.UnitTests.when_assert_false_passes' Should.Fluent.UnitTests.when_assert_false_fails' Should.Fluent.UnitTests.when_assert_fail' Should.Fluent.UnitTests.when_assert_contains_passes' Should.Fluent.UnitTests.when_assert_contains_fails' Should.Fluent.UnitTests.when_assert_not_contains_passes' Should.Fluent.UnitTests.when_assert_not_contains_fails' Should.Fluent.UnitTests.when_assert_greater_passes' Should.Fluent.UnitTests.when_assert_greater_than_fails' Should.Fluent.UnitTests.when_assert_greater_than_passes' Should.Fluent.UnitTests.when_assert_greater_than_with_comparer_fails' Should.Fluent.UnitTests.when_assert_greater_than_with_comparer_passes' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_fails' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_passes' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_with_comparer_fails' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_with_comparer_passes' Should.Fluent.UnitTests.when_assert_less_than_fails' Should.Fluent.UnitTests.when_assert_less_than_passes' Should.Fluent.UnitTests.when_assert_less_than_with_comparer_fails' Should.Fluent.UnitTests.when_assert_less_than_with_comparer_passes' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_fails' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_passes' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_with_comparer_fails' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_with_comparer_passes' Should.Fluent.UnitTests.when_assert_not_greater_fails' Should.Fluent.UnitTests.when_assert_greater_or_equal_passes' Should.Fluent.UnitTests.when_assert_not_greater_or_equal_fails' Should.Fluent.UnitTests.sameness_test' Should.Fluent.UnitTests.same_context' Should.Fluent.UnitTests.not_same_context' Should.Fluent.UnitTests.when_assert_are_same_passes' Should.Fluent.UnitTests.when_assert_not_are_same_fails' Should.Fluent.UnitTests.when_assert_are_not_same_passes' Should.Fluent.UnitTests.when_assert_not_are_not_same_fails' Should.Fluent.UnitTests.when_assert_is_substring_of_passes' Should.Fluent.UnitTests.when_assert_is_substring_of_fails' Should.Fluent.UnitTests.when_assert_is_instance_of_passes' Should.Fluent.UnitTests.when_assert_is_instance_of_fails' Should.Fluent.UnitTests.when_assert_is_not_instance_of_passes' Should.Fluent.UnitTests.when_assert_is_not_instance_of_type_fails' Should.Fluent.UnitTests.should_double_context' Should.Fluent.UnitTests.when_calling_double_equal' Should.Fluent.UnitTests.when_calling_double_not_equal' Should.Fluent.UnitTests.mocked_assert_provider_context' Should.Fluent.UnitTests.mocked_assert_provider_context<T>' Should.Fluent.UnitTests.contain_test_base' Should.Fluent.UnitTests.should_contain_context' Should.Fluent.UnitTests.should_not_contain_context' Should.Fluent.UnitTests.when_calling_any' Should.Fluent.UnitTests.when_calling_not_any' Should.Fluent.UnitTests.when_calling_one' Should.Fluent.UnitTests.when_calling_not_one' Should.Fluent.UnitTests.when_calling_one_with_value' Should.Fluent.UnitTests.when_calling_not_one_with_value' Should.Fluent.UnitTests.when_calling_item' Should.Fluent.UnitTests.when_calling_not_item' Should.Fluent.UnitTests.count_base' Should.Fluent.UnitTests.should_count_context' Should.Fluent.UnitTests.should_not_count_context' Should.Fluent.UnitTests.when_calling_exactly' Should.Fluent.UnitTests.when_calling_not_exactly' Should.Fluent.UnitTests.when_calling_at_least' Should.Fluent.UnitTests.when_calling_not_at_least' Should.Fluent.UnitTests.when_calling_no_more_than' Should.Fluent.UnitTests.when_calling_zero' Should.Fluent.UnitTests.when_calling_not_zero' Should.Fluent.UnitTests.collection_context' Should.Fluent.UnitTests.should_collection_count_context' Should.Fluent.UnitTests.should_collection_not_count_context' Should.Fluent.UnitTests.when_called_exactly' Should.Fluent.UnitTests.when_called_atleast' Should.Fluent.UnitTests.when_called_no_more_than' Should.Fluent.UnitTests.when_called_zero' Should.Fluent.UnitTests.when_called_not_exactly' Should.Fluent.UnitTests.when_called_not_at_least' Should.Fluent.UnitTests.when_called_not_no_more_than' Should.Fluent.UnitTests.when_called_not_zero' Should.Fluent.UnitTests.when_calling_object_should_be_null' Should.Fluent.UnitTests.when_calling_string_should_not_be_null' Should.Fluent.UnitTests.should_contain_test_base' Should.Fluent.UnitTests.when_calling_should_contain_one' Should.Fluent.UnitTests.when_calling_should_contain_item' Should.Fluent.UnitTests.when_calling_should_count_exactly' Should.Fluent.UnitTests.when_calling_should_not_count_exactly' Should.Fluent.UnitTests.when_chaining' Should.Fluent.UnitTests.when_calling_should_contain_one_and_none_found' Should.Fluent.UnitTests.when_calling_bool_should_be_true' Should.Fluent.UnitTests.behaves_like_nullable_bool_true' Should.Fluent.UnitTests.when_calling_nullable_bool_should_be_true' Should.Fluent.UnitTests.when_calling_nullable_bool_should_not_be_null' Should.Fluent.UnitTests.when_calling_guid_should_be_empty' Should.Fluent.UnitTests.when_calling_guid_should_not_be_empty' Should.Fluent.UnitTests.when_calling_string_should_be_covertable_to' Should.Fluent.UnitTests.when_calling_string_should_not_be_covertable_to' Should.Fluent.UnitTests.should_dictionary_context' Should.Fluent.UnitTests.when_getting_count' Should.Fluent.UnitTests.when_getting_contain' Should.Fluent.UnitTests.when_calling_contains_key' Should.Fluent.UnitTests.when_calling_not_contains_key' Should.Fluent.UnitTests.when_calling_contains_key_but_not_contains' Should.Fluent.UnitTests.should_context' Should.Fluent.UnitTests.when_calling_equal,Should.Fluent.UnitTests.be_bool_test_base' Should.Fluent.UnitTests.should_be_bool_context' Should.Fluent.UnitTests.should_not_be_bool_context' Should.Fluent.UnitTests.when_calling_true' Should.Fluent.UnitTests.when_calling_not_true' Should.Fluent.UnitTests.when_calling_false' Should.Fluent.UnitTests.when_calling_not_false' Should.Fluent.UnitTests.be_datetime_test_base' Should.Fluent.UnitTests.should_be_datetime_context' Should.Fluent.UnitTests.should_not_be_datetime_context' Should.Fluent.UnitTests.when_calling_today' Should.Fluent.UnitTests.when_calling_not_today' Should.Fluent.UnitTests.be_double_test_base' Should.Fluent.UnitTests.should_be_double_context' Should.Fluent.UnitTests.should_not_be_double_context' Should.Fluent.UnitTests.when_calling_double_positive' Should.Fluent.UnitTests.when_calling_double_not_positive' Should.Fluent.UnitTests.when_calling_double_negative' Should.Fluent.UnitTests.when_calling_double_not_negative' Should.Fluent.UnitTests.be_enumerable_test_base' Should.Fluent.UnitTests.should_be_enumerable_contex' Should.Fluent.UnitTests.should_not_be_enumerable_context' Should.Fluent.UnitTests.when_calling_empty' Should.Fluent.UnitTests.when_calling_not_empty' Should.Fluent.UnitTests.when_calling_enumerable_null' Should.Fluent.UnitTests.when_calling_enumerable_not_null' Should.Fluent.UnitTests.when_extending_IBe' Should.Fluent.UnitTests.when_extending_bestring' Should.Fluent.UnitTests.when_extending_be' Should.Fluent.UnitTests.BeExtensions' Should.Fluent.UnitTests.BeStringExtensions' Should.Fluent.UnitTests.BeFoo' Should.Fluent.UnitTests.ShouldCustomExtensions' Should.Fluent.UnitTests.be_guid_test_base' Should.Fluent.UnitTests.should_be_guid_context' Should.Fluent.UnitTests.should_not_be_guid_context' Should.Fluent.UnitTests.when_calling_guid_empty' Should.Fluent.UnitTests.when_calling_guid_not_empty' Should.Fluent.UnitTests.be_methodcallexpression_test_base' Should.Fluent.UnitTests.should_be_methodcallexpression_context' Should.Fluent.UnitTests.should_not_be_methodcallexpression_context' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_same_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_different_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_same_method_with_different_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_different_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_different_method_with_same_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_identical_method_with_same_parameters_but_from_different_class' Should.Fluent.UnitTests.when_calling_methodcallexpression_not_equal_on_identical_method_with_same_parameters_but_from_different_class' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_same_generic_parameters' Should.Fluent.UnitTests.when_calling_methodcallexpression_equal_on_same_method_with_different_generic_parameters' Should.Fluent.UnitTests.MethodCallExpressionFake' Should.Fluent.UnitTests.MethodCallExpressionFake2' Should.Fluent.UnitTests.be_nullable_bool_test_base' Should.Fluent.UnitTests.should_be_nullable_bool_context' Should.Fluent.UnitTests.should_not_be_nullable_bool_context' Should.Fluent.UnitTests.when_calling_nullable_bool_is_null' Should.Fluent.UnitTests.when_calling_nullable_bool_is_not_null' Should.Fluent.UnitTests.when_calling_nullable_true' Should.Fluent.UnitTests.when_calling_nullable_not_true' Should.Fluent.UnitTests.when_calling_nullable_false' Should.Fluent.UnitTests.when_calling_nullable_not_false' Should.Fluent.UnitTests.when_calling_nullable_true_with_null' Should.Fluent.UnitTests.when_calling_nullable_false_with_null' Should.Fluent.UnitTests.be_nullable_datetime_test_base' Should.Fluent.UnitTests.should_be_nullable_datetime_context' Should.Fluent.UnitTests.should_not_be_nullable_datetime' Should.Fluent.UnitTests.when_calling_nullable_datatime_is_null' Should.Fluent.UnitTests.when_calling_nullable_datetime_is_not_null' Should.Fluent.UnitTests.when_calling_nullable_today' Should.Fluent.UnitTests.when_calling_nullable_not_today' Should.Fluent.UnitTests.when_calling_nullable_today_with_null' Should.Fluent.UnitTests.be_string_test_base' Should.Fluent.UnitTests.should_be_string_context' Should.Fluent.UnitTests.should_not_be_string_context' Should.Fluent.UnitTests.when_calling_string_null' Should.Fluent.UnitTests.when_calling_string_not_null' Should.Fluent.UnitTests.when_calling_string_empty' Should.Fluent.UnitTests.when_calling_string_not_empty' Should.Fluent.UnitTests.when_calling_string_nullorempty' Should.Fluent.UnitTests.when_calling_string_not_nullorempty' Should.Fluent.UnitTests.be_test_base' Should.Fluent.UnitTests.should_be_context' Should.Fluent.UnitTests.should_not_be_context' Should.Fluent.UnitTests.when_calling_null' Should.Fluent.UnitTests.when_calling_not_null' Should.Fluent.UnitTests.when_calling_generic_oftype' Should.Fluent.UnitTests.when_calling_not_generic_oftype' Should.Fluent.UnitTests.when_calling_oftype' Should.Fluent.UnitTests.when_calling_not_oftype' Should.Fluent.UnitTests.when_calling_sameas' Should.Fluent.UnitTests.when_calling_not_sameas' Should.Fluent.UnitTests.when_calling_inrange' Should.Fluent.UnitTests.when_calling_not_inrange' Should.Fluent.UnitTests.when_calling_assignablefrom' Should.Fluent.UnitTests.when_calling_not_assignablefrom' Should.Fluent.UnitTests.when_calling_assignablefrom_generic' Should.Fluent.UnitTests.when_calling_not_assignablefrom_generic' Should.Fluent.UnitTests.should_datetime_mocked_context' Should.Fluent.UnitTests.when_calling_datetime_equal_with_tolerance' Should.Fluent.UnitTests.when_calling_datetime_not_equal_with_tolerance' Should.Fluent.UnitTests.when_calling_datetime_equal_with_precision' Should.Fluent.UnitTests.when_calling_datetime_with_not_equal_with_precision' Should.Fluent.UnitTests.result_should_be_target<T>' Should.Fluent.UnitTests.assert_provider_context' Should.Fluent.UnitTests.when_assert_are_equal_passes' Should.Fluent.UnitTests.when_assert_are_equal_fails' Should.Fluent.UnitTests.when_assert_are_not_equal_passes' Should.Fluent.UnitTests.when_assert_are_not_equal_fails' Should.Fluent.UnitTests.when_assert_doubles_are_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_doubles_are_equal_within_tolerance_fails' Should.Fluent.UnitTests.when_assert_doubles_are_not_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_doubles_are_not_equal_within_tolerance_fails' Should.Fluent.UnitTests.beahves_like_date_equality_spec' Should.Fluent.UnitTests.when_assert_dates_are_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_dates_are_equal_within_tolerance_fails' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_within_tolerance_passes' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_within_tolerance_fails' Should.Fluent.UnitTests.when_assert_dates_are_equal_with_precision_passes' Should.Fluent.UnitTests.when_assert_dates_are_equal_with_precision_fails' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_with_precision_passes' Should.Fluent.UnitTests.when_assert_dates_are_not_equal_with_precision_fails' Should.Fluent.UnitTests.when_assert_not_null_passes' Should.Fluent.UnitTests.when_assert_not_null_fails' Should.Fluent.UnitTests.when_assert_null_passes' Should.Fluent.UnitTests.when_assert_null_fails' Should.Fluent.UnitTests.when_assert_true_passes' Should.Fluent.UnitTests.when_assert_true_fails' Should.Fluent.UnitTests.when_assert_false_passes' Should.Fluent.UnitTests.when_assert_false_fails' Should.Fluent.UnitTests.when_assert_fail' Should.Fluent.UnitTests.when_assert_contains_passes' Should.Fluent.UnitTests.when_assert_contains_fails' Should.Fluent.UnitTests.when_assert_not_contains_passes' Should.Fluent.UnitTests.when_assert_not_contains_fails' Should.Fluent.UnitTests.when_assert_greater_passes' Should.Fluent.UnitTests.when_assert_greater_than_fails' Should.Fluent.UnitTests.when_assert_greater_than_passes' Should.Fluent.UnitTests.when_assert_greater_than_with_comparer_fails' Should.Fluent.UnitTests.when_assert_greater_than_with_comparer_passes' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_fails' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_passes' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_with_comparer_fails' Should.Fluent.UnitTests.when_assert_greater_than_or_equal_to_with_comparer_passes' Should.Fluent.UnitTests.when_assert_less_than_fails' Should.Fluent.UnitTests.when_assert_less_than_passes' Should.Fluent.UnitTests.when_assert_less_than_with_comparer_fails' Should.Fluent.UnitTests.when_assert_less_than_with_comparer_passes' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_fails' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_passes' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_with_comparer_fails' Should.Fluent.UnitTests.when_assert_less_than_or_equal_to_with_comparer_passes' Should.Fluent.UnitTests.when_assert_not_greater_fails' Should.Fluent.UnitTests.when_assert_greater_or_equal_passes' Should.Fluent.UnitTests.when_assert_not_greater_or_equal_fails' Should.Fluent.UnitTests.sameness_test' Should.Fluent.UnitTests.same_context' Should.Fluent.UnitTests.not_same_context' Should.Fluent.UnitTests.when_assert_are_same_passes' Should.Fluent.UnitTests.when_assert_not_are_same_fails' Should.Fluent.UnitTests.when_assert_are_not_same_passes' Should.Fluent.UnitTests.when_assert_not_are_not_same_fails' Should.Fluent.UnitTests.when_assert_is_substring_of_passes' Should.Fluent.UnitTests.when_assert_is_substring_of_fails' Should.Fluent.UnitTests.when_assert_is_instance_of_passes' Should.Fluent.UnitTests.when_assert_is_instance_of_fails' Should.Fluent.UnitTests.when_assert_is_not_instance_of_passes' Should.Fluent.UnitTests.when_assert_is_not_instance_of_type_fails' Should.Fluent.UnitTests.should_double_context' Should.Fluent.UnitTests.when_calling_double_equal' Should.Fluent.UnitTests.when_calling_double_not_equal' Should.Fluent.UnitTests.test_base' Should.Fluent.UnitTests.test_base<T>' Should.Fluent.UnitTests.mocked_assert_provider_context' Should.Fluent.UnitTests.mocked_assert_provider_context<T>' Should.Fluent.UnitTests.Foo' Should.Fluent.UnitTests.contain_test_base' Should.Fluent.UnitTests.should_contain_context' Should.Fluent.UnitTests.should_not_contain_context' Should.Fluent.UnitTests.when_calling_any' Should.Fluent.UnitTests.when_calling_not_any' Should.Fluent.UnitTests.when_calling_one' Should.Fluent.UnitTests.when_calling_not_one' Should.Fluent.UnitTests.when_calling_one_with_value' Should.Fluent.UnitTests.when_calling_not_one_with_value' Should.Fluent.UnitTests.when_calling_item' Should.Fluent.UnitTests.when_calling_not_item' Should.Fluent.UnitTests.EnumerableExtensions' Should.Fluent.UnitTests.count_base' Should.Fluent.UnitTests.should_count_context' Should.Fluent.UnitTests.should_not_count_context' Should.Fluent.UnitTests.when_calling_exactly' Should.Fluent.UnitTests.when_calling_not_exactly' Should.Fluent.UnitTests.when_calling_at_least' Should.Fluent.UnitTests.when_calling_not_at_least' Should.Fluent.UnitTests.when_calling_no_more_than' Should.Fluent.UnitTests.when_calling_zero' Should.Fluent.UnitTests.when_calling_not_zero' Should.Fluent.UnitTests.collection_context' Should.Fluent.UnitTests.should_collection_count_context' Should.Fluent.UnitTests.should_collection_not_count_context' Should.Fluent.UnitTests.when_called_exactly' Should.Fluent.UnitTests.when_called_atleast' Should.Fluent.UnitTests.when_called_no_more_than' Should.Fluent.UnitTests.when_called_zero' Should.Fluent.UnitTests.when_called_not_exactly' Should.Fluent.UnitTests.when_called_not_at_least' Should.Fluent.UnitTests.when_called_not_no_more_than' Should.Fluent.UnitTests.when_called_not_zero' Should.Fluent.UnitTests.MyCollection' Should.Fluent.UnitTests.when_calling_object_should_be_null' Should.Fluent.UnitTests.when_calling_string_should_not_be_null' Should.Fluent.UnitTests.should_contain_test_base' Should.Fluent.UnitTests.when_calling_should_contain_one' Should.Fluent.UnitTests.when_calling_should_contain_item' Should.Fluent.UnitTests.when_calling_should_count_exactly' Should.Fluent.UnitTests.when_calling_should_not_count_exactly' Should.Fluent.UnitTests.when_chaining' Should.Fluent.UnitTests.when_calling_should_contain_one_and_none_found' Should.Fluent.UnitTests.when_calling_bool_should_be_true' Should.Fluent.UnitTests.behaves_like_nullable_bool_true' Should.Fluent.UnitTests.when_calling_nullable_bool_should_be_true' Should.Fluent.UnitTests.when_calling_nullable_bool_should_not_be_null' Should.Fluent.UnitTests.when_calling_guid_should_be_empty' Should.Fluent.UnitTests.when_calling_guid_should_not_be_empty' Should.Fluent.UnitTests.when_calling_string_should_be_covertable_to' Should.Fluent.UnitTests.when_calling_string_should_not_be_covertable_to' Should.Fluent.UnitTests.should_dictionary_context' Should.Fluent.UnitTests.when_getting_count' Should.Fluent.UnitTests.when_getting_contain' Should.Fluent.UnitTests.when_calling_contains_key' Should.Fluent.UnitTests.when_calling_not_contains_key' Should.Fluent.UnitTests.when_calling_contains_key_but_not_contains' Should.Fluent.UnitTests.should_context' Should.Fluent.UnitTests.when_calling_equal' Should.Fluent.UnitTests.when_calling_not_equal' Should.Fluent.UnitTests.should_string_context' Should.Fluent.UnitTests.when_calling_starts_with' Should.Fluent.UnitTests.when_calling_starts_with_fail' Should.Fluent.UnitTests.when_calling_not_starts_with' Should.Fluent.UnitTests.when_calling_not_starts_with_fail' Should.Fluent.UnitTests.when_calling_end_with' Should.Fluent.UnitTests.when_calling_ends_with_fail' Should.Fluent.UnitTests.when_calling_not_ends_with' Should.Fluent.UnitTests.when_calling_not_ends_with_fail' Should.Fluent.UnitTests.when_calling_contain' Should.Fluent.UnitTests.when_calling_not_contain' Should.Fluent.UnitTests.when_calling_not_contain_fails' Should.Fluent.UnitTests.Throws<T>' Should.Fluent.UnitTests.DoesNotThrow
Scattered Functionality,Should.Fluent.UnitTests,Should.Fluent.UnitTests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Should.Fluent.Model' Should.Fluent,Should.Fluent.Model.IShould' Should.Fluent.IAssertProvider,Should.Fluent.Model.IShould' Should.Fluent.IAssertProvider
