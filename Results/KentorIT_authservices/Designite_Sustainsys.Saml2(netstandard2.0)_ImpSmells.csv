Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The method has 176 lines of code.
Long Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadEntityDescriptor,The method has 106 lines of code.
Long Method,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,ReadAssertion,The method has 107 lines of code.
Complex Method,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,ValidateReference,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,Cyclomatic complexity of the method is 32
Complex Method,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,Encrypt,Cyclomatic complexity of the method is 9
Complex Method,Sustainsys.Saml2.Metadata,DSigKeyInfo,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\KeyInfo.cs,MakeSecurityKeyIdentifier,Cyclomatic complexity of the method is 10
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadKeyValue,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadRoleDescriptorElement,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadWebServiceDescriptorElement,Cyclomatic complexity of the method is 11
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteX509Data,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteAttributeAuthorityDescriptor,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteEntityDescriptor,Cyclomatic complexity of the method is 17
Complex Method,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteOrganization,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2.Metadata,SPOptionsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\SPOptionsExtensions.cs,CreateMetadata,Cyclomatic complexity of the method is 8
Complex Method,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,ReadAssertion,Cyclomatic complexity of the method is 20
Complex Method,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,WriteAssertion,Cyclomatic complexity of the method is 14
Long Parameter List,Sustainsys.Saml2,ClaimsIdentityExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsIdentityExtensions.cs,ToSaml2Assertion,The method has 5 parameters. Parameters: identity' issuer' audience' inResponseTo' destinationUri
Long Parameter List,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,XsdDuration,The method has 8 parameters. Parameters: negative' years' months' days' hours' minutes' seconds' nanoseconds
Long Parameter List,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteWrappedElements,The method has 5 parameters. Parameters: writer' wrapPrefix' wrapName' wrapNs' elts
Long Parameter List,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteUris,The method has 5 parameters. Parameters: writer' parentElementName' childElementName' ns' uris
Long Parameter List,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,Saml2Response,The method has 5 parameters. Parameters: issuer' signingCertificate' destinationUrl' inResponseTo' claimsIdentities
Long Parameter List,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,Saml2Response,The method has 6 parameters. Parameters: issuer' signingCertificate' destinationUrl' inResponseTo' relayState' claimsIdentities
Long Parameter List,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,Saml2Response,The method has 7 parameters. Parameters: issuer' issuerCertificate' destinationUrl' inResponseTo' relayState' audience' claimsIdentities
Long Parameter List,Sustainsys.Saml2.Tokens,BinaryKeyIdentifierClause,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\BinaryKeyIdentifierClause.cs,BinaryKeyIdentifierClause,The method has 5 parameters. Parameters: clauseType' identificationData' cloneBuffer' derivationNonce' derivationLength
Long Parameter List,Sustainsys.Saml2.WebSso,AcsCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\AcsCommand.cs,ProcessResponse,The method has 5 parameters. Parameters: options' samlResponse' storedRequestState' identityProvider' relayState
Long Parameter List,Sustainsys.Saml2.WebSso,HttpRequestData,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\HttpRequestData.cs,HttpRequestData,The method has 6 parameters. Parameters: httpMethod' url' applicationPath' formData' cookies' cookieDecryptor
Long Parameter List,Sustainsys.Saml2.WebSso,HttpRequestData,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\HttpRequestData.cs,HttpRequestData,The method has 7 parameters. Parameters: httpMethod' url' applicationPath' formData' cookies' cookieDecryptor' user
Long Parameter List,Sustainsys.Saml2.WebSso,HttpRequestData,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\HttpRequestData.cs,HttpRequestData,The method has 5 parameters. Parameters: httpMethod' url' applicationPath' formData' storedRequestState
Long Parameter List,Sustainsys.Saml2.WebSso,HttpRequestData,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\HttpRequestData.cs,Init,The method has 7 parameters. Parameters: httpMethod' url' applicationPath' formData' cookies' cookieDecryptor' user
Long Parameter List,Sustainsys.Saml2.WebSso,SignInCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\SignInCommand.cs,Run,The method has 5 parameters. Parameters: idpEntityId' returnPath' request' options' relayData
Long Parameter List,Sustainsys.Saml2.WebSso,SignInCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\SignInCommand.cs,InitiateLoginToIdp,The method has 5 parameters. Parameters: options' relayData' urls' idp' returnUrl
Long Identifier,Sustainsys.Saml2,IdentityProvider,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\IdentityProvider.cs,,The length of the parameter singleLogoutServiceResponseUrl is 30.
Long Identifier,Sustainsys.Saml2.Configuration,CompatibilityElement,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Configuration\CompatibilityElement.cs,,The length of the parameter unpackEntitiesDescriptorInIdentityProviderMetadata is 50.
Long Identifier,Sustainsys.Saml2.Configuration,SustainsysSaml2Section,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Configuration\SustainsysSaml2Section.cs,,The length of the parameter authenticateRequestSigningBehavior is 34.
Long Identifier,Sustainsys.Saml2.Metadata,MetadataLoader,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataLoader.cs,,The length of the parameter LoadIdpFoundEntitiesDescriptor is 30.
Long Identifier,Sustainsys.Saml2.Metadata,MetadataLoader,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataLoader.cs,,The length of the parameter LoadIdpUnpackingFoundMultipleEntityDescriptors is 46.
Long Identifier,Sustainsys.Saml2.Metadata,MetadataLoader,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataLoader.cs,,The length of the parameter LoadFederationFoundEntityDescriptor is 35.
Long Identifier,Sustainsys.Saml2.Metadata,RequestedAttribute,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\RequestedAttribute.cs,,The length of the parameter AttributeNameFormatUnspecified is 30.
Long Identifier,Sustainsys.Saml2.Saml2P,EnvelopedSignatureWriterWithReferenceIdFix,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\EnvelopedSignatureWriterWithReferenceIdFix.cs,,The length of the parameter _inclusiveNamespacesPrefixList is 30.
Long Identifier,Sustainsys.Saml2.WebSso,AcsCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\AcsCommand.cs,,The length of the parameter UnsolicitedMissingReturnUrlMessage is 34.
Long Identifier,Sustainsys.Saml2.WebSso,Saml2PostBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2PostBinding.cs,,The length of the parameter PostHtmlRelayStateFormatString is 30.
Long Statement,Sustainsys.Saml2,ClaimsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsExtensions.cs,ToSaml2NameIdentifier,The length of the statement  "            throw new ArgumentException("ToSaml2NameIdentifier can only process an Saml2 logout name identifier claim."' nameof(claim)); " is 124.
Long Statement,Sustainsys.Saml2,IdentityProvider,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\IdentityProvider.cs,Validate,The length of the statement  "                throw new ConfigurationErrorsException("Missing assertion consumer service url configuration on Idp " + EntityId.Id + "."); " is 123.
Long Statement,Sustainsys.Saml2,IdentityProvider,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\IdentityProvider.cs,CreateAuthenticateRequest,The length of the statement  "                            "Idp \"{0}\" is configured for signed AuthenticateRequests' but ServiceCertificates configuration contains no certificate with usage \"Signing\" or \"Both\". To resolve this issue you can a) add a service certificate with usage \"Signing\" or \"Both\" (default if not specified is \"Both\") or b) Set the AuthenticateRequestSigningBehavior configuration property to \"Never\"."' " is 378.
Long Statement,Sustainsys.Saml2,IdentityProvider,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\IdentityProvider.cs,CreateLogoutRequest,The length of the statement  "                    "Tried to issue single logout request to {0}' but no signing certificate for the SP is configured and single logout requires signing. Add a certificate to the ISPOptions.ServiceCertificates collection' or to <serviceCertificates> element if you're using web.config."' " is 267.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,Sign,The length of the statement  "			// The transform XmlDsigExcC14NTransform and canonicalization method XmlDsigExcC14NTransformUrl is important for partially signed XML files " is 139.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,Sign,The length of the statement  "			// see: http://msdn.microsoft.com/en-us/library/system.security.cryptography.xml.signedxml.xmldsigexcc14ntransformurl(v=vs.110).aspx " is 132.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,Sign,The length of the statement  "			// https://www.oasis-open.org/committees/download.php/35711/sstc-saml-core-errata-2.0-wd-06-diff.pdf section 5.4.2 and 5.4.3 " is 124.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,VerifySignature,The length of the statement  "                throw new InvalidSignatureException("The signature verified correctly with the key contained in the signature' but that key is not trusted."); " is 142.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,ValidateCertificate,The length of the statement  "                        "Certificate validation enabled' but the signing key identifier is of type {0} which cannot be validated as a certificate."' " is 124.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,ValidateCertificate,The length of the statement  "                    throw new InvalidSignatureException("The signature was valid' but the verification of the certificate failed. Is it expired or revoked? Are you sure you really want to enable ValidateCertificates (it's normally not needed)?"); " is 226.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,ValidateReference,The length of the statement  "                throw new InvalidSignatureException("Incorrect reference on Xml signature. The reference must be to the root element of the element containing the signature."); " is 160.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,GetRequiredAttributeValue,The length of the statement  "                throw new BadFormatSamlResponseException($"Attribute '{attributeName}' (case-sensitive) was not found or its value is empty"); " is 126.
Long Statement,Sustainsys.Saml2,XmlHelpers,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XmlHelpers.cs,GetRequiredElement,The length of the statement  "                throw new BadFormatSamlResponseException($"Element '{name}' (case-sensitive' namespace '{namespaceValue}') was not found"); " is 123.
Long Statement,Sustainsys.Saml2.Configuration,ServiceCertificateCollection,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Configuration\ServiceCertificateCollection.cs,InsertItem,The length of the statement  "                    throw new ArgumentException(@"Provided certificate is not valid for encryption/decryption. There may be insufficient permissions to its private key in the windows certificate store or the certificate itself may not have the correct purposes. If you only want to use it for signing' set the Use property to Signing (CertificateUse.Signing)."); " is 342.
Long Statement,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,Encrypt,The length of the statement  "                encryptedKey.CipherData = new CipherData(EncryptedXml.EncryptKey(symmetricAlgorithm.Key' (RSA)certificate.PublicKey.Key' useOaep)); " is 131.
Long Statement,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ValidateSigningCredential,The length of the statement  "                CertificateValidator = X509Util.CreateCertificateValidator(CertificateValidationMode' RevocationMode' TrustedStoreLocation); " is 124.
Long Statement,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadRequestedAttribute,The length of the statement  "			var attribute = ReadSaml2AttributeAttributes(reader' CreateRequestedAttributeInstance); 			attribute.IsRequired = GetOptionalBooleanAttribute(reader' "isRequired"); " is 164.
Long Statement,Sustainsys.Saml2.Saml2P,EnvelopedSignatureWriterWithReferenceIdFix,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\EnvelopedSignatureWriterWithReferenceIdFix.cs,OnEndRootElement,The length of the statement  "			Array.Copy(writerBytes' (int)_signaturePosition' effectiveBytes' (int)_signaturePosition + signatureBytes.Length' writerBytes.Length - (int)_signaturePosition); " is 160.
Long Statement,Sustainsys.Saml2.Saml2P,EnvelopedSignatureWriterWithReferenceIdFix,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\EnvelopedSignatureWriterWithReferenceIdFix.cs,CreateSignature,The length of the statement  "			CryptoProviderFactory cryptoProviderFactory = _signingCredentials.CryptoProviderFactory ?? _signingCredentials.Key.CryptoProviderFactory; " is 137.
Long Statement,Sustainsys.Saml2.Saml2P,EnvelopedSignatureWriterWithReferenceIdFix,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\EnvelopedSignatureWriterWithReferenceIdFix.cs,CreateSignature,The length of the statement  "				throw LogExceptionMessage(new XmlValidationException(FormatInvariant(LogMessages.IDX30213' cryptoProviderFactory.ToString()' _signingCredentials.Digest))); " is 155.
Long Statement,Sustainsys.Saml2.Saml2P,EnvelopedSignatureWriterWithReferenceIdFix,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\EnvelopedSignatureWriterWithReferenceIdFix.cs,CreateSignature,The length of the statement  "				reference = new Reference(new EnvelopedSignatureTransform()' new ExclusiveCanonicalizationTransform { InclusiveNamespacesPrefixList = _inclusiveNamespacesPrefixList }) " is 167.
Long Statement,Sustainsys.Saml2.Saml2P,EnvelopedSignatureWriterWithReferenceIdFix,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\EnvelopedSignatureWriterWithReferenceIdFix.cs,CreateSignature,The length of the statement  "				throw LogExceptionMessage(new XmlValidationException(FormatInvariant(LogMessages.IDX30213' cryptoProviderFactory.ToString()' _signingCredentials.Key.ToString()' _signingCredentials.Algorithm))); " is 194.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2AuthenticationRequest,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2AuthenticationRequest.cs,AddNameIdPolicy,The length of the statement  "                    throw new InvalidOperationException("When NameIdPolicy/Format is set to Transient' it is not permitted to specify AllowCreate. Change Format or leave AllowCreate as null."); " is 173.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,ReadAssertion,The length of the statement  "					throw LogReadException(LogMessages.IDX13106' Saml2Constants.Elements.Assertion' Saml2Constants.Attributes.IssueInstant); " is 120.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,ReadAssertion,The length of the statement  "				assertion.IssueInstant = DateTime.ParseExact(value' Saml2Constants.AcceptedDateTimeFormats' DateTimeFormatInfo.InvariantInfo' DateTimeStyles.None).ToUniversalTime(); " is 165.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,WriteAssertion,The length of the statement  "				writer = signatureWriter = new EnvelopedSignatureWriterWithReferenceIdFix(writer' assertion.SigningCredentials' assertion.Id.Value' assertion.InclusiveNamespacesPrefixList) { DSigSerializer = DSigSerializer }; " is 209.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,ReadAuthenticationContext,The length of the statement  "				return (Saml2AuthenticationContext)System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Saml2AuthenticationContext)); " is 141.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,retrieveAssertionElements,The length of the statement  "                    throw new Saml2ResponseFailedValidationException("Encrypted Assertion(s) could not be decrypted using the configured Service Certificate(s)."); " is 143.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,GetCertificatesValidForDecryption,The length of the statement  "                throw new Saml2ResponseFailedValidationException("Encrypted Assertions encountered but Service Certificate was not provided."); " is 127.
Long Statement,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,ValidateSignature,The length of the statement  "                throw new Saml2ResponseFailedValidationException("The SAML Response is not signed and contains unsigned Assertions. Response cannot be trusted."); " is 146.
Long Statement,Sustainsys.Saml2.Tokens,SecurityToken,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509SecurityToken.cs,ResolveKeyIdentifierClause,The length of the statement  "				throw new InvalidOperationException($"This '{GetType()}' security token does not support resolving '{keyIdentifierClause}' key identifier clause."); " is 148.
Long Statement,Sustainsys.Saml2.WebSso,AcsCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\AcsCommand.cs,GetIdpContext,The length of the statement  "            var identityProvider = options.Notifications.GetIdentityProvider(entityId' request.StoredRequestState?.RelayData' options); " is 123.
Long Statement,Sustainsys.Saml2.WebSso,LogoutCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\LogOutCommand.cs,VerifyMessageIsSigned,The length of the statement  "                    throw new InvalidSignatureException("There is no Issuer element in the message' so there is no way to know what certificate to use to validate the signature."); " is 160.
Long Statement,Sustainsys.Saml2.WebSso,LogoutCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\LogOutCommand.cs,HandleResponse,The length of the statement  "            var notificationHandledTheStatus = options.Notifications.ProcessSingleLogoutResponseStatus(logoutResponse' storedRequestState); " is 127.
Long Statement,Sustainsys.Saml2.WebSso,LogoutCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\LogOutCommand.cs,HandleResponse,The length of the statement  "                        "Idp returned status \"{0}\"' indicating that the single logout failed. The local session has been successfully terminated."' " is 125.
Long Statement,Sustainsys.Saml2.WebSso,Saml2Binding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2Binding.cs,Get,The length of the statement  "                    "{0} is not a valid value for the Saml2BindingType enum. Have you forgotten to configure a binding for your identity provider?"' " is 128.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,Unbind,The length of the statement  "            var encodedPayload = request.QueryString["SAMLRequest"].FirstOrDefault() ?? request.QueryString["SAMLResponse"].First(); " is 120.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,Unbind,The length of the statement  "                            return new UnbindResult(xml.DocumentElement' request.QueryString["RelayState"].SingleOrDefault()' GetTrustLevel(xml.DocumentElement' request' options)); " is 152.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,GetTrustLevel,The length of the statement  "                throw new InvalidSignatureException(string.Format(CultureInfo.InvariantCulture' "Cannot verify signature of message from unknown sender {0}."' issuer)); " is 152.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,CheckSignature,The length of the statement  "            var rawQueryStringParams = request.Url.Query.TrimStart('?').Split('&').Select(qp => qp.Split('=')).ToDictionary(kv => kv[0]' kv => kv[1]); " is 138.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,CheckSignature,The length of the statement  "            var signedString = string.Format(CultureInfo.InvariantCulture' "{0}{1}&SigAlg={2}"' msgParam' relayStateParam' rawQueryStringParams["SigAlg"]); " is 143.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,CheckSignature,The length of the statement  "            if (!idp.SigningKeys.Any(kic => signatureDescription.CreateDeformatter(((AsymmetricSecurityKey)kic.CreateKey()).GetAsymmetricAlgorithm(sigAlg' false)).VerifySignature(hashAlg' signature))) " is 188.
Long Statement,Sustainsys.Saml2.WebSso,Saml2RedirectBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2RedirectBinding.cs,CheckSignature,The length of the statement  "                throw new InvalidSignatureException(string.Format(CultureInfo.InvariantCulture' "Message from {0} failed signature verification"' idp.EntityId.Id)); " is 148.
Complex Conditional,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToString,The conditional expression  "value.Hours != 0 || value.Minutes != 0 ||  				value.Seconds != 0 || value.Nanoseconds != 0"  is complex.
Complex Conditional,Sustainsys.Saml2.Internal,DateTimeHelper,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\DateTimeHelper.cs,EarliestTime,The conditional expression  "value1 == null ||                   value1.HasValue && value2.HasValue && value1.Value > value2.Value"  is complex.
Complex Conditional,Sustainsys.Saml2.WebSso,LogoutCommand,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\LogOutCommand.cs,InitiateLogout,The conditional expression  "idpEntityId != null                   && knownIdp                  && sessionIndexClaim != null                  && idp.SingleLogoutServiceUrl != null                  && options.SPOptions.SigningServiceCertificate != null                  && !idp.DisableOutboundLogoutRequests"  is complex.
Empty Catch Block,Sustainsys.Saml2.Saml2P,Saml2PSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2PSerializer.cs,ReadAssertion,The method has an empty catch block.
Empty Catch Block,Sustainsys.Saml2.Saml2P,Saml2Response,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\SAML2P\Saml2Response.cs,retrieveAssertionElements,The method has an empty catch block.
Magic Number,Sustainsys.Saml2,ClaimsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsExtensions.cs,ProcessLogoutNameIdentifier,The following statement contains a magic number: var saml2NameIdentifier = new Saml2NameIdentifier(fields[4]);
Magic Number,Sustainsys.Saml2,ClaimsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsExtensions.cs,ProcessLogoutNameIdentifier,The following statement contains a magic number: saml2NameIdentifier.Format = new Uri(fields[2]);
Magic Number,Sustainsys.Saml2,ClaimsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsExtensions.cs,ProcessLogoutNameIdentifier,The following statement contains a magic number: !string.IsNullOrEmpty(fields[2])
Magic Number,Sustainsys.Saml2,ClaimsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsExtensions.cs,ProcessLogoutNameIdentifier,The following statement contains a magic number: saml2NameIdentifier.SPProvidedId = fields[3];
Magic Number,Sustainsys.Saml2,ClaimsExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsExtensions.cs,ProcessLogoutNameIdentifier,The following statement contains a magic number: !string.IsNullOrEmpty(fields[3])
Magic Number,Sustainsys.Saml2,ClaimsIdentityExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\ClaimsIdentityExtensions.cs,ToSaml2Assertion,The following statement contains a magic number: var notOnOrAfter = DateTime.UtcNow.AddMinutes(2);
Magic Number,Sustainsys.Saml2,SecureKeyGenerator,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\RelayStateGenerator.cs,CreateRelayState,The following statement contains a magic number: var bytes = new byte[18];
Magic Number,Sustainsys.Saml2,SecureKeyGenerator,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\RelayStateGenerator.cs,CreateArtifactMessageHandle,The following statement contains a magic number: var bytes = new byte[20];
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ParseNumber,The following statement contains a magic number: result > (Int32.MaxValue - num) / 10
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ParseNumber,The following statement contains a magic number: result = result * 10 + num;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The following statement contains a magic number: fraction = fraction * 10 + num.Value;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The following statement contains a magic number: fraction <= (Int32.MaxValue - num.Value) / 10
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The following statement contains a magic number: fraction /= 10;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The following statement contains a magic number: numDigits > 9
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The following statement contains a magic number: fraction *= 10;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,TryParseInternal,The following statement contains a magic number: numDigits < 9
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: int result = 17;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + (Negative ? 1 : 0);
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Years;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Months;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Days;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Hours;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Minutes;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Seconds;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,GetHashCode,The following statement contains a magic number: result = result * 31 + Nanoseconds;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToTimeSpan,The following statement contains a magic number: ticks = ((((Years * 365 + Months * 30 + Days) * 24 + Hours)   					* 60 + Minutes) * 60 + Seconds) * TimeSpan.TicksPerSecond   					+ Nanoseconds / 100;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToTimeSpan,The following statement contains a magic number: ticks = ((((Years * 365 + Months * 30 + Days) * 24 + Hours)   					* 60 + Minutes) * 60 + Seconds) * TimeSpan.TicksPerSecond   					+ Nanoseconds / 100;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToTimeSpan,The following statement contains a magic number: ticks = ((((Years * 365 + Months * 30 + Days) * 24 + Hours)   					* 60 + Minutes) * 60 + Seconds) * TimeSpan.TicksPerSecond   					+ Nanoseconds / 100;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToTimeSpan,The following statement contains a magic number: ticks = ((((Years * 365 + Months * 30 + Days) * 24 + Hours)   					* 60 + Minutes) * 60 + Seconds) * TimeSpan.TicksPerSecond   					+ Nanoseconds / 100;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToTimeSpan,The following statement contains a magic number: ticks = ((((Years * 365 + Months * 30 + Days) * 24 + Hours)   					* 60 + Minutes) * 60 + Seconds) * TimeSpan.TicksPerSecond   					+ Nanoseconds / 100;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,ToTimeSpan,The following statement contains a magic number: ticks = ((((Years * 365 + Months * 30 + Days) * 24 + Hours)   					* 60 + Minutes) * 60 + Seconds) * TimeSpan.TicksPerSecond   					+ Nanoseconds / 100;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,XsdDuration,The following statement contains a magic number: Hours = ((int)(ticks / TimeSpan.TicksPerHour)) % 24;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,XsdDuration,The following statement contains a magic number: Minutes = ((int)(ticks / TimeSpan.TicksPerMinute)) % 60;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,XsdDuration,The following statement contains a magic number: Seconds = ((int)(ticks / TimeSpan.TicksPerSecond)) % 60;
Magic Number,Sustainsys.Saml2,XsdDuration,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\XsdDuration.cs,XsdDuration,The following statement contains a magic number: Nanoseconds = (int)((ticks % TimeSpan.TicksPerSecond) * 100);
Magic Number,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,Encrypt,The following statement contains a magic number: switch (encryptingCredentials.Enc)  			{  				case SecurityAlgorithms.Aes128CbcHmacSha256:  					enc = EncryptedXml.XmlEncAES128Url;  					keySize = 128;  					break;  				case SecurityAlgorithms.Aes192CbcHmacSha384:  					enc = EncryptedXml.XmlEncAES192Url;  					keySize = 192;  					break;  				case SecurityAlgorithms.Aes256CbcHmacSha512:  					enc = EncryptedXml.XmlEncAES256Url;  					keySize = 256;  					break;  				default:  					throw new CryptographicException(  						$"Unsupported cryptographic algorithm {encryptingCredentials.Enc}");  			}
Magic Number,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,Encrypt,The following statement contains a magic number: switch (encryptingCredentials.Enc)  			{  				case SecurityAlgorithms.Aes128CbcHmacSha256:  					enc = EncryptedXml.XmlEncAES128Url;  					keySize = 128;  					break;  				case SecurityAlgorithms.Aes192CbcHmacSha384:  					enc = EncryptedXml.XmlEncAES192Url;  					keySize = 192;  					break;  				case SecurityAlgorithms.Aes256CbcHmacSha512:  					enc = EncryptedXml.XmlEncAES256Url;  					keySize = 256;  					break;  				default:  					throw new CryptographicException(  						$"Unsupported cryptographic algorithm {encryptingCredentials.Enc}");  			}
Magic Number,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,Encrypt,The following statement contains a magic number: switch (encryptingCredentials.Enc)  			{  				case SecurityAlgorithms.Aes128CbcHmacSha256:  					enc = EncryptedXml.XmlEncAES128Url;  					keySize = 128;  					break;  				case SecurityAlgorithms.Aes192CbcHmacSha384:  					enc = EncryptedXml.XmlEncAES192Url;  					keySize = 192;  					break;  				case SecurityAlgorithms.Aes256CbcHmacSha512:  					enc = EncryptedXml.XmlEncAES256Url;  					keySize = 256;  					break;  				default:  					throw new CryptographicException(  						$"Unsupported cryptographic algorithm {encryptingCredentials.Enc}");  			}
Magic Number,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,Encrypt,The following statement contains a magic number: symmetricAlgorithm.KeySize = 256;
Magic Number,Sustainsys.Saml2.Internal,CryptographyExtensions,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\CryptographyExtensions.cs,GetSha256EnabledRSACryptoServiceProvider,The following statement contains a magic number: cspParams.ProviderType = 24;
Magic Number,Sustainsys.Saml2.Internal,EntityIdEqualityComparer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Internal\EntityIdEqualityComparer.cs,GetHashCode,The following statement contains a magic number: return 117;
Magic Number,Sustainsys.Saml2.Metadata,MetadataLoader,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataLoader.cs,Load,The following statement contains a magic number: byte[] buf = new byte[65536];
Magic Number,Sustainsys.Saml2.Metadata,MetadataRefreshScheduler,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataRefreshScheduler.cs,GetDelay,The following statement contains a magic number: var delay = new TimeSpan(timeRemaining.Ticks / 2);
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadDSAKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("P"' DSigNs))  				{  					parameters.P = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Q"' DSigNs))  				{  					parameters.Q = ReadBase64(reader);  				}  				else if (reader.IsStartElement("G"' DSigNs))  				{  					parameters.G = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Y"' DSigNs))  				{  					parameters.Y = ReadBase64(reader);  				}  				else if (reader.IsStartElement("J"' DSigNs))  				{  					parameters.J = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Seed"' DSigNs))  				{  					parameters.Seed = ReadBase64(reader);  				}  				else if (reader.IsStartElement("PgenCounter"' DSigNs))  				{  					byte[] counter = ReadBase64(reader);  					// big endian  					parameters.Counter = (counter[0] << 24) | (counter[1] << 16) | (counter[2] << 8) | counter[3];  				}  				else  				{  					throw new MetadataSerializationException(  						$"Unknown DSAKeyValue parameter <{reader.Name} xmlns='{reader.NamespaceURI}'>");  				}  				return true;  			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadDSAKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("P"' DSigNs))  				{  					parameters.P = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Q"' DSigNs))  				{  					parameters.Q = ReadBase64(reader);  				}  				else if (reader.IsStartElement("G"' DSigNs))  				{  					parameters.G = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Y"' DSigNs))  				{  					parameters.Y = ReadBase64(reader);  				}  				else if (reader.IsStartElement("J"' DSigNs))  				{  					parameters.J = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Seed"' DSigNs))  				{  					parameters.Seed = ReadBase64(reader);  				}  				else if (reader.IsStartElement("PgenCounter"' DSigNs))  				{  					byte[] counter = ReadBase64(reader);  					// big endian  					parameters.Counter = (counter[0] << 24) | (counter[1] << 16) | (counter[2] << 8) | counter[3];  				}  				else  				{  					throw new MetadataSerializationException(  						$"Unknown DSAKeyValue parameter <{reader.Name} xmlns='{reader.NamespaceURI}'>");  				}  				return true;  			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadDSAKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("P"' DSigNs))  				{  					parameters.P = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Q"' DSigNs))  				{  					parameters.Q = ReadBase64(reader);  				}  				else if (reader.IsStartElement("G"' DSigNs))  				{  					parameters.G = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Y"' DSigNs))  				{  					parameters.Y = ReadBase64(reader);  				}  				else if (reader.IsStartElement("J"' DSigNs))  				{  					parameters.J = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Seed"' DSigNs))  				{  					parameters.Seed = ReadBase64(reader);  				}  				else if (reader.IsStartElement("PgenCounter"' DSigNs))  				{  					byte[] counter = ReadBase64(reader);  					// big endian  					parameters.Counter = (counter[0] << 24) | (counter[1] << 16) | (counter[2] << 8) | counter[3];  				}  				else  				{  					throw new MetadataSerializationException(  						$"Unknown DSAKeyValue parameter <{reader.Name} xmlns='{reader.NamespaceURI}'>");  				}  				return true;  			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadDSAKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("P"' DSigNs))  				{  					parameters.P = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Q"' DSigNs))  				{  					parameters.Q = ReadBase64(reader);  				}  				else if (reader.IsStartElement("G"' DSigNs))  				{  					parameters.G = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Y"' DSigNs))  				{  					parameters.Y = ReadBase64(reader);  				}  				else if (reader.IsStartElement("J"' DSigNs))  				{  					parameters.J = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Seed"' DSigNs))  				{  					parameters.Seed = ReadBase64(reader);  				}  				else if (reader.IsStartElement("PgenCounter"' DSigNs))  				{  					byte[] counter = ReadBase64(reader);  					// big endian  					parameters.Counter = (counter[0] << 24) | (counter[1] << 16) | (counter[2] << 8) | counter[3];  				}  				else  				{  					throw new MetadataSerializationException(  						$"Unknown DSAKeyValue parameter <{reader.Name} xmlns='{reader.NamespaceURI}'>");  				}  				return true;  			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadDSAKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("P"' DSigNs))  				{  					parameters.P = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Q"' DSigNs))  				{  					parameters.Q = ReadBase64(reader);  				}  				else if (reader.IsStartElement("G"' DSigNs))  				{  					parameters.G = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Y"' DSigNs))  				{  					parameters.Y = ReadBase64(reader);  				}  				else if (reader.IsStartElement("J"' DSigNs))  				{  					parameters.J = ReadBase64(reader);  				}  				else if (reader.IsStartElement("Seed"' DSigNs))  				{  					parameters.Seed = ReadBase64(reader);  				}  				else if (reader.IsStartElement("PgenCounter"' DSigNs))  				{  					byte[] counter = ReadBase64(reader);  					// big endian  					parameters.Counter = (counter[0] << 24) | (counter[1] << 16) | (counter[2] << 8) | counter[3];  				}  				else  				{  					throw new MetadataSerializationException(  						$"Unknown DSAKeyValue parameter <{reader.Name} xmlns='{reader.NamespaceURI}'>");  				}  				return true;  			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadECKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("NamedCurve"' DSig11Ns))  				{  					string oid = reader.GetAttribute("URI");  					if (String.IsNullOrEmpty(oid))  					{  						throw new MetadataSerializationException(  							$"NamedCurve element missing URI attribute");  					}  					if (!oid.StartsWith("urn:oid:"' StringComparison.Ordinal))  					{  						throw new MetadataSerializationException(  							$"Unknown EC curve type {oid}");  					}  					oid = oid.Substring("urn:oid:".Length);  					parameters.Curve = ECCurve.CreateFromValue(oid);  					reader.Skip();  				}  				else if (reader.IsStartElement("PublicKey"' DSig11Ns))  				{  					string pkData = reader.ReadElementContentAsString();  					byte[] pkBytes = Convert.FromBase64String(pkData);  					if (pkBytes[0] != 4)  					{  						throw new MetadataSerializationException(  							"Missing magic number in EC PublicKey data");  					}  					int numLen = (pkBytes.Length - 1) / 2;  					parameters.Q.X = new ArraySegment<byte>(  						pkBytes' 1' (pkBytes.Length - 1) / 2).ToArray();  					parameters.Q.Y = new ArraySegment<byte>(  						pkBytes' 1 + numLen' numLen).ToArray();  				}  				// I can't see this is used in the wild.  Also I can't figure out  				// how to map the parameters to the .NET ECParameters object.  				// else if (reader.IsStartElement("ECParameters"' DSig11Ns))  				// {  				// }  				else  				{  					throw new MetadataSerializationException(  						$"Unknown ECKeyValue parameter {reader.Name}");  				}  				return true;    			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadECKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("NamedCurve"' DSig11Ns))  				{  					string oid = reader.GetAttribute("URI");  					if (String.IsNullOrEmpty(oid))  					{  						throw new MetadataSerializationException(  							$"NamedCurve element missing URI attribute");  					}  					if (!oid.StartsWith("urn:oid:"' StringComparison.Ordinal))  					{  						throw new MetadataSerializationException(  							$"Unknown EC curve type {oid}");  					}  					oid = oid.Substring("urn:oid:".Length);  					parameters.Curve = ECCurve.CreateFromValue(oid);  					reader.Skip();  				}  				else if (reader.IsStartElement("PublicKey"' DSig11Ns))  				{  					string pkData = reader.ReadElementContentAsString();  					byte[] pkBytes = Convert.FromBase64String(pkData);  					if (pkBytes[0] != 4)  					{  						throw new MetadataSerializationException(  							"Missing magic number in EC PublicKey data");  					}  					int numLen = (pkBytes.Length - 1) / 2;  					parameters.Q.X = new ArraySegment<byte>(  						pkBytes' 1' (pkBytes.Length - 1) / 2).ToArray();  					parameters.Q.Y = new ArraySegment<byte>(  						pkBytes' 1 + numLen' numLen).ToArray();  				}  				// I can't see this is used in the wild.  Also I can't figure out  				// how to map the parameters to the .NET ECParameters object.  				// else if (reader.IsStartElement("ECParameters"' DSig11Ns))  				// {  				// }  				else  				{  					throw new MetadataSerializationException(  						$"Unknown ECKeyValue parameter {reader.Name}");  				}  				return true;    			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,ReadECKeyValue,The following statement contains a magic number: ReadChildren(reader' () =>  			{  				if (reader.IsStartElement("NamedCurve"' DSig11Ns))  				{  					string oid = reader.GetAttribute("URI");  					if (String.IsNullOrEmpty(oid))  					{  						throw new MetadataSerializationException(  							$"NamedCurve element missing URI attribute");  					}  					if (!oid.StartsWith("urn:oid:"' StringComparison.Ordinal))  					{  						throw new MetadataSerializationException(  							$"Unknown EC curve type {oid}");  					}  					oid = oid.Substring("urn:oid:".Length);  					parameters.Curve = ECCurve.CreateFromValue(oid);  					reader.Skip();  				}  				else if (reader.IsStartElement("PublicKey"' DSig11Ns))  				{  					string pkData = reader.ReadElementContentAsString();  					byte[] pkBytes = Convert.FromBase64String(pkData);  					if (pkBytes[0] != 4)  					{  						throw new MetadataSerializationException(  							"Missing magic number in EC PublicKey data");  					}  					int numLen = (pkBytes.Length - 1) / 2;  					parameters.Q.X = new ArraySegment<byte>(  						pkBytes' 1' (pkBytes.Length - 1) / 2).ToArray();  					parameters.Q.Y = new ArraySegment<byte>(  						pkBytes' 1 + numLen' numLen).ToArray();  				}  				// I can't see this is used in the wild.  Also I can't figure out  				// how to map the parameters to the .NET ECParameters object.  				// else if (reader.IsStartElement("ECParameters"' DSig11Ns))  				// {  				// }  				else  				{  					throw new MetadataSerializationException(  						$"Unknown ECKeyValue parameter {reader.Name}");  				}  				return true;    			});
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,GetIntAsBigEndian,The following statement contains a magic number: byte[] data = new byte[4];
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,GetIntAsBigEndian,The following statement contains a magic number: data[0] = (byte)(((uint)value >> 24) & 0xff);
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,GetIntAsBigEndian,The following statement contains a magic number: data[1] = (byte)(((uint)value >> 16) & 0xff);
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,GetIntAsBigEndian,The following statement contains a magic number: data[2] = (byte)(((uint)value >> 8) & 0xff);
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,GetIntAsBigEndian,The following statement contains a magic number: data[2] = (byte)(((uint)value >> 8) & 0xff);
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,GetIntAsBigEndian,The following statement contains a magic number: data[3] = (byte)((uint)value & 0xff);
Magic Number,Sustainsys.Saml2.Metadata,MetadataSerializer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Metadata\MetadataSerializer.cs,WriteECKeyValue,The following statement contains a magic number: data[0] = 4;
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,ResolveArtifact,The following statement contains a magic number: var arsIndex = (binaryArtifact[2] << 8) | binaryArtifact[3];
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,ResolveArtifact,The following statement contains a magic number: var arsIndex = (binaryArtifact[2] << 8) | binaryArtifact[3];
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,ResolveArtifact,The following statement contains a magic number: var arsIndex = (binaryArtifact[2] << 8) | binaryArtifact[3];
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,GetIdp,The following statement contains a magic number: var sourceId = new byte[20];
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,GetIdp,The following statement contains a magic number: Array.Copy(binaryArtifact' 4' sourceId' 0' 20);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,GetIdp,The following statement contains a magic number: Array.Copy(binaryArtifact' 4' sourceId' 0' 20);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: var artifact = new byte[44];
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: artifact[1] = 4;
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: artifact[2] = (byte)(endpointIndex >> 8);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: artifact[2] = (byte)(endpointIndex >> 8);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: artifact[3] = (byte)endpointIndex;
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: Array.Copy(sha1.ComputeHash(Encoding.UTF8.GetBytes(issuer.Id))'                  0' artifact' 4' 20);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: Array.Copy(sha1.ComputeHash(Encoding.UTF8.GetBytes(issuer.Id))'                  0' artifact' 4' 20);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: Array.Copy(SecureKeyGenerator.CreateArtifactMessageHandle()' 0' artifact' 24' 20);
Magic Number,Sustainsys.Saml2.WebSso,Saml2ArtifactBinding,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,CreateArtifact,The following statement contains a magic number: Array.Copy(SecureKeyGenerator.CreateArtifactMessageHandle()' 0' artifact' 24' 20);
Magic Number,Sustainsys.Saml2.WebSso,ByteArrayEqualityComparer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,GetHashCode,The following statement contains a magic number: return Enumerable.Range(0' obj.Length / 4)                      .Select(i => BitConverter.ToInt32(obj' i * 4))                      .Aggregate((a' b) => a ^ b);
Magic Number,Sustainsys.Saml2.WebSso,ByteArrayEqualityComparer,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\WebSSO\Saml2ArtifactBinding.cs,GetHashCode,The following statement contains a magic number: return Enumerable.Range(0' obj.Length / 4)                      .Select(i => BitConverter.ToInt32(obj' i * 4))                      .Aggregate((a' b) => a ^ b);
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,GetAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					return dsa;  			}
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,GetHashAlgorithmForSignature,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					return new SHA1Managed();  			}
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,GetSignatureDeformatter,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					return new DSASignatureDeformatter(dsa);  			}
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,GetSignatureFormatter,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					return new DSASignatureFormatter(dsa);  			}
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,IsAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.DsaSha1Signature:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,IsSupportedAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.DsaSha1Signature:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,DsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\DsaKeyIdentifierClause.cs,IsSymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.HmacSha1Signature:  				case SecurityAlgorithms.Psha1KeyDerivation:  				case SecurityAlgorithms.Aes128Encryption:  				case SecurityAlgorithms.Aes128KeyWrap:  				case SecurityAlgorithms.Aes192Encryption:  				case SecurityAlgorithms.Aes192KeyWrap:  				case SecurityAlgorithms.Aes256Encryption:  				case SecurityAlgorithms.Aes256KeyWrap:  				case SecurityAlgorithms.TripleDesEncryption:  				case SecurityAlgorithms.TripleDesKeyWrap:  				case SecurityAlgorithms.DesEncryption:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,EcSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\EcKeyIdentifierClause.cs,GetAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.EcDsaSha1:  				case SecurityAlgorithms.EcDsaSha224:  				case SecurityAlgorithms.EcDsaSha256:  				case SecurityAlgorithms.EcDsaSha384:  				case SecurityAlgorithms.EcDsaSha512:  					return ecDsa;  			}
Missing Default,Sustainsys.Saml2.Tokens,EcSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\EcKeyIdentifierClause.cs,GetHashAlgorithmForSignature,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.EcDsaSha1:  					return new SHA1Managed();  				case SecurityAlgorithms.EcDsaSha256:  					return new SHA256Managed();  				//case SecurityAlgorithms.EcDsaSha224:  				//	return new SHA224Managed();  				case SecurityAlgorithms.EcDsaSha384:  					return new SHA384Managed();  				case SecurityAlgorithms.EcDsaSha512:  					return new SHA512Managed();  			}
Missing Default,Sustainsys.Saml2.Tokens,EcSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\EcKeyIdentifierClause.cs,IsAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.EcDsaSha1:  				case SecurityAlgorithms.EcDsaSha224:  				case SecurityAlgorithms.EcDsaSha256:  				case SecurityAlgorithms.EcDsaSha384:  				case SecurityAlgorithms.EcDsaSha512:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,EcSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\EcKeyIdentifierClause.cs,IsSupportedAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.EcDsaSha1:  				case SecurityAlgorithms.EcDsaSha224:  				case SecurityAlgorithms.EcDsaSha256:  				case SecurityAlgorithms.EcDsaSha384:  				case SecurityAlgorithms.EcDsaSha512:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,GetAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigRSASHA1Url:  				case SignedXml.XmlDsigSHA1Url:  				case EncryptedXml.XmlEncRSA15Url:  				case EncryptedXml.XmlEncRSAOAEPUrl:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return rsa;  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,GetHashAlgorithmForSignature,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  				case SignedXml.XmlDsigRSASHA1Url:  					return new SHA1Managed();  				case SecurityAlgorithms.RsaSha256Signature:  					return new SHA256Managed();  				case SecurityAlgorithms.RsaSha384Signature:  					return new SHA384Managed();  				case SecurityAlgorithms.RsaSha512Signature:  					return new SHA512Managed();  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,GetSignatureDeformatter,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigRSASHA1Url:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return new RSAPKCS1SignatureDeformatter(rsa);  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,GetSignatureFormatter,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigRSASHA1Url:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return new RSAPKCS1SignatureFormatter(rsa);  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,IsAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.DsaSha1Signature:  				case SecurityAlgorithms.RsaV15KeyWrap:  				case SecurityAlgorithms.RsaOaepKeyWrap:  				case SecurityAlgorithms.RsaSha1Signature:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,IsSupportedAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.RsaV15KeyWrap:  				case SecurityAlgorithms.RsaOaepKeyWrap:  				case SecurityAlgorithms.RsaSha1Signature:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,RsaSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\RsaKeyIdentifierClause.cs,IsSymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.HmacSha1Signature:  				case SecurityAlgorithms.Psha1KeyDerivation:  				case SecurityAlgorithms.Aes128Encryption:  				case SecurityAlgorithms.Aes128KeyWrap:  				case SecurityAlgorithms.Aes192Encryption:  				case SecurityAlgorithms.Aes192KeyWrap:  				case SecurityAlgorithms.Aes256Encryption:  				case SecurityAlgorithms.Aes256KeyWrap:  				case SecurityAlgorithms.TripleDesEncryption:  				case SecurityAlgorithms.TripleDesKeyWrap:  				case SecurityAlgorithms.DesEncryption:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,GetAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					if (aa is DSA)  						return aa;  					throw new NotSupportedException("The certificate does not support DSA signing");  				case SignedXml.XmlDsigRSASHA1Url:  				case SignedXml.XmlDsigSHA1Url:  				case EncryptedXml.XmlEncRSA15Url:  				case EncryptedXml.XmlEncRSAOAEPUrl:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					if (aa is RSA)  						return aa;  					throw new NotSupportedException("The certificate does not support RSA signing");  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,GetHashAlgorithmForSignature,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  				case SignedXml.XmlDsigRSASHA1Url:  					return new SHA1Managed();  				case SecurityAlgorithms.RsaSha256Signature:  					return new SHA256Managed();  				case SecurityAlgorithms.RsaSha384Signature:  					return new SHA384Managed();  				case SecurityAlgorithms.RsaSha512Signature:  					return new SHA512Managed();  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,GetSignatureDeformatter,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					{  						DSA dsa = certificate.PublicKey.Key as DSA;  						if (dsa == null)  						{  							throw new NotSupportedException("The certificate does not contain a DSA key");  						}  						return new DSASignatureDeformatter(dsa);  					}  				case SignedXml.XmlDsigRSASHA1Url:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					{  						RSA rsa = certificate.PublicKey.Key as RSA;  						if (rsa == null)  						{  							throw new NotSupportedException("The certificate does not contain an RSA key");  						}  						return new RSAPKCS1SignatureDeformatter(rsa);  					}  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,GetSignatureFormatter,The following switch statement is missing a default case: switch (algorithm)  			{  				case SignedXml.XmlDsigDSAUrl:  					{  						DSA dsa = certificate.PrivateKey as DSA;  						if (dsa == null)  						{  							throw new NotSupportedException("The certificate does not contain a DSA key");  						}  						return new DSASignatureFormatter(dsa);  					}  				case SignedXml.XmlDsigRSASHA1Url:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					{  						RSA rsa = certificate.PrivateKey as RSA;  						if (rsa == null)  						{  							throw new NotSupportedException("The certificate does not contain an RSA key");  						}  						return new RSAPKCS1SignatureFormatter(rsa);  					}  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,IsAsymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.DsaSha1Signature:  				case SecurityAlgorithms.RsaV15KeyWrap:  				case SecurityAlgorithms.RsaOaepKeyWrap:  				case SecurityAlgorithms.RsaSha1Signature:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,IsSupportedAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.RsaV15KeyWrap:  				case SecurityAlgorithms.RsaOaepKeyWrap:  				case SecurityAlgorithms.RsaSha1Signature:  				case SecurityAlgorithms.RsaSha256Signature:  				case SecurityAlgorithms.RsaSha384Signature:  				case SecurityAlgorithms.RsaSha512Signature:  					return true;  			}
Missing Default,Sustainsys.Saml2.Tokens,X509AsymmetricSecurityKey,D:\research\architectureSmells\repos\KentorIT_authservices\Sustainsys.Saml2\Tokens\X509AsymmetricSecurityKey.cs,IsSymmetricAlgorithm,The following switch statement is missing a default case: switch (algorithm)  			{  				case SecurityAlgorithms.HmacSha1Signature:  				case SecurityAlgorithms.Psha1KeyDerivation:  				case SecurityAlgorithms.Aes128Encryption:  				case SecurityAlgorithms.Aes128KeyWrap:  				case SecurityAlgorithms.Aes192Encryption:  				case SecurityAlgorithms.Aes192KeyWrap:  				case SecurityAlgorithms.Aes256Encryption:  				case SecurityAlgorithms.Aes256KeyWrap:  				case SecurityAlgorithms.TripleDesEncryption:  				case SecurityAlgorithms.TripleDesKeyWrap:  				case SecurityAlgorithms.DesEncryption:  					return true;  			}
