Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sustainsys.Saml2.Tests.Helpers,StubServer,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Helpers\StubServer.cs,GetContent,The method has 306 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,MetadataSerializerTests_TestCreateInstance,The method has 101 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The method has 196 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The method has 337 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddPDPDescriptorTestData,The method has 167 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAuthnAuthorityDescriptorTestData,The method has 165 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeAuthorityDescriptorTestData,The method has 185 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntityDescriptorTestData,The method has 411 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSecurityTokenServiceDescriptorTestData1,The method has 344 lines of code.
Long Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The method has 130 lines of code.
Complex Method,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,TrimXml,Cyclomatic complexity of the method is 10
Long Identifier,Sustainsys.Saml2.Tests.Helpers,StubServer,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Helpers\StubServer.cs,GetContent,The length of the parameter federationMetadataSignedTampered is 32.
Long Identifier,Sustainsys.Saml2.Tests.WebSso,Saml2RedirectBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2RedirectBindingTests.cs,Saml2RedirectBinding_Bind_AddsSignature,The length of the parameter asymmetricSignatureDeformatter is 30.
Long Identifier,Sustainsys.Saml2.Tests.WebSso,SignInCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\SignInCommandTests.cs,SignInCommand_Run_Calls_NotificationForAbsoluteUrl,The length of the parameter validateAbsoluteReturnUrlCalled is 31.
Long Identifier,Sustainsys.Saml2.Tests.WebSso,SignInCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\SignInCommandTests.cs,SignInCommand_Run_DoNotCalls_NotificationForRelativeUrl,The length of the parameter validateAbsoluteReturnUrlCalled is 31.
Long Identifier,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_Calls_NotificationForAbsoluteUrl,The length of the parameter validateAbsoluteReturnUrlCalled is 31.
Long Identifier,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_DoNotCalls_NotificationForRelativeUrl,The length of the parameter validateAbsoluteReturnUrlCalled is 31.
Long Statement,Sustainsys.Saml2.Tests,ClaimsIdentityExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ClaimsIdentityExtensionsTests.cs,ClaimsIdentityExtensions_ToSaml2Assertion_Includes_Attributes,The length of the statement  "            actual.Statements.OfType<Saml2AttributeStatement>().Single().Attributes.ElementAt(1).Values.First().Should().Be("me@example.com"); " is 130.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_X509DataWithMultipleInfo,The length of the statement  "  <IDPSSODescriptor WantAuthnRequestsSigned=""false"" protocolSupportEnumeration=""urn:oasis:names:tc:SAML:2.0:protocol""> " is 120.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_X509DataWithMultipleInfo,The length of the statement  "            <ns1:X509IssuerName>E=arende@servicecentrum.stockholm.se'CN=Stockholm CA idPortal Internal Use'OU=idPortal Tieto'O=Stockholms Stad'ST=Stockholm'C=SE</ns1:X509IssuerName> " is 169.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_X509DataWithMultipleInfo,The length of the statement  "          <ns1:X509Certificate>MIIDbTCCAtagAwIBAgIJAKuWQfUOFh2nMA0GCSqGSIb3DQEBBQUAMIG0MQswCQYDVQQGEwJTRTESMBAGA1UECBMJU3RvY2tob2xtMRgwFgYDVQQKEw9TdG9ja2hvbG1zIFN0YWQxFzAVBgNVBAsTDmlkUG9ydGFsIFRpZXRvMSswKQYDVQQDEyJTdG9ja2hvbG0gQ0EgaWRQb3J0YWwgSW50ZXJuYWwgVXNlMTEwLwYJKoZIhvcNAQkBFiJhcmVuZGVAc2VydmljZWNlbnRydW0uc3RvY2tob2xtLnNlMB4XDTE0MTAwOTEzMDUyMloXDTE3MTAwOTEzMDUyMlowgb4xCzAJBgNVBAYTAlNFMRIwEAYDVQQIEwlTdG9ja2hvbG0xEjAQBgNVBAcTCVN0b2NraG9sbTEaMBgGA1UEChMRQ2l0eSBPZiBTdG9ja2hvbG0xEzARBgNVBAsTCmlkUG9ydGFsZW4xIzAhBgNVBAMTGmxvZ2luMDA0LnRlc3Quc3RvY2tob2xtLnNlMTEwLwYJKoZIhvcNAQkBFiJhcmVuZGVAc2VydmljZWNlbnRydW0uc3RvY2tob2xtLnNlMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCyizB5uoNMlNZhlnCMeXBD/60pltM/tVg4/y0Mk+zFztHId8BoUtuGk5Z3gQRXb/SuFkE41bhLB2SiArvEgjFjaGEH+FtBOuDiansY9cersWnntvkKGhUt6bxSeG+AKrh7rA8yf4CwQvIQw9jQqGyGeVuaxe7ilGcVHwmDotQWhwIDAQABo3sweTAJBgNVHRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1PcGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUlCG8ZSkU6QTHp+tVBedxmn3VglIwHwYDVR0jBBgwFoAUxl8NEFIKt39mKUdrXjIr4syL9lkwDQYJKoZIhvcNAQEFBQADgYEAuCDEJuFuibTI7SomuAM3cH33rjVsBriXtZPp1Fvu9TidHzOueFv9MR+K3DRH+x0PDvGJwA5vlegTwD7qGWcYp80gItkqMhO2nYuIn/9DyPKebtSIM4dSosvmlSTD1bKdEfDM87WpitrTz+Ma6jc59Djiq//h678toVdV6Sm0TkY=</ns1:X509Certificate> " is 1219.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_X509DataWithMultipleInfo,The length of the statement  "          <ns1:X509SubjectName>E=arende@servicecentrum.stockholm.se'CN=login004.test.stockholm.se'OU=idPortalen'O=City Of Stockholm'L=Stockholm'ST=Stockholm'C=SE</ns1:X509SubjectName> " is 173.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_X509DataWithMultipleInfo,The length of the statement  "			x509Data.IssuerSerial.Name.Should().Be("E=arende@servicecentrum.stockholm.se'CN=Stockholm CA idPortal Internal Use'OU=idPortal Tieto'O=Stockholms Stad'ST=Stockholm'C=SE"); " is 171.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_X509DataWithMultipleInfo,The length of the statement  "			x509Data.SubjectName.Should().Be("E=arende@servicecentrum.stockholm.se'CN=login004.test.stockholm.se'OU=idPortalen'O=City Of Stockholm'L=Stockholm'ST=Stockholm'C=SE"); " is 167.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_KeyName,The length of the statement  "@"<md:EntityDescriptor xmlns:md=""urn:oasis:names:tc:SAML:2.0:metadata"" entityID=""http://idp-acc.test.ek.sll.se/neas""> " is 121.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_KeyName,The length of the statement  "  <md:IDPSSODescriptor WantAuthnRequestsSigned=""true"" protocolSupportEnumeration=""urn:oasis:names:tc:SAML:2.0:protocol""> " is 122.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ExtraElementInKeyInfoIgnored,The length of the statement  "@"<md:EntityDescriptor xmlns:md=""urn:oasis:names:tc:SAML:2.0:metadata"" entityID=""http://idp-acc.test.ek.sll.se/neas""> " is 121.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ExtraElementInKeyInfoIgnored,The length of the statement  "  <md:IDPSSODescriptor WantAuthnRequestsSigned=""true"" protocolSupportEnumeration=""urn:oasis:names:tc:SAML:2.0:protocol""> " is 122.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_RsaKey,The length of the statement  "@"<md:EntityDescriptor xmlns:md=""urn:oasis:names:tc:SAML:2.0:metadata"" entityID=""http://idp-acc.test.ek.sll.se/neas""> " is 121.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_RsaKey,The length of the statement  "  <md:IDPSSODescriptor WantAuthnRequestsSigned=""true"" protocolSupportEnumeration=""urn:oasis:names:tc:SAML:2.0:protocol""> " is 122.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_RsaKey,The length of the statement  "            <ds:Modulus>AKoYq6Q7UN7vOFmPr4fSq2NORXHBMKm8p7h4JnQU+quLRxvYll9cn8OBhIXq9SnCYkbzBVBkqN4ZyMM4vlSWy66wWdwLNYFDtEo1RJ6yZBExIaRVvX/eP6yRnpS1b7m7T2Uc2yPq1DnWzVI+sIGR51s1/ROnQZswkPJHh71PThln</ds:Modulus> " is 197.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ServiceProviderSingleSignOnDescriptor,The length of the statement  "@"<md:EntityDescriptor xmlns:md=""urn:oasis:names:tc:SAML:2.0:metadata"" entityID=""http://idp-acc.test.ek.sll.se/neas""> " is 121.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ServiceProviderSingleSignOnDescriptor,The length of the statement  "    <md:SPSSODescriptor AuthnRequestsSigned=""false"" WantAssertionsSigned=""true"" protocolSupportEnumeration=""urn:oasis:names:tc:SAML:2.0:protocol""> " is 148.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ServiceProviderSingleSignOnDescriptor,The length of the statement  "      <md:SingleLogoutService Binding=""urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"" Location=""https://maggie.bif.ost.se:9443/sp/saml/slo/HTTP-POST""/> " is 150.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ServiceProviderSingleSignOnDescriptor,The length of the statement  "      <md:AssertionConsumerService Binding=""urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"" Location=""https://maggie.bif.ost.se:9443/sp/saml/sso/HTTP-POST"" index=""1"" isDefault=""true""/> " is 186.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ServiceProviderSingleSignOnDescriptor,The length of the statement  "      <md:AssertionConsumerService Binding=""urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"" Location=""https://maggie.bif.ost.se:9443/sp/saml/sso/POST"" index=""2"" isDefault=""true""/> " is 181.
Long Statement,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_Organization,The length of the statement  "@"<md:EntityDescriptor xmlns:md=""urn:oasis:names:tc:SAML:2.0:metadata"" entityID=""http://idp-acc.test.ek.sll.se/neas""> " is 121.
Long Statement,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_Ctor_WrongEntityIdInMetadata,The length of the statement  "                .Be("Unexpected entity id \"http://other.entityid.example.com\" found when loading metadata for \"http://localhost:13428/idpMetadataOtherEntityId\"."); " is 151.
Long Statement,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_CreateLogoutRequest_FailsIfNoSigningCertificateConfigured,The length of the statement  "                .And.Message.Should().Be($"Tried to issue single logout request to https://idp.example.com' but no signing certificate for the SP is configured and single logout requires signing. Add a certificate to the ISPOptions.ServiceCertificates collection' or to <serviceCertificates> element if you're using web.config."); " is 314.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedBy_ThrowsOnWrongCert,The length of the statement  "                .And.Message.Should().Be("The signature verified correctly with the key contained in the signature' but that key is not trusted."); " is 131.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedBy_TrowsOnSignatureWrapping,The length of the statement  "                .And.Message.Should().Be("Incorrect reference on Xml signature. The reference must be to the root element of the element containing the signature."); " is 149.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedBy_ThrowsOnMissingReferenceInSignature,The length of the statement  "            var signedWithoutReference = @"<saml2p:Response xmlns:saml2p=""urn:oasis:names:tc:SAML:2.0:protocol"" xmlns:saml2=""urn:oasis:names:tc:SAML:2.0:assertion"" ID=""Saml2Response_Validate_FalseOnMissingReference"" Version=""2.0"" IssueInstant=""2013-01-01T00:00:00Z""><saml2:Issuer>https://idp.example.com</saml2:Issuer><saml2p:Status><saml2p:StatusCode Value=""urn:oasis:names:tc:SAML:2.0:status:Requester"" /></saml2p:Status><Signature xmlns=""http://www.w3.org/2000/09/xmldsig#""><SignedInfo><CanonicalizationMethod Algorithm=""http://www.w3.org/TR/2001/REC-xml-c14n-20010315"" /><SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1"" /></SignedInfo><SignatureValue>tYFIoYmrzmp3H7TXm9IS8DW3buBZIb6sI2ycrn+AOnVcdYnPTJpk3ntHlqQKXNEyXgXZNdqEuFpgI1I0P0TlhM+C3rBJnflkApkxZkak5RwnJzDWTHpsSDjYcm+/XgBy3JVZJuMWb2YPaV8GB6cjBMDrENUEaoKRg+FpzPUZO1EOMcqbocXp5cHie1CkPnD1OtT/cuzMBUMpBGZMxjZwdFpOO7R3CUXh/McxKfoGUQGC3DVpt5T8uGkpj4KqZVPS/qTCRhbPRDjg73BdWbdkFpFWge8G/FgkYxr9LBE1TsrxptppO9xoA5jXwJVZaWndSMvo6TuOjUgqY2w5RTkqhA==</SignatureValue></Signature></saml2p:Response>"; " is 1077.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedBy_ThrowsOnTamperedData_WithSha256Signature,The length of the statement  "            var xml = @"<Assertion ID=""Saml2Response_GetClaims_FailsSha256WhenChanged"" IssueInstant=""2015-03-13T20:44:00.791Z"" Version=""2.0"" xmlns=""urn:oasis:names:tc:SAML:2.0:assertion""><Issuer>https://idp.example.com</Issuer><Signature xmlns=""http://www.w3.org/2000/09/xmldsig#""><SignedInfo><CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" /><SignatureMethod Algorithm=""http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"" /><Reference URI=""#Saml2Response_GetClaims_FailsSha256WhenChanged""><Transforms><Transform Algorithm=""http://www.w3.org/2000/09/xmldsig#enveloped-signature"" /><Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" /></Transforms><DigestMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#sha256"" /><DigestValue>BKRyWqweAczLA8fgRcx6zzMDiP0qT0TwqU/X4VgLiXM=</DigestValue></Reference></SignedInfo><SignatureValue>iK8s+MkLlixSSQu5Q/SHRZLhfnj4jlyPLAD6C2n9zmQu4CosZME7mxiNFiWyOE8XRGd+2LJle+NjJrkZFktVb03JaToq7w4Q8GfJ2oUUjNCweoaJ6NzsnwkFoXhyh0dfOixl/Ifa3qDX50/Hv2twF/QXfDs08GZTxZKehKsVDITyVd6nytF8VUb0+nU7UMWPn1XeHM7YNI/1mkVbCRx/ci5ZRxwjAX40xttd4JL6oBnp5oaaMgWpAa2cVb+t/9HhCRThEho1etbPHx/+E9ElL1PhKqKX6nh2GSH1TFJkwEXIPPZKqCs3YDINLBZpLfl626zbV4cGOGyWUAroVsk2uw==</SignatureValue><KeyInfo><X509Data><X509Certificate>MIIDIzCCAg+gAwIBAgIQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAMCQxIjAgBgNVBAMTGUtlbnRvci5BdXRoU2VydmljZXMuVGVzdHMwHhcNMTMwOTI1MTMzNTQ0WhcNMzkxMjMxMjM1OTU5WjAkMSIwIAYDVQQDExlLZW50b3IuQXV0aFNlcnZpY2VzLlRlc3RzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwVGpfvK9N//MnA5Jo1q2liyPR24406Dp25gv7LB3HK4DWgqsb7xXM6KIV/WVOyCV2g/O1ErBlB+HLhVZ4XUJvbqBbgAJqFO+TZwcCIe8u4nTEXeU660FdtkKClA17sbtMrAGdDfOPwVBHSuavdHeD7jHNI4RUDGKnEW13/0EvnHDilIetwODRxrX/+41R24sJThFbMczByS3OAL2dcIxoAynaGeM90gXsVYow1QhJUy21+cictikb7jW4mW6dvFCBrWIceom9J295DcQIHoxJy5NoZwMir/JV00qs1wDVoN20Ve1DC5ImwcG46XPF7efQ44yLh2j5Yexw+xloA81dwIDAQABo1kwVzBVBgNVHQEETjBMgBAWIahoZhXVUogbAqkS7zwfoSYwJDEiMCAGA1UEAxMZS2VudG9yLkF1dGhTZXJ2aWNlcy5UZXN0c4IQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAA4IBAQA2aGzmuKw4AYXWMhrGj5+i8vyAoifUn1QVOFsUukEA77CrqhqqaWFoeagfJp/45vlvrfrEwtF0QcWfmO9w1VvHwm7sk1G/cdYyJ71sU+llDsdPZm7LxQvWZYkK+xELcinQpSwt4ExavS+jLcHoOYHYwIZMBn3U8wZw7Kq29oGnoFQz7HLCEl/G9i3QRyvFITNlWTjoScaqMjHTzq6HCMaRsL09DLcY3KB+cedfpC0/MBlzaxZv0DctTulyaDfM9DCYOyokGN/rQ6qkAR0DDm8fVwknbJY7kURXNGoUetulTb5ow8BvD1gncOaYHSD0kbHZG+bLsUZDFatEr2KW8jbG</X509Certificate></X509Data></KeyInfo></Signature><Subject><NameID>SomeUser</NameID><SubjectConfirmation Method=""urn:oasis:names:tc:SAML:2.0:cm:bearer"" /></Subject><Conditions NotOnOrAfter=""2100-01-01T05:00:00.000Z"" /></Assertion>"; " is 2586.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedBy_ThrowsOnIncorrectTransformsInSignature,The length of the statement  "                .And.Message.Should().Be("Transform \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" found in Xml signature SHOULD NOT be used with SAML2."); " is 144.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedBy_DoesNotThrowSha256MessageForOtherProblem,The length of the statement  "                @"<Assertion ID=""Saml2Response_GetClaims_DoesNotThrowSha256MessageForOtherProblem_Assertion"" IssueInstant=""2015-03-13T20:43:07.330Z"" Version=""2.0"" xmlns=""urn:oasis:names:tc:SAML:2.0:assertion""><Issuer>https://idp.example.com</Issuer><Signature xmlns=""http://www.w3.org/2000/09/xmldsig#""><SignedInfo><CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" /><SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1"" /><Reference URI=""#Saml2Response_GetClaims_DoesNotThrowSha256MessageForOtherProblem_Assertion""><Transforms><Transform Algorithm=""http://www.w3.org/2000/09/xmldsig#enveloped-signature"" /><Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" /></Transforms><DigestMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#sha256"" /><DigestValue>F+E7u3vqMC07ipvP9AowsMqP7y6CsAC0GeEIxNSwDEI=</DigestValue></Reference></SignedInfo><SignatureValue>GmiXn24Ccnr64TbmDd1/nLM+891z0FtRHSpU8+75uOqbpNK/ZZGrltFf2YZ5u9b9O0HfbFFsZ0i28ocwAZOv2UfxQrCtOGf3ss7Q+t2Zmc6Q/3ES7HIa15I5BbaSdNfpOMlX6N1XXhMprRGy2YWMr5IAIhysFG1A2oHaC3yFiesfUrawN/lXUYuI22Kf4A5bmnIkKijnwX9ewnhRj6569bw+c6q+tVZSHQzI+KMU9KbKN4NsXxAmv6dM1w2qOiX9/CO9LzwEtlhA9yo3sl0uWP8z5GwK9qgOlsF2NdImAQ5f0U4Uv26doFn09W+VExFwNhcXhewQUuPBYBr+XXzdww==</SignatureValue><KeyInfo><X509Data><X509Certificate>MIIDIzCCAg+gAwIBAgIQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAMCQxIjAgBgNVBAMTGUtlbnRvci5BdXRoU2VydmljZXMuVGVzdHMwHhcNMTMwOTI1MTMzNTQ0WhcNMzkxMjMxMjM1OTU5WjAkMSIwIAYDVQQDExlLZW50b3IuQXV0aFNlcnZpY2VzLlRlc3RzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwVGpfvK9N//MnA5Jo1q2liyPR24406Dp25gv7LB3HK4DWgqsb7xXM6KIV/WVOyCV2g/O1ErBlB+HLhVZ4XUJvbqBbgAJqFO+TZwcCIe8u4nTEXeU660FdtkKClA17sbtMrAGdDfOPwVBHSuavdHeD7jHNI4RUDGKnEW13/0EvnHDilIetwODRxrX/+41R24sJThFbMczByS3OAL2dcIxoAynaGeM90gXsVYow1QhJUy21+cictikb7jW4mW6dvFCBrWIceom9J295DcQIHoxJy5NoZwMir/JV00qs1wDVoN20Ve1DC5ImwcG46XPF7efQ44yLh2j5Yexw+xloA81dwIDAQABo1kwVzBVBgNVHQEETjBMgBAWIahoZhXVUogbAqkS7zwfoSYwJDEiMCAGA1UEAxMZS2VudG9yLkF1dGhTZXJ2aWNlcy5UZXN0c4IQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAA4IBAQA2aGzmuKw4AYXWMhrGj5+i8vyAoifUn1QVOFsUukEA77CrqhqqaWFoeagfJp/45vlvrfrEwtF0QcWfmO9w1VvHwm7sk1G/cdYyJ71sU+llDsdPZm7LxQvWZYkK+xELcinQpSwt4ExavS+jLcHoOYHYwIZMBn3U8wZw7Kq29oGnoFQz7HLCEl/G9i3QRyvFITNlWTjoScaqMjHTzq6HCMaRsL09DLcY3KB+cedfpC0/MBlzaxZv0DctTulyaDfM9DCYOyokGN/rQ6qkAR0DDm8fVwknbJY7kURXNGoUetulTb5ow8BvD1gncOaYHSD0kbHZG+bLsUZDFatEr2KW8jbG</X509Certificate></X509Data></KeyInfo></Signature><Subject><NameID>SomeUser</NameID><SubjectConfirmation Method=""urn:oasis:names:tc:SAML:2.0:cm:bearer"" /></Subject><Conditions NotOnOrAfter=""2100-01-01T05:00:00.000Z"" /></Assertion>"; " is 2625.
Long Statement,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_IsSignedByAny_ThrowsOnCertValidationWithRsaKey,The length of the statement  "                .And.Message.Should().Be("Certificate validation enabled' but the signing key identifier is of type RsaKeyIdentifierClause which cannot be validated as a certificate."); " is 169.
Long Statement,Sustainsys.Saml2.Tests.Configuration,OptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\OptionsTests.cs,Options_FromConfiguration_IdentityProviders_ThrowsOnInvalidEntityId,The length of the statement  "            a.Should().Throw<KeyNotFoundException>().And.Message.Should().Be("No Idp with entity id \"urn:Non.Existent.EntityId\" found."); " is 127.
Long Statement,Sustainsys.Saml2.Tests.Configuration,ServiceCertificateCollectionTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\ServiceCertificateCollectionTests.cs,ServiceCertificateCollection_Add_FailsWhenNoPrivateKey_Enc,The length of the statement  "            Action a = () => subject.Add(new ServiceCertificate { Use = CertificateUse.Encryption' Certificate = certWithNoPrivate }); " is 122.
Long Statement,Sustainsys.Saml2.Tests.Configuration,ServiceCertificateCollectionTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\ServiceCertificateCollectionTests.cs,ServiceCertificateCollection_Add_EncryptionCert_FailsWhenNotValid,The length of the statement  "            Action a = () => subject.Add(new ServiceCertificate { Use = CertificateUse.Encryption' Certificate = SignedXmlHelper.TestCertSignOnly }); " is 137.
Long Statement,Sustainsys.Saml2.Tests.Configuration,ServiceCertificateCollectionTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\ServiceCertificateCollectionTests.cs,ServiceCertificateCollection_Add_EncryptionCert_FailsWhenNotValid,The length of the statement  "                .WithMessage( @"Provided certificate is not valid for encryption/decryption. There may be insufficient permissions to its private key in the windows certificate store or the certificate itself may not have the correct purposes. If you only want to use it for signing' set the Use property to Signing (CertificateUse.Signing)." ); " is 329.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsExtensionsTests.cs,SPOptionsExtensions_CreateMetadata_MultipleServiceCertificate,The length of the statement  "            options.SPOptions.ServiceCertificates.Add(new ServiceCertificate { Certificate = SignedXmlHelper.TestCert2' Use = CertificateUse.Encryption }); " is 143.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsExtensionsTests.cs,SPOptionsExtensions_CreateMetadata_MultipleServiceCertificate,The length of the statement  "            options.SPOptions.ServiceCertificates.Add(new ServiceCertificate { Certificate = SignedXmlHelper.TestCert2' Use = CertificateUse.Signing }); " is 140.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_Constructor_LoadsConfig,The length of the statement  "            subject.RequestedAuthnContext.ClassRef.OriginalString.Should().Be("urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport"); " is 135.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_SigningCertificate_UseCurrentWhenFuturePublished,The length of the statement  "            subject.ServiceCertificates.Add(new ServiceCertificate { Status = CertificateStatus.Future' Certificate = SignedXmlHelper.TestCert }); " is 134.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_SigningCertificate_NullWhenOnlyDecryptionCerts,The length of the statement  "            subject.ServiceCertificates.Add(new ServiceCertificate { Use = CertificateUse.Encryption' Certificate = SignedXmlHelper.TestCert2 }); " is 133.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_UseBothWhenFutureUnspecifiedPublished,The length of the statement  "            subject.ServiceCertificates.Add(new ServiceCertificate { Status = CertificateStatus.Future' Certificate = SignedXmlHelper.TestCert }); " is 134.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_UseBothWhenFutureUnspecifiedPublished,The length of the statement  "            subject.DecryptionServiceCertificates[0].SerialNumber.Should().NotBe(subject.DecryptionServiceCertificates[1].SerialNumber); " is 124.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_UseBothWhenFutureEncryptionPublished,The length of the statement  "            subject.ServiceCertificates.Add(new ServiceCertificate { Use = CertificateUse.Encryption' Status = CertificateStatus.Future' Certificate = SignedXmlHelper.TestCert }); " is 167.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_UseBothWhenFutureEncryptionPublished,The length of the statement  "            subject.DecryptionServiceCertificates[0].SerialNumber.Should().NotBe(subject.DecryptionServiceCertificates[1].SerialNumber); " is 124.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_EmptyWhenOnlySigning,The length of the statement  "            subject.ServiceCertificates.Add(new ServiceCertificate { Use = CertificateUse.Signing' Certificate = SignedXmlHelper.TestCert2 }); " is 130.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_CurrentBothBecomesSigning_WhenFutureBothPublished,The length of the statement  "            subject.ServiceCertificates.Add(new ServiceCertificate { Status = CertificateStatus.Future' Certificate = SignedXmlHelper.TestCert2 }); " is 135.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_CurrentBothBecomesSigning_WhenFutureBothPublished,The length of the statement  "            result.Where(c => c.Certificate.SerialNumber == SignedXmlHelper.TestCert.SerialNumber).First().Use.Should().Be(CertificateUse.Signing); " is 135.
Long Statement,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_CurrentBothBecomesSigning_WhenFutureBothPublished,The length of the statement  "            result.Where(c => c.Certificate.SerialNumber == SignedXmlHelper.TestCert2.SerialNumber).First().Use.Should().Be(CertificateUse.Both); " is 133.
Long Statement,Sustainsys.Saml2.Tests.Helpers,SpinWaiter,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Helpers\SpinWaiter.cs,While,The length of the statement  "                return new TestResult(testResult' string.Format("Timeout passed without condition becoming false' expected {0}' last actual value was {1}"' value2' value1)); " is 157.
Long Statement,Sustainsys.Saml2.Tests.Helpers,StubServer,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Helpers\StubServer.cs,GetContent,The length of the statement  "@"<EntitiesDescriptor ID=""federationMetadataSigned"" xmlns=""urn:oasis:names:tc:SAML:2.0:metadata"" validUntil=""2100-01-01T14:43:15Z""> " is 137.
Long Statement,Sustainsys.Saml2.Tests.Helpers,StubServer,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Helpers\StubServer.cs,GetContent,The length of the statement  "@"<EntitiesDescriptor ID=""federationMetadataSignedTampered"" xmlns=""urn:oasis:names:tc:SAML:2.0:metadata"" validUntil=""2100-01-01T14:43:15Z""> " is 145.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSAKeyValueTestData,The length of the statement  "					P = Convert.FromBase64String("/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFw==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSAKeyValueTestData,The length of the statement  "					G = Convert.FromBase64String("Z4Rxsnqc9E7pGknFFH2xqaryRPBaQ01khpMdLRQnG541Awtx/XPaF5Bpsy4pNWMOHCBiNU0NogpsQW5QvnlMpA==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSAKeyValueTestData,The length of the statement  "					Y = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSAKeyValueTestData,The length of the statement  "					J = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSAKeyValueTestData,The length of the statement  "					Seed = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")' " is 124.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddRSAKeyValueTestData,The length of the statement  "				  <Modulus>xA7SEU+e0yQH5rm9kbCDN9o3aPIo7HbP7tX6WOocLZAtNfyxSZDU16ksL6WjubafOqNEpcwR3RdFsT7bCqnXPBe5ELh5u4VEy19MzxkXRgrMvavzyBpVRgBUwUlV5foK5hhmbktQhyNdy/6LpQRhDUDsTvK+g9Ucj47es9AQJ3U=</Modulus> " is 191.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddRSAKeyValueTestData,The length of the statement  "					Modulus = Convert.FromBase64String("xA7SEU+e0yQH5rm9kbCDN9o3aPIo7HbP7tX6WOocLZAtNfyxSZDU16ksL6WjubafOqNEpcwR3RdFsT7bCqnXPBe5ELh5u4VEy19MzxkXRgrMvavzyBpVRgBUwUlV5foK5hhmbktQhyNdy/6LpQRhDUDsTvK+g9Ucj47es9AQJ3U=")' " is 211.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData1,The length of the statement  "					  <Modulus>xA7SEU+e0yQH5rm9kbCDN9o3aPIo7HbP7tX6WOocLZAtNfyxSZDU16ksL6WjubafOqNEpcwR3RdFsT7bCqnXPBe5ELh5u4VEy19MzxkXRgrMvavzyBpVRgBUwUlV5foK5hhmbktQhyNdy/6LpQRhDUDsTvK+g9Ucj47es9AQJ3U=</Modulus> " is 191.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData1,The length of the statement  "					Modulus = Convert.FromBase64String("xA7SEU+e0yQH5rm9kbCDN9o3aPIo7HbP7tX6WOocLZAtNfyxSZDU16ksL6WjubafOqNEpcwR3RdFsT7bCqnXPBe5ELh5u4VEy19MzxkXRgrMvavzyBpVRgBUwUlV5foK5hhmbktQhyNdy/6LpQRhDUDsTvK+g9Ucj47es9AQJ3U=")' " is 211.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData4,The length of the statement  "					P = Convert.FromBase64String("/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFw==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData4,The length of the statement  "					G = Convert.FromBase64String("Z4Rxsnqc9E7pGknFFH2xqaryRPBaQ01khpMdLRQnG541Awtx/XPaF5Bpsy4pNWMOHCBiNU0NogpsQW5QvnlMpA==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData4,The length of the statement  "					Y = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData4,The length of the statement  "					J = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")' " is 121.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData4,The length of the statement  "					Seed = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")' " is 124.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddX509DigestTestData,The length of the statement  "				<X509Digest xmlns='http://www.w3.org/2000/09/xmldsig#' Algorithm='http://w3c.org/madeUpAlgorithm'>BOVKaiLPKEDChhkA64UEBOXTv/VFHnhrUPN+bXqCvEl7rroAYpH5tKzbiGTtMSlp4JO9Pxg44zeX7EoWDvOrpD0=</X509Digest>"; " is 201.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddX509DigestTestData,The length of the statement  "				Value = Convert.FromBase64String("BOVKaiLPKEDChhkA64UEBOXTv/VFHnhrUPN+bXqCvEl7rroAYpH5tKzbiGTtMSlp4JO9Pxg44zeX7EoWDvOrpD0=") " is 124.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,MetadataSerializerTests_ReadX509DigestMissingAlgorithm,The length of the statement  "				<X509Digest xmlns='http://www.w3.org/2000/09/xmldsig#'>BOVKaiLPKEDChhkA64UEBOXTv/VFHnhrUPN+bXqCvEl7rroAYpH5tKzbiGTtMSlp4JO9Pxg44zeX7EoWDvOrpD0=</X509Digest>"; " is 158.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSigKeyInfoTestData,The length of the statement  "					  <Modulus>xA7SEU+e0yQH5rm9kbCDN9o3aPIo7HbP7tX6WOocLZAtNfyxSZDU16ksL6WjubafOqNEpcwR3RdFsT7bCqnXPBe5ELh5u4VEy19MzxkXRgrMvavzyBpVRgBUwUlV5foK5hhmbktQhyNdy/6LpQRhDUDsTvK+g9Ucj47es9AQJ3U=</Modulus> " is 191.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSigKeyInfoTestData,The length of the statement  "							Modulus = Convert.FromBase64String("xA7SEU+e0yQH5rm9kbCDN9o3aPIo7HbP7tX6WOocLZAtNfyxSZDU16ksL6WjubafOqNEpcwR3RdFsT7bCqnXPBe5ELh5u4VEy19MzxkXRgrMvavzyBpVRgBUwUlV5foK5hhmbktQhyNdy/6LpQRhDUDsTvK+g9Ucj47es9AQJ3U=")' " is 211.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddReadCipherReferenceTestData,The length of the statement  "					  <ds:XPath xmlns:rep='http://www.example.org/repository'>self::text()[parent::rep:CipherValue[@Id='example1']]</ds:XPath> " is 120.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The length of the statement  "				   <AttributeAuthorityDescriptor protocolSupportEnumeration='urn:oasis:names:tc:SAML:1.1:protocol urn:oasis:names:tc:SAML:2.0:protocol'> " is 133.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The length of the statement  "					<SPSSODescriptor protocolSupportEnumeration='urn:oasis:names:tc:SAML:2.0:protocol urn:oasis:names:tc:SAML:1.1:protocol'> " is 120.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntityDescriptorTestData,The length of the statement  "				<AttributeAuthorityDescriptor protocolSupportEnumeration='urn:oasis:names:tc:SAML:1.1:protocol urn:oasis:names:tc:SAML:2.0:protocol'> " is 133.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntityDescriptorTestData,The length of the statement  "				<AttributeAuthorityDescriptor protocolSupportEnumeration='urn:oasis:names:tc:SAML:1.1:protocol urn:oasis:names:tc:SAML:2.0:protocol'> " is 133.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntityDescriptorTestData2,The length of the statement  "				<RoleDescriptor xmlns:fed='http://docs.oasis-open.org/wsfed/federation/200706' xsi:type='fed:SecurityTokenServiceType' protocolSupportEnumeration='http://docs.oasis-open.org/wsfed/federation/200706'> " is 199.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntityDescriptorTestData2,The length of the statement  "				</RoleDescriptor><IDPSSODescriptor protocolSupportEnumeration='urn:mace:shibboleth:1.0 urn:oasis:names:tc:SAML:2.0:protocol'> " is 125.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddMetadataTestData,The length of the statement  "					<SPSSODescriptor protocolSupportEnumeration='urn:oasis:names:tc:SAML:2.0:protocol urn:oasis:names:tc:SAML:1.1:protocol'> " is 120.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSecurityTokenServiceDescriptorTestData1,The length of the statement  "					protocolSupportEnumeration='http://docs.oasis-open.org/ws-sx/ws-trust/200512 http://schemas.xmlsoap.org/ws/2005/02/trust http://docs.oasis-open.org/wsfed/federation/200706' " is 172.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:ServiceDescription xml:lang='en'>An example service that requires a human-readable identifier and optional name and e-mail address.</md:ServiceDescription> " is 159.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:RequestedAttribute FriendlyName='eduPersonPrincipalName' Name='urn:mace:dir:attribute-def:eduPersonPrincipalName' NameFormat='urn:mace:shibboleth:1.0:attributeNamespace:uri'/> " is 179.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:RequestedAttribute FriendlyName='mail' Name='urn:mace:dir:attribute-def:mail' NameFormat='urn:mace:shibboleth:1.0:attributeNamespace:uri'/> " is 143.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:RequestedAttribute FriendlyName='displayName' Name='urn:mace:dir:attribute-def:displayName' NameFormat='urn:mace:shibboleth:1.0:attributeNamespace:uri'/> " is 157.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:RequestedAttribute FriendlyName='eduPersonPrincipalName' Name='urn:oid:1.3.6.1.4.1.5923.1.1.1.6' NameFormat='urn:oasis:names:tc:SAML:2.0:attrname-format:uri'/> " is 163.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:RequestedAttribute FriendlyName='mail' Name='urn:oid:0.9.2342.19200300.100.1.3' NameFormat='urn:oasis:names:tc:SAML:2.0:attrname-format:uri'/> " is 146.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					<md:RequestedAttribute FriendlyName='displayName' Name='urn:oid:2.16.840.1.113730.3.1.241' NameFormat='urn:oasis:names:tc:SAML:2.0:attrname-format:uri'/> " is 153.
Long Statement,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAttributeConsumingServiceTestData,The length of the statement  "					new LocalizedName("An example service that requires a human-readable identifier and optional name and e-mail address."' "en") " is 125.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2AuthenticationRequestTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2AuthenticationRequestTests.cs,Saml2AuthenticationRequest_ToXElement_AddsProtocolBinding_HttpPost,The length of the statement  "            Saml2AuthenticationRequest_ToXElement_AddsProtocolBinding(Saml2.WebSso.Saml2BindingType.HttpPost' "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"); " is 148.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2AuthenticationRequestTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2AuthenticationRequestTests.cs,Saml2AuthenticationRequest_ToXElement_AddsProtocolBinding_Artifact,The length of the statement  "            Saml2AuthenticationRequest_ToXElement_AddsProtocolBinding(Saml2.WebSso.Saml2BindingType.Artifact' "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"); " is 152.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2AuthenticationRequestTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2AuthenticationRequestTests.cs,Saml2AuthenticationRequest_ToXElement_NameFormatTransientForbidsAllowCreate,The length of the statement  "                .And.Message.Should().Be("When NameIdPolicy/Format is set to Transient' it is not permitted to specify AllowCreate. Change Format or leave AllowCreate as null."); " is 162.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2LogoutRequestTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2LogoutRequestTests.cs,Saml2LogoutRequest_FromXml,The length of the statement  " <saml2:NameID Format=""urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"">005a06e0-ad82-110d-a556-004005b13a2b</saml2:NameID> " is 129.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_Read_ThrowsOnMissingStatusCode,The length of the statement  "                .WithMessage( "Element 'StatusCode' (case-sensitive' namespace 'urn:oasis:names:tc:SAML:2.0:protocol') was not found" ); " is 120.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_CorrectSignedResponseMessage_WithAuthnStatementGeneratesLogoutNameIdentifierAllNameIdProperties,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_CorrectSignedResponseMessage_WithAuthnStatementGeneratesLogoutNameIdentifierAllNameIdProperties,The length of the statement  "            logoutInfoClaim.Value.Should().Be("NameQualifier'SPNameQualifier'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress'SPProvidedID'someone@example.com"); " is 155.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_CorrectSignedResponseMessage_WithAuthnStatementGeneratesLogoutInfo,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_SessionIndexButNoNameId,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_ThrowsOnAssertionInjectionWithAssertionSignature,The length of the statement  "                .WithMessage("Incorrect reference on Xml signature. The reference must be to the root element of the element containing the signature."); " is 137.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_CorrectEncryptedSingleAssertion_UsingMSIdentityModel,The length of the statement  "            assertion.Subject.SubjectConfirmations.Add(new Saml2SubjectConfirmation(new Uri("urn:oasis:names:tc:SAML:2.0:cm:bearer"))); " is 123.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_Read_ThrowsOnIncorrectInResponseTo,The length of the statement  "                .WithMessage("InResponseTo Id \"anothervalue\" in received response does not match Id \"somevalue\" of the sent request."); " is 123.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_ThrowsOnStatusFailure_IncludingSecondLevelMessage,The length of the statement  "                .WithMessage("The Saml2Response must have status success to extract claims.*Status Code: Responder*Message: A status message*RequestDenied") " is 140.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_ThrowsOnStatusFailure_IncludingSecondLevelMessage,The length of the statement  "                .Where(x => x.Status == Saml2StatusCode.Responder && x.StatusMessage == "A status message" && x.SecondLevelStatus == "urn:oasis:names:tc:SAML:2.0:status:RequestDenied"); " is 169.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_DisplayStatusMessageInExceptionText,The length of the statement  "                .WithMessage("The Saml2Response must have status success to extract claims.*Status Code: Requester*Message: A status message*") " is 127.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_Xml_FromData_ContainsAudienceRestriction,The length of the statement  "                .And.Subject["AudienceRestriction"' Saml2Namespaces.Saml2Name].Should().NotBeNull("AudienceRestriction element should be present") " is 130.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_ToXml,The length of the statement  "            string response = @"<saml2p:Response xmlns:saml2p=""urn:oasis:names:tc:SAML:2.0:protocol"" ID=""Saml2Response_ToXml"" Version=""2.0"" IssueInstant=""2013-01-01T00:00:00Z""><saml2p:Status><saml2p:StatusCode Value=""urn:oasis:names:tc:SAML:2.0:status:Requester"" /></saml2p:Status></saml2p:Response>"; " is 299.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_ChecksSha256WhenEnabled,The length of the statement  "                        <Assertion ID=""" + MethodBase.GetCurrentMethod().Name + @""" IssueInstant=""2015-03-13T20:43:33.466Z"" Version=""2.0"" xmlns=""urn:oasis:names:tc:SAML:2.0:assertion""><Issuer>https://idp.example.com</Issuer><Signature xmlns=""http://www.w3.org/2000/09/xmldsig#""><SignedInfo><CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" /><SignatureMethod Algorithm=""http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"" /><Reference URI=""#Saml2Response_GetClaims_ChecksSha256WhenEnabled""><Transforms><Transform Algorithm=""http://www.w3.org/2000/09/xmldsig#enveloped-signature"" /><Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" /></Transforms><DigestMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#sha256"" /><DigestValue>8s5HDYeicqbNwESGyrvYYXinJeJJgl4t6O27KGE0ejc=</DigestValue></Reference></SignedInfo><SignatureValue>mS2TFErenJHyvUbyIDUItOvH6AavUNGg5zL3hVueWDGjhaft2mlWSlQIFm9ajVQKrZq2Q/V4oZYGTQ8muTfrhdCL3fyu453nEWcNgQ+gm1H1e89N75XWonfL+UQDl73O95SX0dD4DjqQAC4MlSwMOkwOR7GakhjPbSzRct7lFbRx/3k+TUZNj9rfV4uzlf79ebkw9EaaSfu0tR6bAfGyrefFaNTZs2NeRICfD/GKn7HRo9zSdVPBHfEW2UUy0x/aWREG4GgUs7qObWL4uhDZ6oyy5FbsRcrUJMiXCFNXA8dr9EtZ2VafHz3d4kJFLiq63xjqpjGk/ng2gP+47F/9Rw==</SignatureValue><KeyInfo><X509Data><X509Certificate>MIIDIzCCAg+gAwIBAgIQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAMCQxIjAgBgNVBAMTGUtlbnRvci5BdXRoU2VydmljZXMuVGVzdHMwHhcNMTMwOTI1MTMzNTQ0WhcNMzkxMjMxMjM1OTU5WjAkMSIwIAYDVQQDExlLZW50b3IuQXV0aFNlcnZpY2VzLlRlc3RzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwVGpfvK9N//MnA5Jo1q2liyPR24406Dp25gv7LB3HK4DWgqsb7xXM6KIV/WVOyCV2g/O1ErBlB+HLhVZ4XUJvbqBbgAJqFO+TZwcCIe8u4nTEXeU660FdtkKClA17sbtMrAGdDfOPwVBHSuavdHeD7jHNI4RUDGKnEW13/0EvnHDilIetwODRxrX/+41R24sJThFbMczByS3OAL2dcIxoAynaGeM90gXsVYow1QhJUy21+cictikb7jW4mW6dvFCBrWIceom9J295DcQIHoxJy5NoZwMir/JV00qs1wDVoN20Ve1DC5ImwcG46XPF7efQ44yLh2j5Yexw+xloA81dwIDAQABo1kwVzBVBgNVHQEETjBMgBAWIahoZhXVUogbAqkS7zwfoSYwJDEiMCAGA1UEAxMZS2VudG9yLkF1dGhTZXJ2aWNlcy5UZXN0c4IQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAA4IBAQA2aGzmuKw4AYXWMhrGj5+i8vyAoifUn1QVOFsUukEA77CrqhqqaWFoeagfJp/45vlvrfrEwtF0QcWfmO9w1VvHwm7sk1G/cdYyJ71sU+llDsdPZm7LxQvWZYkK+xELcinQpSwt4ExavS+jLcHoOYHYwIZMBn3U8wZw7Kq29oGnoFQz7HLCEl/G9i3QRyvFITNlWTjoScaqMjHTzq6HCMaRsL09DLcY3KB+cedfpC0/MBlzaxZv0DctTulyaDfM9DCYOyokGN/rQ6qkAR0DDm8fVwknbJY7kURXNGoUetulTb5ow8BvD1gncOaYHSD0kbHZG+bLsUZDFatEr2KW8jbG</X509Certificate></X509Data></KeyInfo></Signature><Subject><NameID>SomeUser</NameID><SubjectConfirmation Method=""urn:oasis:names:tc:SAML:2.0:cm:bearer"" /></Subject><Conditions NotOnOrAfter=""2100-01-01T05:00:00.000Z"" /></Assertion> " is 2570.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_ChecksSha256WhenEnabled,The length of the statement  "            var idp = new IdentityProvider(new EntityId("https://idp.example.com")' spOptions) { AllowUnsolicitedAuthnResponse = true }; " is 124.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_ValidatesIdpCertificateIfConfigured,The length of the statement  "                .And.Message.Should().Be("The signature was valid' but the verification of the certificate failed. Is it expired or revoked? Are you sure you really want to enable ValidateCertificates (it's normally not needed)?"); " is 215.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ExtractedFromMessage,The length of the statement  "                    <saml2:AuthnStatement AuthnInstant=""{DateTime.UtcNow.ToSaml2DateTimeString()}"" SessionNotOnOrAfter = ""2050-01-01T00:00:00Z""> " is 128.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ExtractedFromMessage,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ExtractedFromMessage,The length of the statement  "                    <saml2:AuthnStatement AuthnInstant=""{DateTime.UtcNow.ToSaml2DateTimeString()}"" SessionNotOnOrAfter = ""2051-01-01T00:00:00Z""> " is 128.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ExtractedFromMessage,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ThrowsIfCalledBeforeGetClaims,The length of the statement  "                    <saml2:AuthnStatement AuthnInstant=""{DateTime.UtcNow.ToSaml2DateTimeString()}"" SessionNotOnOrAfter = ""2200-01-01T00:00:00Z""> " is 128.
Long Statement,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ThrowsIfCalledBeforeGetClaims,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_WithReturnUrl_SuccessfulResult,The length of the statement  "                ID = """ + MethodBase.GetCurrentMethod().Name + @""" InResponseTo = ""InResponseToId"" Version=""2.0"" IssueInstant=""2013-01-01T00:00:00Z""> " is 141.
Long Statement,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_WithReturnUrl_SuccessfulResult_NoConfigReturnUrl,The length of the statement  "                ID = """ + MethodBase.GetCurrentMethod().Name + @""" InResponseTo = ""InResponseToId"" Version=""2.0"" IssueInstant=""2013-01-01T00:00:00Z""> " is 141.
Long Statement,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_ExtractsSessionNotOnOrAfter,The length of the statement  "                    <saml2:AuthnStatement AuthnInstant=""{DateTime.UtcNow.ToSaml2DateTimeString()}"" SessionNotOnOrAfter = ""2200-01-01T00:00:00Z""> " is 128.
Long Statement,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_ExtractsSessionNotOnOrAfter,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_SessionNotOnOrAfterNullIfNotSpecifiedInResponse,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_UsesIdpFromNotification,The length of the statement  "                            <saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml2:AuthnContextClassRef> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            "<EntityDescriptor entityID=\"https://github.com/Sustainsys/Saml2\" cacheDuration=\"PT42S\" xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\">" " is 194.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<SPSSODescriptor AuthnRequestsSigned=\"true\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">" " is 148.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<DiscoveryResponse Binding=\"urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol\" Location=\"http://localhost/Saml2/SignIn\" index=\"0\" isDefault=\"true\" xmlns=\"urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol\" />" " is 241.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<KeyDescriptor><KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><X509Data><X509Certificate>MIIDIzCCAg+gAwIBAgIQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAMCQxIjAgBgNVBAMTGUtlbnRvci5BdXRoU2VydmljZXMuVGVzdHMwHhcNMTMwOTI1MTMzNTQ0WhcNMzkxMjMxMjM1OTU5WjAkMSIwIAYDVQQDExlLZW50b3IuQXV0aFNlcnZpY2VzLlRlc3RzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwVGpfvK9N//MnA5Jo1q2liyPR24406Dp25gv7LB3HK4DWgqsb7xXM6KIV/WVOyCV2g/O1ErBlB+HLhVZ4XUJvbqBbgAJqFO+TZwcCIe8u4nTEXeU660FdtkKClA17sbtMrAGdDfOPwVBHSuavdHeD7jHNI4RUDGKnEW13/0EvnHDilIetwODRxrX/+41R24sJThFbMczByS3OAL2dcIxoAynaGeM90gXsVYow1QhJUy21+cictikb7jW4mW6dvFCBrWIceom9J295DcQIHoxJy5NoZwMir/JV00qs1wDVoN20Ve1DC5ImwcG46XPF7efQ44yLh2j5Yexw+xloA81dwIDAQABo1kwVzBVBgNVHQEETjBMgBAWIahoZhXVUogbAqkS7zwfoSYwJDEiMCAGA1UEAxMZS2VudG9yLkF1dGhTZXJ2aWNlcy5UZXN0c4IQg7mOjTf994NAVxZu4jqXpzAJBgUrDgMCHQUAA4IBAQA2aGzmuKw4AYXWMhrGj5+i8vyAoifUn1QVOFsUukEA77CrqhqqaWFoeagfJp/45vlvrfrEwtF0QcWfmO9w1VvHwm7sk1G/cdYyJ71sU+llDsdPZm7LxQvWZYkK+xELcinQpSwt4ExavS+jLcHoOYHYwIZMBn3U8wZw7Kq29oGnoFQz7HLCEl/G9i3QRyvFITNlWTjoScaqMjHTzq6HCMaRsL09DLcY3KB+cedfpC0/MBlzaxZv0DctTulyaDfM9DCYOyokGN/rQ6qkAR0DDm8fVwknbJY7kURXNGoUetulTb5ow8BvD1gncOaYHSD0kbHZG+bLsUZDFatEr2KW8jbG</X509Certificate></X509Data></KeyInfo></KeyDescriptor>" " is 1231.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost/Saml2/Logout\" />" " is 133.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://localhost/Saml2/Logout\" />" " is 129.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://localhost/Saml2/Acs\" index=\"0\" isDefault=\"true\" />" " is 162.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"http://localhost/Saml2/Acs\" index=\"1\" isDefault=\"false\" />" " is 167.
Long Statement,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The length of the statement  "            + "<RequestedAttribute Name=\"urn:attributeName\" isRequired=\"true\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName=\"friendlyName\">" " is 164.
Long Statement,Sustainsys.Saml2.Tests.WebSso,Saml2BindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2BindingTests.cs,Saml2Binding_Get_ExplanatoryExceptionOnUnknownBinding,The length of the statement  "                .WithMessage("1473 is not a valid value for the Saml2BindingType enum. Have you forgotten to configure a binding for your identity provider?") " is 142.
Long Statement,Sustainsys.Saml2.Tests.WebSso,Saml2PostBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2PostBindingTests.cs,Saml2PostBinding_Bind,The length of the statement  "<meta http-equiv=""Content-Security-Policy"" content=""script-src 'sha256-H3SVZBYrbqBt3ncrT/nNmOb6nwCjC12cPQzh5jnW4Y0='""> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,Saml2PostBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2PostBindingTests.cs,Saml2PostBinding_Bind_WithRelayState,The length of the statement  "<meta http-equiv=""Content-Security-Policy"" content=""script-src 'sha256-H3SVZBYrbqBt3ncrT/nNmOb6nwCjC12cPQzh5jnW4Y0='""> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,Saml2PostBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2PostBindingTests.cs,Saml2PostBinding_Bind_SignsXml,The length of the statement  "<meta http-equiv=""Content-Security-Policy"" content=""script-src 'sha256-H3SVZBYrbqBt3ncrT/nNmOb6nwCjC12cPQzh5jnW4Y0='""> " is 122.
Long Statement,Sustainsys.Saml2.Tests.WebSso,Saml2RedirectBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2RedirectBindingTests.cs,Saml2RedirectBinding_Bind_With_RelayState,The length of the statement  "                Location = new Uri("http://host?SAMLRequest=c0ksSQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%3D%3D" " is 393.
Long Statement,Sustainsys.Saml2.Tests.WebSso,SignInCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\SignInCommandTests.cs,SignInCommand_Run_DoNotCalls_NotificationForRelativeUrl,The length of the statement  "            validateAbsoluteReturnUrlCalled.Should().BeFalse("the ValidateAbsoluteReturnUrl notification should not have been called"); " is 123.
Long Statement,Sustainsys.Saml2.Tests.WebSso,SignInCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\SignInCommandTests.cs,SignInCommand_Run_Uses_IdpFromNotification,The length of the statement  "            authnRequestCreatedCalled.Should().BeTrue("an AuthenticateRequest should have been created instead of going to the Discovery Service."); " is 136.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_DoNotCalls_NotificationForRelativeUrl,The length of the statement  "            validateAbsoluteReturnUrlCalled.Should().BeFalse("the ValidateAbsoluteReturnUrl notification should not have been called"); " is 123.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_ThrowsOnSignatureInLogoutRequestReceivedThroughPostBindingIfCertificateIsntValid_WhenCertificateValidationIsConfigured,The length of the statement  "                .WithMessage("The signature was valid' but the verification of the certificate failed. Is it expired or revoked? Are you sure you really want to enable ValidateCertificates (it's normally not needed)?"); " is 203.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_IncomingRequest_ThrowsOnNoConfiguredSigningCert,The length of the statement  "                .WithMessage("Received a LogoutRequest from \"https://idp.example.com\" but cannot reply because single logout responses must be signed and there is no signing certificate configured. Looks like the idp is configured for Single Logout despite Saml2 not exposing that functionality in the metadata."); " is 300.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_IncomingRequest_ThroughRedirectBinding_ThrowsOnMissingSignature,The length of the statement  "                .WithMessage("Received a LogoutRequest from https://idp.example.com that cannot be processed because it is not signed."); " is 121.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_ThrowsOnLogoutResponseStatusNonSuccess,The length of the statement  "                .And.Message.Should().Be("Idp returned status \"Requester\"' indicating that the single logout failed. The local session has been successfully terminated."); " is 157.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_LocalLogoutIfThereIsNoSigninCertificateForTheSP,The length of the statement  "            options.SPOptions.SigningServiceCertificate.Should().BeNull("this helper is used for test of behaviour when no certificate is configured"); " is 139.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,LogoutCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\LogoutCommandTests.cs,LogoutCommand_Run_ThrowsOnMissingIssuerInReceivedMessage,The length of the statement  "                .WithMessage("There is no Issuer element in the message' so there is no way to know what certificate to use to validate the signature."); " is 137.
Long Statement,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind,The length of the statement  "            result.Location.Query.Count(c => c == '=').Should().Be(2' "there are 2 params and = inside values should have been escaped"); " is 125.
Empty Catch Block,Sustainsys.Saml2.Tests.Internal,ClientCertificateWebClientTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\ClientCertificateWebclientTests.cs,Create_WithoutCertificate_ShouldAddNothingToRequest,The method has an empty catch block.
Empty Catch Block,Sustainsys.Saml2.Tests.Internal,ClientCertificateWebClientTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\ClientCertificateWebclientTests.cs,Create_WithCertificate_ShouldAddCertificateToRequest,The method has an empty catch block.
Empty Catch Block,Sustainsys.Saml2.Tests.Internal,ClientCertificateWebClientTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\ClientCertificateWebclientTests.cs,Create_WithoutCertificate_ShouldAddNothingToRequest,The method has an empty catch block.
Empty Catch Block,Sustainsys.Saml2.Tests.Internal,ClientCertificateWebClientTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\ClientCertificateWebclientTests.cs,Create_WithCertificate_ShouldAddCertificateToRequest,The method has an empty catch block.
Magic Number,Sustainsys.Saml2.Tests,ClaimsIdentityExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ClaimsIdentityExtensionsTests.cs,ClaimsIdentityExtensions_ToSaml2Assertion_Includes_DefaultCondition,The following statement contains a magic number: a.Conditions.NotOnOrAfter.Value.Should().BeCloseTo(DateTime.UtcNow.AddMinutes(2));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntityDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntityDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntityDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntityDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntityDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntityDescriptorCacheDuration,The following statement contains a magic number: subject.CacheDuration.Should().Be(new XsdDuration(minutes: 42));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntitiesDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntitiesDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntitiesDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntitiesDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntitiesDescriptorValidUntil,The following statement contains a magic number: subject.ValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_EntitiesDescriptorCacheDuration,The following statement contains a magic number: subject.CacheDuration.Should().Be(new XsdDuration(minutes: 15));
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Write_EntitiesDescriptorCacheDuration,The following statement contains a magic number: var metadata = new EntitiesDescriptor  			{  				Name = "Federation Name"'  				CacheDuration = new XsdDuration(minutes: 42)              };
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_ServiceProviderSingleSignOnDescriptor,The following statement contains a magic number: spssoInfo.AssertionConsumerServices.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests,ExtendedMetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\ExtendedMetadataSerializerTests.cs,ExtendedMetadataSerializer_Read_Organization,The following statement contains a magic number: organizationInfo.Urls.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests,FederationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\FederationTests.cs,Federation_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 01' 14' 43' 15));
Magic Number,Sustainsys.Saml2.Tests,FederationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\FederationTests.cs,Federation_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 01' 14' 43' 15));
Magic Number,Sustainsys.Saml2.Tests,FederationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\FederationTests.cs,Federation_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 01' 14' 43' 15));
Magic Number,Sustainsys.Saml2.Tests,FederationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\FederationTests.cs,Federation_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 01' 14' 43' 15));
Magic Number,Sustainsys.Saml2.Tests,FederationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\FederationTests.cs,Federation_ReloadOfMetadata_KeepsOldDataUntilMetadataBecomesInvalid,The following statement contains a magic number: MetadataRefreshScheduler.minInterval = new TimeSpan(0' 0' 0' 0' 5);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_CreateAuthenticateRequest_BasicInfo,The following statement contains a magic number: subject.RelayState.Should().HaveLength(24);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ConfigFromMetadata,The following statement contains a magic number: subject.ArtifactResolutionServiceUrls.Add(234' new Uri("http://example.com"));
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ConfigFromMetadata,The following statement contains a magic number: subject.ArtifactResolutionServiceUrls.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ConfigFromMetadata,The following statement contains a magic number: subject.ArtifactResolutionServiceUrls[117].OriginalString                  .Should().Be("http://localhost:13428/ars2");
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_Loaded,The following statement contains a magic number: subject.MetadataValidUntil.Should().Be(new DateTime(2100' 01' 02' 14' 42' 43' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_CalculatedFromCacheDuration,The following statement contains a magic number: var expectedValidUntil = DateTime.UtcNow.AddMinutes(15);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataValidUntil_CalculatedFromCacheDuration,The following statement contains a magic number: subject.MetadataValidUntil.Should().BeCloseTo(expectedValidUntil' 1000);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 42;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.SingleSignOnServiceUrl.Port.Should().Be(42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 117;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: SpinWaiter.WhileEqual(() => subject.SingleSignOnServiceUrl.Port' () => 42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.SingleSignOnServiceUrl.Port.Should().Be(117);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 42;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.SingleLogoutServiceUrl.Port.Should().Be(42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 117;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: SpinWaiter.WhileEqual(() => subject.SingleLogoutServiceUrl.Port' () => 42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.SingleLogoutServiceUrl.Port.Should().Be(117);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceResponseUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 42;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceResponseUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.SingleLogoutServiceResponseUrl.Port.Should().Be(42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceResponseUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 117;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceResponseUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: SpinWaiter.WhileEqual(() => subject.SingleLogoutServiceResponseUrl.Port' () => 42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleLogoutServiceResponseUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.SingleLogoutServiceResponseUrl.Port.Should().Be(117);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ArtifactResolutionServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 42;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ArtifactResolutionServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.ArtifactResolutionServiceUrls[0].Port.Should().Be(42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ArtifactResolutionServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: StubServer.IdpAndFederationVeryShortCacheDurationPort = 117;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ArtifactResolutionServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: SpinWaiter.WhileEqual(() => subject.ArtifactResolutionServiceUrls[0].Port' () => 42);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ArtifactResolutionServiceUrl_ReloadsMetadataIfNoLongerValid,The following statement contains a magic number: subject.ArtifactResolutionServiceUrls[0].Port.Should().Be(117);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnService_DoesntReloadMetadataIfStillValid,The following statement contains a magic number: subject.SingleSignOnServiceUrl.Port.Should().Be(13428);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnService_DoesntReloadMetadataIfStillValid,The following statement contains a magic number: StubServer.IdpMetadataSsoPort = 147;
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SingleSignOnService_DoesntReloadMetadataIfStillValid,The following statement contains a magic number: subject.SingleSignOnServiceUrl.Port.Should().Be(13428);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SigningKeys_RemovesMetadataKeyButKeepsConfiguredKey,The following statement contains a magic number: subject.SigningKeys.Count().Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_SigningKeys_RemovesMetadataKeyButKeepsConfiguredKey,The following statement contains a magic number: SpinWaiter.While(() => subject.SigningKeys.Count() == 2);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_ConstructedFromEntityDescriptor_DoesntScheduleMedataRefresh,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Sustainsys.Saml2.Tests,IdentityProviderTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\IdentityProviderTests.cs,IdentityProvider_MetadataLoadedConfiguredFromCode,The following statement contains a magic number: subject.MetadataValidUntil.Should().BeCloseTo(                  DateTime.UtcNow.Add(MetadataRefreshScheduler.DefaultMetadataCacheDuration.ToTimeSpan())' precision: 100);
Magic Number,Sustainsys.Saml2.Tests,SecureKeyGeneratorTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\RelayStateGeneratorTests.cs,SecureKeyGenerator_CreateRelayState,The following statement contains a magic number: i.Should().BeLessThan(1000' because: "if replacement works' we should have found the replacement characters sooner");
Magic Number,Sustainsys.Saml2.Tests,SecureKeyGeneratorTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\RelayStateGeneratorTests.cs,SecureKeyGenerator_CreateRelayState,The following statement contains a magic number: result.Length.Should().Be(24);
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_SubjectConfirmationData,The following statement contains a magic number: var notOnOrAfter = DateTime.UtcNow.AddMinutes(2);
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_Conditions,The following statement contains a magic number: var assertion = new Saml2Assertion(                  new Saml2NameIdentifier("http://idp.example.com"))              {                  Conditions = new Saml2Conditions()                  {                      NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)                  }              };
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_Conditions,The following statement contains a magic number: var assertion = new Saml2Assertion(                  new Saml2NameIdentifier("http://idp.example.com"))              {                  Conditions = new Saml2Conditions()                  {                      NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)                  }              };
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_Conditions,The following statement contains a magic number: var assertion = new Saml2Assertion(                  new Saml2NameIdentifier("http://idp.example.com"))              {                  Conditions = new Saml2Conditions()                  {                      NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)                  }              };
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_Conditions,The following statement contains a magic number: var assertion = new Saml2Assertion(                  new Saml2NameIdentifier("http://idp.example.com"))              {                  Conditions = new Saml2Conditions()                  {                      NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)                  }              };
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_Conditions,The following statement contains a magic number: var assertion = new Saml2Assertion(                  new Saml2NameIdentifier("http://idp.example.com"))              {                  Conditions = new Saml2Conditions()                  {                      NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)                  }              };
Magic Number,Sustainsys.Saml2.Tests,Saml2AssertionExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2AssertionExtensionsTests.cs,Saml2AssertionExtensions_ToXElement_Conditions,The following statement contains a magic number: var assertion = new Saml2Assertion(                  new Saml2NameIdentifier("http://idp.example.com"))              {                  Conditions = new Saml2Conditions()                  {                      NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)                  }              };
Magic Number,Sustainsys.Saml2.Tests,Saml2ConditionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2ConditionsExtensionsTests.cs,Saml2ConditionsExtensions_ToXElement_OnlyNotOnOrAfter,The following statement contains a magic number: var conditions = new Saml2Conditions()              {                  NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)              };
Magic Number,Sustainsys.Saml2.Tests,Saml2ConditionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2ConditionsExtensionsTests.cs,Saml2ConditionsExtensions_ToXElement_OnlyNotOnOrAfter,The following statement contains a magic number: var conditions = new Saml2Conditions()              {                  NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)              };
Magic Number,Sustainsys.Saml2.Tests,Saml2ConditionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2ConditionsExtensionsTests.cs,Saml2ConditionsExtensions_ToXElement_OnlyNotOnOrAfter,The following statement contains a magic number: var conditions = new Saml2Conditions()              {                  NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)              };
Magic Number,Sustainsys.Saml2.Tests,Saml2ConditionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2ConditionsExtensionsTests.cs,Saml2ConditionsExtensions_ToXElement_OnlyNotOnOrAfter,The following statement contains a magic number: var conditions = new Saml2Conditions()              {                  NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)              };
Magic Number,Sustainsys.Saml2.Tests,Saml2ConditionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2ConditionsExtensionsTests.cs,Saml2ConditionsExtensions_ToXElement_OnlyNotOnOrAfter,The following statement contains a magic number: var conditions = new Saml2Conditions()              {                  NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)              };
Magic Number,Sustainsys.Saml2.Tests,Saml2ConditionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2ConditionsExtensionsTests.cs,Saml2ConditionsExtensions_ToXElement_OnlyNotOnOrAfter,The following statement contains a magic number: var conditions = new Saml2Conditions()              {                  NotOnOrAfter = new DateTime(2099' 07' 25' 19' 52' 42' DateTimeKind.Utc)              };
Magic Number,Sustainsys.Saml2.Tests,Saml2SubjectExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2SubjectExtensionsTests.cs,Saml2SubjectExtensions_ToXElement_SubjectConfirmationData,The following statement contains a magic number: var notOnOrAfter = DateTime.UtcNow.AddMinutes(2);
Magic Number,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_AddAttributeIfNotNullOrEmtpy_TimeSpanSerializedCorrectly,The following statement contains a magic number: e.AddAttributeIfNotNullOrEmpty("attribute"' new TimeSpan(2' 17' 32));
Magic Number,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_AddAttributeIfNotNullOrEmtpy_TimeSpanSerializedCorrectly,The following statement contains a magic number: e.AddAttributeIfNotNullOrEmpty("attribute"' new TimeSpan(2' 17' 32));
Magic Number,Sustainsys.Saml2.Tests,XmlHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XmlHelpersTests.cs,XmlHelpers_AddAttributeIfNotNullOrEmtpy_TimeSpanSerializedCorrectly,The following statement contains a magic number: e.AddAttributeIfNotNullOrEmpty("attribute"' new TimeSpan(2' 17' 32));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(true' 12' 10' 8' 6' 4' 2' 147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Years.Should().Be(12);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Months.Should().Be(10);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Days.Should().Be(8);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Hours.Should().Be(6);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Minutes.Should().Be(4);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Seconds.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestComponentsCtor,The following statement contains a magic number: duration.Nanoseconds.Should().Be(147);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(new TimeSpan(99' 13' 24' 11' 33));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(new TimeSpan(99' 13' 24' 11' 33));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(new TimeSpan(99' 13' 24' 11' 33));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(new TimeSpan(99' 13' 24' 11' 33));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: XsdDuration duration = new XsdDuration(new TimeSpan(99' 13' 24' 11' 33));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: duration.Days.Should().Be(99);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: duration.Hours.Should().Be(13);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: duration.Minutes.Should().Be(24);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: duration.Seconds.Should().Be(11);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestTimespanCtor,The following statement contains a magic number: duration.Nanoseconds.Should().Be(33000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksYears,The following statement contains a magic number: var y = new XsdDuration(years: 2);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksMonths,The following statement contains a magic number: var x = new XsdDuration(months: 3);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksMonths,The following statement contains a magic number: var y = new XsdDuration(months: 2);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksDays,The following statement contains a magic number: var y = new XsdDuration(days: 2);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksHours,The following statement contains a magic number: var x = new XsdDuration(hours: 3);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksHours,The following statement contains a magic number: var y = new XsdDuration(hours: 2);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksMinutes,The following statement contains a magic number: var y = new XsdDuration(minutes: 3);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksSeconds,The following statement contains a magic number: var x = new XsdDuration(seconds: 5);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksSeconds,The following statement contains a magic number: var y = new XsdDuration(seconds: 6);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksNanoseconds,The following statement contains a magic number: var x = new XsdDuration(nanoseconds: 31323);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsChecksNanoseconds,The following statement contains a magic number: var y = new XsdDuration(nanoseconds: 99099);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesYears,The following statement contains a magic number: var x = new XsdDuration(years: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesYears,The following statement contains a magic number: var y = new XsdDuration(years: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesMonths,The following statement contains a magic number: var x = new XsdDuration(months: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesMonths,The following statement contains a magic number: var y = new XsdDuration(months: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesDays,The following statement contains a magic number: var x = new XsdDuration(days: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesDays,The following statement contains a magic number: var y = new XsdDuration(days: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesHours,The following statement contains a magic number: var x = new XsdDuration(hours: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesHours,The following statement contains a magic number: var y = new XsdDuration(hours: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesMinutes,The following statement contains a magic number: var x = new XsdDuration(minutes: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesMinutes,The following statement contains a magic number: var y = new XsdDuration(minutes: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesSeconds,The following statement contains a magic number: var x = new XsdDuration(seconds: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesSeconds,The following statement contains a magic number: var y = new XsdDuration(seconds: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesNanoseconds,The following statement contains a magic number: var x = new XsdDuration(nanoseconds: 3).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestHashUsesNanoseconds,The following statement contains a magic number: var y = new XsdDuration(nanoseconds: 2).GetHashCode();
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseYMD,The following statement contains a magic number: XsdDuration.Parse("P5Y3M14D").Should().Be(  				new XsdDuration(years: 5' months: 3' days: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseYMD,The following statement contains a magic number: XsdDuration.Parse("P5Y3M14D").Should().Be(  				new XsdDuration(years: 5' months: 3' days: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseYMD,The following statement contains a magic number: XsdDuration.Parse("P5Y3M14D").Should().Be(  				new XsdDuration(years: 5' months: 3' days: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseYMDNegative,The following statement contains a magic number: XsdDuration.Parse("-P5Y3M14D").Should().Be(  				new XsdDuration(negative: true' years: 5' months: 3' days: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseYMDNegative,The following statement contains a magic number: XsdDuration.Parse("-P5Y3M14D").Should().Be(  				new XsdDuration(negative: true' years: 5' months: 3' days: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseYMDNegative,The following statement contains a magic number: XsdDuration.Parse("-P5Y3M14D").Should().Be(  				new XsdDuration(negative: true' years: 5' months: 3' days: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMSNS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14.974S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14' nanoseconds: 974000000));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMSNS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14.974S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14' nanoseconds: 974000000));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMSNS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14.974S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14' nanoseconds: 974000000));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseHMSNS,The following statement contains a magic number: XsdDuration.Parse("PT26H38M14.974S").Should().Be(  				new XsdDuration(hours: 26' minutes: 38' seconds: 14' nanoseconds: 974000000));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMD,The following statement contains a magic number: new XsdDuration(years: 30' months: 4' days: 26).ToString()  				.Should().Be("P30Y4M26D");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMD,The following statement contains a magic number: new XsdDuration(years: 30' months: 4' days: 26).ToString()  				.Should().Be("P30Y4M26D");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMD,The following statement contains a magic number: new XsdDuration(years: 30' months: 4' days: 26).ToString()  				.Should().Be("P30Y4M26D");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13).ToString()  				.Should().Be("PT12H22M13S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13).ToString()  				.Should().Be("PT12H22M13S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13).ToString()  				.Should().Be("PT12H22M13S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringNS100,The following statement contains a magic number: new XsdDuration(nanoseconds: 100).ToString()  				.Should().Be("PT0.0000001S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMSNS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("PT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMSNS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("PT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMSNS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("PT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringHMSNS,The following statement contains a magic number: new XsdDuration(hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("PT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNS,The following statement contains a magic number: new XsdDuration(years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestToStringYMDHMSNSNegative,The following statement contains a magic number: new XsdDuration(negative: true' years: 24' months: 6' days: 12'  				hours: 12' minutes: 22' seconds: 13' nanoseconds: 123456000).ToString()  				.Should().Be("-P24Y6M12DT12H22M13.123456S");
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestParseLargeNS,The following statement contains a magic number: result.Should().Be(new XsdDuration(nanoseconds: 123456789));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_TestEqualsOtherType,The following statement contains a magic number: var notDuration = new DateTime(2001' 01' 01);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: var duration = new XsdDuration(negative: false' years: 1' months: 2'  				days: 3' hours: 4' minutes: 5' seconds: 6' nanoseconds: 1000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: var duration = new XsdDuration(negative: false' years: 1' months: 2'  				days: 3' hours: 4' minutes: 5' seconds: 6' nanoseconds: 1000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: var duration = new XsdDuration(negative: false' years: 1' months: 2'  				days: 3' hours: 4' minutes: 5' seconds: 6' nanoseconds: 1000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: var duration = new XsdDuration(negative: false' years: 1' months: 2'  				days: 3' hours: 4' minutes: 5' seconds: 6' nanoseconds: 1000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: var duration = new XsdDuration(negative: false' years: 1' months: 2'  				days: 3' hours: 4' minutes: 5' seconds: 6' nanoseconds: 1000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: var duration = new XsdDuration(negative: false' years: 1' months: 2'  				days: 3' hours: 4' minutes: 5' seconds: 6' nanoseconds: 1000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespan,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 1 + 2 * 30 + 3' 4' 5' 6' 1));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: var duration = new XsdDuration(negative: true' years: 6' months: 5'  				days: 4' hours: 3' minutes: 2' seconds: 1' nanoseconds: 100000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: var duration = new XsdDuration(negative: true' years: 6' months: 5'  				days: 4' hours: 3' minutes: 2' seconds: 1' nanoseconds: 100000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: var duration = new XsdDuration(negative: true' years: 6' months: 5'  				days: 4' hours: 3' minutes: 2' seconds: 1' nanoseconds: 100000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: var duration = new XsdDuration(negative: true' years: 6' months: 5'  				days: 4' hours: 3' minutes: 2' seconds: 1' nanoseconds: 100000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: var duration = new XsdDuration(negative: true' years: 6' months: 5'  				days: 4' hours: 3' minutes: 2' seconds: 1' nanoseconds: 100000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: var duration = new XsdDuration(negative: true' years: 6' months: 5'  				days: 4' hours: 3' minutes: 2' seconds: 1' nanoseconds: 100000000);
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ToTimespanNegative,The following statement contains a magic number: duration.ToTimeSpan().Should().Be(  				new TimeSpan(365 * 6 + 5 * 30 + 4' 3' 2' 1' 100).Negate());
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ParseMT,The following statement contains a magic number: XsdDuration.Parse("P30MT14M")  				.Should().Be(new XsdDuration(months: 30' minutes: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ParseMT,The following statement contains a magic number: XsdDuration.Parse("P30MT14M")  				.Should().Be(new XsdDuration(months: 30' minutes: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ParseDT,The following statement contains a magic number: XsdDuration.Parse("P30DT14M")  				.Should().Be(new XsdDuration(days: 30' minutes: 14));
Magic Number,Sustainsys.Saml2.Tests,XsdDurationTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\XsdDurationTests.cs,XsdDuration_ParseDT,The following statement contains a magic number: XsdDuration.Parse("P30DT14M")  				.Should().Be(new XsdDuration(days: 30' minutes: 14));
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsExtensionsTests.cs,SPOPtionsExtensions_CreateMetadata_RequiredFields,The following statement contains a magic number: metadata.CacheDuration.Should().Be(new XsdDuration(seconds: 42));
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsExtensionsTests.cs,SPOptionsExtensions_CreateMetadata_MultipleServiceCertificate,The following statement contains a magic number: spMetadata.Keys.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_UseBothWhenFutureUnspecifiedPublished,The following statement contains a magic number: subject.DecryptionServiceCertificates.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_DecryptionCertificate_UseBothWhenFutureEncryptionPublished,The following statement contains a magic number: subject.DecryptionServiceCertificates.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_CurrentBothBecomesSigning_WhenFutureBothPublished,The following statement contains a magic number: result.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_BothSigningAndEncryptionPublished,The following statement contains a magic number: result.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_RolloverOnlyOneType,The following statement contains a magic number: result.Count.Should().Be(3);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_RolloverOnlyOneType,The following statement contains a magic number: result.Where(c => c.Use == CertificateUse.Signing).Count().Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_BothSigningPublished,The following statement contains a magic number: result.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Configuration,SPOptionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Configuration\SPOptionsTests.cs,SPOptions_MetadataCertificates_BothEncryptionPublishedWithOverride,The following statement contains a magic number: result.Count.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2Date,The following statement contains a magic number: var subject = new DateTime(2014' 03' 02' 22' 42' 54' DateTimeKind.Utc)              .ToLocalTime().ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2Date,The following statement contains a magic number: var subject = new DateTime(2014' 03' 02' 22' 42' 54' DateTimeKind.Utc)              .ToLocalTime().ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2Date,The following statement contains a magic number: var subject = new DateTime(2014' 03' 02' 22' 42' 54' DateTimeKind.Utc)              .ToLocalTime().ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2Date,The following statement contains a magic number: var subject = new DateTime(2014' 03' 02' 22' 42' 54' DateTimeKind.Utc)              .ToLocalTime().ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2Date,The following statement contains a magic number: var subject = new DateTime(2014' 03' 02' 22' 42' 54' DateTimeKind.Utc)              .ToLocalTime().ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2Date,The following statement contains a magic number: var subject = new DateTime(2014' 03' 02' 22' 42' 54' DateTimeKind.Utc)              .ToLocalTime().ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeExtensionsTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeExtensionsTests.cs,DateTimeExtensionsTests_ToSaml2DateStripsSecondFractions,The following statement contains a magic number: var subject = new DateTime(2014' 07' 14' 16' 23' 47' 153' DateTimeKind.Utc)              .ToSaml2DateTimeString();
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value1OnValue2Null,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value1OnValue2Null,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value1OnValue2Null,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value2OnValue1Null,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value2OnValue1Null,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value2OnValue1Null,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value1OnValue2Later,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value1OnValue2Later,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value1OnValue2Later,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value2OnVAlue1Later,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value2OnVAlue1Later,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,DateTimeHelperTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\DateTimeHelperTests.cs,DateTimeHelper_EarliestTime_Value2OnVAlue1Later,The following statement contains a magic number: var dt = new DateTime(2016' 06' 30);
Magic Number,Sustainsys.Saml2.Tests.Internal,EnumeratorTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\EnumeratorTests.cs,Enumerator_AsGeneric,The following statement contains a magic number: IEnumerable src = new int[] { 1' 2 };
Magic Number,Sustainsys.Saml2.Tests.Internal,EnumeratorTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Internal\EnumeratorTests.cs,Enumerator_AsGeneric,The following statement contains a magic number: subject.Current.Should().Be(2);
Magic Number,Sustainsys.Saml2.Tests.Metadata,ContactTypeHelpersTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\ContactTypeHelpersTests.cs,ContactTypeHelpersTests_ToStringINVALID,The following statement contains a magic number: Action a = () => ContactTypeHelpers.ToString((ContactType)1000);
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataRefreshSchedulerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataRefreshSchedulerTests.cs,MetadataRefreshScheduler_GetDelay_ReturnsHalfRemaining,The following statement contains a magic number: var validUntil = DateTime.UtcNow.AddHours(2);
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataRefreshSchedulerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataRefreshSchedulerTests.cs,MetadataRefreshScheduler_GetDelay_RespectsMinInterval,The following statement contains a magic number: var validUntil = DateTime.UtcNow.AddSeconds(10);
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataRefreshSchedulerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataRefreshSchedulerTests.cs,MetadataRefreshScheduler_GetDelay_RespectsMaxInterval,The following statement contains a magic number: var validUntil = new DateTime(2100' 01' 01);
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIdpSsoDescriptorTestData,The following statement contains a magic number: var obj = new IdpSsoDescriptor()  			{  				WantAuthnRequestsSigned = true'  				ProtocolsSupported = { new Uri("urn:oasis:names:tc:SAML:2.0:protocol") }'  				CacheDuration = new XsdDuration(years: 2' months: 6' days: 5' hours: 12' minutes: 35' seconds: 30)'  				ValidUntil = new DateTime(2020' 01' 01' 14' 32' 31' DateTimeKind.Utc)'  				ErrorUrl = new Uri("http://idp.example.com/something/went/wrong")'  				Id = "yourGUIDhere"'  				Extensions = {  					doc.SelectSingleNode("/md:IDPSSODescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				Organization = new Organization()  				{  					Extensions = {  						doc.SelectSingleNode("/md:IDPSSODescriptor/md:Organization/md:Extensions/*[1]"'  							nsmgr).As<XmlElement>()  					}'  					Names = {  						new LocalizedName("Acme Ltd"' "en")  					}'  					DisplayNames = {  						new LocalizedName("Acme Ltd (display)"' "en")  					}'  					Urls = {  						new LocalizedUri(new Uri("http://acme.co/")' "en")  					}  				}'  				Contacts = {  					new ContactPerson() {  						Type = ContactType.Administrative'  						Company = "Acme Ltd"'  						GivenName = "Wile E"'  						Surname = "Coyote"'  						EmailAddresses = { "wile.e.coyto@acme.co" }'  						TelephoneNumbers = { "11223344" }'  						Extensions = {  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[1]"'  								nsmgr).As<XmlElement>()'  							doc.SelectSingleNode("/md:IDPSSODescriptor/md:ContactPerson/md:Extensions/*[2]"'  								nsmgr).As<XmlElement>()  						}  					}  				}'  				Keys = {  					new KeyDescriptor() {  						Use = KeyType.Signing'  						KeyInfo = new DSigKeyInfo()  					}  				}'  				ArtifactResolutionServices = {  					{ 1'  new ArtifactResolutionService() {  						Index = 1'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars1")'  						Location = new Uri("http://idp.example.com/arsloc1")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp1")  					} }'  					{ 2' new ArtifactResolutionService() {  						Index = 2'  						IsDefault = false'  						Binding = new Uri("http://idp.example.com/ars2")'  						Location = new Uri("http://idp.example.com/arsloc2")'  						ResponseLocation = new Uri("http://idp.example.com/arsresp2")  					} }  				}'  				SingleLogoutServices = {  					new SingleLogoutService() {  						Binding = new Uri("http://idp.example.com/slsbinding")'  						Location = new Uri("http://idp.example.com/slslocation")'  						ResponseLocation = new Uri("http://idp.example.com/slsresponselocation")  					}'  				}'  				ManageNameIDServices = {  					new ManageNameIDService() {  						Binding = new Uri("http://idp.example.com/mnibinding")'  						Location = new Uri("http://idp.example.com/mnilocation")'  						ResponseLocation = new Uri("http://idp.example.com/mniresponselocation")  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat() {  						Uri = new Uri("http://idp.example.com/nameidformat")  					}  				}'  				SingleSignOnServices = {  					new SingleSignOnService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				NameIDMappingServices = {  					new NameIDMappingService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AssertionIDRequestServices = {  					new AssertionIdRequestService() {  						Binding = new Uri("http://idp.example.com/ssobinding")'  						Location = new Uri("http://idp.example.com/ssolocation")'  						ResponseLocation = new Uri("http://idp.example.com/ssoresponselocation")  					}  				}'  				AttributeProfiles = {  					new AttributeProfile() {  						Uri = new Uri("http://idp.example.com/attributeprofile")  					}  				}'  				SupportedAttributes = {  					new Saml2Attribute("testAtt"' "attValue") {  						NameFormat = new Uri("http://idp.example.com/nameformat")'  						FriendlyName = "friendlyAtt"  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAssertionConsumerServiceTestData,The following statement contains a magic number: var obj = new AssertionConsumerService()  			{  				Index = 150'  				IsDefault = false'  				Binding = new Uri("http://idp.example.com/acs1")'  				Location = new Uri("http://idp.example.com/acsloc1")'  				ResponseLocation = new Uri("http://idp.example.com/acsresp1")  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddDSAKeyValueTestData,The following statement contains a magic number: var obj = new DsaKeyValue(  				new DSAParameters  				{  					P = Convert.FromBase64String("/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFw==")'  					Q = Convert.FromBase64String("li7dzDacuo67Jg7mtqEm2TRuOMU=")'  					G = Convert.FromBase64String("Z4Rxsnqc9E7pGknFFH2xqaryRPBaQ01khpMdLRQnG541Awtx/XPaF5Bpsy4pNWMOHCBiNU0NogpsQW5QvnlMpA==")'  					Y = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")'  					// (rubbish' but will do for a test)  					J = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")'  					Seed = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")'  					Counter = -1491741794  				}  			);
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddKeyValueTestData4,The following statement contains a magic number: var obj = new DsaKeyValue(  				new DSAParameters  				{  					P = Convert.FromBase64String("/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFw==")'  					Q = Convert.FromBase64String("li7dzDacuo67Jg7mtqEm2TRuOMU=")'  					G = Convert.FromBase64String("Z4Rxsnqc9E7pGknFFH2xqaryRPBaQ01khpMdLRQnG541Awtx/XPaF5Bpsy4pNWMOHCBiNU0NogpsQW5QvnlMpA==")'  					Y = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")'  					// (rubbish' but will do for a test)  					J = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")'  					Seed = Convert.FromBase64String("qV38IqrWJG0V/mZQvRVi1OHw9Zj84nDC4jO8P0axi1gb6d+475yhMjSc/BrIVC58W3ydbkK+Ri4OKbaRZlYeRA==")'  					Counter = -1491741794  				}  			);
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddXEncEncryptionMethodTestData,The following statement contains a magic number: var obj = new XEncEncryptionMethod  			{  				OAEPparams = Convert.FromBase64String("9lWu3Q==")'  				Algorithm = new Uri("http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p")'  				KeySize = 2048  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEncryptionMethodTestData,The following statement contains a magic number: var obj = new EncryptionMethod  			{  				OAEPparams = Convert.FromBase64String("9lWu3Q==")'  				Algorithm = new Uri("http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p")'  				KeySize = 4096  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntitiesDescriptorTestData,The following statement contains a magic number: var obj = new EntitiesDescriptor  			{  				Name = "https://your-federation.org/metadata/federation-name.xml"'  				ChildEntities = {  					new EntityDescriptor(new EntityId("https://idp.example.org/idp/shibboleth")) {  						RoleDescriptors = {  							new IdpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:mace:shibboleth:1.0")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Extensions = {  									doc.SelectSingleNode(  										"/md:EntitiesDescriptor/md:EntityDescriptor[1]/md:IDPSSODescriptor/md:Extensions/*[1]"'  										nsmgr).As<XmlElement>()  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat { Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier") }'  									new NameIDFormat { Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient") }'  								}'  								SingleSignOnServices = {  									new SingleSignOnService {  										Binding = new Uri("urn:mace:shibboleth:1.0:profiles:AuthnRequest")'  										Location = new Uri("https://idp.example.org/idp/profile/Shibboleth/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/POST/SSO")  									}'  									new SingleSignOnService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect")'  										Location = new Uri("https://idp.example.org/idp/profile/SAML2/Redirect/SSO")  									}  								}  							}'  							new AttributeAuthorityDescriptor() {  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")'  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								AttributeServices = {  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML1/SOAP/AttributeQuery")  									}'  									new AttributeService {  										Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:SOAP")'  										Location = new Uri("https://idp.example.org:8443/idp/profile/SAML2/SOAP/AttributeQuery")  									}  								}'  								NameIDFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Identities"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Identities"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://www.example.org/")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Contact"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}'  					new EntityDescriptor(new EntityId("https://sp.example.org/shibboleth-sp"))  					{  						RoleDescriptors = {  							new SpSsoDescriptor  							{  								ProtocolsSupported = {  									new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  									new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  								}'  								DiscoveryResponses = {  									{ 1'  										new DiscoveryResponse {  											Index = 1'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  										}  									}'  									{ 2'  										new DiscoveryResponse {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  										}  									}  								}'  								Keys = {  									new KeyDescriptor {  										KeyInfo = new DSigKeyInfo {  											Data = {  												new X509Data {  													Certificates = {  														new X509Certificate2(Convert.FromBase64String(certData))  													}  												}  											}  										}  									}  								}'  								NameIdentifierFormats = {  									new NameIDFormat {  										Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  									}'  									new NameIDFormat {  										Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  									}  								}'  								AssertionConsumerServices = {  									{ 1'  										new AssertionConsumerService {  											Index = 1'  											IsDefault = true'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  										}  									}' { 2'  										new AssertionConsumerService {  											Index = 2'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  										}  									}' { 3'  										new AssertionConsumerService {  											Index = 3'  											Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  										}  									}' { 4'  										new AssertionConsumerService {  											Index = 4'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  										}  									}' { 5'  										new AssertionConsumerService {  											Index = 5'  											Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  											Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  										}  									}  								}  							}  						}'  						Organization = new Organization {  							Names = {  								new LocalizedName("Your Service"' "en")  							}'  							DisplayNames = {  								new LocalizedName("Your Service"' "en")  							}'  							Urls = {  								new LocalizedUri(new Uri("http://sp.example.org")' "en")  							}  						}'  						Contacts = {  							new ContactPerson {  								Type = ContactType.Technical'  								GivenName = "Your"'  								Surname = "Admin"'  								EmailAddresses = { "admin@example.org" }  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddAffiliationDescriptorTestData,The following statement contains a magic number: var obj = new AffiliationDescriptor  			{  				CacheDuration = new XsdDuration(months: 3' days: 2' hours: 9' minutes: 12)'  				ValidUntil = new DateTime(2019' 02' 02' 15' 16' 17)'  				AffiliationOwnerId = new EntityId("mr owner")'  				Id = "yourGUIDhere"'  				AffiliateMembers = {  					new EntityId("http://idp.example.org")  				}'  				Extensions = {  					doc.SelectSingleNode("/md:AffiliationDescriptor/md:Extensions/*[1]"'  						nsmgr).As<XmlElement>()  				}'  				KeyDescriptors = {  					new KeyDescriptor() {  						KeyInfo = new DSigKeyInfo {  							KeyNames = { "string" }  						}'  						EncryptionMethods = {  							new EncryptionMethod {  								Algorithm = new Uri("http://www.example.com/")'  								KeySize = 1'  								OAEPparams = Convert.FromBase64String("GpM7")  							}  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddSpSsoDescriptorTestData,The following statement contains a magic number: var obj = new SpSsoDescriptor  			{  				AuthnRequestsSigned = true'  				WantAssertionsSigned = false'  				ProtocolsSupported = {  					new Uri("urn:oasis:names:tc:SAML:2.0:protocol")'  					new Uri("urn:oasis:names:tc:SAML:1.1:protocol")  				}'  				DiscoveryResponses = {  					{ 1'  						new DiscoveryResponse {  							Index = 1'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("http://sp.example.org/Shibboleth.sso/DS")'  						}  					}'  					{ 2'  						new DiscoveryResponse {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/DS")  						}  					}  				}'  				Keys = {  					new KeyDescriptor {  						KeyInfo = new DSigKeyInfo {  							Data = {  								new X509Data {  									Certificates = {  										new X509Certificate2(Convert.FromBase64String(certData))  									}  								}  							}  						}  					}  				}'  				NameIdentifierFormats = {  					new NameIDFormat {  						Uri = new Uri("urn:oasis:names:tc:SAML:2.0:nameid-format:transient")  					}'  					new NameIDFormat {  						Uri = new Uri("urn:mace:shibboleth:1.0:nameIdentifier")  					}  				}'  				AssertionConsumerServices = {  					{ 1'  						new AssertionConsumerService {  							Index = 1'  							IsDefault = true'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST")  						}  					}' { 2'  						new AssertionConsumerService {  							Index = 2'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/POST-SimpleSign")  						}  					}' { 3'  						new AssertionConsumerService {  							Index = 3'  							Binding = new Uri("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML2/Artifact")  						}  					}' { 4'  						new AssertionConsumerService {  							Index = 4'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:browser-post")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/POST")  						}  					}' { 5'  						new AssertionConsumerService {  							Index = 5'  							Binding = new Uri("urn:oasis:names:tc:SAML:1.0:profiles:artifact-01")'  							Location = new Uri("https://sp.example.org/Shibboleth.sso/SAML/Artifact")  						}  					}  				}  			};
Magic Number,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddIndexedEndpointData,The following statement contains a magic number: var obj = new IndexedEndpoint  			{  				Index = 4'  				IsDefault = true'  				Binding = new Uri("https://idp.example.com/binding")'  				Location = new Uri("https://idp.example.com/location")'  				ResponseLocation = new Uri("https://idp.example.com/responseLocation")  			};
Magic Number,Sustainsys.Saml2.Tests.Saml2P,Saml2AuthenticationRequestTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2AuthenticationRequestTests.cs,Saml2AuthenticationRequest_ToXElement_AddsAttributeConsumingServiceIndex,The following statement contains a magic number: var subject = new Saml2AuthenticationRequest()              {                  AttributeConsumingServiceIndex = 17              }.ToXElement();
Magic Number,Sustainsys.Saml2.Tests.Saml2P,Saml2AuthenticationRequestTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2AuthenticationRequestTests.cs,Saml2AuthenticationRequest_ToXElement_AddsScoping,The following statement contains a magic number: var subject = new Saml2AuthenticationRequest()              {                  AssertionConsumerServiceUrl = new Uri("http://destination.example.com")'                  Scoping = new Saml2Scoping()                  {                      ProxyCount = 5                  }                  .With(new Saml2IdpEntry(new EntityId(providerId))                  {                      Name = name'                      Location = new Uri(location)                  })                  .WithRequesterId(new EntityId(requesterId))              };
Magic Number,Sustainsys.Saml2.Tests.Saml2P,Saml2RequestBaseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2RequestBaseTests.cs,Saml2RequestBase_IssueInstant_IsNow,The following statement contains a magic number: parsed.Should().BeCloseTo(DateTime.UtcNow' 1200);
Magic Number,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_Read_BasicParams,The following statement contains a magic number: var expected = new              {                  Id = new Saml2Id(MethodBase.GetCurrentMethod().Name)'                  IssueInstant = new DateTime(2013' 01' 01' 0' 0' 0' DateTimeKind.Utc)'                  Status = Saml2StatusCode.Requester'                  StatusMessage = "Unable to encrypt assertion"'                  Issuer = new EntityId(null)'                  DestinationUrl = new Uri("http://destination.example.com")'                  MessageName = "SAMLResponse"'                  InResponseTo = new Saml2Id("InResponseToId")'                  RequestState = (StoredRequestState)null'                  SecondLevelStatus = (string)null'                  RelayState = (string)null'              };
Magic Number,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_GetClaims_CorrectEncryptedSingleAssertion_UsingMSIdentityModel,The following statement contains a magic number: assertion.Conditions = new Saml2Conditions { NotOnOrAfter = new DateTime(2100' 1' 1) };
Magic Number,Sustainsys.Saml2.Tests.Saml2P,Saml2ResponseTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Saml2P\Saml2ResponseTests.cs,Saml2Response_SessionNotOnOrAfter_ExtractedFromMessage,The following statement contains a magic number: subject.SessionNotOnOrAfter.Should().Be(new DateTime(2050' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_HandlesExceptionWhenUnbindResultIsStillNull,The following statement contains a magic number: artifact[3] = 5;
Magic Number,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_HandlesExceptionWhenUnbindResultIsStillNull,The following statement contains a magic number: artifact[3] = 5;
Magic Number,Sustainsys.Saml2.Tests.WebSso,AcsCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\AcsCommandTests.cs,AcsCommand_Run_ExtractsSessionNotOnOrAfter,The following statement contains a magic number: actual.SessionNotOnOrAfter.Should().Be(new DateTime(2200' 01' 01' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The following statement contains a magic number: DateTime.Parse(payloadXml.DocumentElement.Attributes["validUntil"].Value).ToUniversalTime()                  .Should().BeCloseTo(DateTime.UtcNow.AddDays(24)' 2000);
Magic Number,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CompleteMetadata,The following statement contains a magic number: DateTime.Parse(payloadXml.DocumentElement.Attributes["validUntil"].Value).ToUniversalTime()                  .Should().BeCloseTo(DateTime.UtcNow.AddDays(24)' 2000);
Magic Number,Sustainsys.Saml2.Tests.WebSso,MetadataCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\MetadataCommandTests.cs,MetadataCommand_Run_CallsNotifications,The following statement contains a magic number: options.Notifications.MetadataCreated = (md' urls) =>              {                  md.CacheDuration = new XsdDuration(seconds: 17);                  urls.ApplicationUrl.Host.Should().Be("localhost");              };
Magic Number,Sustainsys.Saml2.Tests.WebSso,Saml2BindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2BindingTests.cs,Saml2Binding_Get_ExplanatoryExceptionOnUnknownBinding,The following statement contains a magic number: Action a = () => Saml2Binding.Get((Saml2BindingType)1473);
Magic Number,Sustainsys.Saml2.Tests.WebSso,SignInCommandTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\SignInCommandTests.cs,SignInCommand_Run_ReturnsAuthnRequestForDefaultIdp,The following statement contains a magic number: queries.Should().HaveCount(2);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind,The following statement contains a magic number: result.Location.Query.Count(c => c == '=').Should().Be(2' "there are 2 params and = inside values should have been escaped");
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: artifact[1].Should().Be(4);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: artifact[2].Should().Be(0x12);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: artifact[3].Should().Be(0x34);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: artifact.Length.Should().Be(44);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: var sourceID = new byte[20];
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: Array.Copy(artifact' 4' sourceID' 0' 20);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: Array.Copy(artifact' 4' sourceID' 0' 20);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: artifact.Skip(24).Count(c => c == 0).Should().BeLessThan(10);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact,The following statement contains a magic number: artifact.Skip(24).Count(c => c == 0).Should().BeLessThan(10);
Magic Number,Sustainsys.Saml2.Tests.WebSSO,Saml2ArtifactBindingTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\WebSSO\Saml2ArtifactBindingTests.cs,Saml2ArtifactBinding_Bind_CreateArtifact_NullcheckIssuer,The following statement contains a magic number: Action a = () => Saml2ArtifactBinding.CreateArtifact(null' 17);
Duplicate Code,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,AddEntityDescriptorTestData,The method contains a code clone-set at the following line numbers (starting from the method definition): ((3' 39)' (319' 355))
Missing Default,Sustainsys.Saml2.Tests.Metadata,MetadataSerializerTests,D:\research\architectureSmells\repos\KentorIT_authservices\Tests\Tests.Shared\Metadata\MetadataSerializerTests.cs,TrimXml,The following switch statement is missing a default case: switch (reader.NodeType)  					{  						case XmlNodeType.Element:  							writer.WriteStartElement(reader.Prefix' reader.LocalName' reader.NamespaceURI);  							writer.WriteAttributes(reader' true);  							if (reader.IsEmptyElement)  							{  								writer.WriteEndElement();  							}  							break;  						case XmlNodeType.Text:  							writer.WriteString(reader.Value.Trim());  							break;  						case XmlNodeType.Comment:  						case XmlNodeType.SignificantWhitespace:  						case XmlNodeType.Whitespace:  							// yum  							break;  						case XmlNodeType.CDATA:  							writer.WriteCData(reader.Value);  							break;  						case XmlNodeType.EntityReference:  							writer.WriteEntityRef(reader.Value);  							break;  						case XmlNodeType.XmlDeclaration:  						case XmlNodeType.ProcessingInstruction:  							writer.WriteProcessingInstruction(reader.Name' reader.Value);  							break;  						case XmlNodeType.DocumentType:  							writer.WriteDocType(reader.Name' reader.GetAttribute("PUBLIC")'  								reader.GetAttribute("SYSTEM")' reader.Value);  							break;  						case XmlNodeType.EndElement:  							writer.WriteEndElement();  							break;  					}
