Implementation smell,Namespace,Class,File,Method,Description
Long Method,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The method has 161 lines of code.
Long Method,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The method has 108 lines of code.
Complex Method,ResultsPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginMain.cs,HandleEvent,Cyclomatic complexity of the method is 34
Complex Method,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,Cyclomatic complexity of the method is 28
Complex Method,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,Cyclomatic complexity of the method is 8
Complex Method,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,Cyclomatic complexity of the method is 12
Long Statement,ResultsPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginMain.cs,AddEventHandlers,The length of the statement  "	EventType eventMask = EventType.ProcessEnd | EventType.ProcessStart | EventType.FileOpen | EventType.Command | EventType.Trace | EventType.Keys | EventType.Shortcut | EventType.ApplySettings; " is 191.
Long Statement,ResultsPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginMain.cs,CreatePluginPanel,The length of the statement  "	this.pluginPanel = PluginBase.MainForm.CreateDockablePanel (this.pluginUI' this.pluginGuid' this.pluginImage' DockState.DockBottomAutoHide); " is 140.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	menu.Items.Add (new ToolStripMenuItem (TextHelper.GetString ("Label.ClearEntries")' null' new EventHandler (this.ClearOutputClick))); " is 133.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	menu.Items.Add (new ToolStripMenuItem (TextHelper.GetString ("Label.CopyEntry")' null' new EventHandler (this.CopyTextClick))); " is 127.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	this.ignoreEntryContextMenuItem = new ToolStripMenuItem (TextHelper.GetString ("Label.IgnoreEntry")' null' new EventHandler (this.IgnoreEntryClick)); " is 149.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	this.clearIgnoredEntriesContextMenuItem = new ToolStripMenuItem (TextHelper.GetString ("Label.ClearIgnoredEntries")' null' new EventHandler (this.ClearIgnoredEntries)); " is 168.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	this.nextEntry = new ToolStripMenuItem (TextHelper.GetString ("Label.NextEntry")' null' new EventHandler (this.NextEntry)); " is 123.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	this.previousEntry = new ToolStripMenuItem (TextHelper.GetString ("Label.PreviousEntry")' null' new EventHandler (this.PreviousEntry)); " is 135.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The length of the statement  "			if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output " is 151.
Long Statement,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The length of the statement  "			Int32 indic = (item.ImageIndex == 0) ? (Int32)ScintillaNet.Enums.IndicatorStyle.RoundBox : (Int32)ScintillaNet.Enums.IndicatorStyle.Squiggle; " is 141.
Complex Conditional,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The conditional expression  "fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe")"  is complex.
Complex Conditional,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The conditional expression  "((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  && (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))"  is complex.
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,PluginUI,The following statement contains a magic number: this.autoShow.Interval = 300;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.clearFilterButton.Size = new System.Drawing.Size (23' 26);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.clearFilterButton.Size = new System.Drawing.Size (23' 26);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entriesView.Location = new System.Drawing.Point (0' 28);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entriesView.Size = new System.Drawing.Size (710' 218);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entriesView.Size = new System.Drawing.Size (710' 218);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entryType.Width = 23;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entryLine.Width = 55;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entryDesc.Width = 350;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entryFile.Width = 150;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.entryPath.Width = 400;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripFilters.ImageScalingSize = ScaleHelper.Scale (new Size (16' 16));  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripFilters.ImageScalingSize = ScaleHelper.Scale (new Size (16' 16));  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripFilters.Padding = new System.Windows.Forms.Padding (1' 1' 2' 2);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripFilters.Padding = new System.Windows.Forms.Padding (1' 1' 2' 2);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripFilters.Size = new System.Drawing.Size (710' 25);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripFilters.Size = new System.Drawing.Size (710' 25);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButtonError.Size = new System.Drawing.Size (36' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButtonError.Size = new System.Drawing.Size (36' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButtonWarning.Size = new System.Drawing.Size (56' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButtonWarning.Size = new System.Drawing.Size (56' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButtonInfo.Size = new System.Drawing.Size (74' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButtonInfo.Size = new System.Drawing.Size (74' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBoxFilter.Size = new System.Drawing.Size (100' 25);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBoxFilter.Size = new System.Drawing.Size (100' 25);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabelFilter.Margin = new System.Windows.Forms.Padding (2' 1' 0' 1);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabelFilter.Size = new System.Drawing.Size (36' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabelFilter.Size = new System.Drawing.Size (36' 22);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (712' 246);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (712' 246);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeGraphics,The following statement contains a magic number: this.toolStripButtonWarning.ImageIndex = 2;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,InitializeTexts,The following statement contains a magic number: this.entryPath.Width = -2;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,EntriesViewDoubleClick,The following statement contains a magic number: if (File.Exists (file)) {  	PluginBase.MainForm.OpenEditableDocument (file' false);  	ScintillaControl sci = PluginBase.MainForm.CurrentDocument.SciControl;  	if (!PluginBase.MainForm.CurrentDocument.IsEditable)  		return;  	Int32 line = Convert.ToInt32 (item.SubItems [1].Text) - 1;  	String description = item.SubItems [2].Text;  	Match mcaret = this.errorCharacters.Match (description);  	Match mcaret2 = this.errorCharacter.Match (description);  	Match mcaret3 = this.errorCharacters2.Match (description);  	Match mcaret4 = this.lookupRange.Match (description);  	if (mcaret.Success) {  		Int32 start = Convert.ToInt32 (mcaret.Groups ["start"].Value);  		Int32 end = Convert.ToInt32 (mcaret.Groups ["end"].Value);  		// An error (!=0) with this pattern is most likely a MTASC error (not multibyte)  		if (item.ImageIndex == 0) {  			// start & end columns are multibyte lengths  			start = this.MBSafeColumn (sci' line' start);  			end = this.MBSafeColumn (sci' line' end);  		}  		Int32 startPosition = sci.PositionFromLine (line) + start;  		Int32 endPosition = sci.PositionFromLine (line) + end;  		this.SetSelAndFocus (sci' line' startPosition' endPosition);  	}  	else if (mcaret2.Success) {  		Int32 start = Convert.ToInt32 (mcaret2.Groups ["start"].Value);  		// column is a multibyte length  		start = this.MBSafeColumn (sci' line' start);  		Int32 position = sci.PositionFromLine (line) + start;  		this.SetSelAndFocus (sci' line' position' position);  	}  	else if (mcaret3.Success) {  		Int32 start = Convert.ToInt32 (mcaret3.Groups ["start"].Value);  		// column is a multibyte length  		start = this.MBSafeColumn (sci' line' start);  		Int32 position = sci.PositionFromLine (line) + start;  		this.SetSelAndFocus (sci' line' position' position);  	}  	else if (mcaret4.Success) {  		// expected: both multibyte lengths  		Int32 start = Convert.ToInt32 (mcaret4.Groups ["start"].Value);  		Int32 end = Convert.ToInt32 (mcaret4.Groups ["end"].Value);  		this.MBSafeSetSelAndFocus (sci' line' start' end);  	}  	else {  		Int32 position = sci.PositionFromLine (line);  		this.SetSelAndFocus (sci' line' position' position);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: for (Int32 i = this.logCount; i < count; i++) {  	entry = TraceManager.TraceLog [i];  	if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  		fileTest = entry.Message.TrimStart ();  		inExec = false;  		if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  		 {  			inExec = true;  			fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  		}  		if (fileTest.StartsWith ("~/"))  			// relative to project root (Haxe)  			fileTest = fileTest.Substring (2);  		match = fileEntry.Match (fileTest);  		if (!match.Success)  			match = fileEntry2.Match (fileTest);  		if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  			string filename = match.Groups ["filename"].Value;  			if (filename.Length < 3 || badCharacters.IsMatch (filename))  				continue;  			if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  			 {  				filename = PathHelper.ResolvePath (filename' projectDir);  				if (filename == null)  					continue;  			}  			else if (!File.Exists (filename))  				continue;  			FileInfo fileInfo = new FileInfo (filename);  			if (fileInfo != null) {  				description = match.Groups ["description"].Value.Trim ();  				state = (inExec) ? -3 : entry.State;  				// automatic state from message  				// ie. "2:message" -> state = 2  				if (state == 1 && description.Length > 2) {  					if (description [1] == ':' && Char.IsDigit (description [0])) {  						if (int.TryParse (description [0].ToString ()' out state)) {  							description = description.Substring (2);  						}  					}  				}  				if (state > 2)  					icon = 1;  				else if (state == 2)  					icon = 2;  				else if (state == -3)  					icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  				else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  					icon = 1;  				else  					icon = 0;  				ListViewItem item = new ListViewItem (""' icon);  				item.Tag = match;  				// Save for later...  				String matchLine = match.Groups ["line"].Value;  				if (matchLine.IndexOf (''') > 0) {  					Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  					if (!split.Success)  						continue;  					// invalid line  					matchLine = split.Groups [1].Value;  					description = "col: " + split.Groups [2].Value + " " + description;  				}  				item.SubItems.Add (matchLine);  				item.SubItems.Add (description);  				item.SubItems.Add (fileInfo.Name);  				item.SubItems.Add (fileInfo.Directory.ToString ());  				if (newResult < 0)  					newResult = this.entriesView.Items.Count;  				if (icon == 0)  					this.messageCount++;  				else if (icon == 1)  					this.errorCount++;  				else if (icon == 2)  					this.warningCount++;  				allListViewItems.Add (item);  			}  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (entry.Message != null && entry.Message.Length > 7 && entry.Message.IndexOf (':') > 0) {  	fileTest = entry.Message.TrimStart ();  	inExec = false;  	if (fileTest.StartsWith ("[mxmlc]") || fileTest.StartsWith ("[compc]") || fileTest.StartsWith ("[exec]") || fileTest.StartsWith ("[haxe"))// ANT output  	 {  		inExec = true;  		fileTest = fileTest.Substring (fileTest.IndexOf (']') + 1).TrimStart ();  	}  	if (fileTest.StartsWith ("~/"))  		// relative to project root (Haxe)  		fileTest = fileTest.Substring (2);  	match = fileEntry.Match (fileTest);  	if (!match.Success)  		match = fileEntry2.Match (fileTest);  	if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  		string filename = match.Groups ["filename"].Value;  		if (filename.Length < 3 || badCharacters.IsMatch (filename))  			continue;  		if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  		 {  			filename = PathHelper.ResolvePath (filename' projectDir);  			if (filename == null)  				continue;  		}  		else if (!File.Exists (filename))  			continue;  		FileInfo fileInfo = new FileInfo (filename);  		if (fileInfo != null) {  			description = match.Groups ["description"].Value.Trim ();  			state = (inExec) ? -3 : entry.State;  			// automatic state from message  			// ie. "2:message" -> state = 2  			if (state == 1 && description.Length > 2) {  				if (description [1] == ':' && Char.IsDigit (description [0])) {  					if (int.TryParse (description [0].ToString ()' out state)) {  						description = description.Substring (2);  					}  				}  			}  			if (state > 2)  				icon = 1;  			else if (state == 2)  				icon = 2;  			else if (state == -3)  				icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  			else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  				icon = 1;  			else  				icon = 0;  			ListViewItem item = new ListViewItem (""' icon);  			item.Tag = match;  			// Save for later...  			String matchLine = match.Groups ["line"].Value;  			if (matchLine.IndexOf (''') > 0) {  				Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  				if (!split.Success)  					continue;  				// invalid line  				matchLine = split.Groups [1].Value;  				description = "col: " + split.Groups [2].Value + " " + description;  			}  			item.SubItems.Add (matchLine);  			item.SubItems.Add (description);  			item.SubItems.Add (fileInfo.Name);  			item.SubItems.Add (fileInfo.Directory.ToString ());  			if (newResult < 0)  				newResult = this.entriesView.Items.Count;  			if (icon == 0)  				this.messageCount++;  			else if (icon == 1)  				this.errorCount++;  			else if (icon == 2)  				this.warningCount++;  			allListViewItems.Add (item);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileTest.StartsWith ("~/"))  	// relative to project root (Haxe)  	fileTest = fileTest.Substring (2);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: fileTest = fileTest.Substring (2);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (match.Success && !this.ignoredEntries.ContainsKey (match.Value)) {  	string filename = match.Groups ["filename"].Value;  	if (filename.Length < 3 || badCharacters.IsMatch (filename))  		continue;  	if (project != null && filename [0] != '/' && filename [1] != ':')// relative to project root  	 {  		filename = PathHelper.ResolvePath (filename' projectDir);  		if (filename == null)  			continue;  	}  	else if (!File.Exists (filename))  		continue;  	FileInfo fileInfo = new FileInfo (filename);  	if (fileInfo != null) {  		description = match.Groups ["description"].Value.Trim ();  		state = (inExec) ? -3 : entry.State;  		// automatic state from message  		// ie. "2:message" -> state = 2  		if (state == 1 && description.Length > 2) {  			if (description [1] == ':' && Char.IsDigit (description [0])) {  				if (int.TryParse (description [0].ToString ()' out state)) {  					description = description.Substring (2);  				}  			}  		}  		if (state > 2)  			icon = 1;  		else if (state == 2)  			icon = 2;  		else if (state == -3)  			icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  		else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  			icon = 1;  		else  			icon = 0;  		ListViewItem item = new ListViewItem (""' icon);  		item.Tag = match;  		// Save for later...  		String matchLine = match.Groups ["line"].Value;  		if (matchLine.IndexOf (''') > 0) {  			Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  			if (!split.Success)  				continue;  			// invalid line  			matchLine = split.Groups [1].Value;  			description = "col: " + split.Groups [2].Value + " " + description;  		}  		item.SubItems.Add (matchLine);  		item.SubItems.Add (description);  		item.SubItems.Add (fileInfo.Name);  		item.SubItems.Add (fileInfo.Directory.ToString ());  		if (newResult < 0)  			newResult = this.entriesView.Items.Count;  		if (icon == 0)  			this.messageCount++;  		else if (icon == 1)  			this.errorCount++;  		else if (icon == 2)  			this.warningCount++;  		allListViewItems.Add (item);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (filename.Length < 3 || badCharacters.IsMatch (filename))  	continue;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (fileInfo != null) {  	description = match.Groups ["description"].Value.Trim ();  	state = (inExec) ? -3 : entry.State;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && description.Length > 2) {  		if (description [1] == ':' && Char.IsDigit (description [0])) {  			if (int.TryParse (description [0].ToString ()' out state)) {  				description = description.Substring (2);  			}  		}  	}  	if (state > 2)  		icon = 1;  	else if (state == 2)  		icon = 2;  	else if (state == -3)  		icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  	else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  		icon = 1;  	else  		icon = 0;  	ListViewItem item = new ListViewItem (""' icon);  	item.Tag = match;  	// Save for later...  	String matchLine = match.Groups ["line"].Value;  	if (matchLine.IndexOf (''') > 0) {  		Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  		if (!split.Success)  			continue;  		// invalid line  		matchLine = split.Groups [1].Value;  		description = "col: " + split.Groups [2].Value + " " + description;  	}  	item.SubItems.Add (matchLine);  	item.SubItems.Add (description);  	item.SubItems.Add (fileInfo.Name);  	item.SubItems.Add (fileInfo.Directory.ToString ());  	if (newResult < 0)  		newResult = this.entriesView.Items.Count;  	if (icon == 0)  		this.messageCount++;  	else if (icon == 1)  		this.errorCount++;  	else if (icon == 2)  		this.warningCount++;  	allListViewItems.Add (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: state = (inExec) ? -3 : entry.State;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == 1 && description.Length > 2) {  	if (description [1] == ':' && Char.IsDigit (description [0])) {  		if (int.TryParse (description [0].ToString ()' out state)) {  			description = description.Substring (2);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == 1 && description.Length > 2) {  	if (description [1] == ':' && Char.IsDigit (description [0])) {  		if (int.TryParse (description [0].ToString ()' out state)) {  			description = description.Substring (2);  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (description [1] == ':' && Char.IsDigit (description [0])) {  	if (int.TryParse (description [0].ToString ()' out state)) {  		description = description.Substring (2);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (int.TryParse (description [0].ToString ()' out state)) {  	description = description.Substring (2);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: description = description.Substring (2);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state > 2)  	icon = 1;  else if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state > 2)  	icon = 1;  else if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state > 2)  	icon = 1;  else if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state > 2)  	icon = 1;  else if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state > 2)  	icon = 1;  else if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == 2)  	icon = 2;  else if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: icon = 2;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (state == -3)  	icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  else if (description.StartsWith ("error"' StringComparison.OrdinalIgnoreCase))  	icon = 1;  else  	icon = 0;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: icon = (description.IndexOf ("Warning") >= 0) ? 2 : 1;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (matchLine.IndexOf (''') > 0) {  	Match split = Regex.Match (matchLine' "([0-9]+)'\\s*([0-9]+)");  	if (!split.Success)  		continue;  	// invalid line  	matchLine = split.Groups [1].Value;  	description = "col: " + split.Groups [2].Value + " " + description;  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: description = "col: " + split.Groups [2].Value + " " + description;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (icon == 0)  	this.messageCount++;  else if (icon == 1)  	this.errorCount++;  else if (icon == 2)  	this.warningCount++;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (icon == 1)  	this.errorCount++;  else if (icon == 2)  	this.warningCount++;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (icon == 2)  	this.warningCount++;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: if (newResult >= 0) {  	this.UpdateButtons ();  	this.FilterResults (true);  	for (Int32 i = newResult; i < this.entriesView.Items.Count; i++) {  		this.AddSquiggle (this.entriesView.Items [i]);  	}  	this.entryPath.Width = -2;  	// Extend last column  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddLogEntries,The following statement contains a magic number: this.entryPath.Width = -2;  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: foreach (ListViewItem it in this.allListViewItems) {  	// Is checked?  	Int32 img = it.ImageIndex;  	if (((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  	&& (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))) {  		if (PluginBase.Settings.UseListViewGrouping) {  			String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  			this.AddToGroup (it' path);  		}  		this.entriesView.Items.Add (it);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: foreach (ListViewItem it in this.allListViewItems) {  	// Is checked?  	Int32 img = it.ImageIndex;  	if (((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  	&& (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))) {  		if (PluginBase.Settings.UseListViewGrouping) {  			String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  			this.AddToGroup (it' path);  		}  		this.entriesView.Items.Add (it);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: foreach (ListViewItem it in this.allListViewItems) {  	// Is checked?  	Int32 img = it.ImageIndex;  	if (((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  	&& (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))) {  		if (PluginBase.Settings.UseListViewGrouping) {  			String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  			this.AddToGroup (it' path);  		}  		this.entriesView.Items.Add (it);  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: if (((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  && (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))) {  	if (PluginBase.Settings.UseListViewGrouping) {  		String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  		this.AddToGroup (it' path);  	}  	this.entriesView.Items.Add (it);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: if (((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  && (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))) {  	if (PluginBase.Settings.UseListViewGrouping) {  		String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  		this.AddToGroup (it' path);  	}  	this.entriesView.Items.Add (it);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: if (((matchInfo && img == 0) || (matchWarnings && img == 2) || (matchErrors && img == 1)) // Contains filter?  && (filterText == "" || ((Match)it.Tag).Value.ToLower ().Contains (filterText))) {  	if (PluginBase.Settings.UseListViewGrouping) {  		String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  		this.AddToGroup (it' path);  	}  	this.entriesView.Items.Add (it);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: if (PluginBase.Settings.UseListViewGrouping) {  	String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  	this.AddToGroup (it' path);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,FilterResults,The following statement contains a magic number: if (PluginBase.Settings.UseListViewGrouping) {  	String path = Path.Combine (it.SubItems [4].Text' it.SubItems [3].Text);  	this.AddToGroup (it' path);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggles,The following statement contains a magic number: if (this.entriesView.Items.Count > 0)  	foreach (ListViewItem item in this.entriesView.Items) {  		fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  		if (fname == filename)  			AddSquiggle (item);  	}  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggles,The following statement contains a magic number: if (this.entriesView.Items.Count > 0)  	foreach (ListViewItem item in this.entriesView.Items) {  		fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  		if (fname == filename)  			AddSquiggle (item);  	}  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggles,The following statement contains a magic number: foreach (ListViewItem item in this.entriesView.Items) {  	fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  	if (fname == filename)  		AddSquiggle (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggles,The following statement contains a magic number: foreach (ListViewItem item in this.entriesView.Items) {  	fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  	if (fname == filename)  		AddSquiggle (item);  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggles,The following statement contains a magic number: fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggles,The following statement contains a magic number: fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The following statement contains a magic number: if (match.Success) {  	// An error with this pattern is most likely a MTASC error (not multibyte)  	if (item.ImageIndex != 0)  		fixIndexes = false;  }  else  	match = errorCharacter.Match (item.SubItems [2].Text);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The following statement contains a magic number: match = errorCharacter.Match (item.SubItems [2].Text);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The following statement contains a magic number: if (!match.Success)  	match = errorCharacters2.Match (item.SubItems [2].Text);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The following statement contains a magic number: match = errorCharacters2.Match (item.SubItems [2].Text);  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The following statement contains a magic number: if (match.Success) {  	String fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\').Trim ();  	Int32 line = Convert.ToInt32 (item.SubItems [1].Text) - 1;  	ITabbedDocument[] documents = PluginBase.MainForm.Documents;  	foreach (ITabbedDocument document in documents) {  		if (!document.IsEditable)  			continue;  		ScintillaControl sci = document.SciControl;  		Language language = PluginBase.MainForm.SciConfig.GetLanguage (sci.ConfigurationLanguage);  		Int32 indic = (item.ImageIndex == 0) ? (Int32)ScintillaNet.Enums.IndicatorStyle.RoundBox : (Int32)ScintillaNet.Enums.IndicatorStyle.Squiggle;  		Int32 fore = (item.ImageIndex == 0) ? language.editorstyle.HighlightBackColor : 0x000000ff;  		if (fname == document.FileName) {  			Int32 end;  			Int32 start = Convert.ToInt32 (match.Groups ["start"].Value);  			// start column is (probably) a multibyte length  			if (fixIndexes)  				start = this.MBSafeColumn (sci' line' start);  			if (match.Groups ["end"] != null && match.Groups ["end"].Success) {  				end = Convert.ToInt32 (match.Groups ["end"].Value);  				// end column is (probably) a multibyte length  				if (fixIndexes)  					end = this.MBSafeColumn (sci' line' end);  			}  			else {  				start = Math.Max (1' Math.Min (sci.LineLength (line) - 1' start));  				end = start--;  			}  			if ((start >= 0) && (end > start) && (end < sci.TextLength)) {  				Int32 position = sci.PositionFromLine (line) + start;  				Int32 es = sci.EndStyled;  				Int32 mask = 1 << sci.StyleBits;  				// Define indics in both controls...  				document.SplitSci1.SetIndicStyle (0' indic);  				document.SplitSci1.SetIndicFore (0' fore);  				document.SplitSci2.SetIndicStyle (0' indic);  				document.SplitSci2.SetIndicFore (0' fore);  				sci.StartStyling (position' mask);  				sci.SetStyling (end - start' mask);  				sci.StartStyling (es' mask - 1);  			}  			break;  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,AddSquiggle,The following statement contains a magic number: if (match.Success) {  	String fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\').Trim ();  	Int32 line = Convert.ToInt32 (item.SubItems [1].Text) - 1;  	ITabbedDocument[] documents = PluginBase.MainForm.Documents;  	foreach (ITabbedDocument document in documents) {  		if (!document.IsEditable)  			continue;  		ScintillaControl sci = document.SciControl;  		Language language = PluginBase.MainForm.SciConfig.GetLanguage (sci.ConfigurationLanguage);  		Int32 indic = (item.ImageIndex == 0) ? (Int32)ScintillaNet.Enums.IndicatorStyle.RoundBox : (Int32)ScintillaNet.Enums.IndicatorStyle.Squiggle;  		Int32 fore = (item.ImageIndex == 0) ? language.editorstyle.HighlightBackColor : 0x000000ff;  		if (fname == document.FileName) {  			Int32 end;  			Int32 start = Convert.ToInt32 (match.Groups ["start"].Value);  			// start column is (probably) a multibyte length  			if (fixIndexes)  				start = this.MBSafeColumn (sci' line' start);  			if (match.Groups ["end"] != null && match.Groups ["end"].Success) {  				end = Convert.ToInt32 (match.Groups ["end"].Value);  				// end column is (probably) a multibyte length  				if (fixIndexes)  					end = this.MBSafeColumn (sci' line' end);  			}  			else {  				start = Math.Max (1' Math.Min (sci.LineLength (line) - 1' start));  				end = start--;  			}  			if ((start >= 0) && (end > start) && (end < sci.TextLength)) {  				Int32 position = sci.PositionFromLine (line) + start;  				Int32 es = sci.EndStyled;  				Int32 mask = 1 << sci.StyleBits;  				// Define indics in both controls...  				document.SplitSci1.SetIndicStyle (0' indic);  				document.SplitSci1.SetIndicFore (0' fore);  				document.SplitSci2.SetIndicStyle (0' indic);  				document.SplitSci2.SetIndicFore (0' fore);  				sci.StartStyling (position' mask);  				sci.SetStyling (end - start' mask);  				sci.StartStyling (es' mask - 1);  			}  			break;  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,ClearSquiggles,The following statement contains a magic number: foreach (ITabbedDocument document in documents) {  	foreach (ListViewItem item in this.entriesView.Items) {  		sci = document.SciControl;  		fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  		if (fname == document.FileName && !cleared.Contains (fname)) {  			cleared.Add (fname);  			Int32 es = sci.EndStyled;  			Int32 mask = (1 << sci.StyleBits);  			sci.StartStyling (0' mask);  			sci.SetStyling (sci.TextLength' 0);  			sci.StartStyling (es' mask - 1);  			break;  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,ClearSquiggles,The following statement contains a magic number: foreach (ITabbedDocument document in documents) {  	foreach (ListViewItem item in this.entriesView.Items) {  		sci = document.SciControl;  		fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  		if (fname == document.FileName && !cleared.Contains (fname)) {  			cleared.Add (fname);  			Int32 es = sci.EndStyled;  			Int32 mask = (1 << sci.StyleBits);  			sci.StartStyling (0' mask);  			sci.SetStyling (sci.TextLength' 0);  			sci.StartStyling (es' mask - 1);  			break;  		}  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,ClearSquiggles,The following statement contains a magic number: foreach (ListViewItem item in this.entriesView.Items) {  	sci = document.SciControl;  	fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  	if (fname == document.FileName && !cleared.Contains (fname)) {  		cleared.Add (fname);  		Int32 es = sci.EndStyled;  		Int32 mask = (1 << sci.StyleBits);  		sci.StartStyling (0' mask);  		sci.SetStyling (sci.TextLength' 0);  		sci.StartStyling (es' mask - 1);  		break;  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,ClearSquiggles,The following statement contains a magic number: foreach (ListViewItem item in this.entriesView.Items) {  	sci = document.SciControl;  	fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  	if (fname == document.FileName && !cleared.Contains (fname)) {  		cleared.Add (fname);  		Int32 es = sci.EndStyled;  		Int32 mask = (1 << sci.StyleBits);  		sci.StartStyling (0' mask);  		sci.SetStyling (sci.TextLength' 0);  		sci.StartStyling (es' mask - 1);  		break;  	}  }  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,ClearSquiggles,The following statement contains a magic number: fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  
Magic Number,ResultsPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginUI.cs,ClearSquiggles,The following statement contains a magic number: fname = (item.SubItems [4].Text + "\\" + item.SubItems [3].Text).Replace ('/'' '\\');  
Missing Default,ResultsPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\ResultsPanel\PluginMain.cs,HandleEvent,The following switch statement is missing a default case: switch (e.Type) {  case EventType.Command:  	DataEvent evnt = (DataEvent)e;  	if (evnt.Action == "ResultsPanel.ClearResults") {  		e.Handled = true;  		this.pluginUI.ClearOutput ();  	}  	else if (evnt.Action == "ResultsPanel.ShowResults") {  		e.Handled = true;  		this.pluginUI.AddLogEntries ();  		this.pluginUI.DisplayOutput ();  	}  	break;  case EventType.ApplySettings:  	this.pluginUI.ApplySettings ();  	break;  case EventType.ProcessStart:  	this.pluginUI.ClearOutput ();  	break;  case EventType.ProcessEnd:  	this.pluginUI.DisplayOutput ();  	break;  case EventType.Trace:  	this.pluginUI.AddLogEntries ();  	break;  case EventType.FileOpen:  	TextEvent fileOpen = (TextEvent)e;  	this.pluginUI.AddSquiggles (fileOpen.Value);  	break;  case EventType.Keys:  	KeyEvent ke = (KeyEvent)e;  	if (ke.Value == this.NextError) {  		ke.Handled = true;  		this.pluginUI.NextEntry (null' null);  	}  	else if (ke.Value == this.PrevError) {  		ke.Handled = true;  		this.pluginUI.PreviousEntry (null' null);  	}  	break;  case EventType.Shortcut:  	DataEvent de = (DataEvent)e;  	if (de.Action == "ResultsPanel.ShowNextResult") {  		this.NextError = (Keys)de.Data;  	}  	else if (de.Action == "ResultsPanel.ShowPrevResult") {  		this.PrevError = (Keys)de.Data;  	}  	break;  }  
