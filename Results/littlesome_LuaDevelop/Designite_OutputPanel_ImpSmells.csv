Implementation smell,Namespace,Class,File,Method,Description
Long Method,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The method has 101 lines of code.
Long Method,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The method has 106 lines of code.
Complex Method,OutputPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginMain.cs,HandleEvent,Cyclomatic complexity of the method is 19
Complex Method,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,Cyclomatic complexity of the method is 36
Complex Method,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,FindNextMatch,Cyclomatic complexity of the method is 12
Long Statement,OutputPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginMain.cs,AddEventHandlers,The length of the statement  "	EventType eventMask = EventType.ProcessStart | EventType.ProcessEnd | EventType.Trace | EventType.ApplySettings | EventType.Keys; " is 129.
Long Statement,OutputPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginMain.cs,CreatePluginPanel,The length of the statement  "	this.pluginPanel = PluginBase.MainForm.CreateDockablePanel (this.pluginUI' this.pluginGuid' this.pluginImage' DockState.DockBottom); " is 132.
Long Statement,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(PluginUI)); " is 129.
Long Statement,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	menu.Items.Add (new ToolStripMenuItem (TextHelper.GetString ("Label.ClearOutput")' null' new EventHandler (this.ClearOutput))); " is 127.
Long Statement,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeContextMenu,The length of the statement  "	menu.Items.Add (new ToolStripMenuItem (TextHelper.GetString ("Label.CopyOutput")' null' new EventHandler (this.CopyOutput))); " is 125.
Long Statement,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,toggleButton_Click,The length of the statement  "	this.toggleButton.ToolTipText = (this.scrolling ? TextHelper.GetString ("ToolTip.StopScrolling") : TextHelper.GetString ("ToolTip.StartScrolling")); " is 148.
Empty Catch Block,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,ScrollTimerElapsed,The method has an empty catch block.
Empty Catch Block,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,FindNextMatch,The method has an empty catch block.
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.scrollTimer.Interval = 50;  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.textLog.Location = new System.Drawing.Point (1' 26);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.textLog.Size = new System.Drawing.Size (278' 326);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.textLog.Size = new System.Drawing.Size (278' 326);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.ImageScalingSize = ScaleHelper.Scale (new Size (16' 16));  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.ImageScalingSize = ScaleHelper.Scale (new Size (16' 16));  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Padding = new System.Windows.Forms.Padding (1' 1' 2' 2);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Padding = new System.Windows.Forms.Padding (1' 1' 2' 2);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Size = new System.Drawing.Size (278' 26);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip.Size = new System.Drawing.Size (278' 26);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toggleButton.Size = new System.Drawing.Size (23' 20);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toggleButton.Size = new System.Drawing.Size (23' 20);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (6' 23);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (6' 23);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.findTextBox.Size = new System.Drawing.Size (190' 23);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.findTextBox.Size = new System.Drawing.Size (190' 23);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.clearButton.Size = new System.Drawing.Size (23' 21);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.clearButton.Size = new System.Drawing.Size (23' 21);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (280' 352);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (280' 352);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeTimers,The following statement contains a magic number: this.autoShow.Interval = 300;  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,InitializeTimers,The following statement contains a magic number: this.typingTimer.Interval = 250;  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: if (!this.scrolling) {  	this.toggleButton.Image = this.imageList.Images [2];  	return;  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: this.toggleButton.Image = this.imageList.Images [2];  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: for (Int32 i = this.logCount; i < newCount; i++) {  	entry = log [i];  	state = entry.State;  	if (entry.Message == null)  		message = "";  	else  		message = entry.Message;  	// automatic state from message  	// ie. "2:message" -> state = 2  	if (state == 1 && message.Length > 2) {  		if (message [1] == ':' && Char.IsDigit (message [0])) {  			if (int.TryParse (message [0].ToString ()' out state)) {  				message = message.Substring (2);  			}  		}  	}  	switch (state) {  	case 0:  		// Info  		newColor = Color.Gray;  		break;  	case 1:  		// Debug  		newColor = Color.Black;  		break;  	case 2:  		// Warning  		newColor = Color.Orange;  		break;  	case 3:  		// Error  		newColor = Color.Red;  		break;  	case 4:  		// Fatal  		newColor = Color.Magenta;  		break;  	case -1:  		// ProcessStart  		newColor = Color.Blue;  		break;  	case -2:  		// ProcessEnd  		newColor = Color.Blue;  		break;  	case -3:  		// ProcessError  		newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  		break;  	}  	if (newColor != currentColor) {  		if (newText.Length > 0) {  			this.textLog.Select (this.textLog.TextLength' 0);  			this.textLog.SelectionColor = currentColor;  			this.textLog.AppendText (newText);  			newText = "";  		}  		currentColor = newColor;  	}  	newText += message + "\n";  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: if (state == 1 && message.Length > 2) {  	if (message [1] == ':' && Char.IsDigit (message [0])) {  		if (int.TryParse (message [0].ToString ()' out state)) {  			message = message.Substring (2);  		}  	}  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: if (state == 1 && message.Length > 2) {  	if (message [1] == ':' && Char.IsDigit (message [0])) {  		if (int.TryParse (message [0].ToString ()' out state)) {  			message = message.Substring (2);  		}  	}  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: if (message [1] == ':' && Char.IsDigit (message [0])) {  	if (int.TryParse (message [0].ToString ()' out state)) {  		message = message.Substring (2);  	}  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: if (int.TryParse (message [0].ToString ()' out state)) {  	message = message.Substring (2);  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: message = message.Substring (2);  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: switch (state) {  case 0:  	// Info  	newColor = Color.Gray;  	break;  case 1:  	// Debug  	newColor = Color.Black;  	break;  case 2:  	// Warning  	newColor = Color.Orange;  	break;  case 3:  	// Error  	newColor = Color.Red;  	break;  case 4:  	// Fatal  	newColor = Color.Magenta;  	break;  case -1:  	// ProcessStart  	newColor = Color.Blue;  	break;  case -2:  	// ProcessEnd  	newColor = Color.Blue;  	break;  case -3:  	// ProcessError  	newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  	break;  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: switch (state) {  case 0:  	// Info  	newColor = Color.Gray;  	break;  case 1:  	// Debug  	newColor = Color.Black;  	break;  case 2:  	// Warning  	newColor = Color.Orange;  	break;  case 3:  	// Error  	newColor = Color.Red;  	break;  case 4:  	// Fatal  	newColor = Color.Magenta;  	break;  case -1:  	// ProcessStart  	newColor = Color.Blue;  	break;  case -2:  	// ProcessEnd  	newColor = Color.Blue;  	break;  case -3:  	// ProcessError  	newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  	break;  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: switch (state) {  case 0:  	// Info  	newColor = Color.Gray;  	break;  case 1:  	// Debug  	newColor = Color.Black;  	break;  case 2:  	// Warning  	newColor = Color.Orange;  	break;  case 3:  	// Error  	newColor = Color.Red;  	break;  case 4:  	// Fatal  	newColor = Color.Magenta;  	break;  case -1:  	// ProcessStart  	newColor = Color.Blue;  	break;  case -2:  	// ProcessEnd  	newColor = Color.Blue;  	break;  case -3:  	// ProcessError  	newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  	break;  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: switch (state) {  case 0:  	// Info  	newColor = Color.Gray;  	break;  case 1:  	// Debug  	newColor = Color.Black;  	break;  case 2:  	// Warning  	newColor = Color.Orange;  	break;  case 3:  	// Error  	newColor = Color.Red;  	break;  case 4:  	// Fatal  	newColor = Color.Magenta;  	break;  case -1:  	// ProcessStart  	newColor = Color.Blue;  	break;  case -2:  	// ProcessEnd  	newColor = Color.Blue;  	break;  case -3:  	// ProcessError  	newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  	break;  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following statement contains a magic number: switch (state) {  case 0:  	// Info  	newColor = Color.Gray;  	break;  case 1:  	// Debug  	newColor = Color.Black;  	break;  case 2:  	// Warning  	newColor = Color.Orange;  	break;  case 3:  	// Error  	newColor = Color.Red;  	break;  case 4:  	// Fatal  	newColor = Color.Magenta;  	break;  case -1:  	// ProcessStart  	newColor = Color.Blue;  	break;  case -2:  	// ProcessEnd  	newColor = Color.Blue;  	break;  case -3:  	// ProcessError  	newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  	break;  }  
Magic Number,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,FindTextBoxTextChanged,The following statement contains a magic number: if (this.textLog.TextLength > 10000) {  	this.typingTimer.Stop ();  	this.typingTimer.Start ();  }  else  	this.TypingTimerTick (null' null);  
Missing Default,OutputPanel,PluginMain,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginMain.cs,HandleEvent,The following switch statement is missing a default case: switch (e.Type) {  case EventType.ProcessStart:  	this.pluginUI.ClearOutput (null' null);  	break;  case EventType.ProcessEnd:  	if (this.settingObject.ShowOnProcessEnd && !this.settingObject.ShowOnOutput) {  		this.pluginUI.DisplayOutput ();  	}  	break;  case EventType.Trace:  	this.pluginUI.AddTraces ();  	if (this.settingObject.ShowOnOutput) {  		this.pluginUI.DisplayOutput ();  	}  	break;  case EventType.Keys:  	Keys keys = (e as KeyEvent).Value;  	e.Handled = this.pluginUI.OnShortcut (keys);  	break;  case EventType.ApplySettings:  	this.pluginUI.ApplyWrapText ();  	break;  }  
Missing Default,OutputPanel,PluginUI,C:\repos\littlesome_LuaDevelop\External\Plugins\OutputPanel\PluginUI.cs,AddTraces,The following switch statement is missing a default case: switch (state) {  case 0:  	// Info  	newColor = Color.Gray;  	break;  case 1:  	// Debug  	newColor = Color.Black;  	break;  case 2:  	// Warning  	newColor = Color.Orange;  	break;  case 3:  	// Error  	newColor = Color.Red;  	break;  case 4:  	// Fatal  	newColor = Color.Magenta;  	break;  case -1:  	// ProcessStart  	newColor = Color.Blue;  	break;  case -2:  	// ProcessEnd  	newColor = Color.Blue;  	break;  case -3:  	// ProcessError  	newColor = (message.IndexOf ("Warning") >= 0) ? Color.Orange : Color.Red;  	break;  }  
