Implementation smell,Namespace,Class,File,Method,Description
Long Method,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The method has 112 lines of code.
Long Method,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The method has 106 lines of code.
Long Statement,Demo,TableViewCellDemo2,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo2.cs,ViewDidLoad,The length of the statement  "					"A really long message that really really should wrap.  This will allow us to properly test text wrapping when used inside a variable height table view cell"' " is 158.
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,FrameLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FrameLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new FrameLayout()  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(255'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.FillParent'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'255'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 100'  							Margins = new UIEdgeInsets(10'10'10'10)'  							Gravity = Gravity.Bottom'  						}  					}'    					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0'0'0'128)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 80'  							Margins = new UIEdgeInsets(10'-10'10'-10)'  							Gravity = Gravity.CenterVertical'  						}  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,LinearLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\LinearLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterVertical'  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// Here we're nesting a horizontal linear layout inside the outer vertical linear layout  					new LinearLayout(Orientation.Horizontal)  					{  						// How to layout this linear layout within the outer one  						LayoutParameters = new LayoutParameters()  						{  							Height = AutoSize.WrapContent'  							Width = AutoSize.FillParent'  						}'    						// Sub view collection  						SubViews = new View[]  						{  							new NativeView()  							{  								// This time we're showing a UILabel  								View = new UILabel(CGRect.Empty)  								{  									BackgroundColor = UIColor.Purple'  									Text="Hello World' this is a test to see if things wrap and measure correctly"'  									Lines = 0'  									TextAlignment = UITextAlignment.Center'  									TextColor = UIColor.White  								}'    								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'		// Height calculated automatically based on text content!  								}'  							}'    							new NativeView()  							{  								// Here we're hosting a button  								View = new UIButton(UIButtonType.RoundedRect)  								{  									Tag = 123'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.WrapContent'				// Size of button determined by it's content  									Height = AutoSize.WrapContent'  									Gravity = Gravity.CenterVertical'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'	// Put a margin on the left to separate it from the text    								}'  								Init = v =>  								{  									// Because we can't set a button's title with a property' we use the Init property  									// to execute some code.  Whatever action we assign to Init is simply executed immediately allowing  									// us to to keep this code here with the rest of the layout definition  									v.As<UIButton>().SetTitle("Hello"' UIControlState.Normal);    									// We can also setup an event handler  									v.As<UIButton>().TouchUpInside += (sender'args) =>  									{  										new UIAlertView("Clicked"' ""' null' "OK").Show();  									};  								}  							}'  						}  					}'  					new NativeView()  					{  						View = new UIImageView(UIImage.FromBundle("logo320.png"))  						{  							ContentMode = UIViewContentMode.ScaleAspectFit'  							//BackgroundColor = UIColor.White  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'		// Overrall size determined by parent container width  							Height = AutoSize.WrapContent'		// Height will be calculated by calling Measurer below  							Margins = new UIEdgeInsets(10' 0' 0' 0)  						}'  						Measurer = (v's) =>  						{  							// By supplying a custom measurer' we can do clever things like calculate a height for this  							// image view that respects the aspect ratio of the image.  In this case the width is set  							// to match the parent' whereas the height is wrapped.  To calculate the height' XibFree will  							// call this function.  							var iv = (UIImageView)v;  							return new CGSize(s.Width' iv.Image.Size.Height * s.Width / iv.Image.Size.Width);  						}'  					}  				}'  			};
Magic Number,Demo,TableViewCellDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,ViewDidLoad,The following statement contains a magic number: item.Total = r.Next(1000);
Magic Number,Demo,TableViewCellDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,ViewDidLoad,The following statement contains a magic number: i<100
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: _layout = new LinearLayout(Orientation.Horizontal)  				{  					Padding = new UIEdgeInsets(5'5'5'5)'  					LayoutParameters = new LayoutParameters()  					{  						Width = AutoSize.FillParent'  						Height = AutoSize.WrapContent'  					}'  					SubViews = new View[]  					{  						new NativeView()  						{  							View = new UIImageView(CGRect.Empty)  							{  								Image = UIImage.FromBundle("tts512.png")'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 40'  								Height = 40'  								Margins = new UIEdgeInsets(0'0'0'10)'  							}  						}'  						new LinearLayout(Orientation.Vertical)  						{  							LayoutParameters = new LayoutParameters()  							{  								Width = AutoSize.FillParent'  								Height = AutoSize.WrapContent'  							}'  							SubViews = new View[]  							{  								new NativeView()  								{  									View = _labelTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.BoldSystemFontOfSize(18)'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  								new NativeView()  								{  									View = _labelSubTitle = new UILabel()  									{  										BackgroundColor = UIColor.Clear'  										Font = UIFont.SystemFontOfSize(12)'  										TextColor = UIColor.DarkGray'  										HighlightedTextColor = UIColor.White'  									}'  									LayoutParameters = new LayoutParameters()  									{  										Width = AutoSize.FillParent'  										Height = AutoSize.WrapContent'  									}  								}'  							}  						}'  						new NativeView()  						{  							View = _labelPercent = new UILabel()  							{  								BackgroundColor = UIColor.Clear'  								TextColor = UIColor.FromRGB(51'102'153)'  								HighlightedTextColor = UIColor.White'  								Font = UIFont.BoldSystemFontOfSize(24)'  								TextAlignment = UITextAlignment.Right'  							}'  							LayoutParameters = new LayoutParameters()  							{  								Width = 50'  								Height = AutoSize.FillParent'  								Margins = new UIEdgeInsets(0' 10' 0' 0)'  							}  						}  					}  				};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,DemoTableViewCell,The following statement contains a magic number: Layout = new LinearLayout(Orientation.Horizontal)  					{  						Padding = new UIEdgeInsets(5'5'5'5)'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View  = new UIImageView(CGRect.Empty)  								{  									Image = UIImage.FromBundle("tts512.png")'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 40'  									Height = 40'  									Margins = new UIEdgeInsets(0'0'0'10)'  								}  							}'  							new LinearLayout(Orientation.Vertical)  							{  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  								}'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = _labelTitle = new UILabel()  										{  											Text = "Title"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.BoldSystemFontOfSize(18)'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelSubTitle = new UILabel()  										{  											Text = "SubTitle"'  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}'  									new NativeView()  									{  										View = _labelLongText = new UILabel()  										{  											BackgroundColor = UIColor.Clear'  											Font = UIFont.SystemFontOfSize(12)'  											TextColor = UIColor.DarkGray'  											HighlightedTextColor = UIColor.White'  											Lines = 0'  										}'  										LayoutParameters = new LayoutParameters()  										{  											Width = AutoSize.FillParent'  											Height = AutoSize.WrapContent'  										}  									}  								}  							}'  							new NativeView()  							{  								View = _labelPercent = new UILabel()  								{  									Text = "20%"'  									BackgroundColor = UIColor.Clear'  									TextColor = UIColor.FromRGB(51'102'153)'  									HighlightedTextColor = UIColor.White'  									Font = UIFont.BoldSystemFontOfSize(24)'  									TextAlignment = UITextAlignment.Right'  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = 50'  									Height = AutoSize.FillParent'  									Margins = new UIEdgeInsets(0' 10' 0' 0)'  								}  							}  						}  					};
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,MeasureHeight,The following statement contains a magic number: Layout.Measure(tableView.Bounds.Width - 20 - 18' nfloat.MaxValue);
Magic Number,Demo,DemoTableViewCell,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo.cs,MeasureHeight,The following statement contains a magic number: Layout.Measure(tableView.Bounds.Width - 20 - 18' nfloat.MaxValue);
Magic Number,Demo,Demo1,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\Demo1.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// A second view that will be stacked below the first  					new NativeView()  					{  						View = new UIView(CGRect.Empty)  						{  							BackgroundColor = UIColor.Blue'  						}'  						  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'  				}'  			};
Magic Number,Demo,Demo1,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\Demo1.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					// A NativeView contains an iOS UIView  					new NativeView()  					{  						// This is the UIView  						View = new UIView(CGRect.Empty)  						{  							// Set properties here  							BackgroundColor = UIColor.Red'  						}'    						// This controls how it's laid out by its parent view group (in this case the outer linear layout)  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'    					// A second view that will be stacked below the first  					new NativeView()  					{  						View = new UIView(CGRect.Empty)  						{  							BackgroundColor = UIColor.Blue'  						}'  						  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 50'  						}'  					}'  				}'  			};
Magic Number,Demo,TableViewCellDemo2,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo2.cs,ViewDidLoad,The following statement contains a magic number: item.Total = r.Next(1000);
Magic Number,Demo,TableViewCellDemo2,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\TableViewCellDemo2.cs,ViewDidLoad,The following statement contains a magic number: i<100
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,NestedDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\NestedDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UILayoutHost()  						{  							BackgroundColor = UIColor.Yellow'  							Layout = new LinearLayout(Orientation.Vertical)  							{  								Padding = new UIEdgeInsets(3'3'3'3)'  								SubViews = new View[]  								{  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Hello World"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}'  									new NativeView()  									{  										View = new UILabel(CGRect.Empty)  										{  											Text="Goodbye"'  											Font = UIFont.SystemFontOfSize(24)'  											BackgroundColor = UIColor.Clear'  										}  									}  								}'  								LayoutParameters = new LayoutParameters()  								{  									Width = AutoSize.FillParent'  									Height = AutoSize.WrapContent'  									Margins = new UIEdgeInsets(10'10'10'10)'  								}'  							}'  						}'  						Init = v =>  						{  							v.View.Layer.CornerRadius = 5;  							v.View.Layer.MasksToBounds = true;  						}  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,ViewGroupLayerDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\ViewGroupLayerDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							panel = new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Visibility"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}    								this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,RecalculateLayoutDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\RecalculateLayoutDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				SubViews = new View[]   				{  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new LinearLayout(Orientation.Vertical)  					{  						Padding = new UIEdgeInsets(10'10'10'10)'  						Layer = new CAGradientLayer()  						{  							Colors = new CoreGraphics.CGColor[]  							{  								new CoreGraphics.CGColor(0.9f' 0.9f' 0.9f' 1f)'  								new CoreGraphics.CGColor(0.7f' 0.7f' 0.7f' 1f)  							}'  							Locations = new NSNumber[]  							{  								0.0f'  								1.0f  							}'  							CornerRadius = 5'  						}'  						SubViews = new View[]  						{  							new NativeView()  							{  								View = new UILabel(CGRect.Empty)  								{  									Text="Hello World"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  								}  							}'  							new NativeView()  							{  								View = label = new UILabel(CGRect.Empty)  								{  									Text="Goodbye"'  									Font = UIFont.SystemFontOfSize(24)'  									BackgroundColor = UIColor.Clear'  									Lines = 0'  								}'  								LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)  							}  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							Margins = new UIEdgeInsets(10'10'10'10)'  						}'  					}'  					new NativeView()  					{  						View = new UIView()	{ BackgroundColor = UIColor.Blue }'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' 50)'  					}'  					new NativeView()  					{  						View = new UIButton(UIButtonType.RoundedRect)'  						LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  						Init = v =>  						{  							v.As<UIButton>().SetTitle("Change Text"' UIControlState.Normal);  							v.As<UIButton>().TouchUpInside += (sender' e) =>   							{  								if (label.Text=="ShortString")  								{  									label.Text = "This is a long string that should wrap and cause the layout to change";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(10'10'10'10);  								}  								else  								{  									label.Text = "ShortString";  									label.GetNativeView().LayoutParameters.Margins = new UIEdgeInsets(20'20'20'20);  								}  								label.GetLayoutHost().SetNeedsLayout();  								//or: this.View.SetNeedsLayout();  							};  						}  					}  				}'  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,FullScreenDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,LoadView,The following statement contains a magic number: var layout = new LinearLayout(Orientation.Vertical)  			{  				Padding = new UIEdgeInsets(10'10'10'10)'  				Gravity = Gravity.CenterHorizontal'  				LayoutParameters = new LayoutParameters(AutoSize.FillParent' AutoSize.WrapContent)'  				SubViews = new View[]  				{  					new NativeView()  					{  						View = new UIImageView()  						{  							Image = UIImage.FromBundle("XibFree_512.png")'  							ContentMode = UIViewContentMode.ScaleAspectFit'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = 120'  							Height = 120'  							MarginTop = 30'  							MarginBottom = 20'  						}  					}'  					new Label("XibFree"' UIFont.BoldSystemFontOfSize(24))'  					new Label("Code-only layout for Xamarin.iOS"' UIFont.SystemFontOfSize(12))'  					new LinearLayout(Orientation.Horizontal)  					{  						Spacing = 10'  						Gravity = Gravity.CenterHorizontal'  						SubViews = new View[]  						{  							new Button("Download"' () => Alert("Download"))'  							new Button("View Samples"' () => Alert("Samples"))'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = AutoSize.WrapContent'  							MarginTop = 50'  						}  					}'  					new NativeView()  					{  						View = new UIView()  						{  							BackgroundColor = UIColor.FromRGBA(0' 0' 0' 10)'  						}'  						LayoutParameters = new LayoutParameters()  						{  							Width = AutoSize.FillParent'  							Height = 2'  							MarginTop = 20'  							MarginBottom = 20'  						}  					}'  					new Label("Step away from the mouse' build your UI in code!"' UIFont.SystemFontOfSize(12))'  				}  			};
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: _layerGradient = new CAGradientLayer()  				{  					Colors = new CoreGraphics.CGColor[]  					{  						new CoreGraphics.CGColor(1'1'1'0.5f)'  						new CoreGraphics.CGColor(1'1'1'0.1f)  					}'  					Locations = new NSNumber[]  					{  						0.0f'  						1.0f  					}'  					CornerRadius = 5'  					Frame = this.Bounds'  				};
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: _layerGradient = new CAGradientLayer()  				{  					Colors = new CoreGraphics.CGColor[]  					{  						new CoreGraphics.CGColor(1'1'1'0.5f)'  						new CoreGraphics.CGColor(1'1'1'0.1f)  					}'  					Locations = new NSNumber[]  					{  						0.0f'  						1.0f  					}'  					CornerRadius = 5'  					Frame = this.Bounds'  				};
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: _layerGradient = new CAGradientLayer()  				{  					Colors = new CoreGraphics.CGColor[]  					{  						new CoreGraphics.CGColor(1'1'1'0.5f)'  						new CoreGraphics.CGColor(1'1'1'0.1f)  					}'  					Locations = new NSNumber[]  					{  						0.0f'  						1.0f  					}'  					CornerRadius = 5'  					Frame = this.Bounds'  				};
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: _layerDarken = new CALayer()  				{  					BackgroundColor = new CoreGraphics.CGColor(0'0'0'0.2f)'  					CornerRadius = 5'  					Frame = this.Bounds'  					Hidden = true'		// Normally hidden  				};
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: _layerDarken = new CALayer()  				{  					BackgroundColor = new CoreGraphics.CGColor(0'0'0'0.2f)'  					CornerRadius = 5'  					Frame = this.Bounds'  					Hidden = true'		// Normally hidden  				};
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: Layer.BorderColor = new CoreGraphics.CGColor(0'0'0'0.2f);
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,GlassButton,The following statement contains a magic number: Layer.CornerRadius = 5;
Magic Number,Demo,GlassButton,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,SizeThatFits,The following statement contains a magic number: return base.SizeThatFits(size) + new CGSize(0'10);
Magic Number,Demo,Button,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\FullScreenDemo.cs,Button,The following statement contains a magic number: LayoutParameters.MaxWidth = 160;
Missing Default,Demo,VisibilityDemo,D:\research\architectureSmells\repos1\toptensoftware_XibFree\Demo\VisibilityDemo.cs,LoadView,The following switch statement is missing a default case: switch (panel.LayoutParameters.Visibility)  								{  									case Visibility.Gone:  										panel.LayoutParameters.Visibility = Visibility.Visible;  										break;  									case Visibility.Visible:  										panel.LayoutParameters.Visibility = Visibility.Invisible;  										break;  									case Visibility.Invisible:  										panel.LayoutParameters.Visibility = Visibility.Gone;  										break;  								}
