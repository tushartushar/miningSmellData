Implementation smell,Namespace,Class,File,Method,Description
Long Method,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,MeasureVertical,The method has 104 lines of code.
Long Method,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,MeasureHorizontal,The method has 104 lines of code.
Complex Method,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,MeasureVertical,Cyclomatic complexity of the method is 15
Complex Method,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,MeasureHorizontal,Cyclomatic complexity of the method is 15
Complex Method,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutVertical,Cyclomatic complexity of the method is 9
Complex Method,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutHorizontal,Cyclomatic complexity of the method is 9
Complex Method,XibFree,FrameLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\FrameLayout.cs,onMeasure,Cyclomatic complexity of the method is 14
Long Statement,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,getTotalMeasuredHeight,The length of the statement  "			return (nfloat)(Padding.TotalWidth() + getTotalSpacing() + SubViews.Where(x=>!x.Gone).Sum(x=>x.GetMeasuredSize().Height + x.LayoutParameters.Margins.TotalHeight())); " is 165.
Long Statement,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,getTotalMeasuredWidth,The length of the statement  "			return (nfloat)(Padding.TotalHeight() + getTotalSpacing() + SubViews.Where(x=>!x.Gone).Sum(x=>x.GetMeasuredSize().Width + x.LayoutParameters.Margins.TotalWidth())); " is 164.
Long Statement,XibFree,Extensions,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\Extensions.cs,ApplyInsets,The length of the statement  "			return new CGRect(rect.Left + insets.Left' rect.Top + insets.Top' rect.Width - insets.TotalWidth()' rect.Height- insets.TotalHeight()); " is 135.
Long Statement,XibFree,FrameLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\FrameLayout.cs,onMeasure,The length of the statement  "				sizeMeasured.Width = SubViews.Max(x=>x.GetMeasuredSize().Width + x.LayoutParameters.Margins.TotalWidth()) + Padding.TotalWidth(); " is 129.
Long Statement,XibFree,FrameLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\FrameLayout.cs,onMeasure,The length of the statement  "				sizeMeasured.Height = SubViews.Max(x=>x.GetMeasuredSize().Height + x.LayoutParameters.Margins.TotalHeight()) + Padding.TotalHeight(); " is 133.
Long Statement,XibFree,PublicExtensions,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\PublicExtensions.cs,GetLayoutHost,The length of the statement  "				throw new InvalidOperationException("Unable to find UILayoutHost for view - either the view is not part of a XibFree layout' or the layout hasn't been hosted by a UILayoutHost yet"); " is 182.
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutVertical,The following statement contains a magic number: switch (Gravity & Gravity.VerticalMask)  			{  				default:  					y= newPosition.Top + Padding.Top;  					break;    				case Gravity.Bottom:  					y = newPosition.Bottom - getTotalMeasuredHeight() + Padding.Top;  					break;    				case Gravity.CenterVertical:  					y = (newPosition.Top + newPosition.Bottom)/2 - getTotalMeasuredHeight()/2 + Padding.Top;  					break;    			}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutVertical,The following statement contains a magic number: switch (Gravity & Gravity.VerticalMask)  			{  				default:  					y= newPosition.Top + Padding.Top;  					break;    				case Gravity.Bottom:  					y = newPosition.Bottom - getTotalMeasuredHeight() + Padding.Top;  					break;    				case Gravity.CenterVertical:  					y = (newPosition.Top + newPosition.Bottom)/2 - getTotalMeasuredHeight()/2 + Padding.Top;  					break;    			}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutVertical,The following statement contains a magic number: switch (g)  				{  					default:  						x = newPosition.Left + Padding.Left + v.LayoutParameters.Margins.Left;  						break;    					case Gravity.Right:  						x = newPosition.Right - Padding.Right - v.LayoutParameters.Margins.Right - size.Width;  						break;    					case Gravity.CenterHorizontal:  						x = (newPosition.Left + newPosition.Right)/2  							- (size.Width + v.LayoutParameters.Margins.TotalWidth())/2;  						break;  				}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutVertical,The following statement contains a magic number: switch (g)  				{  					default:  						x = newPosition.Left + Padding.Left + v.LayoutParameters.Margins.Left;  						break;    					case Gravity.Right:  						x = newPosition.Right - Padding.Right - v.LayoutParameters.Margins.Right - size.Width;  						break;    					case Gravity.CenterHorizontal:  						x = (newPosition.Left + newPosition.Right)/2  							- (size.Width + v.LayoutParameters.Margins.TotalWidth())/2;  						break;  				}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutHorizontal,The following statement contains a magic number: switch (Gravity & Gravity.HorizontalMask)  			{  				default:  					x = newPosition.Left + Padding.Left;  					break;  					  				case Gravity.Right:  					x = newPosition.Right - getTotalMeasuredWidth() + Padding.Left;  					break;  					  				case Gravity.CenterHorizontal:  					x = (newPosition.Left + newPosition.Right)/2 - getTotalMeasuredWidth()/2 + Padding.Left;  					break;  					  			}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutHorizontal,The following statement contains a magic number: switch (Gravity & Gravity.HorizontalMask)  			{  				default:  					x = newPosition.Left + Padding.Left;  					break;  					  				case Gravity.Right:  					x = newPosition.Right - getTotalMeasuredWidth() + Padding.Left;  					break;  					  				case Gravity.CenterHorizontal:  					x = (newPosition.Left + newPosition.Right)/2 - getTotalMeasuredWidth()/2 + Padding.Left;  					break;  					  			}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutHorizontal,The following statement contains a magic number: switch (g)  				{  					default:  						y = newPosition.Top + Padding.Top + v.LayoutParameters.Margins.Top;  						break;  						  					case Gravity.Bottom:  						y = newPosition.Bottom - Padding.Top - v.LayoutParameters.Margins.Bottom - size.Height;  						break;  						  					case Gravity.CenterVertical:  						y = (newPosition.Top + newPosition.Bottom)/2  							- (size.Height + v.LayoutParameters.Margins.TotalHeight())/2;  						break;  				}
Magic Number,XibFree,LinearLayout,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\LinearLayout.cs,LayoutHorizontal,The following statement contains a magic number: switch (g)  				{  					default:  						y = newPosition.Top + Padding.Top + v.LayoutParameters.Margins.Top;  						break;  						  					case Gravity.Bottom:  						y = newPosition.Bottom - Padding.Top - v.LayoutParameters.Margins.Bottom - size.Height;  						break;  						  					case Gravity.CenterVertical:  						y = (newPosition.Top + newPosition.Bottom)/2  							- (size.Height + v.LayoutParameters.Margins.TotalHeight())/2;  						break;  				}
Magic Number,XibFree,Extensions,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\Extensions.cs,ApplyGravity,The following statement contains a magic number: switch (g & Gravity.HorizontalMask)  			{  				default:  					left = bounds.Left;  					break;    				case Gravity.Right:  					left = bounds.Right - size.Width;  					break;    				case Gravity.CenterHorizontal:  					left = (bounds.Left + bounds.Right - size.Width)/2;  					break;  			}
Magic Number,XibFree,Extensions,D:\research\architectureSmells\repos1\toptensoftware_XibFree\XibFree\Extensions.cs,ApplyGravity,The following statement contains a magic number: switch (g & Gravity.VerticalMask)  			{  				default:  					top = bounds.Top;  					break;    				case Gravity.Bottom:  					top = bounds.Bottom - size.Height;  					break;    				case Gravity.CenterVertical:  					top = (bounds.Top + bounds.Bottom - size.Height)/2;  					break;  			}
