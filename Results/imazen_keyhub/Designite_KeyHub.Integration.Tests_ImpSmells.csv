Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,KeyHub.Integration.Tests,LicenseValidatorTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\LicenseValidatorTests.cs,AssertRemoteValidationCheckPasses,The method has 5 parameters. Parameters: site' domain' appKey' featureCode' vendorPublicKey
Long Parameter List,KeyHub.Integration.Tests.TestSetup,VendorUtil,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\VendorUtil.cs,CreateSku,The method has 5 parameters. Parameters: browser' skuCode' vendorName' featureName' canDeleteManualDomains
Long Identifier,KeyHub.Integration.Tests,TransactionTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TransactionTests.cs,VendorManuallyCreatesTransaction,The length of the parameter vendorActionBeforeCreatingTransaction is 37.
Long Identifier,KeyHub.Integration.Tests.TestSetup,VendorWithALicensedCustomerScenario,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\VendorWithALicensedCustomerScenario.cs,Setup,The length of the parameter canDeleteManualDomainsOfLicense is 31.
Long Statement,KeyHub.Integration.Tests,LicenseValidatorTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\LicenseValidatorTests.cs,CanValidateLicense,The length of the statement  "                var result = validator.Validate(scenario.AppKey' new[] { new DomainValidation(domain' scenario.FeatureCode) }).Single(); " is 120.
Long Statement,KeyHub.Integration.Tests.TestSetup,AdminUtil,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\AdminUtil.cs,CreateAccountRightsFor,The length of the statement  "            browser.FindElementByCssSelector("a[href^='/AccountRights/Create'][href$='" + Enum.GetName(typeof(ObjectTypes)' objectType) + "']").Click(); " is 140.
Long Statement,KeyHub.Integration.Tests.TestSetup,VendorUtil,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\VendorUtil.cs,CreateLicense,The length of the statement  "            SiteUtil.SetDateValueForJQueryDatepicker(browser' "input#License_LicenseExpires"' DateTime.Now + TimeSpan.FromDays(100)); " is 121.
Long Statement,KeyHub.Integration.Tests.TestSetup,CheckedDataContextFactory,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\CheckedDataContextFactory.cs,Dispose,The length of the statement  "                throw new Exception(String.Format("CheckedDataContextFactory detected a leak- {0} allocations had {1} releases. (the values should match)"' instanceCount' releaseCount)); " is 170.
Empty Catch Block,KeyHub.Integration.Tests.TestSetup,IISExpressDriver,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\IISExpressDriver.cs,Shutdown,The method has an empty catch block.
Empty Catch Block,KeyHub.Integration.Tests.TestSetup,ProcessDriver,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\ProcessDriver.cs,StartProcess,The method has an empty catch block.
Magic Number,KeyHub.Integration.Tests,AccountRightsTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\AccountRightsTests.cs,AdminShouldBeAbleToAddAndRemoveUserRights,The following statement contains a magic number: new WebDriverWait(browser' TimeSpan.FromSeconds(2)).Until(waitBrowser =>                      {                          return browser.FindElementByCssSelector(".account-rights-table") != null                                 && browser.FindElementsByCssSelector(".account-rights-table tbody tr").Count() == 0;                      });
Magic Number,KeyHub.Integration.Tests,AccountTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\AccountTests.cs,CanRegisterLocallyThenAssociateAndDisassociate3rdPartyLogin,The following statement contains a magic number: browser.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(5));
Magic Number,KeyHub.Integration.Tests,AccountTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\AccountTests.cs,CanRegisterLocallyThenAssociateAndDisassociate3rdPartyLogin,The following statement contains a magic number: browser.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(5));
Magic Number,KeyHub.Integration.Tests,AccountTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\AccountTests.cs,CanRegisterLocallyThenAssociateAndDisassociate3rdPartyLogin,The following statement contains a magic number: browser.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(5));
Magic Number,KeyHub.Integration.Tests,AdminTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\AdminTests.cs,CanManageVendorCredentials,The following statement contains a magic number: browser.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(3));
Magic Number,KeyHub.Integration.Tests,LicenseValidationScenario,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\LicenseValidationScenario.cs,LicenseValidationScenario,The following statement contains a magic number: var license = DatabaseUtil.InsertItem(dataContext' dataContext.Licenses' new License()                  {                      OwnerName = "license.ownerName"'                      LicenseExpires = DateTime.Now.AddDays(100)'                      SkuId = vendorScenario.SkuId'                      PurchasingCustomerId = customer.ObjectId'                      OwningCustomerId = customer.ObjectId                  });
Magic Number,KeyHub.Integration.Tests,TransactionTests,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TransactionTests.cs,CanUseALicensePurchasedViaEJunkie,The following statement contains a magic number: var smtpServer = SimpleSmtpServer.Start(25);
Magic Number,KeyHub.Integration.Tests.TestSetup,VendorUtil,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\VendorUtil.cs,CreateLicense,The following statement contains a magic number: SiteUtil.SetDateValueForJQueryDatepicker(browser' "input#License_LicenseExpires"' DateTime.Now + TimeSpan.FromDays(100));
Magic Number,KeyHub.Integration.Tests.TestSetup,WithAVendorDBScenario,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\WithAVendorDBScenario.cs,WithAVendorDBScenario,The following statement contains a magic number: var sku = DatabaseUtil.InsertItem(dataContext' dataContext.SKUs' new SKU()                 {                     SkuCode = SkuCode'                     PrivateKeyId = privateKey.PrivateKeyId'                     VendorId = vendor.ObjectId'                     LicenseDuration = 12'                     AutoDomainDuration = 12                 });
Magic Number,KeyHub.Integration.Tests.TestSetup,WithAVendorDBScenario,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\WithAVendorDBScenario.cs,WithAVendorDBScenario,The following statement contains a magic number: var sku = DatabaseUtil.InsertItem(dataContext' dataContext.SKUs' new SKU()                 {                     SkuCode = SkuCode'                     PrivateKeyId = privateKey.PrivateKeyId'                     VendorId = vendor.ObjectId'                     LicenseDuration = 12'                     AutoDomainDuration = 12                 });
Magic Number,KeyHub.Integration.Tests.TestSetup,BrowserUtil,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\BrowserUtil.cs,GetBrowser,The following statement contains a magic number: result.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(5));
Magic Number,KeyHub.Integration.Tests.TestSetup,IISExpressDriver,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\IISExpressDriver.cs,Shutdown,The following statement contains a magic number: !_process.WaitForExit(10000)
Magic Number,KeyHub.Integration.Tests.TestSetup,ProcessDriver,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Integration.Tests\TestSetup\ProcessDriver.cs,WaitForConsoleOutputMatching,The following statement contains a magic number: output.TryTake(out nextLine' 100);
