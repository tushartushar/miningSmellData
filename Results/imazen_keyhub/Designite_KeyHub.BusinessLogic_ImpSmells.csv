Implementation smell,Namespace,Class,File,Method,Description
Complex Method,KeyHub.BusinessLogic.Basket,BasketWrapper,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\Basket\BasketWrapper.cs,ExecuteCheckout,Cyclomatic complexity of the method is 10
Complex Method,KeyHub.BusinessLogic.LicenseValidation,LicenseValidator,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\LicenseValidation\LicenseValidator.cs,Validate,Cyclomatic complexity of the method is 8
Long Parameter List,KeyHub.BusinessLogic.Caching,PerRequestCacheProvider,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\Caching\PerRequestCacheProvider.cs,GetOrStoreObjectFromCache,The method has 6 parameters. Parameters: cacheKey' context' cacheMode' minutesToLive' priority' function
Long Parameter List,KeyHub.BusinessLogic.Caching,RuntimeCacheProvider,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\Caching\RuntimeCacheProvider.cs,StoreObjectIntoCache,The method has 6 parameters. Parameters: cacheObject' cacheKey' context' MinutesToLive' cacheMode' priority
Long Parameter List,KeyHub.BusinessLogic.Caching,RuntimeCacheProvider,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\Caching\RuntimeCacheProvider.cs,GetOrStoreObjectFromCache,The method has 6 parameters. Parameters: cacheKey' context' cacheMode' minutesToLive' priority' function
Long Identifier,KeyHub.BusinessLogic.LicenseValidation,LicenseValidator,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\LicenseValidation\LicenseValidator.cs,OnValidationFailed,The length of the parameter businessRuleValidationException is 31.
Long Statement,KeyHub.BusinessLogic.BusinessRules,CustomerAppAtLeastOneLicenseRule,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\BusinessRules\CustomerAppAtLeastOneLicenseRule.cs,ExecuteValidation,The length of the statement  "                yield return new BusinessRuleValidationResult("Licensed application should have at least one license"' this' "SelectedLicenseGUIDs"); " is 133.
Long Statement,KeyHub.BusinessLogic.BusinessRules.LicenseValidation,MaxDomainsCountRule,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\BusinessRules\LicenseValidation\MaxDomainsCountRule.cs,ExecuteValidation,The length of the statement  "                        yield return new BusinessRuleValidationResult("Domain cannot be added. This license reached maximum domains count violation."' this' null); " is 139.
Long Statement,KeyHub.BusinessLogic.LicenseValidation,LicenseValidator,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\LicenseValidation\LicenseValidator.cs,OnValidationFailed,The length of the statement  "            foreach (var error in businessRuleValidationException.ValidationResults.Where(x => x != BusinessRuleValidationResult.Success)) " is 126.
Long Statement,KeyHub.BusinessLogic.LicenseValidation,LicenseValidator,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\LicenseValidation\LicenseValidator.cs,ConvertToDomainValidationResults,The length of the statement  "                DomainLicense = new KeyHub.Client.DomainLicense(x.DomainName' x.License.OwnerName' x.DomainLicenseIssued'  x.DomainLicenseExpires' GetFeatureCodes(x.License).ToList())' " is 168.
Missing Default,KeyHub.BusinessLogic.Caching,RuntimeCacheProvider,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.BusinessLogic\Caching\RuntimeCacheProvider.cs,StoreObjectIntoCache,The following switch statement is missing a default case: switch (cacheMode)                  {                      case CacheModes.Absolute:                          context.Cache.Insert(cacheKey'                                    cacheObject'                                    null'                                    DateTime.Now.AddMinutes(MinutesToLive)'                                    System.Web.Caching.Cache.NoSlidingExpiration'                                    priority'                                    null);                          break;                        case CacheModes.Sliding:                          context.Cache.Insert(cacheKey'                                    cacheObject'                                    null'                                    System.Web.Caching.Cache.NoAbsoluteExpiration'                                    new TimeSpan(0' MinutesToLive' 0)'                                    priority'                                    null);                          break;                  }
