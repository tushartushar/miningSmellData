Implementation smell,Namespace,Class,File,Method,Description
Complex Method,KeyHub.Client,DomainLicense,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Client\DomainLicense.cs,Parse,Cyclomatic complexity of the method is 9
Long Parameter List,KeyHub.Client,DomainLicense,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Client\DomainLicense.cs,DomainLicense,The method has 5 parameters. Parameters: domain' ownerName' issued' expires' features
Missing Default,KeyHub.Client,DomainLicense,D:\research\architectureSmells\repos\imazen_keyhub\src\KeyHub.Client\DomainLicense.cs,Parse,The following switch statement is missing a default case: switch (key)                  {                      case "domain": result.Domain = value; break;                      case "owner": result.OwnerName = value; break;                      case "issued": result.Issued = DateTime.Parse(value); break;                      case "expires":                            if (value.Trim().Length == 0)                          {                              result.Expires = null;                          }                          else                          {                              result.Expires = DateTime.Parse(value);                          }                            break;                      case "features":                          List<Guid> ids = new List<Guid>();                          string[] parts = value.Split(new char[] { ''' }' StringSplitOptions.RemoveEmptyEntries);                          foreach (string p in parts)                          {                              ids.Add(new Guid(p));                          }                          result.Features = ids;                          break;                  }
