Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,Execute,Cyclomatic complexity of the method is 11
Complex Method,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,GetNameFromAnonymousMethod,Cyclomatic complexity of the method is 11
Complex Method,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,ProcessNameOfCallInstruction,Cyclomatic complexity of the method is 13
Long Identifier,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,GetNameFromAnonymousMethod,The length of the parameter anonymousMethodCallInstruction is 30.
Long Identifier,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,,The length of the parameter PotentiallyUnusedMethodDefinitions is 34.
Long Identifier,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,,The length of the parameter PotentiallyUnusedFieldDefinitions is 33.
Long Identifier,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,,The length of the parameter GetTypeFromHandleMethodSignature is 32.
Long Statement,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,IsNameOfCallInstruction,The length of the statement  "			return instruction.OpCode == OpCodes.Call && ((MethodReference) instruction.Operand).FullName.StartsWith(NameOfMethodSignature); " is 128.
Long Statement,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,GetNameFromAnonymousMethod,The length of the statement  "			var patternsOrdered = lambdaPatterns.OrderByDescending(x => x.Count()); // Ordered by length of pattern to ensure longest possible patterns (of which shorter patterns might be a subset) are checked first " is 203.
Long Statement,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,GetNameFromAnonymousMethod,The length of the statement  "					if (!patternInstruction.EligibleOpCodes.Contains(iterator.OpCode) || !patternInstruction.IsPredicated(iterator' ilProcessor)) { " is 127.
Long Statement,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,ProcessNameOfCallInstruction,The length of the statement  "			var instructions = instruction.AsReverseEnumerable().Take(patterns.Value.First().Length).ToArray(); // Take an instruction set with a maximum size of the longest pattern. " is 170.
Long Statement,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,ProcessNameOfCallInstruction,The length of the statement  "					if (patternInstruction.EligibleOpCodes.Contains(currentInstruction.OpCode) && patternInstruction.IsPredicated(currentInstruction' ilProcessor)) { " is 145.
Long Statement,NameOf.Fody,ModuleWeaver,C:\research\architectureSmells\repos\NickStrupat_NameOf\NameOf.Fody\ModuleWeaver.cs,ProcessNameOfCallInstruction,The length of the statement  "				while (patternMatched[i] is OptionalPatternInstruction && !patternMatched[i].EligibleOpCodes.Contains(instructions[j].OpCode)) " is 126.
