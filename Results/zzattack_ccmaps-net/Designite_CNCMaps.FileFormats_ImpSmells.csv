Implementation smell,Namespace,Class,File,Method,Description
Long Method,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The method has 127 lines of code.
Long Method,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The method has 139 lines of code.
Complex Method,CNCMaps.FileFormats,FormatHelper,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\FormatHelper.cs,GuessFormat,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats,FormatHelper,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\FormatHelper.cs,OpenAsFormat,Cyclomatic complexity of the method is 14
Complex Method,CNCMaps.FileFormats,ShpImage,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\ShpFile.cs,GetImageData,Cyclomatic complexity of the method is 8
Complex Method,CNCMaps.FileFormats.Encodings,Format40,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format40.cs,DecodeInto,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats.Encodings,Format40,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format40.cs,DecodeInto,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,Cyclomatic complexity of the method is 16
Complex Method,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,Cyclomatic complexity of the method is 9
Complex Method,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats.VirtualFileSystem,VFS,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VFS.cs,GetFormatFromTypeclass,Cyclomatic complexity of the method is 12
Complex Method,CNCMaps.FileFormats.VirtualFileSystem,VFS,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VFS.cs,LoadMixes,Cyclomatic complexity of the method is 32
Long Parameter List,CNCMaps.FileFormats,CsfFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\CsfFile.cs,CsfFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,FormatHelper,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\FormatHelper.cs,OpenAsFormat,The method has 6 parameters. Parameters: baseStream' filename' offset' length' format' m
Long Parameter List,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,HvaFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,IniFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,IniFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,MissionsFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MissionsFile.cs,MissionsFile,The method has 5 parameters. Parameters: baseStream' filename' offset' length' isBuffered
Long Parameter List,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,MixFile,The method has 6 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered' parseHeader
Long Parameter List,CNCMaps.FileFormats,PalFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\PalFile.cs,PalFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,PktFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\PktFile.cs,PktFile,The method has 5 parameters. Parameters: baseStream' filename' offset' length' isBuffered
Long Parameter List,CNCMaps.FileFormats,ShpFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\ShpFile.cs,ShpFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,TmpFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\TmpFile.cs,TmpFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,VplFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VplFile.cs,VplFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats,VxlFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VxlFile.cs,VxlFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,sub_bignum,The method has 5 parameters. Parameters: dest' src1' src2' carry' len
Long Parameter List,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,sub_bignum,The method has 5 parameters. Parameters: dest' src1' src2' carry' len
Long Parameter List,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_key,The method has 5 parameters. Parameters: n1' n2' n3' n4' len
Long Parameter List,CNCMaps.FileFormats.Encodings,Format3,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format3.cs,DecodeInto,The method has 5 parameters. Parameters: src' srcLen' dst' cx' cy
Long Parameter List,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The method has 6 parameters. Parameters: in' in_len' out' out_len' ti' wrkmem
Long Parameter List,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The method has 5 parameters. Parameters: in' in_len' out' out_len' wrkmem
Long Parameter List,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The method has 5 parameters. Parameters: in' in_len' out' out_len' wrkmem
Long Parameter List,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,MapFile,The method has 5 parameters. Parameters: baseStream' filename' offset' length' isBuffered
Long Parameter List,CNCMaps.FileFormats.Map,IsoTile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapObjects.cs,IsoTile,The method has 7 parameters. Parameters: p1' p2' rx' ry' z' tilenum' subtile
Long Parameter List,CNCMaps.FileFormats.Map,Aircraft,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapObjects.cs,Aircraft,The method has 5 parameters. Parameters: owner' name' health' direction' onBridge
Long Parameter List,CNCMaps.FileFormats.Map,Infantry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapObjects.cs,Infantry,The method has 5 parameters. Parameters: owner' name' health' direction' onBridge
Long Parameter List,CNCMaps.FileFormats.Map,Unit,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapObjects.cs,Unit,The method has 5 parameters. Parameters: owner' name' health' direction' onBridge
Long Parameter List,CNCMaps.FileFormats.VirtualFileSystem,VirtualFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VirtualFile.cs,VirtualFile,The method has 5 parameters. Parameters: baseStream' filename' baseOffset' fileSize' isBuffered
Long Parameter List,CNCMaps.FileFormats.VirtualFileSystem,VirtualTextFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VirtualTextFile.cs,VirtualTextFile,The method has 5 parameters. Parameters: file' filename' baseOffset' length' isBuffered
Long Statement,CNCMaps.FileFormats,IniSection,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,ReadColor,The length of the statement  "				if (colorParts.Length == 3 && int.TryParse(colorParts[0]' out r) && int.TryParse(colorParts[0]' out g) && int.TryParse(colorParts[0]' out b)) " is 141.
Long Statement,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The length of the statement  "				return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length; " is 138.
Long Statement,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The length of the statement  "				return numFiles > 0 && 4 + 6 + numFiles * 12 + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length; " is 126.
Complex Conditional,CNCMaps.FileFormats,IniSection,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,ReadColor,The conditional expression  "colorParts.Length == 3 && int.TryParse(colorParts[0]' out r) && int.TryParse(colorParts[0]' out g) && int.TryParse(colorParts[0]' out b)"  is complex.
Complex Conditional,CNCMaps.FileFormats,TmpImage,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\TmpFile.cs,Read,The conditional expression  "HasZData && HasExtraData && 0 < _extraZDataOffset && _extraZDataOffset < f.Length"  is complex.
Complex Conditional,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The conditional expression  "dx >= 0 && dx < 2 * Tiles.Width &&  					dy >= 0 && dy < 2 * Tiles.Height"  is complex.
Complex Conditional,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,GetTileR,The conditional expression  "dx < 0 || dy < 0 || dx >= isoTiles.GetLength(0) || (dy / 2) >= isoTiles.GetLength(1)"  is complex.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadSmudges,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The method has an empty catch block.
Empty Catch Block,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadWaypoints,The method has an empty catch block.
Magic Number,CNCMaps.FileFormats,CsfFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\CsfFile.cs,ReadWstring,The following statement contains a magic number: return ConvertToString(Encoding.Unicode.GetString(Read(ReadInt32() * 2)));
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,Initialize,The following statement contains a magic number: ReadCString(16);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,Initialize,The following statement contains a magic number: Sections.Add(new Section(NumFrames) {  					Name = ReadCString(16)  				});
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ReadMatrix,The following statement contains a magic number: var ret = new float[12];
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ReadMatrix,The following statement contains a magic number: i < 12
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,HvaFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ToGLMatrix,The following statement contains a magic number: return new Matrix4(  				hvaMatrix[0]' hvaMatrix[4]' hvaMatrix[8]' 0'  				hvaMatrix[1]' hvaMatrix[5]' hvaMatrix[9]' 0'  				hvaMatrix[2]' hvaMatrix[6]' hvaMatrix[10]' 0'  				hvaMatrix[3]' hvaMatrix[7]' hvaMatrix[11]' 1);
Magic Number,CNCMaps.FileFormats,Section,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,ReadHeader,The following statement contains a magic number: Name = f.ReadCString(16);
Magic Number,CNCMaps.FileFormats,Section,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,GetNormals,The following statement contains a magic number: switch (NormalsMode) {  					case 1:  						return Normals1;  					case 2:  						return Normals2;  					case 3:  						return Normals3;  					case 4:  						return Normals4;  					default:  						throw new ArgumentException();  				}
Magic Number,CNCMaps.FileFormats,Section,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,GetNormals,The following statement contains a magic number: switch (NormalsMode) {  					case 1:  						return Normals1;  					case 2:  						return Normals2;  					case 3:  						return Normals3;  					case 4:  						return Normals4;  					default:  						throw new ArgumentException();  				}
Magic Number,CNCMaps.FileFormats,Section,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\HvaFile.cs,GetNormals,The following statement contains a magic number: switch (NormalsMode) {  					case 1:  						return Normals1;  					case 2:  						return Normals2;  					case 3:  						return Normals3;  					case 4:  						return Normals4;  					default:  						throw new ArgumentException();  				}
Magic Number,CNCMaps.FileFormats,IniFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,ProcessLine,The following statement contains a magic number: string sectionName = line.Substring(1' line.Length - 2);
Magic Number,CNCMaps.FileFormats,IniFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,Save,The following statement contains a magic number: var sw = new StreamWriter(filename' false' Encoding.Default' 64 * 1024);
Magic Number,CNCMaps.FileFormats,IniFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,Save,The following statement contains a magic number: var sw = new StreamWriter(filename' false' Encoding.Default' 64 * 1024);
Magic Number,CNCMaps.FileFormats,IniSection,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,ReadColor,The following statement contains a magic number: colorParts.Length == 3 && int.TryParse(colorParts[0]' out r) && int.TryParse(colorParts[0]' out g) && int.TryParse(colorParts[0]' out b)
Magic Number,CNCMaps.FileFormats,IniSection,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\IniFile.cs,ReadXYZ,The following statement contains a magic number: int.TryParse(parts[0]' out x) && int.TryParse(parts[1]' out y) && int.TryParse(parts[2]' out z)
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: byte[] keyblock = Read(80);
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: uint[] h = ReadUints(this' 2);
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,IsValid,The following statement contains a magic number: return numFiles > 0 && 84 + (6 + numFiles * 12 + 7 & ~7) + dataSize + ((signature & (uint)MixFileFlags.Checksum) != 0 ? 20 : 0) == Length;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,ParseRaHeader,The following statement contains a magic number: byte[] keyblock = reader.Read(80);
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,ParseRaHeader,The following statement contains a magic number: uint[] h = ReadUints(reader' 2);
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,ParseRaHeader,The following statement contains a magic number: int byteCount = 6 + numFiles * MixEntry.Size;
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,ParseRaHeader,The following statement contains a magic number: h = ReadUints(reader' (byteCount + 3) / 4);
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,ParseRaHeader,The following statement contains a magic number: h = ReadUints(reader' (byteCount + 3) / 4);
Magic Number,CNCMaps.FileFormats,MixFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,ParseRaHeader,The following statement contains a magic number: dataStart = headerStart + byteCount + ((~byteCount + 1) & 7);
Magic Number,CNCMaps.FileFormats,MixEntry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,HashFilename,The following statement contains a magic number: int a = l >> 2;
Magic Number,CNCMaps.FileFormats,MixEntry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,HashFilename,The following statement contains a magic number: filename += (char)(l - (a << 2));
Magic Number,CNCMaps.FileFormats,MixEntry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,HashFilename,The following statement contains a magic number: int i = 3 - (l & 3);
Magic Number,CNCMaps.FileFormats,MixEntry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,HashFilename,The following statement contains a magic number: int i = 3 - (l & 3);
Magic Number,CNCMaps.FileFormats,MixEntry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,HashFilename,The following statement contains a magic number: filename += filename[a << 2];
Magic Number,CNCMaps.FileFormats,MixEntry,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\MixFile.cs,HashFilename,The following statement contains a magic number: (l & 3) != 0
Magic Number,CNCMaps.FileFormats,PalFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\PalFile.cs,GetOriginalColors,The following statement contains a magic number: return Read(256 * 3);
Magic Number,CNCMaps.FileFormats,PalFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\PalFile.cs,GetOriginalColors,The following statement contains a magic number: return Read(256 * 3);
Magic Number,CNCMaps.FileFormats,TmpFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\TmpFile.cs,Initialize,The following statement contains a magic number: int imageData = BitConverter.ToInt32(index' x * 4);
Magic Number,CNCMaps.FileFormats,TmpImage,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\TmpFile.cs,Read,The following statement contains a magic number: f.Read(3);
Magic Number,CNCMaps.FileFormats,TmpImage,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\TmpFile.cs,Read,The following statement contains a magic number: TileData = f.Read(f.BlockWidth * f.BlockHeight / 2);
Magic Number,CNCMaps.FileFormats,TmpImage,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\TmpFile.cs,Read,The following statement contains a magic number: ZData = f.Read(f.BlockWidth * f.BlockHeight / 2);
Magic Number,CNCMaps.FileFormats,VplFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VplFile.cs,Parse,The following statement contains a magic number: var pal = Read(768);
Magic Number,CNCMaps.FileFormats,VplFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VplFile.cs,Parse,The following statement contains a magic number: _lookupSections.Add(Read(256));
Magic Number,CNCMaps.FileFormats,FileHeader,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VxlFile.cs,Read,The following statement contains a magic number: FileName = f.ReadCString(16);
Magic Number,CNCMaps.FileFormats,FileHeader,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VxlFile.cs,Read,The following statement contains a magic number: var pal = f.Read(768);
Magic Number,CNCMaps.FileFormats,TransfMatrix,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VxlFile.cs,Read,The following statement contains a magic number: i < 3
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Blowfish,The following statement contains a magic number: m_p[i] ^= a << 24 | b << 16 | c << 8 | d;
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Blowfish,The following statement contains a magic number: m_p[i] ^= a << 24 | b << 16 | c << 8 | d;
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Blowfish,The following statement contains a magic number: m_p[i] ^= a << 24 | b << 16 | c << 8 | d;
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Blowfish,The following statement contains a magic number: i < 18
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Blowfish,The following statement contains a magic number: i < 18
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Blowfish,The following statement contains a magic number: i < 4
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,RunCipher,The following statement contains a magic number: int size = data.Length/2;
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Encrypt,The following statement contains a magic number: i <= 16
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Encrypt,The following statement contains a magic number: _b ^= m_p[17];
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,Decrypt,The following statement contains a magic number: _a ^= m_p[17];
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,S,The following statement contains a magic number: return m_s[i' (x >> ((3 - i) << 3)) & 0xff];
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,S,The following statement contains a magic number: return m_s[i' (x >> ((3 - i) << 3)) & 0xff];
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,bf_f,The following statement contains a magic number: return ((S(x' 0) + S(x' 1)) ^ S(x' 2)) + S(x' 3);
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,bf_f,The following statement contains a magic number: return ((S(x' 0) + S(x' 1)) ^ S(x' 2)) + S(x' 3);
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = (i << 16) | (i >> 16);
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = (i << 16) | (i >> 16);
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = ((i << 8) & 0xff00ff00) | ((i >> 8) & 0x00ff00ff);
Magic Number,CNCMaps.FileFormats.Encodings,Blowfish,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = ((i << 8) & 0xff00ff00) | ((i >> 8) & 0x00ff00ff);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,move_key_to_big,The following statement contains a magic number: uint i = blen*4;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,key_to_bignum,The following statement contains a magic number: key[j] != 2
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,key_to_bignum,The following statement contains a magic number: keylen = (keylen << 8) | key[j + i + 1];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,key_to_bignum,The following statement contains a magic number: keylen <= len*4
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,bitlen_bignum,The following statement contains a magic number: bitlen = ddlen*32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: var keytmp = new byte[256];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: init_bignum(pubkey.key2' 0x10001' 64);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: tmp <<= 6;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: tmp <<= 6;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: tmp <<= 6;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: keytmp[i2++] = (byte) ((tmp >> 16) & 0xff);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: keytmp[i2++] = (byte) ((tmp >> 8) & 0xff);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: key_to_bignum(pubkey.key1' keytmp' 64);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: pubkey.len = bitlen_bignum(pubkey.key1' 64) - 1;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,len_predata,The following statement contains a magic number: uint a = (pubkey.len - 1)/8;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,len_predata,The following statement contains a magic number: return (55/a + 1)*(a + 1);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,shr_bignum,The following statement contains a magic number: int i2 = bits/32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,shr_bignum,The following statement contains a magic number: bits = bits%32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,shr_bignum,The following statement contains a magic number: n[i] = (n[i] >> bits) | (n[i + 1] << (32 -  				                                      bits));
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,shl_bignum,The following statement contains a magic number: i2 = bits/32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,shl_bignum,The following statement contains a magic number: bits = bits%32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,shl_bignum,The following statement contains a magic number: n[i] = (n[i] << bits) | (n[i - 1] >> (32 -  				                                      bits));
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: var n_tmp = new uint[64];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: bit = ((uint) 1) << (n2_bitlen%32);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: j = ((n2_bitlen + 32)/32) - 1;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: j = ((n2_bitlen + 32)/32) - 1;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: n2_bytelen = (uint) ((n2_bitlen - 1)/32)*4;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: n2_bytelen = (uint) ((n2_bitlen - 1)/32)*4;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: n_tmp[n2_bytelen/4] |= ((uint) 1) << ((n2_bitlen - 1) & 0x1f);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_len_x2 = (glob1_bitlen + 15)/16;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_len_x2 = (glob1_bitlen + 15)/16;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: mov_bignum(glob1_hi' glob1.Skip((int) len_bignum(glob1' len) - 2).ToArray()' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: mov_bignum(glob1_hi' glob1.Skip((int) len_bignum(glob1' len) - 2).ToArray()' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = bitlen_bignum(glob1_hi' 2) - 32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = bitlen_bignum(glob1_hi' 2) - 32;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: shr_bignum(glob1_hi' (int) glob1_hi_bitlen' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: inv_bignum(glob1_hi_inv' glob1_hi' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: shr_bignum(glob1_hi_inv' 1' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = (glob1_hi_bitlen + 15)%16 + 1;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = (glob1_hi_bitlen + 15)%16 + 1;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: inc_bignum(glob1_hi_inv' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: shr_bignum(glob1_hi_inv' 1' 2);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: bitlen_bignum(glob1_hi_inv' 2) > 32
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: bitlen_bignum(glob1_hi_inv' 2) > 32
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_inv_hi = (ushort) (glob1_hi_inv[0] >> 16);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,mul_bignum_word,The following statement contains a magic number: tmp >>= 16;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,mul_bignum,The following statement contains a magic number: fixed (uint* _pdest = &dest[0]) {  					var psrc2 = (ushort*) _psrc2;  					var pdest = (ushort*) _pdest;    					init_bignum(dest' 0' len*2);  					for (i = 0; i < len*2; i++)  						mul_bignum_word(pdest++' src1' *psrc2++' len*2);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,mul_bignum,The following statement contains a magic number: fixed (uint* _pdest = &dest[0]) {  					var psrc2 = (ushort*) _psrc2;  					var pdest = (ushort*) _pdest;    					init_bignum(dest' 0' len*2);  					for (i = 0; i < len*2; i++)  						mul_bignum_word(pdest++' src1' *psrc2++' len*2);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,mul_bignum,The following statement contains a magic number: fixed (uint* _pdest = &dest[0]) {  					var psrc2 = (ushort*) _psrc2;  					var pdest = (ushort*) _pdest;    					init_bignum(dest' 0' len*2);  					for (i = 0; i < len*2; i++)  						mul_bignum_word(pdest++' src1' *psrc2++' len*2);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: var i = (uint) ((((((((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_lo + 0x10000) >> 1)  			                     + (((*(wn - 2) ^ 0xffff)*glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  			                    >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_hi) >> 1) +  			                   (((*wn ^ 0xffff)*glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  			                 *(*wn ^ 0xffff)*2) >> (int) glob1_hi_bitlen);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: var i = (uint) ((((((((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_lo + 0x10000) >> 1)  			                     + (((*(wn - 2) ^ 0xffff)*glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  			                    >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_hi) >> 1) +  			                   (((*wn ^ 0xffff)*glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  			                 *(*wn ^ 0xffff)*2) >> (int) glob1_hi_bitlen);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: var i = (uint) ((((((((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_lo + 0x10000) >> 1)  			                     + (((*(wn - 2) ^ 0xffff)*glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  			                    >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_hi) >> 1) +  			                   (((*wn ^ 0xffff)*glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  			                 *(*wn ^ 0xffff)*2) >> (int) glob1_hi_bitlen);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: var i = (uint) ((((((((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_lo + 0x10000) >> 1)  			                     + (((*(wn - 2) ^ 0xffff)*glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  			                    >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff)*glob1_hi_inv_hi) >> 1) +  			                   (((*wn ^ 0xffff)*glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  			                 *(*wn ^ 0xffff)*2) >> (int) glob1_hi_bitlen);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0]) {  					mul_bignum(glob2' n2' n3' len);  					glob2[len*2] = 0;  					g2_len_x2 = len_bignum(glob2' len*2 + 1)*2;  					if (g2_len_x2 >= glob1_len_x2) {  						inc_bignum(glob2' len*2 + 1);  						neg_bignum(glob2' len*2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*) g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*) g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--) {  							edi--;  							uint tmp = get_mulword((uint*) edi);  							esi--;  							if (tmp > 0) {  								mul_bignum_word(esi' glob1' tmp' 2*len);  								if ((*edi & 0x8000) == 0) {  									if (0 != sub_bignum((uint*) esi' (uint*) esi' g1' 0' (int) len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0]) {  					mul_bignum(glob2' n2' n3' len);  					glob2[len*2] = 0;  					g2_len_x2 = len_bignum(glob2' len*2 + 1)*2;  					if (g2_len_x2 >= glob1_len_x2) {  						inc_bignum(glob2' len*2 + 1);  						neg_bignum(glob2' len*2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*) g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*) g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--) {  							edi--;  							uint tmp = get_mulword((uint*) edi);  							esi--;  							if (tmp > 0) {  								mul_bignum_word(esi' glob1' tmp' 2*len);  								if ((*edi & 0x8000) == 0) {  									if (0 != sub_bignum((uint*) esi' (uint*) esi' g1' 0' (int) len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0]) {  					mul_bignum(glob2' n2' n3' len);  					glob2[len*2] = 0;  					g2_len_x2 = len_bignum(glob2' len*2 + 1)*2;  					if (g2_len_x2 >= glob1_len_x2) {  						inc_bignum(glob2' len*2 + 1);  						neg_bignum(glob2' len*2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*) g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*) g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--) {  							edi--;  							uint tmp = get_mulword((uint*) edi);  							esi--;  							if (tmp > 0) {  								mul_bignum_word(esi' glob1' tmp' 2*len);  								if ((*edi & 0x8000) == 0) {  									if (0 != sub_bignum((uint*) esi' (uint*) esi' g1' 0' (int) len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0]) {  					mul_bignum(glob2' n2' n3' len);  					glob2[len*2] = 0;  					g2_len_x2 = len_bignum(glob2' len*2 + 1)*2;  					if (g2_len_x2 >= glob1_len_x2) {  						inc_bignum(glob2' len*2 + 1);  						neg_bignum(glob2' len*2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*) g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*) g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--) {  							edi--;  							uint tmp = get_mulword((uint*) edi);  							esi--;  							if (tmp > 0) {  								mul_bignum_word(esi' glob1' tmp' 2*len);  								if ((*edi & 0x8000) == 0) {  									if (0 != sub_bignum((uint*) esi' (uint*) esi' g1' 0' (int) len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0]) {  					mul_bignum(glob2' n2' n3' len);  					glob2[len*2] = 0;  					g2_len_x2 = len_bignum(glob2' len*2 + 1)*2;  					if (g2_len_x2 >= glob1_len_x2) {  						inc_bignum(glob2' len*2 + 1);  						neg_bignum(glob2' len*2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*) g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*) g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--) {  							edi--;  							uint tmp = get_mulword((uint*) edi);  							esi--;  							if (tmp > 0) {  								mul_bignum_word(esi' glob1' tmp' 2*len);  								if ((*edi & 0x8000) == 0) {  									if (0 != sub_bignum((uint*) esi' (uint*) esi' g1' 0' (int) len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0]) {  					mul_bignum(glob2' n2' n3' len);  					glob2[len*2] = 0;  					g2_len_x2 = len_bignum(glob2' len*2 + 1)*2;  					if (g2_len_x2 >= glob1_len_x2) {  						inc_bignum(glob2' len*2 + 1);  						neg_bignum(glob2' len*2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*) g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*) g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--) {  							edi--;  							uint tmp = get_mulword((uint*) edi);  							esi--;  							if (tmp > 0) {  								mul_bignum_word(esi' glob1' tmp' 2*len);  								if ((*edi & 0x8000) == 0) {  									if (0 != sub_bignum((uint*) esi' (uint*) esi' g1' 0' (int) len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,clear_tmp_vars,The following statement contains a magic number: init_bignum(glob1_hi_inv' 0' 4);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,clear_tmp_vars,The following statement contains a magic number: init_bignum(glob1_hi' 0' 4);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: var n_tmp = new uint[64];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: n3_len = (uint) ((n3_bitlen + 31)/32);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: n3_len = (uint) ((n3_bitlen + 31)/32);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: bit_mask = (((uint) 1) << ((n3_bitlen - 1)%32)) >> 1;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: var n2 = new uint[64];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: var n3 = new uint[64];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: uint a = (pubkey.len - 1)/8;
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: init_bignum(n2' 0' 64);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: calc_a_key(n3' n2' pubkey.key2' pubkey.key1' 64);
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,DecryptKey,The following statement contains a magic number: var dest = new byte[256];
Magic Number,CNCMaps.FileFormats.Encodings,BlowfishKeyProvider,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\BlowfishKeyProvider.cs,DecryptKey,The following statement contains a magic number: return dest.Take(56).ToArray();
Magic Number,CNCMaps.FileFormats.Encodings,CRC32,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\CRC32.cs,CalculateCrc,The following statement contains a magic number: crc = (crc >> 8) ^ LookUp[(crc & 0xFF) ^ data[i]];
Magic Number,CNCMaps.FileFormats.Encodings,CRC32,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\CRC32.cs,CalculateCrc,The following statement contains a magic number: crc = (crc >> 8) ^ LookUp[(crc & 0xFF) ^ *data++];
Magic Number,CNCMaps.FileFormats.Encodings,Format3,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format3.cs,DecodeInto,The following statement contains a magic number: var count = (ushort) (*(ushort*) r - 2);
Magic Number,CNCMaps.FileFormats.Encodings,Format3,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format3.cs,DecodeInto,The following statement contains a magic number: r += 2;
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,DecodeInto,The following statement contains a magic number: r += 2;
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,DecodeInto,The following statement contains a magic number: r += 2;
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,DecodeInto,The following statement contains a magic number: format == 80
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: var dest = new byte[source.Length * 2];
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: var cb_in = (short)Math.Min(src.Remaining' 8192);
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: var chunk_out = format == 80 ? Format80.Encode(chunk_in) : EncodeSection(chunk_in);
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(cb_out)' 0' dest' w' 2);
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: w += 2;
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(cb_in)' 0' dest' w' 2);
Magic Number,CNCMaps.FileFormats.Encodings,Format5,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format5.cs,Encode,The following statement contains a magic number: w += 2;
Magic Number,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,The following statement contains a magic number: int count = ((i & 0x70) >> 4) + 3;
Magic Number,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,The following statement contains a magic number: int count = ((i & 0x70) >> 4) + 3;
Magic Number,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,The following statement contains a magic number: int rpos = ((i & 0xf) << 8) + secondByte;
Magic Number,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,The following statement contains a magic number: count = (code >> 4) + 3;
Magic Number,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,The following statement contains a magic number: count = (code >> 4) + 3;
Magic Number,CNCMaps.FileFormats.Encodings,Format80,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\Format80.cs,DecodeInto,The following statement contains a magic number: copyp = writep - (((code & 0xf) << 8) + *readp++);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: byte* ip_end = @in + in_len - 20;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: ip += ti < 4 ? 4 - ti : 0;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: ip += ti < 4 ? 4 - ti : 0;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: ip += 1 + ((ip - ii) >> 5);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: dindex = ((uint)(((((((uint)((0x1824429d) * (dv)))) >> (32 - 14))) & (((1u << (14)) - 1) >> (0))) << (0)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: dindex = ((uint)(((((((uint)((0x1824429d) * (dv)))) >> (32 - 14))) & (((1u << (14)) - 1) >> (0))) << (0)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: dindex = ((uint)(((((((uint)((0x1824429d) * (dv)))) >> (32 - 14))) & (((1u << (14)) - 1) >> (0))) << (0)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: op[-2] |= ((byte)(t));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: m_len = 4;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: do {  							m_len += 4;  							v = (*(uint*)(void*)(ip + m_len)) ^ (*(uint*)(void*)(m_pos + m_len));  							if (ip + m_len >= ip_end)  								goto m_len_done;  						} while (v == 0);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: m_len += (uint)lzo_bitops_ctz32(v) / 8;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: *op++ = ((byte)(((m_len - 1) << 5) | ((m_off & 7) << 2)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: *op++ = ((byte)(((m_len - 1) << 5) | ((m_off & 7) << 2)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: *op++ = ((byte)(((m_len - 1) << 5) | ((m_off & 7) << 2)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: *op++ = ((byte)(m_off >> 3));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress_core,The following statement contains a magic number: m_len <= 8 && m_off <= 0x0800
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo_bitops_ctz32,The following statement contains a magic number: return MultiplyDeBruijnBitPosition[((uint)((v & -v) * 0x077CB531U)) >> 27];
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: ll = ((ll) <= (49152) ? (ll) : (49152));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: ll = ((ll) <= (49152) ? (ll) : (49152));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: (ll_end + ((t + ll) >> 5)) <= ll_end || (byte*)(ll_end + ((t + ll) >> 5)) <= ip + ll
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: (ll_end + ((t + ll) >> 5)) <= ll_end || (byte*)(ll_end + ((t + ll) >> 5)) <= ip + ll
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: i < (1 << 14) * sizeof(ushort)
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: l > 20
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: *op++ = ((byte)(17 + t));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: op == @out && t <= 238
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_1_compress,The following statement contains a magic number: *op++ = 16 | 1;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t = (uint)(*ip++ - 17);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t < 4
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: *ip > 17
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t >= 16
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t += 255;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t += (uint)(15 + *ip++);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: op += 4;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: ip += 4;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: op += 4;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: ip += 4;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t -= 4;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t >= 4
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: t >= 16
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: m_pos -= t >> 2;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: m_pos -= *ip++ << 2;
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: do {  					if (gt_match_done) {  						gt_match_done = false;  						goto match_done;  						;  					}  					if (t >= 64) {  						m_pos = op - 1;  						m_pos -= (t >> 2) & 7;  						m_pos -= *ip++ << 3;  						t = (t >> 5) - 1;    						copy_match(ref op' ref m_pos' ref t);  						goto match_done;  					}  					else if (t >= 32) {  						t &= 31;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(31 + *ip++);  						}  						m_pos = op - 1;  						m_pos -= (*(ushort*)(void*)(ip)) >> 2;  						ip += 2;  					}  					else if (t >= 16) {  						m_pos = op;  						m_pos -= (t & 8) << 11;  						t &= 7;  						if (t == 0) {  							while (*ip == 0) {  								t += 255;  								ip++;  							}  							t += (uint)(7 + *ip++);  						}  						m_pos -= (*(ushort*)ip) >> 2;  						ip += 2;  						if (m_pos == op)  							goto eof_found;  						m_pos -= 0x4000;  					}  					else {  						m_pos = op - 1;  						m_pos -= t >> 2;  						m_pos -= *ip++ << 2;  						*op++ = *m_pos++; *op++ = *m_pos;  						goto match_done;  					}    					if (t >= 2 * 4 - (3 - 1) && (op - m_pos) >= 4) {  						*(uint*)op = *(uint*)m_pos;  						op += 4; m_pos += 4; t -= 4 - (3 - 1);  						do {  							*(uint*)op = *(uint*)m_pos;  							op += 4; m_pos += 4; t -= 4;  						} while (t >= 4);  						if (t > 0) do *op++ = *m_pos++; while (--t > 0);  					}  					else {  					// copy_match:  						*op++ = *m_pos++; *op++ = *m_pos++;  						do *op++ = *m_pos++; while (--t > 0);  					}  				match_done:  					t = (uint)(ip[-2] & 3);  					if (t == 0)  						break;  				// match_next:  					*op++ = *ip++;  					if (t > 1) { *op++ = *ip++; if (t > 2) { *op++ = *ip++; } }  					t = *ip++;  				} while (true);
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: return (ip == ip_end ? 0 :  				   (ip < ip_end ? (-8) : (-4)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,lzo1x_decompress,The following statement contains a magic number: return (ip == ip_end ? 0 :  				   (ip < ip_end ? (-8) : (-4)));
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,Compress,The following statement contains a magic number: byte[] @out = new byte[input.Length + (input.Length / 16) + 64 + 3];
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,Compress,The following statement contains a magic number: byte[] @out = new byte[input.Length + (input.Length / 16) + 64 + 3];
Magic Number,CNCMaps.FileFormats.Encodings,MiniLZO,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Encodings\MiniLZO.cs,Compress,The following statement contains a magic number: byte[] @out = new byte[input.Length + (input.Length / 16) + 64 + 3];
Magic Number,CNCMaps.FileFormats.Map,Lighting,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\Lighting.cs,Lighting,The following statement contains a magic number: Level = iniSection.ReadDouble("Level"' 0.032);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,Initialize,The following statement contains a magic number: FullSize = new Rectangle(int.Parse(size[0])' int.Parse(size[1])' int.Parse(size[2])' int.Parse(size[3]));
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,Initialize,The following statement contains a magic number: FullSize = new Rectangle(int.Parse(size[0])' int.Parse(size[1])' int.Parse(size[2])' int.Parse(size[3]));
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,Initialize,The following statement contains a magic number: LocalSize = new Rectangle(int.Parse(size[0])' int.Parse(size[1])' int.Parse(size[2])' int.Parse(size[3]));
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,Initialize,The following statement contains a magic number: LocalSize = new Rectangle(int.Parse(size[0])' int.Parse(size[1])' int.Parse(size[2])' int.Parse(size[3]));
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: int cells = (FullSize.Width * 2 - 1) * FullSize.Height;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: int lzoPackSize = cells * 11 + 4;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: int lzoPackSize = cells * 11 + 4;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: Tiles[(ushort)dx' (ushort)dy / 2] = tile;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: dx >= 0 && dx < 2 * Tiles.Width &&  					dy >= 0 && dy < 2 * Tiles.Height
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: dx >= 0 && dx < 2 * Tiles.Width &&  					dy >= 0 && dy < 2 * Tiles.Height
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: ushort dy = (ushort)(y * 2 + x % 2);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: ushort dy = (ushort)(y * 2 + x % 2);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: ushort rx = (ushort)((dx + dy) / 2 + 1);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: x <= FullSize.Width * 2 - 2
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTiles,The following statement contains a magic number: x <= FullSize.Width * 2 - 2
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTerrain,The following statement contains a magic number: int rx = pos % 1000;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadTerrain,The following statement contains a magic number: int ry = pos / 1000;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadSmudges,The following statement contains a magic number: entries.Length <= 2
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadSmudges,The following statement contains a magic number: int ry = int.Parse(entries[2]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadOverlay,The following statement contains a magic number: var overlayPack = new byte[1 << 18];
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadOverlay,The following statement contains a magic number: Format5.DecodeInto(format80Data' overlayPack' 80);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadOverlay,The following statement contains a magic number: var overlayDataPack = new byte[1 << 18];
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadOverlay,The following statement contains a magic number: Format5.DecodeInto(format80Data' overlayDataPack' 80);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadOverlay,The following statement contains a magic number: int idx = t.Rx + 512 * t.Ry;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The following statement contains a magic number: entries.Length <= 8
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The following statement contains a magic number: short health = short.Parse(entries[2]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The following statement contains a magic number: int rx = int.Parse(entries[3]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The following statement contains a magic number: int ry = int.Parse(entries[4]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The following statement contains a magic number: short direction = short.Parse(entries[7]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadInfantry,The following statement contains a magic number: bool onBridge = entries[11] == "1";
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The following statement contains a magic number: entries.Length <= 11
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The following statement contains a magic number: short health = short.Parse(entries[2]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The following statement contains a magic number: int rx = int.Parse(entries[3]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The following statement contains a magic number: int ry = int.Parse(entries[4]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The following statement contains a magic number: short direction = short.Parse(entries[5]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadUnits,The following statement contains a magic number: bool onBridge = entries[10] == "1";
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The following statement contains a magic number: short health = short.Parse(entries[2]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The following statement contains a magic number: int rx = int.Parse(entries[3]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The following statement contains a magic number: int ry = int.Parse(entries[4]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The following statement contains a magic number: short direction = short.Parse(entries[5]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadAircraft,The following statement contains a magic number: bool onBridge = entries[entries.Length - 4] == "1";
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: entries.Length <= 15
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: short health = short.Parse(entries[2]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: int rx = int.Parse(entries[3]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: int ry = int.Parse(entries[4]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: short direction = short.Parse(entries[5]);
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: s.Upgrade1 = entries[12];
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: s.Upgrade2 = entries[13];
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadStructures,The following statement contains a magic number: s.Upgrade3 = entries[14];
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadWaypoints,The following statement contains a magic number: int ry = pos / 1000;
Magic Number,CNCMaps.FileFormats.Map,MapFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\MapFile.cs,ReadWaypoints,The following statement contains a magic number: int rx = pos - ry * 1000;
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,TileLayer,The following statement contains a magic number: isoTiles = new IsoTile[fullSize.Width * 2 - 1' fullSize.Height];
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,GetTileR,The following statement contains a magic number: dx < 0 || dy < 0 || dx >= isoTiles.GetLength(0) || (dy / 2) >= isoTiles.GetLength(1)
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: int cells = (Width * 2 - 1) * Height;
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: int lzoPackSize = cells * 11 + 4;
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: int lzoPackSize = cells * 11 + 4;
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: Array.Copy(bs' 0' isoMapPack' di' 11);
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: di += 11;
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: var compressed = Format5.Encode(isoMapPack' 5);
Magic Number,CNCMaps.FileFormats.Map,TileLayer,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\Map\TileLayer.cs,SerializeIsoMapPack5,The following statement contains a magic number: int adv = Math.Min(74' compressed64.Length - idx);
Magic Number,CNCMaps.FileFormats.VirtualFileSystem,VirtualFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VirtualFile.cs,ReadFloat2,The following statement contains a magic number: byte[] rev = new[] {ori[3]' ori[2]' ori[1]' ori[0]};
Magic Number,CNCMaps.FileFormats.VirtualFileSystem,VirtualFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VirtualFile.cs,ReadFloat2,The following statement contains a magic number: byte[] rev = new[] {ori[3]' ori[2]' ori[1]' ori[0]};
Magic Number,CNCMaps.FileFormats.VirtualFileSystem,VirtualTextFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VirtualTextFile.cs,ReadLine,The following statement contains a magic number: var builder = new StringBuilder(80);
Missing Default,CNCMaps.FileFormats.VirtualFileSystem,VirtualFile,D:\research\architectureSmells\repos\zzattack_ccmaps-net\CNCMaps.FileFormats\VirtualFileSystem\VirtualFile.cs,Seek,The following switch statement is missing a default case: switch (origin) {  				case SeekOrigin.Begin:  					Position = offset;  					break;  				case SeekOrigin.Current:  					Position += offset;  					break;  				case SeekOrigin.End:  					Position = Length - offset;  					break;  			}
