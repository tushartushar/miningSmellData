Implementation smell,Namespace,Class,File,Method,Description
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,Transform,The following statement contains a magic number: if (DimSource > 2)                  z[0] = point[2];
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,Transform,The following statement contains a magic number: if (DimSource > 2)                  z[0] = point[2];
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,Transform,The following statement contains a magic number: if (DimTarget > 2)                  return new [] {xy[0]' xy[1]' z[0]};
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: var xy = new double[2 * points.Count];
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i][0];                  xy[2 * i + 1] = points[i][1];                  if (DimSource > 2)                      z[i] = points[i][2];              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i][0];                  xy[2 * i + 1] = points[i][1];                  if (DimSource > 2)                      z[i] = points[i][2];              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i][0];                  xy[2 * i + 1] = points[i][1];                  if (DimSource > 2)                      z[i] = points[i][2];              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i][0];                  xy[2 * i + 1] = points[i][1];                  if (DimSource > 2)                      z[i] = points[i][2];              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] {xy[2*i]' xy[2*i + 1]' z[i]});              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] { xy[2 * i]' xy[2 * i + 1] });              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] {xy[2*i]' xy[2*i + 1]' z[i]});              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] { xy[2 * i]' xy[2 * i + 1] });              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] {xy[2*i]' xy[2*i + 1]' z[i]});              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] { xy[2 * i]' xy[2 * i + 1] });              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] {xy[2*i]' xy[2*i + 1]' z[i]});              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] { xy[2 * i]' xy[2 * i + 1] });              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] {xy[2*i]' xy[2*i + 1]' z[i]});              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new[] { xy[2 * i]' xy[2 * i + 1] });              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: var xy = new double[2 * points.Count];
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i].X;                  xy[2 * i + 1] = points[i].Y;                  if (DimSource > 2)                      z[i] = points[i].Z;              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i].X;                  xy[2 * i + 1] = points[i].Y;                  if (DimSource > 2)                      z[i] = points[i].Z;              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: for (int i = 0; i < points.Count; i++)              {                  xy[2 * i] = points[i].X;                  xy[2 * i + 1] = points[i].Y;                  if (DimSource > 2)                      z[i] = points[i].Z;              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]' z[i] ));              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]));              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]' z[i] ));              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]));              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]' z[i] ));              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]));              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]' z[i] ));              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]));              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,TransformList,The following statement contains a magic number: if (DimTarget > 2)              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]' z[i] ));              }              else              {                  for (int i = 0; i < points.Count; i++)                      ret.Add(new Coordinate( xy[2 * i]' xy[2 * i + 1]));              }
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,Transform,The following statement contains a magic number: var xy = new double[2*coordinateSequence.Count];
Magic Number,NetTopologySuite.CoordinateSystems.Transformation.DotSpatial.Projections,DotSpatialMathTransform,C:\repos\NetTopologySuite_NetTopologySuite\NetTopologySuite.CoordinateSystems.Transfromation\DotSpatial.Projections.Wrapper\DotSpatialMathTransform.cs,Transform,The following statement contains a magic number: for (var i = 0; i < coordinateSequence.Count; i++)              {                  ret.SetOrdinate(i' Ordinate.X' xy[j++]);                  ret.SetOrdinate(i' Ordinate.Y' xy[j++]);                  if (z != null && DimTarget>2)                       ret.SetOrdinate(i' Ordinate.Z' z[i]);                  else                       ret.SetOrdinate(i'Ordinate.Z' coordinateSequence.GetOrdinate(i' Ordinate.Z));              }
