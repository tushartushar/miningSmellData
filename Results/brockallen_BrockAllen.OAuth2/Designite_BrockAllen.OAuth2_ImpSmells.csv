Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BrockAllen.OAuth2,OAuth2Client,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuth2Client.cs,RegisterProvider,The method has 5 parameters. Parameters: providerType' clientID' clientSecret' scope' additionalParameters
Long Parameter List,BrockAllen.OAuth2,Provider,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\Provider.cs,Provider,The method has 8 parameters. Parameters: type' authorizationUrl' tokenUrl' profileUrl' clientID' clientSecret' accessTokenParameterName' additionalParams
Long Statement,BrockAllen.OAuth2,OAuthAreaRegistration,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuthAreaRegistration.cs,RegisterArea,The length of the statement  "                        var clientID = provider.Where(x => x.key.Equals("clientID"' StringComparison.OrdinalIgnoreCase)).Select(x => x.value).SingleOrDefault(); " is 136.
Long Statement,BrockAllen.OAuth2,OAuthAreaRegistration,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuthAreaRegistration.cs,RegisterArea,The length of the statement  "                        var clientSecret = provider.Where(x => x.key.Equals("clientSecret"' StringComparison.OrdinalIgnoreCase)).Select(x => x.value).SingleOrDefault(); " is 144.
Long Statement,BrockAllen.OAuth2,OAuthAreaRegistration,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuthAreaRegistration.cs,RegisterArea,The length of the statement  "                        var scope = provider.Where(k => k.key.Equals("scope"' StringComparison.OrdinalIgnoreCase)).Select(x=>x.value).SingleOrDefault(); " is 128.
Empty Catch Block,BrockAllen.OAuth2,OAuthAreaRegistration,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuthAreaRegistration.cs,RegisterArea,The method has an empty catch block.
Magic Number,BrockAllen.OAuth2,Provider,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\Provider.cs,GetRedirect,The following statement contains a magic number: var state = Base64Url.Encode(CryptoRandom.CreateRandomKey(10));
Magic Number,BrockAllen.OAuth2,OAuthAreaRegistration,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuthAreaRegistration.cs,RegisterArea,The following statement contains a magic number: var providers = from v in                                      (from string q in settings.Keys                                       where q.StartsWith("oauth2:")                                       let parts = q.Split(':')                                       where parts.Length == 3                                       select new { provider=parts[1]' key = parts[2]' value=settings[q] })                                  group v by v.provider;
Magic Number,BrockAllen.OAuth2,OAuthAreaRegistration,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuthAreaRegistration.cs,RegisterArea,The following statement contains a magic number: var providers = from v in                                      (from string q in settings.Keys                                       where q.StartsWith("oauth2:")                                       let parts = q.Split(':')                                       where parts.Length == 3                                       select new { provider=parts[1]' key = parts[2]' value=settings[q] })                                  group v by v.provider;
Missing Default,BrockAllen.OAuth2,OAuth2Client,D:\research\architectureSmells\repos\brockallen_BrockAllen.OAuth2\BrockAllen.OAuth2\OAuth2Client.cs,RegisterProvider,The following switch statement is missing a default case: switch (providerType)              {                  case ProviderType.Google:                      provider = new GoogleProvider(clientID' clientSecret' scope' additionalParameters);                      break;                  case ProviderType.Live:                      provider = new LiveProvider(clientID' clientSecret' scope' additionalParameters);                      break;                  case ProviderType.Facebook:                      provider = new FacebookProvider(clientID' clientSecret' scope' additionalParameters);                      break;                  case ProviderType.LinkedIn:                      provider = new LinkedInProvider(clientID' clientSecret' scope' additionalParameters);                      break;              }
