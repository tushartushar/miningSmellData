Implementation smell,Namespace,Class,File,Method,Description
Long Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,ListVirtualNetworksParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\ListVirtualNetworksParser.cs,Parse,The method has 109 lines of code.
Long Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteConfigParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteConfigParser.cs,Parse,The method has 111 lines of code.
Long Method,Elastacloud.AzureManagement.Fluent.Commands.Websites,UpdateWebsiteConfigCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Websites\UpdateWebsiteConfigCommand.cs,CreatePayload,The method has 103 lines of code.
Complex Method,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,Cyclomatic complexity of the method is 8
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetAllDisksParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetAllDisksParser.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,ListVirtualNetworksParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\ListVirtualNetworksParser.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,ListImagesParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\ListImagesParser.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteMetricsParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteMetricsParser.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteConfigParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteConfigParser.cs,Parse,Cyclomatic complexity of the method is 20
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteParser.cs,Parse,Cyclomatic complexity of the method is 13
Complex Method,Elastacloud.AzureManagement.Fluent.Commands.Websites,UpdateWebsiteConfigCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Websites\UpdateWebsiteConfigCommand.cs,CreatePayload,Cyclomatic complexity of the method is 16
Complex Method,Elastacloud.AzureManagement.Fluent.Linq,TypeSystem,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\LinqToAzure\TypeSystem.cs,FindIEnumerable,Cyclomatic complexity of the method is 10
Complex Method,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,LinuxConfigurationSet,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\LinuxConfigurationSet.cs,GetXmlTree,Cyclomatic complexity of the method is 11
Complex Method,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetXmlTree,Cyclomatic complexity of the method is 8
Complex Method,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetAdHocTemplate,Cyclomatic complexity of the method is 10
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The method has 6 parameters. Parameters: accountName' accountKey' sourceContainerName' directoryName' destinationContanerName' copyDirectoryPrefix
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyStorageAnalyticsLogsTo,The method has 5 parameters. Parameters: accountName' accountKey' destinationContainer' sourceDirectory' prefix
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,The method has 5 parameters. Parameters: properties' cloudServiceName' serviceCertificate' location' affinityGroup
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients,GithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\GithubClient.cs,SetServiceHook,The method has 5 parameters. Parameters: publishingUsername' publishingPassword' azureRepoName' accountName' repoName
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients,ServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ServiceClient.cs,CreateServiceCertificateExportToStorage,The method has 5 parameters. Parameters: name' password' storageAccountName' container' folder
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients.Interfaces,ILinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Interfaces\ILinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,The method has 5 parameters. Parameters: properties' cloudServiceName' serviceCertificate' location' affinityGroup
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients.Interfaces,IGithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Interfaces\IGithubClient.cs,SetServiceHook,The method has 5 parameters. Parameters: publishingUsername' publishingPassword' azureRepoName' accountName' repoName
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients.Interfaces,IServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Interfaces\IServiceClient.cs,CreateServiceCertificateExportToStorage,The method has 5 parameters. Parameters: name' password' storageAccountName' container' folder
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients.Interfaces,PaaSDeploymentSettings,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Interfaces\IServiceClient.cs,PaaSDeploymentSettings,The method has 7 parameters. Parameters: cspkgStorageEndpoint' cloudServiceName' cscfgConfig' instanceCount' storageAccountName' roleName' location
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients.Interfaces,IBlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Interfaces\IBlobClient.cs,CopyDirectoryTo,The method has 6 parameters. Parameters: accountName' accountKey' sourceContainerName' directoryName' destinationContanerName' copyDirectoryPrefix
Long Parameter List,Elastacloud.AzureManagement.Fluent.Clients.Interfaces,IBlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Interfaces\IBlobClient.cs,CopyStorageAnalyticsLogsTo,The method has 5 parameters. Parameters: accountName' accountKey' destinationContainer' sourceDirectory' prefix
Long Parameter List,Elastacloud.AzureManagement.Fluent.Commands.Services,CreateDeploymentCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Services\CreateDeploymentCommand.cs,CreateDeploymentCommand,The method has 7 parameters. Parameters: serviceName' deploymentName' packageUri' config' slot' startDeployment' treatWarningsAsErrors
Long Parameter List,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,Create,The method has 5 parameters. Parameters: name' start' end' userPassword' addtoStore
Long Parameter List,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,DataVirtualHardDisk,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\DataVirtualHardDisk.cs,GetDefaultDataDisk,The method has 5 parameters. Parameters: storageAccountName' size' logicalUnitNumber' diskName' diskLabel
Long Identifier,Elastacloud.AzureManagement.Fluent,ServiceManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\ServiceManager.cs,,The length of the parameter DefaultWindowsAzureXmlNamespace is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyBlobsFromContainerSas,The length of the parameter destinationAccountStorageCredentials is 36.
Long Identifier,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The length of the parameter sourceAccountStorageCredentials is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,The length of the parameter checkCloudServiceAvailabilityCommand is 36.
Long Identifier,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,DeleteVirtualMachine,The length of the parameter deleteVirtualMachineDeployment is 30.
Long Identifier,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,DeleteVirtualMachine,The length of the parameter deleteVirtualMachineDeployment is 30.
Long Identifier,Elastacloud.AzureManagement.Fluent.Commands.Parsers,BaseParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\BaseParser.cs,,The length of the parameter GetDeploymentConfigurationParser is 32.
Long Identifier,Elastacloud.AzureManagement.Fluent.Commands.Parsers,BaseParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\BaseParser.cs,,The length of the parameter GetCloudServicePropertiesParser is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Commands.Parsers,BaseParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\BaseParser.cs,,The length of the parameter GetMobileServiceTablePermissionsParser is 38.
Long Identifier,Elastacloud.AzureManagement.Fluent.Commands.Parsers,BaseParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\BaseParser.cs,,The length of the parameter GetMobileServiceResourcesParser is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Services,DeploymentManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\DeploymentManager.cs,WithPackageConfigDirectory,The length of the parameter deploymentConfigurationActivity is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter VisualStudioUltimate2013Preview is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter WindowsServer2008R2SP1June2013 is 30.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter WindowsServer2012DatacenterMay2013 is 34.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter WindowsServer2012DatacenterJune2013 is 35.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SUSELinuxEnterpriseServer11ServicePack2 is 39.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2008R2SP2EnterpriseOnWindowsServer2008R2SP1 is 52.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2008R2SP2StandardOnWindowsServer2008R2SP1 is 50.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2012SP1EnterpriseOnWindowsServer2008R2 is 47.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2012SP1EnterpriseOnWindowsServer2008R2SP1 is 50.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2012SP1EnterpriseOnWindowsServer2012 is 45.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2012SP1StandardOnWindowsServer2008R2SP1 is 48.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2012SP1StandardOnWindowsServer2012 is 43.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2012SP1WebOnWindowsServer2008R2SP1 is 43.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2014CTP1EvaluationEditionOnWindowsServer2012 is 53.
Long Identifier,Elastacloud.AzureManagement.Fluent.Helpers,VmConstants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\VmConstants.cs,,The length of the parameter SQLServer2014CTP1EvaluationEditionOnWindowsServer2012R2 is 55.
Long Identifier,Elastacloud.AzureManagement.Fluent.Types,Constants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Constants.cs,,The length of the parameter PluginsRemoteAccessAccountUsername is 34.
Long Identifier,Elastacloud.AzureManagement.Fluent.Types,Constants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Constants.cs,,The length of the parameter PluginsRemoteAccessAccountEncryptedPassword is 43.
Long Identifier,Elastacloud.AzureManagement.Fluent.Types,Constants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Constants.cs,,The length of the parameter PluginsRemoteAccessAccountExpiration is 36.
Long Identifier,Elastacloud.AzureManagement.Fluent.Types,Constants,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Constants.cs,,The length of the parameter MobileServicesCreateNewTemplate is 31.
Long Identifier,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetAdHocTemplate,The length of the parameter operatingSystemConfigurationSet is 31.
Long Statement,Elastacloud.AzureManagement.Fluent,QueryManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\QueryManager.cs,BuildAzureHttpRequest,The length of the statement  "            string requestUriString = String.Format("{0}/{1}"' serviceManagementRequest.BaseUri' serviceManagementRequest.SubscriptionId); " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent,QueryManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\QueryManager.cs,BuildAzureHttpRequest,The length of the statement  "                Builder.AddCertificate(serviceManagementRequest.Certificate);//request.ClientCertificates.Add(serviceManagementRequest.Certificate); " is 132.
Long Statement,Elastacloud.AzureManagement.Fluent,QueryManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\QueryManager.cs,BuildAzureHttpRequest,The length of the statement  "            Builder.SetMethod(serviceManagementRequest.HttpVerb ?? "GET");//request.Method = serviceManagementRequest.HttpVerb ?? "GET"; " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent,QueryManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\QueryManager.cs,BuildAzureHttpRequest,The length of the statement  "            Builder.SetContentType(serviceManagementRequest.ContentType ?? "application/xml");//request.ContentType = serviceManagementRequest.ContentType ?? "application/xml"; " is 164.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The length of the statement  "            if (Exists(GetFormattedImageName(imageProperties.ImageNameRoot' imageProperties.Version' false)) && copyImageOnlyIfNotExists) " is 125.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The length of the statement  "            var storageAccount = new CloudStorageAccount(new StorageCredentials(imageProperties.DestinationAccountName' destinationAccountKeys[0])' true); " is 142.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The length of the statement  "            var blobImage = containerReference.GetPageBlobReference(GetFormattedImageName(imageProperties.ImageNameRoot' index' true)); " is 123.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The length of the statement  "                blobImage = containerReference.GetPageBlobReference(GetFormattedImageName(imageProperties.ImageNameRoot' ++index' true)); " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The length of the statement  "                    blobImage = (CloudPageBlob)containerReference.GetBlobReferenceFromServer(GetFormattedImageName(imageProperties.ImageNameRoot' index' true)); " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The length of the statement  "                    double innerPercent = Math.Round(((double)blobImage.CopyState.BytesCopied.Value / (double)blobImage.CopyState.TotalBytes.Value) * 70) + 10; " is 139.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CheckVmDeploymentIsRunning,The length of the statement  "                throw new FluentManagementException("timed out listening for status changes - check vms are running correctly"' "LinuxVirtualMachineClient");        " is 141.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,The length of the statement  "            Trace.WriteLine(String.Format("Checked cloud service availability - is available: {0}"' checkCloudServiceAvailabilityCommand.CloudServiceAvailable)); " is 149.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,The length of the statement  "                var cloudServiceCommand = new CreateCloudServiceCommand(cloudServiceName' "Created by Fluent Management"' location' affinityGroup) " is 130.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CreateNewVirtualMachineDeploymentFromTemplateGallery,The length of the statement  "            var command = new CreateLinuxVirtualMachineDeploymentCommand(new List<LinuxVirtualMachineProperties>(new[]{properties[0]})' cloudServiceName) " is 141.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,DeleteVirtualMachine,The length of the statement  "                        // should be a 400 here if this is the case then there is only a single role in the deployment - quicker to do it this way! " is 123.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,Stop,The length of the statement  "                Trace.WriteLine(String.Format("VM stopped and deprovisioned with hostname {0}"' linuxVirtualMachineProperties.HostName)); " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,ServiceBusClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ServiceBusClient.cs,CreateNamespace,The length of the statement  "                throw new FluentManagementException("Service bus namespace does not follow prescribed naming rules"' "ServiceBusClient"); " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,SqlDatabaseClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\SqlDatabaseClient.cs,AddIpsToSqlFirewallFromCloudService,The length of the statement  "                throw new FluentManagementException("unable to continue without windows azure sql database server name"' "SqlDatabaseClient"); " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,SqlDatabaseClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\SqlDatabaseClient.cs,GetConnection,The length of the statement  "                    "server=tcp:{0}.database.windows.net; database={1}; user id={2}@{0}; password={3}; Trusted_Connection=False; Encrypt=True;"' " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,GithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\GithubClient.cs,SetServiceHook,The length of the statement  "                String.Format("{{\"name\": \"web\"'\"active\": true'\"events\": [\"push\"]'\"config\": {{\"url\": \"{0}\"'\"content_type\": \"json\"}}}}"' hook); " is 145.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,GithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\GithubClient.cs,GetOAuthToken,The length of the statement  "            string responseValue = _helper.PostStringResponse(Username' Password' "https://api.github.com/authorizations"' application); " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,GithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\GithubClient.cs,GetOAuthToken,The length of the statement  "            responseValue = _helper.GetStringResponse(Username' Password' String.Format("https://api.github.com/repos/{0}/{1}"' accountName' repoName)); " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,AddTableScript,The length of the statement  "                throw new FluentManagementException("unable to add table with an empty name"' "CreateMobileServicesTableScriptCommand"); " is 120.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,AddTableScript,The length of the statement  "            var values = new List<string> { table.InsertPermission.ToString()' table.UpdatePermission.ToString()' table.ReadPermission.ToString()' table.DeletePermission.ToString()}; " is 170.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,AddTableScript,The length of the statement  "            // TODO: speak to MSFT about this - the cmdlets have a bug and all of the permissions need to be added for them to update more than a single one " is 144.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,RegenerateKeys,The length of the statement  "            var command = new RegenerateMobileServiceKeyCommand(MobileServiceName){SubscriptionId = SubscriptionId' Certificate = ManagementCertificate}; " is 141.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,RegenerateKeys,The length of the statement  "            command = new RegenerateMobileServiceKeyCommand(MobileServiceName' KeyType.Master) { SubscriptionId = SubscriptionId' Certificate = ManagementCertificate }; " is 156.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,Restart,The length of the statement  "            var command = new RestartMobileServiceCommand(MobileServiceName){SubscriptionId = SubscriptionId' Certificate = ManagementCertificate}; " is 135.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,GetCreateNewServiceSpecification,The length of the statement  "            return String.Format(Constants.MobileServicesCreateNewTemplate' Constants.MobileServicesSchemaVersion' Constants.MobileServicesSchemaLocation' " is 142.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,GetCreateNewServiceSpecification,The length of the statement  "                                 SqlAzureUsername' SqlAzurePassword' Constants.MobileServicesVersion' Constants.MobileServicesName' Constants.MobileServicesType); " is 129.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,GetMobileAuthenticationProviderSettings,The length of the statement  "            var mobileProviders = (List<MobileServicesAuthProvider>)JsonConvert.DeserializeObject(command.JsonResult' typeof(List<MobileServicesAuthProvider>)); " is 148.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateAuth,The length of the statement  "            var facebookProvider = new MobileServicesAuthProvider(Constants.FacebookProvider' FacebookClientId' FacebookClientSecret); " is 122.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateAuth,The length of the statement  "            var command = new UpdateMobileServiceSettingsCommand(MobileServiceName' Constants.MobileServicesAuthSettings' converted) " is 120.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateService,The length of the statement  "            var command = new UpdateMobileServiceSettingsCommand(MobileServiceName' Constants.MobileServicesServiceSettings' converted' "PATCH") " is 132.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateLiveNotifications,The length of the statement  "            var converted = JsonConvert.SerializeObject(new WindowsAuthProvider(MicrosoftAccountPackageSID' MicrosoftAccountClientId' MicrosoftAccountClientSecret)); " is 153.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateLiveNotifications,The length of the statement  "            var command = new UpdateMobileServiceSettingsCommand(MobileServiceName' Constants.MobileServicesLiveSettings' converted) " is 120.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,VirtualNetworkClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\VirtualNetworkClient.cs,AddSubnetToAddressRange,The length of the statement  "                throw new FluentManagementException("there is no space in the selected address range to create a new subnet"' "VirtualNetworkClient"); " is 134.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WebsiteClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WebsiteClient.cs,ValidateWebSpace,The length of the statement  "            if (webSpace != WebspaceLocationConstants.NorthEuropeWebSpace && webSpace != WebspaceLocationConstants.WestEuropeWebSpace && " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,CreateNewVirtualMachineFromTemplateGallery,The length of the statement  "            // for the time being we're going to adopt the default powershell cmdlet behaviour and always create a new cloud services " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,CreateNewVirtualMachineFromTemplateGallery,The length of the statement  "                var cloudServiceCommand = new CreateCloudServiceCommand(properties.CloudServiceName'"Created by Fluent Management"' properties.Location) " is 136.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,DeleteVirtualMachine,The length of the statement  "            IBlobClient blobClient = new BlobClient(Properties.SubscriptionId' StorageContainerName' storageAccount' Properties.Certificate); " is 129.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,DeleteVirtualMachine,The length of the statement  "                // should be a 400 here if this is the case then there is only a single role in the deployment - quicker to do it this way! " is 123.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,EnsureVirtualMachineProperties,The length of the statement  "            if(properties.Certificate == null || String.IsNullOrEmpty(properties.SubscriptionId) || String.IsNullOrEmpty(properties.CloudServiceName) || " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,EnsureVirtualMachineProperties,The length of the statement  "                throw new FluentManagementException("Either certificate' subscription id cloud service name or storage account name not present in properties"' "CreateWindowsVirtualMachineDeploymentCommand"); " is 192.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,ExecuteCommand,The length of the statement  "                throw new FluentManagementException("incorrect response code returned code is: " + responseCode' "WebsiteRequestHelper"); " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,GetWebClient,The length of the statement  "            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic"' GetBasicAuthenticationCredentials(username' password)); " is 139.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Blobs,BlobCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Blobs\BlobCommand.cs,CreateAuthorizationHeader,The length of the statement  "                HttpVerb' HttpVerb == HttpVerbGet ? "" : contentLength.ToString(CultureInfo.InvariantCulture)' DateHeader' Version ?? VersionHeader' canResource' options); " is 155.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Blobs,CreateAndUploadBlobCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Blobs\CreateAndUploadBlobCommand.cs,Execute,The length of the statement  "            string accessContainer = DeploymentPath = String.Format("http://{0}.blob.core.windows.net/{1}/{2}"' AccountName' ContainerName' BlobName); " is 138.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.MobileServices,GetMobileServiceTablePermissionCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\MobileServices\GetMobileServiceTablePermissionCommand.cs,ResponseCallback,The length of the statement  "            var dictionary = Parse(webResponse' BaseParser.GetMobileServiceTablePermissionsParser' new GetMobileServiceTablePermissionsParser(null)); " is 137.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.MobileServices,GetMobileServiceResourcesCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\MobileServices\GetMobileServiceResoucesCommand.cs,ResponseCallback,The length of the statement  "            var dictionary = Parse(webResponse' BaseParser.GetMobileServiceResourcesParser' new GetMobileServiceResourceParser(null)); " is 122.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,CheckCloudServiceNameAvailableParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\CheckCloudServiceNameAvailableParser.cs,Parse,The length of the statement  "                throw new FluentManagementException("unable to process cloud service name available response"' "CheckCloudServiceNameAvailableParser"); " is 135.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,AddressAvailabilityResponseParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\AddressAvailabilityResponseParser.cs,Parse,The length of the statement  "                foreach (XElement address in rootElement.Element(GetSchema() + "AvailableAddresses").Elements(GetSchema() + "AvailableAddress")) " is 128.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,ListVirtualNetworksParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\ListVirtualNetworksParser.cs,Parse,The length of the statement  "             * <VirtualNetworkSites xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/windowsazure"> " is 125.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,ListVirtualNetworksParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\ListVirtualNetworksParser.cs,Parse,The length of the statement  "                    foreach (var subNet in virtualSite.Element(GetSchema() + "Subnets").Elements(GetSchema() + "Subnet").Select(subnet => new Subnet() " is 130.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,ListImagesParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\ListImagesParser.cs,Parse,The length of the statement  "                    imageProperties.OperatingSystem = (PlatformType)Enum.Parse(typeof(PlatformType)' osDetail.Element(GetSchema() + "OS").Value); " is 125.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteMetricsParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteMetricsParser.cs,Parse,The length of the statement  "                    // for the time being just take the first node as there isn't any need to enumerate the collection as this should contain one node " is 130.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteServerFarmParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteServerFarmParser.cs,Parse,The length of the statement  "            // <ServerFarm xmlns="http://schemas.microsoft.com/windowsazure" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CurrentNumberOfWorkers>2</CurrentNumberOfWorkers><CurrentWorkerSize>Small</CurrentWorkerSize><Name>DefaultServerFarm</Name><NumberOfWorkers>2</NumberOfWorkers><Status>Ready</Status><WorkerSize>Small</WorkerSize></ServerFarm> " is 342.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,WebsiteParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\WebsiteParser.cs,Parse,The length of the statement  "                    site.ComputeMode = (ComputeMode)Enum.Parse(typeof(ComputeMode)' element.Element(GetSchema() + "ComputeMode").Value' true); " is 122.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetHostedServicePropertiesParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetHostedServicePropertiesParser.cs,Parse,The length of the statement  "                            Status = (RoleInstanceStatus)Enum.Parse(typeof(RoleInstanceStatus)' (string)xElement.Element(GetSchema() + "InstanceStatus"))' " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetHostedServicePropertiesParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetHostedServicePropertiesParser.cs,Parse,The length of the statement  "                            //VirtualIpAddress = (string)xElement.Element(GetSchema() + "InstanceEndpoints").Elements(GetSchema() + "InstanceEndpoint").First() " is 131.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetAggregateDeploymentStatusParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetAggregateDeploymentStatusParser.cs,Parse,The length of the statement  "            if (rootElements.Select(roleInstance => roleInstance.Element(GetSchema() + "InstanceStatus").Value).Select(instanceStatus => (RoleInstanceStatus) Enum.Parse(typeof (RoleInstanceStatus)' instanceStatus)).Any(status => status != RoleInstanceStatus.ReadyRole)) " is 257.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetSubscriberLocationsParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetSubscriberLocationsParser.cs,Parse,The length of the statement  "                foreach (var element in hostedService.Element(GetSchema() + "AvailableServices").Elements(GetSchema() + "AvailableService")) " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetSubscriberLocationsParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetSubscriberLocationsParser.cs,Parse,The length of the statement  "                foreach (var element in hostedService.Element(GetSchema() + "ComputeCapabilities").Element(GetSchema() + "WebWorkerRoleSizes") " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetSubscriberLocationsParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetSubscriberLocationsParser.cs,Parse,The length of the statement  "                foreach (var element in hostedService.Element(GetSchema() + "ComputeCapabilities").Element(GetSchema() + "VirtualMachinesRoleSizes") " is 132.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetHostedServiceListParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetHostedServiceListParser.cs,Parse,The length of the statement  "                                      Created = DateTime.Parse(hostedService.Element(GetSchema() + "HostedServiceProperties").Element(GetSchema() + "DateCreated").Value)' " is 132.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetHostedServiceListParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetHostedServiceListParser.cs,Parse,The length of the statement  "                                      Modified = DateTime.Parse(hostedService.Element(GetSchema() + "HostedServiceProperties").Element(GetSchema() + "DateLastModified").Value)' " is 138.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetHostedServiceListParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetHostedServiceListParser.cs,Parse,The length of the statement  "                                      Status = (CloudServiceStatus)Enum.Parse(typeof(CloudServiceStatus)' hostedService.Element(GetSchema() + "HostedServiceProperties").Element(GetSchema() + "Status").Value)' " is 170.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetHostedServiceListParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetHostedServiceListParser.cs,Parse,The length of the statement  "                service.LocationOrAffinityGroup = (string)hostedService.Element(GetSchema() + "HostedServiceProperties").Element(GetSchema() + "Location")  " is 138.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Services,CreateServiceBusNamespaceCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Service Bus\CreateServiceBusNamespaceCommand.cs,CreatePayload,The length of the statement  "             * <NamespaceDescription xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/netservices/2010/10/servicebus/connect\">  " is 156.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Services,CreateServiceBusNamespaceCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Service Bus\CreateServiceBusNamespaceCommand.cs,CreatePayload,The length of the statement  "            // Serialize NamespaceDescription' if additional properties needs to be specified http://msdn.microsoft.com/en-us/library/jj873988.aspx " is 135.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Services,GetDeploymenConfigurationCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Services\GetDeploymentConfigurationCommand.cs,ResponseCallback,The length of the statement  "            Configuration = Parse(webResponse' BaseParser.GetDeploymentConfigurationParser' new GetDeploymentConfigurationParser(null)); " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.VirtualMachines,AddLinuxVirtualMachineToDeploymentCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Virtual Machines\AddLinuxVirtualMachineToDeploymentCommand.cs,CreatePayload,The length of the statement  "            var deployment = PersistentVMRole.AddAdhocLinuxRoleTemplates(new List<LinuxVirtualMachineProperties>(new[]{Properties})); " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.VirtualMachines,StopVirtualMachineCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Virtual Machines\StopVirtualMachineCommand.cs,CreatePayload,The length of the statement  "            /*<ShutdownRoleOperation xmlns="http://schemas.microsoft.com/windowsazure" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> " is 127.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.VirtualMachines,RestartVirtualMachineCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Virtual Machines\RestartVirtualMachineCommand.cs,CreatePayload,The length of the statement  "            /*<RestartRoleOperation xmlns="http://schemas.microsoft.com/windowsazure" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.VirtualMachines,StartVirtualMachineCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Virtual Machines\StartVirtualMachineCommand.cs,CreatePayload,The length of the statement  "            /*<StartRoleOperation xmlns="http://schemas.microsoft.com/windowsazure" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"> " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Websites,UpdateWebsiteConfigCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Websites\UpdateWebsiteConfigCommand.cs,CreatePayload,The length of the statement  "            var detailedErrorLoggingEnabled = new XElement(xmlns + "DetailedErrorLoggingEnabled"' Website.Config.DetailedErrorLoggingEnabled); " is 130.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Websites,UpdateWebsiteConfigCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Websites\UpdateWebsiteConfigCommand.cs,CreatePayload,The length of the statement  "            XElement netFrameworkVersion = null' phpVersion = null' publishingPassword = null' publishingUsername = null' numberOfWorkers = null; " is 133.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Websites,UpdateWebsiteConfigCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Websites\UpdateWebsiteConfigCommand.cs,CreatePayload,The length of the statement  "                appSettings.Add(new XElement(xmlns + "NameValuePair"' new XElement(xmlns + "Name"' appSetting.Key)' new XElement(xmlns + "Value"' appSetting.Value)));                 " is 150.
Long Statement,Elastacloud.AzureManagement.Fluent.Commands.Websites,UpdateWebsiteConfigCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Websites\UpdateWebsiteConfigCommand.cs,CreatePayload,The length of the statement  "                metadatas.Add(new XElement(xmlns + "NameValuePair"' new XElement(xmlns + "Name"' metadata.Key)' new XElement(xmlns + "Value"' metadata.Value))); " is 144.
Long Statement,Elastacloud.AzureManagement.Fluent.Linq,ExpressionTreeModifier,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\LinqToAzure\ExpressionTreeModifier.cs,VisitConstant,The length of the statement  "            if (c.Type == typeof(LinqToAzureOrderedQueryable<StorageAccount>) || c.Type == typeof(LinqToAzureOrderedQueryable<CloudService>) " is 128.
Long Statement,Elastacloud.AzureManagement.Fluent.Linq,VirtualMachineFinder,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\LinqToAzure\Finders\VirtualMachineFinder.cs,VisitBinary,The length of the statement  "                    _cloudServiceName = ExpressionTreeHelpers.GetValueFromEqualsExpression(be' typeof(VirtualMachineProperties)' "CloudServiceName"); " is 129.
Long Statement,Elastacloud.AzureManagement.Fluent.Linq,LinqToAzureQueryableProvider,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\LinqToAzure\LinqToAzureQueryableProvider.cs,CreateQuery,The length of the statement  "                return (IQueryable)Activator.CreateInstance(typeof(LinqToAzureOrderedQueryable<>).MakeGenericType(elementType)' new object[] { this' expression }); " is 147.
Long Statement,Elastacloud.AzureManagement.Fluent.Linq,LinqToAzureQueryContext,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\LinqToAzure\LinqToAzureQueryContext.cs,Execute,The length of the statement  "            return isEnumerable ? queryableStorageAccount.Provider.CreateQuery(newExpressionTree) : queryableStorageAccount.Provider.Execute(newExpressionTree); " is 148.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,Create,The length of the statement  "            DerEncodedCertificate = new X509Certificate2(stream.GetBuffer()' userPassword' X509KeyStorageFlags.Exportable|X509KeyStorageFlags.PersistKeySet); " is 145.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,ExportToFileSystem,The length of the statement  "                using (var writer = new FileStream(Path.Combine(exportDirectory' DerEncodedCertificate.Thumbprint + ".pfx")' FileMode.OpenOrCreate' FileAccess.Write)) " is 150.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,ExportToFileSystem,The length of the statement  "                using (var writer = new FileStream(Path.Combine(exportDirectory' DerEncodedCertificate.Thumbprint + ".cer")' FileMode.OpenOrCreate' FileAccess.Write)) " is 150.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,ExportToStorageAccount,The length of the statement  "                throw new FluentManagementException("please provide a subscription id and management certificate to continue"' "CertificateGenerator"); " is 135.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,ExportToStorageAccount,The length of the statement  "            var pemBlob = blobContainer.GetBlockBlobReference(String.Format("{0}/{1}.{2}.pem"' folder' DerEncodedCertificate.Thumbprint' DateTime.UtcNow.ToString("ddMMyyyy"))); " is 164.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,ExportToStorageAccount,The length of the statement  "            var pfxBlob = blobContainer.GetBlockBlobReference(String.Format("{0}/{1}.{2}.pfx"' folder' DerEncodedCertificate.Thumbprint' DateTime.UtcNow.ToString("ddMMyyyy"))); " is 164.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,ExportToStorageAccount,The length of the statement  "            var cerBlob = blobContainer.GetBlockBlobReference(String.Format("{0}/{1}.{2}.cer"' folder' DerEncodedCertificate.Thumbprint' DateTime.UtcNow.ToString("ddMMyyyy"))); " is 164.
Long Statement,Elastacloud.AzureManagement.Fluent.Types,CscfgFile,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\CscfgFile.cs,GetSettingForRole,The length of the statement  "            return OriginalVersion.Descendants(name: Namespaces.NsServiceManagement + "Role").FirstOrDefault(a => ((string) a.Attribute("name")).ToLower() == roleName.ToLower()) " is 165.
Long Statement,Elastacloud.AzureManagement.Fluent.Types,CscfgFile,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\CscfgFile.cs,GetSettingForRole,The length of the statement  "                    .Descendants(Namespaces.NsServiceManagement + "Setting").FirstOrDefault(b => (string) b.Attribute("name") == settingName) " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,StatefulVirtualMachineSerialiser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\StatefulVirtualMachineSerialiser.cs,GetVmRoles,The length of the statement  "                var roleInstance = _document.Descendants(Namespace + "RoleInstanceList").Elements(Namespace + "RoleInstance").FirstOrDefault( " is 125.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,StatefulVirtualMachineSerialiser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\StatefulVirtualMachineSerialiser.cs,GetVmRoles,The length of the statement  "                    persistentVirtualMachine.OperatingSystemConfigurationSet = new LinuxConfigurationSet() { HostName = GetStringValue(roleInstance.Element(Namespace + "HostName")) }; " is 163.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,Deployment,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\Deployment.cs,AddPersistentVMRole,The length of the statement  "                                     // use the first deployment property if it's not the same then fluent doesn't supporting deployment splitting at this level! " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,NetworkConfigurationSet,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\NetworkConfigurationSet.cs,GetXmlTree,The length of the statement  "                element.Add(new XElement(Namespaces.NsWindowsAzure + "SubnetNames"' new XElement(Namespaces.NsWindowsAzure + "SubnetName"' SubnetName))); " is 137.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,OSVirtualHardDisk,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\OSVirtualHardDisk.cs,GetXmlTree,The length of the statement  "//                                       new XElement(Namespaces.NsWindowsAzure + "HostCaching"' HostCaching.ToString())' " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,OSVirtualHardDisk,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\OSVirtualHardDisk.cs,GetOSImageFromTemplate,The length of the statement  "                MediaLink = String.Format("http://{0}.blob.core.windows.net/vhds/{1}{2}.vhd"' properties.StorageAccountName' Namer.GetNameFromInitString("os")' DateTime.Now.ToString("ddMMyyhhmmss-ffffff"))' " is 190.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetXmlTree,The length of the statement  "                element.Add(new XElement(Namespaces.NsWindowsAzure + "Label"' Convert.ToBase64String(Encoding.UTF8.GetBytes(RoleName)))); " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetXmlTree,The length of the statement  "            // TODO: Another hack the enum value is always present here so assume if we have no OS hard disk then we don't need a role size " is 127.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,WindowsConfigurationSet,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\WindowsConfigurationSet.cs,GetXmlTree,The length of the statement  "                                       /*new XElement(Namespaces.NsWindowsAzure + "ResetPasswordOnFirstLogon"' ResetPasswordOnFirstLogon.ToString(CultureInfo.InvariantCulture).ToLower())'*/ " is 150.
Long Statement,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,WindowsConfigurationSet,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\WindowsConfigurationSet.cs,GetXmlTree,The length of the statement  "                                       new XElement(Namespaces.NsWindowsAzure + "EnableAutomaticUpdates"' EnableAutomaticUpdate.ToString(CultureInfo.InvariantCulture).ToLower())' " is 139.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,BuildActivity,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\BuildActivity.cs,StartMsBuildProcess,The length of the statement  "            // TODO: Make a proper detail on the exception information by pulling back any FAILED messages or ERRORS from the output stream " is 127.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,Rollback,The length of the statement  "                _manager.WriteComplete(EventPoint.ExceptionOccurrence' ex.GetType() + ": " + ex.Message + "' Failed to rollback hosted service"); " is 129.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The length of the statement  "                var hostedServiceCreate = new CreateCloudServiceCommand(_manager.HostedServiceName' _manager.Description ?? "Deployed by Fluent Management"' _manager.Location) " is 159.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The length of the statement  "                _manager.WriteComplete(EventPoint.HostedServiceCreated' "Hosted service with name " + _manager.HostedServiceName + " created"); " is 127.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The length of the statement  "            // send up service certificate - whatever happens we want the certificate up there - sometimes we may get a request but not need to alter the config of the SSL " is 159.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The length of the statement  "                byte[] export = _manager.ServiceCertificate.Certificate.Export(X509ContentType.Pkcs12' _manager.ServiceCertificate.PvkPassword); " is 128.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The length of the statement  "                startImmediately = (_manager.DeploymentParams.Value & DeploymentParams.StartImmediately) == DeploymentParams.StartImmediately; " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The length of the statement  "                treatErrorsAsWarnings = (_manager.DeploymentParams.Value & DeploymentParams.WarningsAsErrors) == DeploymentParams.WarningsAsErrors; " is 131.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,UploadPackageBlob,The length of the statement  "            _manager.WriteComplete(EventPoint.StorageBlobContainerCreated' "Blob container " + Constants.DefaultBlobContainerName + " created"); " is 132.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,UploadPackageBlob,The length of the statement  "                ((IDeploymentConfigurationFileActivity) configuration).WithPackageConfigDirectory(_manager.BuildActivity.PackageNameLocation); " is 126.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,BuildAndPrebuildSteps,The length of the statement  "                // check to see whether they are populated depending on the path we get here we may get a null reference exception otherwise " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,BuildAndPrebuildSteps,The length of the statement  "                // in only some cases will there be a need to parse both of these files sometimes we may not want to depending on whether  " is 121.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,RemoteDesktop,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\RemoteDesktop.cs,ChangeConfig,The length of the statement  "            // TODO: This will blow up the settings exist already so it's best to serialise out this file and determine which exist in advance " is 130.
Long Statement,Elastacloud.AzureManagement.Fluent.Services.Classes,RoleReference,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\RoleReference.cs,ChangeConfig,The length of the statement  "            // TODO: this whole bit needs to be updated!!! It's beginning to look like a mess and can be replaced with 3-4 lines of code " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.SqlAzure.Classes,SqlAzureTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\SQL Azure\Classes\SqlAzureTransaction.cs,GetConnection,The length of the statement  "                    "server=tcp:{0}.database.windows.net; database={1}; user id={2}@{0}; password={3}; Trusted_Connection=False; Encrypt=True;"' " is 124.
Long Statement,Elastacloud.AzureManagement.Fluent.Storage.Classes,StorageActivity,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Storage\Classes\StorageActivity.cs,DeleteStorageAccount,The length of the statement  "                Manager.WriteComplete(EventPoint.StorageAccountCreated' "Storage account " + Manager.StorageAccountName + " not created"); " is 122.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers.PublishSettings,PublishSettingsExtractor,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\PublishSettings\PublishSettingsExtractor.cs,Parse,The length of the statement  "            SchemaVersion = containsSchema ? (int)double.Parse(schemaAttrs.FirstOrDefault().Value' CultureInfo.InvariantCulture) : 1D; " is 122.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers.PublishSettings,PublishSettingsExtractor,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\PublishSettings\PublishSettingsExtractor.cs,FromStore,The length of the statement  "            certificate2 = ((FromStore(thumbprint' StoreName.My' location) ?? FromStore(thumbprint' StoreName.AuthRoot' location))); " is 120.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers.PublishSettings,PublishSettingsExtractor,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\PublishSettings\PublishSettingsExtractor.cs,AddAllPublishSettingsCertificatesToPersonalMachineStore,The length of the statement  "            foreach (var subscription in GetSubscriptions().Where(subscription => String.IsNullOrEmpty(subscriptionId) || subscription.Id == subscriptionId)) " is 145.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers.PublishSettings,PublishSettingsExtractor,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\PublishSettings\PublishSettingsExtractor.cs,GetCertificateFromFile,The length of the statement  "            var storageFlagKeySet = location == StoreLocation.CurrentUser ? X509KeyStorageFlags.UserKeySet : X509KeyStorageFlags.MachineKeySet; " is 131.
Long Statement,Elastacloud.AzureManagement.Fluent.Helpers.PublishSettings,PublishSettingsExtractor,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\PublishSettings\PublishSettingsExtractor.cs,GetCertificateFromFile,The length of the statement  "            return new X509Certificate2(certBytes' string.Empty' X509KeyStorageFlags.Exportable|X509KeyStorageFlags.PersistKeySet|storageFlagKeySet); " is 137.
Complex Conditional,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,EnsureVirtualMachineProperties,The conditional expression  "properties.Certificate == null || String.IsNullOrEmpty(properties.SubscriptionId) || String.IsNullOrEmpty(properties.CloudServiceName) ||                  String.IsNullOrEmpty(properties.StorageAccountName) || String.IsNullOrEmpty(properties.Location)"  is complex.
Virtual Method Call from Constructor,Elastacloud.AzureManagement.Fluent.ServiceBus,ServiceBusManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\ServiceBus\ServiceBusManager.cs,ServiceBusManager,The constructor "ServiceBusManager" calls a virtual method "Execute".
Virtual Method Call from Constructor,Elastacloud.AzureManagement.Fluent.Watchers,BaseWatcher,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Watchers\BaseWatcher.cs,BaseWatcher,The constructor "BaseWatcher" calls a virtual method "Pingback".
Virtual Method Call from Constructor,Elastacloud.AzureManagement.Fluent.Watchers,BaseWatcher,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Watchers\BaseWatcher.cs,BaseWatcher,The constructor "BaseWatcher" calls a virtual method "GetState".
Empty Catch Block,Elastacloud.AzureManagement.Fluent.Services.Classes,HostedServiceActivity,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\HostedServiceActivity.cs,Delete,The method has an empty catch block.
Magic Number,Elastacloud.AzureManagement.Fluent,QueryManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\QueryManager.cs,MakeASyncRequest,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 40;
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: foreach (var blob in blobs)              {                  var blockBlob = blob as CloudBlockBlob;                  var destinationBlockBlob =                      destinationContainer.GetBlockBlobReference(String.Format("{0}/{1}"' copyDirectoryPrefix'                           String.Join(""' blob.Uri.Segments.Skip(3).Take(5).ToArray())));                  var sas = blockBlob.GetSharedAccessSignature(new SharedAccessBlobPolicy()                  {                      Permissions = SharedAccessBlobPermissions.Read'                      SharedAccessStartTime = DateTime.Now.AddMinutes(-15)'                      SharedAccessExpiryTime = DateTime.Now.AddHours(1)                  });                  blockBlob = new CloudBlockBlob(new Uri(blockBlob.Uri.AbsoluteUri + sas));                      copyIds.Add(new CopyableBlob()                  {                      // the use of a SAS fubars this                       CopyId = await destinationBlockBlob.StartCopyFromBlobAsync(blockBlob)'                      BlobUri = destinationBlockBlob.Uri'                      ContainerName = destinationContanerName'                      Size = (double) blockBlob.Properties.Length/1024'                      PercentageCopied = 0                  });              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: foreach (var blob in blobs)              {                  var blockBlob = blob as CloudBlockBlob;                  var destinationBlockBlob =                      destinationContainer.GetBlockBlobReference(String.Format("{0}/{1}"' copyDirectoryPrefix'                           String.Join(""' blob.Uri.Segments.Skip(3).Take(5).ToArray())));                  var sas = blockBlob.GetSharedAccessSignature(new SharedAccessBlobPolicy()                  {                      Permissions = SharedAccessBlobPermissions.Read'                      SharedAccessStartTime = DateTime.Now.AddMinutes(-15)'                      SharedAccessExpiryTime = DateTime.Now.AddHours(1)                  });                  blockBlob = new CloudBlockBlob(new Uri(blockBlob.Uri.AbsoluteUri + sas));                      copyIds.Add(new CopyableBlob()                  {                      // the use of a SAS fubars this                       CopyId = await destinationBlockBlob.StartCopyFromBlobAsync(blockBlob)'                      BlobUri = destinationBlockBlob.Uri'                      ContainerName = destinationContanerName'                      Size = (double) blockBlob.Properties.Length/1024'                      PercentageCopied = 0                  });              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: foreach (var blob in blobs)              {                  var blockBlob = blob as CloudBlockBlob;                  var destinationBlockBlob =                      destinationContainer.GetBlockBlobReference(String.Format("{0}/{1}"' copyDirectoryPrefix'                           String.Join(""' blob.Uri.Segments.Skip(3).Take(5).ToArray())));                  var sas = blockBlob.GetSharedAccessSignature(new SharedAccessBlobPolicy()                  {                      Permissions = SharedAccessBlobPermissions.Read'                      SharedAccessStartTime = DateTime.Now.AddMinutes(-15)'                      SharedAccessExpiryTime = DateTime.Now.AddHours(1)                  });                  blockBlob = new CloudBlockBlob(new Uri(blockBlob.Uri.AbsoluteUri + sas));                      copyIds.Add(new CopyableBlob()                  {                      // the use of a SAS fubars this                       CopyId = await destinationBlockBlob.StartCopyFromBlobAsync(blockBlob)'                      BlobUri = destinationBlockBlob.Uri'                      ContainerName = destinationContanerName'                      Size = (double) blockBlob.Properties.Length/1024'                      PercentageCopied = 0                  });              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: foreach (var blob in blobs)              {                  var blockBlob = blob as CloudBlockBlob;                  var destinationBlockBlob =                      destinationContainer.GetBlockBlobReference(String.Format("{0}/{1}"' copyDirectoryPrefix'                           String.Join(""' blob.Uri.Segments.Skip(3).Take(5).ToArray())));                  var sas = blockBlob.GetSharedAccessSignature(new SharedAccessBlobPolicy()                  {                      Permissions = SharedAccessBlobPermissions.Read'                      SharedAccessStartTime = DateTime.Now.AddMinutes(-15)'                      SharedAccessExpiryTime = DateTime.Now.AddHours(1)                  });                  blockBlob = new CloudBlockBlob(new Uri(blockBlob.Uri.AbsoluteUri + sas));                      copyIds.Add(new CopyableBlob()                  {                      // the use of a SAS fubars this                       CopyId = await destinationBlockBlob.StartCopyFromBlobAsync(blockBlob)'                      BlobUri = destinationBlockBlob.Uri'                      ContainerName = destinationContanerName'                      Size = (double) blockBlob.Properties.Length/1024'                      PercentageCopied = 0                  });              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: while (true)              {                  foreach (var blob in copyIds)                  {                      var blockBlob = new CloudBlockBlob(blob.BlobUri' destinationAccountCredentials);                      await blockBlob.FetchAttributesAsync();                      await Task.Delay(500);                      if (blockBlob.CopyState.BytesCopied.HasValue)                      {                          blob.PercentageCopied =                              Convert.ToInt32(                                  Math.Round(                                      (double) blockBlob.CopyState.BytesCopied.Value/blockBlob.CopyState.TotalBytes.Value'                                      2)*100);                      }                      if (blockBlob.CopyState.Status == CopyStatus.Success ||                          blockBlob.CopyState.Status == CopyStatus.Failed)                      {                          completed++;                      }                      if (completed == copyIds.Count)                          return CopyingBlobs;                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: while (true)              {                  foreach (var blob in copyIds)                  {                      var blockBlob = new CloudBlockBlob(blob.BlobUri' destinationAccountCredentials);                      await blockBlob.FetchAttributesAsync();                      await Task.Delay(500);                      if (blockBlob.CopyState.BytesCopied.HasValue)                      {                          blob.PercentageCopied =                              Convert.ToInt32(                                  Math.Round(                                      (double) blockBlob.CopyState.BytesCopied.Value/blockBlob.CopyState.TotalBytes.Value'                                      2)*100);                      }                      if (blockBlob.CopyState.Status == CopyStatus.Success ||                          blockBlob.CopyState.Status == CopyStatus.Failed)                      {                          completed++;                      }                      if (completed == copyIds.Count)                          return CopyingBlobs;                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,BlobClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\BlobClient.cs,CopyDirectoryTo,The following statement contains a magic number: while (true)              {                  foreach (var blob in copyIds)                  {                      var blockBlob = new CloudBlockBlob(blob.BlobUri' destinationAccountCredentials);                      await blockBlob.FetchAttributesAsync();                      await Task.Delay(500);                      if (blockBlob.CopyState.BytesCopied.HasValue)                      {                          blob.PercentageCopied =                              Convert.ToInt32(                                  Math.Round(                                      (double) blockBlob.CopyState.BytesCopied.Value/blockBlob.CopyState.TotalBytes.Value'                                      2)*100);                      }                      if (blockBlob.CopyState.Status == CopyStatus.Success ||                          blockBlob.CopyState.Status == CopyStatus.Failed)                      {                          completed++;                      }                      if (completed == copyIds.Count)                          return CopyingBlobs;                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: RaiseClientUpdate(5' "Checked for formatted image existence");
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: RaiseClientUpdate(8' "Checked to see whether images exist with index " + index);
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: if (imageProperties.SourceAccountName != null && imageProperties.SourceAccountKey != null)              {                  var client = new StorageClient(imageProperties.SourceAccountName' imageProperties.SourceAccountKey);                  imageProperties.ImageCopyLocation = client.GetSaSFromBlobUri(imageProperties.ImageCopyLocation);                  RaiseClientUpdate(10' "Calculated SaS blob uri");              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: try              {                  blobImage.StartCopyFromBlob(new Uri(imageProperties.ImageCopyLocation));                  double percentCopied = 0;                  while (blobImage.CopyState.Status != CopyStatus.Success && blobImage.CopyState.Status != CopyStatus.Failed)                  {                      blobImage = (CloudPageBlob)containerReference.GetBlobReferenceFromServer(GetFormattedImageName(imageProperties.ImageNameRoot' index' true));                        if (blobImage.CopyState.BytesCopied == null || blobImage.CopyState.TotalBytes == null)                          continue;                      // wait one second until we have the copy status working properly                      double innerPercent = Math.Round(((double)blobImage.CopyState.BytesCopied.Value / (double)blobImage.CopyState.TotalBytes.Value) * 70) + 10;                      if (innerPercent != percentCopied)                      {                          RaiseClientUpdate(Convert.ToInt32(innerPercent)' "Copied part of image file to blob storage");                      }                      percentCopied = innerPercent;                      Thread.Sleep(1000);                  }              }              catch (Exception ex)              {                  Console.WriteLine("Exception is: "' ex.ToString());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: try              {                  blobImage.StartCopyFromBlob(new Uri(imageProperties.ImageCopyLocation));                  double percentCopied = 0;                  while (blobImage.CopyState.Status != CopyStatus.Success && blobImage.CopyState.Status != CopyStatus.Failed)                  {                      blobImage = (CloudPageBlob)containerReference.GetBlobReferenceFromServer(GetFormattedImageName(imageProperties.ImageNameRoot' index' true));                        if (blobImage.CopyState.BytesCopied == null || blobImage.CopyState.TotalBytes == null)                          continue;                      // wait one second until we have the copy status working properly                      double innerPercent = Math.Round(((double)blobImage.CopyState.BytesCopied.Value / (double)blobImage.CopyState.TotalBytes.Value) * 70) + 10;                      if (innerPercent != percentCopied)                      {                          RaiseClientUpdate(Convert.ToInt32(innerPercent)' "Copied part of image file to blob storage");                      }                      percentCopied = innerPercent;                      Thread.Sleep(1000);                  }              }              catch (Exception ex)              {                  Console.WriteLine("Exception is: "' ex.ToString());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: try              {                  blobImage.StartCopyFromBlob(new Uri(imageProperties.ImageCopyLocation));                  double percentCopied = 0;                  while (blobImage.CopyState.Status != CopyStatus.Success && blobImage.CopyState.Status != CopyStatus.Failed)                  {                      blobImage = (CloudPageBlob)containerReference.GetBlobReferenceFromServer(GetFormattedImageName(imageProperties.ImageNameRoot' index' true));                        if (blobImage.CopyState.BytesCopied == null || blobImage.CopyState.TotalBytes == null)                          continue;                      // wait one second until we have the copy status working properly                      double innerPercent = Math.Round(((double)blobImage.CopyState.BytesCopied.Value / (double)blobImage.CopyState.TotalBytes.Value) * 70) + 10;                      if (innerPercent != percentCopied)                      {                          RaiseClientUpdate(Convert.ToInt32(innerPercent)' "Copied part of image file to blob storage");                      }                      percentCopied = innerPercent;                      Thread.Sleep(1000);                  }              }              catch (Exception ex)              {                  Console.WriteLine("Exception is: "' ex.ToString());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ImageManagementClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ImageManagementClient.cs,CopyAndRegisterImageInNewSubscription,The following statement contains a magic number: RaiseClientUpdate(100' "Completed registration of image into target account");
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CheckVmDeploymentIsRunning,The following statement contains a magic number: while (linuxProperties.Any(role => role.Value != RoleInstanceStatus.ReadyRole) || index == 360)              {                  var command = new GetVirtualMachineContextCommand(vmProperties)                  {                      SubscriptionId = SubscriptionId'                      Certificate = ManagementCertificate                  };                  command.Execute();                  command.PersistentVm.ForEach(vm =>                  {                      if (linuxProperties[vm.RoleName] == vm.Status) return;                      // raise the event with the old and new status                      LinuxVirtualMachineStatusEvent(this' new VirtualMachineStatus()                      {                          NewStatus = vm.Status'                          OldStatus = linuxProperties[vm.RoleName]'                          VirtualMachineInstanceName = vm.RoleName'                          CloudService = vmProperties.CloudServiceName                      });                      // update the status in the dictionary                      linuxProperties[vm.RoleName] = vm.Status;                  });                  index++;                  // TODO: advice from Zak on the best way to use task.delay instead                  Thread.Sleep(TimeSpan.FromSeconds(10));              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CheckVmDeploymentIsRunning,The following statement contains a magic number: while (linuxProperties.Any(role => role.Value != RoleInstanceStatus.ReadyRole) || index == 360)              {                  var command = new GetVirtualMachineContextCommand(vmProperties)                  {                      SubscriptionId = SubscriptionId'                      Certificate = ManagementCertificate                  };                  command.Execute();                  command.PersistentVm.ForEach(vm =>                  {                      if (linuxProperties[vm.RoleName] == vm.Status) return;                      // raise the event with the old and new status                      LinuxVirtualMachineStatusEvent(this' new VirtualMachineStatus()                      {                          NewStatus = vm.Status'                          OldStatus = linuxProperties[vm.RoleName]'                          VirtualMachineInstanceName = vm.RoleName'                          CloudService = vmProperties.CloudServiceName                      });                      // update the status in the dictionary                      linuxProperties[vm.RoleName] = vm.Status;                  });                  index++;                  // TODO: advice from Zak on the best way to use task.delay instead                  Thread.Sleep(TimeSpan.FromSeconds(10));              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,CheckVmDeploymentIsRunning,The following statement contains a magic number: if (index == 360)              {                  throw new FluentManagementException("timed out listening for status changes - check vms are running correctly"' "LinuxVirtualMachineClient");                     }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,DeleteNamedVirtualMachineDisk,The following statement contains a magic number: while (count < 100 && !diskErased)              {                  try                  {                      var deleteVirtualMachineDisk = new DeleteVirtualMachineDiskCommand(name)                      {                          SubscriptionId = SubscriptionId'                          Certificate = ManagementCertificate                      };                      deleteVirtualMachineDisk.Execute();                      diskErased = true;                  }                  catch (Exception)                  {                      count++;                      Thread.Sleep(3000);                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,LinuxVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\LinuxVirtualMachineClient.cs,DeleteNamedVirtualMachineDisk,The following statement contains a magic number: while (count < 100 && !diskErased)              {                  try                  {                      var deleteVirtualMachineDisk = new DeleteVirtualMachineDiskCommand(name)                      {                          SubscriptionId = SubscriptionId'                          Certificate = ManagementCertificate                      };                      deleteVirtualMachineDisk.Execute();                      diskErased = true;                  }                  catch (Exception)                  {                      count++;                      Thread.Sleep(3000);                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,GithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\GithubClient.cs,GetRepositories,The following statement contains a magic number: foreach (var parts in jRepos.Select(jRepo => jRepo["full_name"].ToString()).Select(name => name.Split('/')))              {                  if (parts.Length != 2)                      throw new FluentManagementException("unable to parse JSON response"' "GithubClient");                  dictionary.Add(parts[1]' parts[0]);              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,GithubClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\GithubClient.cs,TestServiceHook,The following statement contains a magic number: _helper.ExecuteCommand(hook' 200);
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,BuildCrudDictionary,The following statement contains a magic number: return new Dictionary<string' string>                                   {                                       {CrudOperation.Insert.ToString().ToLower()' values[0]}'                                       {CrudOperation.Update.ToString().ToLower()' values[1]}'                                       {CrudOperation.Read.ToString().ToLower()' values[2]}'                                       {CrudOperation.Delete.ToString().ToLower()' values[3]}                                   };
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,BuildCrudDictionary,The following statement contains a magic number: return new Dictionary<string' string>                                   {                                       {CrudOperation.Insert.ToString().ToLower()' values[0]}'                                       {CrudOperation.Update.ToString().ToLower()' values[1]}'                                       {CrudOperation.Read.ToString().ToLower()' values[2]}'                                       {CrudOperation.Delete.ToString().ToLower()' values[3]}                                   };
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateLiveNotifications,The following statement contains a magic number: int count = 3;
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,UpdateLiveNotifications,The following statement contains a magic number: if (count < 2) return;
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,ServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\ServiceClient.cs,BuildCertGenerator,The following statement contains a magic number: generator.Create(name' DateTime.UtcNow.Subtract(TimeSpan.FromDays(1))' DateTime.UtcNow.AddYears(2)' password);
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,StorageClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\StorageClient.cs,GetStorageAccountKeys,The following statement contains a magic number: return new string[2] {keys.PrimaryStorageKey' keys.SecondaryStorageKey};
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,StorageClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\StorageClient.cs,GetSaSFromBlobUri,The following statement contains a magic number: string sas = blobReference.GetSharedAccessSignature(new SharedAccessBlobPolicy()              {                  Permissions = SharedAccessBlobPermissions.Read'                  SharedAccessExpiryTime = DateTime.UtcNow.AddMinutes(90)'                  SharedAccessStartTime = DateTime.UtcNow.AddMinutes(-5)              });
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,StorageClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\StorageClient.cs,GetSaSFromBlobUri,The following statement contains a magic number: string sas = blobReference.GetSharedAccessSignature(new SharedAccessBlobPolicy()              {                  Permissions = SharedAccessBlobPermissions.Read'                  SharedAccessExpiryTime = DateTime.UtcNow.AddMinutes(90)'                  SharedAccessStartTime = DateTime.UtcNow.AddMinutes(-5)              });
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,DeleteNamedVirtualMachineDisk,The following statement contains a magic number: while (count < 100 && !diskErased)              {                  try                  {                      var deleteVirtualMachineDisk = new DeleteVirtualMachineDiskCommand(name)                                                         {                                                             SubscriptionId = Properties.SubscriptionId'                                                             Certificate = Properties.Certificate                                                         };                      deleteVirtualMachineDisk.Execute();                      diskErased = true;                  }                  catch (Exception)                  {                      count++;                      Thread.Sleep(3000);                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients,WindowsVirtualMachineClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WindowsVirtualMachineClient.cs,DeleteNamedVirtualMachineDisk,The following statement contains a magic number: while (count < 100 && !diskErased)              {                  try                  {                      var deleteVirtualMachineDisk = new DeleteVirtualMachineDiskCommand(name)                                                         {                                                             SubscriptionId = Properties.SubscriptionId'                                                             Certificate = Properties.Certificate                                                         };                      deleteVirtualMachineDisk.Execute();                      diskErased = true;                  }                  catch (Exception)                  {                      count++;                      Thread.Sleep(3000);                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,GenerateEventClientBase,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\GenerateEventClientBase.cs,RaiseClientUpdate,The following statement contains a magic number: if (percentage > 100)                  percentage = 100;
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,GenerateEventClientBase,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\GenerateEventClientBase.cs,RaiseClientUpdate,The following statement contains a magic number: if (percentage > 100)                  percentage = 100;
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,ExecuteCommand,The following statement contains a magic number: if (uri.IndexOf(":"' 8' System.StringComparison.Ordinal) > 0)              {                  var posSlash = uri.IndexOf("@"' 8' StringComparison.Ordinal);                  string basicAuthCredentials = uri.Substring(8' posSlash - 8);                  var parts = basicAuthCredentials.Split(':');                  client = GetWebClient(parts[0]' parts[1]);                  uri = uri.Remove(8' (basicAuthCredentials + "/").Length);              }              else              {                  client = GetWebClient();              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,ExecuteCommand,The following statement contains a magic number: if (uri.IndexOf(":"' 8' System.StringComparison.Ordinal) > 0)              {                  var posSlash = uri.IndexOf("@"' 8' StringComparison.Ordinal);                  string basicAuthCredentials = uri.Substring(8' posSlash - 8);                  var parts = basicAuthCredentials.Split(':');                  client = GetWebClient(parts[0]' parts[1]);                  uri = uri.Remove(8' (basicAuthCredentials + "/").Length);              }              else              {                  client = GetWebClient();              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,ExecuteCommand,The following statement contains a magic number: if (uri.IndexOf(":"' 8' System.StringComparison.Ordinal) > 0)              {                  var posSlash = uri.IndexOf("@"' 8' StringComparison.Ordinal);                  string basicAuthCredentials = uri.Substring(8' posSlash - 8);                  var parts = basicAuthCredentials.Split(':');                  client = GetWebClient(parts[0]' parts[1]);                  uri = uri.Remove(8' (basicAuthCredentials + "/").Length);              }              else              {                  client = GetWebClient();              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,ExecuteCommand,The following statement contains a magic number: if (uri.IndexOf(":"' 8' System.StringComparison.Ordinal) > 0)              {                  var posSlash = uri.IndexOf("@"' 8' StringComparison.Ordinal);                  string basicAuthCredentials = uri.Substring(8' posSlash - 8);                  var parts = basicAuthCredentials.Split(':');                  client = GetWebClient(parts[0]' parts[1]);                  uri = uri.Remove(8' (basicAuthCredentials + "/").Length);              }              else              {                  client = GetWebClient();              }
Magic Number,Elastacloud.AzureManagement.Fluent.Clients.Helpers,WebsiteRequestHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\Helpers\WebsiteRequestHelper.cs,ExecuteCommand,The following statement contains a magic number: if (uri.IndexOf(":"' 8' System.StringComparison.Ordinal) > 0)              {                  var posSlash = uri.IndexOf("@"' 8' StringComparison.Ordinal);                  string basicAuthCredentials = uri.Substring(8' posSlash - 8);                  var parts = basicAuthCredentials.Split(':');                  client = GetWebClient(parts[0]' parts[1]);                  uri = uri.Remove(8' (basicAuthCredentials + "/").Length);              }              else              {                  client = GetWebClient();              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.Blobs,BlobCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Blobs\BlobCommand.cs,CheckStorageAccountExists,The following statement contains a magic number: while (i++ < timeoutInSeconds)              {                  try                  {                      var request = HttpWebRequest.Create(String.Format("http://{0}.blob.core.windows.net"' AccountName));                      request.GetResponse();                  }                  catch (WebException ex)                  {                      if (((HttpWebResponse) ex.Response).StatusCode == HttpStatusCode.BadRequest)                      {                          hasCompleted = true;                          break;                      }                  }                  Thread.Sleep(1000);              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands,ErrorRouter,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\ErrorRouter.cs,ErrorRouter,The following statement contains a magic number: CommandStatusMatches.Add(new GetAsyncStatusCommand().ToString()' new[] {404});
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.MobileServices,GetMobileServiceTablePermissionCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\MobileServices\GetMobileServiceTablePermissionCommand.cs,ResponseCallback,The following statement contains a magic number: if (dictionary != null && dictionary.Count != 4)              {                  throw new FluentManagementException("Incorrect values returned or service does not exist"' ToString());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.MobileServices,GetMobileServiceResourcesCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\MobileServices\GetMobileServiceResoucesCommand.cs,ResponseCallback,The following statement contains a magic number: if (dictionary != null && dictionary.Count != 6)              {                  throw new FluentManagementException("Incorrect values returned or service does not exist"' ToString());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.MobileServices,GetMobileServiceDetailsCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\MobileServices\GetMobileServiceDetailsCommand.cs,ResponseCallback,The following statement contains a magic number: if (dictionary != null && dictionary.Count != 5)              {                  throw new FluentManagementException("Incorrect values returned or service does not exist"' ToString());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetMobileServiceTablePermissionsParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetMobileServiceTablePermissionsParser.cs,Parse,The following statement contains a magic number: var dictionary = new Dictionary<string' string>(4);
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetMobileServiceResourceParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetMobileServiceResourceParser.cs,Parse,The following statement contains a magic number: var dictionary = new Dictionary<string' string>(6);
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetMobileServiceDetailParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetMobileServiceDetailParser.cs,Parse,The following statement contains a magic number: var dictionary = new Dictionary<string' string>(5);
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.Services,ServiceCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Services\ServiceCommand.cs,ResponseCallback,The following statement contains a magic number: for (;;)              {                  var asyncCommand = new GetAsyncStatusCommand                                         {                                             HttpVerb = HttpVerbGet'                                             SubscriptionId = SubscriptionId'                                             OperationId = MsftAsyncResponseId'                                             ServiceType = "operations"'                                             Certificate = Certificate                                         };                  asyncCommand.Execute();                  Thread.Sleep(1000);                  OperationStatus status = asyncCommand.GetOperationStatus();                  switch (status)                  {                      case OperationStatus.InProgress:                          break;                      case OperationStatus.Failed:                          //Trace.WriteLine(String.Format("Hosted Service Response Id: {0}"' MsftAsyncResponseId);                          _lastFailureResponse = asyncCommand.GetFailureText();                          SitAndWait.Set();                          return;                      case OperationStatus.Succeeded:                          //Trace.WriteLine("Hosted Service Response Id: {0}"' MsftAsyncResponseId);                          SitAndWait.Set();                          return;                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.Services,ServiceCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Services\ServiceCommand.cs,Execute,The following statement contains a magic number: SitAndWait.WaitOne(200000);
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.SqlAzure,AddNewSqlServerCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\SqlAzure\AddNewSqlServerCommand.cs,PasswordVerify,The following statement contains a magic number: if ((matches.Groups["upper"].Captures.Count > 0 ? 1 : 0) +                  (matches.Groups["lower"].Captures.Count > 0 ? 1 : 0) +                  (matches.Groups["number"].Captures.Count > 0 ? 1 : 0) +                  (matches.Groups["alpha"].Captures.Count > 0 ? 1 : 0) < 3)                  return false;
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.SqlAzure,AddNewSqlServerCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\SqlAzure\AddNewSqlServerCommand.cs,PasswordVerify,The following statement contains a magic number: for (int index = 0; index <= username.Length - 3; index++)              {                  if (password.Contains(username.Substring(index' 3)))                      return false;              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.SqlAzure,AddNewSqlServerCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\SqlAzure\AddNewSqlServerCommand.cs,PasswordVerify,The following statement contains a magic number: for (int index = 0; index <= username.Length - 3; index++)              {                  if (password.Contains(username.Substring(index' 3)))                      return false;              }
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.VirtualMachines,DownloadWindowsRemoteDesktopCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Virtual Machines\DownloadWindowsRemoteDesktopCommand.cs,ResponseCallback,The following statement contains a magic number: var bytesInMem = new byte[500];
Magic Number,Elastacloud.AzureManagement.Fluent.Commands.VirtualMachines,DownloadWindowsRemoteDesktopCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Virtual Machines\DownloadWindowsRemoteDesktopCommand.cs,ResponseCallback,The following statement contains a magic number: FileLength = responseStream.Read(bytesInMem' 0' 500);
Magic Number,Elastacloud.AzureManagement.Fluent.Services,DeploymentManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\DeploymentManager.cs,WithStorageConnectionStringName,The following statement contains a magic number: if (parts.Count() != 3 && !(parts[1].StartsWith(accountName) || parts[2].StartsWith(accountName)))                  throw new ApplicationException("connection string is not in correct format");
Magic Number,Elastacloud.AzureManagement.Fluent.Services,DeploymentManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\DeploymentManager.cs,WithStorageConnectionStringName,The following statement contains a magic number: if (parts.Count() != 3 && !(parts[1].StartsWith(accountName) || parts[2].StartsWith(accountName)))                  throw new ApplicationException("connection string is not in correct format");
Magic Number,Elastacloud.AzureManagement.Fluent.Services,DeploymentManager,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\DeploymentManager.cs,WithStorageConnectionStringName,The following statement contains a magic number: StorageAccountKey = parts[2].Remove(0' accountKey.Count());
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,ServiceBusNameValidator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\ServiceBusNameValidator.cs,CheckSize,The following statement contains a magic number: return _name.Length >= 6 && _name.Length <= 50;
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,ServiceBusNameValidator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\ServiceBusNameValidator.cs,CheckSize,The following statement contains a magic number: return _name.Length >= 6 && _name.Length <= 50;
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,Create,The following statement contains a magic number: generator.Init(new KeyGenerationParameters(new SecureRandom(new CryptoApiRandomGenerator())' 2048));
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,Create,The following statement contains a magic number: BigInteger serialNo = BigInteger.ProbablePrime(120' new Random());
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,CertificateGenerator,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\CertificateGenerator.cs,Create,The following statement contains a magic number: var stream = new MemoryStream(10000);
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,RandomAccountName,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\RandomAccountName.cs,GetName,The following statement contains a magic number: if (name.Length > 9)                  throw new ApplicationException("unable to have a start string of more than 14 characters");
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,RandomAccountName,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\RandomAccountName.cs,GetName,The following statement contains a magic number: int lengthLeftOver = 9 - name.Length;
Magic Number,Elastacloud.AzureManagement.Fluent.Helpers,UrlHelper,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Helpers\UrlHelper.cs,Parse,The following statement contains a magic number: if(matches.Count != 1 && matches[0].Groups.Count != 3)                  throw new FluentManagementException("bad format for string"' "UrlHelper");
Magic Number,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,InputEndpoint,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\InputEndpoint.cs,GetDefaultRemoteDesktopSettings,The following statement contains a magic number: return new InputEndpoint                         {                             EndpointName = "RDP"'                             Protocol = Protocol.TCP'                             LocalPort = 3389'                             //Port = 3389                         };
Magic Number,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,InputEndpoint,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\InputEndpoint.cs,GetDefaultSqlServerSettings,The following statement contains a magic number: return new InputEndpoint                         {                             EndpointName = "SQL_Server"'                             Protocol = Protocol.TCP'                             LocalPort = 1433'                             Port = 1433                         };
Magic Number,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,InputEndpoint,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\InputEndpoint.cs,GetDefaultSqlServerSettings,The following statement contains a magic number: return new InputEndpoint                         {                             EndpointName = "SQL_Server"'                             Protocol = Protocol.TCP'                             LocalPort = 1433'                             Port = 1433                         };
Magic Number,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetAdHocTemplate,The following statement contains a magic number: if (operatingSystemConfigurationSet.ConfigurationSetType == ConfigurationSetType.WindowsProvisioningConfiguration)              {                  if (properties.PublicEndpoints.All(endpoint => endpoint.Port != 3389))                      inputEndpoints.AddEndpoint(InputEndpoint.GetDefaultRemoteDesktopSettings());              }
Magic Number,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetAdHocTemplate,The following statement contains a magic number: if (properties.DataDisks != null)              {                  for (int i = 0; i < properties.DataDisks.Count; i++)                  {                      var label = properties.DataDisks[i].DiskLabel ?? "DataDisk" + i;                      var name = properties.DataDisks[i].DiskName ?? "DataDisk" + i;                      var size = properties.DataDisks[i].LogicalDiskSizeInGB < 30                                     ? 30                                     : properties.DataDisks[i].LogicalDiskSizeInGB;                      var disk = DataVirtualHardDisk.GetDefaultDataDisk(properties.StorageAccountName' size' i' name' label);                      disks.HardDiskCollection.Add(disk);                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Types.VirtualMachines,PersistentVMRole,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\Virtual Machines\PersistentVMRole.cs,GetAdHocTemplate,The following statement contains a magic number: if (properties.DataDisks != null)              {                  for (int i = 0; i < properties.DataDisks.Count; i++)                  {                      var label = properties.DataDisks[i].DiskLabel ?? "DataDisk" + i;                      var name = properties.DataDisks[i].DiskName ?? "DataDisk" + i;                      var size = properties.DataDisks[i].LogicalDiskSizeInGB < 30                                     ? 30                                     : properties.DataDisks[i].LogicalDiskSizeInGB;                      var disk = DataVirtualHardDisk.GetDefaultDataDisk(properties.StorageAccountName' size' i' name' label);                      disks.HardDiskCollection.Add(disk);                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Services.Classes,BuildActivity,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\BuildActivity.cs,Rebuild,The following statement contains a magic number: if (fileCount != 2 || _manager.CsdefFileInstance == null || CcprojFile == null)                  throw new ApplicationException(                      "inconsistent build files in directory' check for multiple or zero service definitions or .ccproj files");
Magic Number,Elastacloud.AzureManagement.Fluent.Services.Classes,DeploymentTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\DeploymentTransaction.cs,CreateDeployment,The following statement contains a magic number: try              {                  deployment.Execute();                  _manager.WriteComplete(EventPoint.DeploymentCreated' "Deployment " + _manager.DeploymentName + " created");              }              catch (Exception)              {                  DeleteDeployment();                  deleted = true;              }              finally              {                  if (deleted)                  {                      deployment.Execute();                      _manager.WriteComplete(EventPoint.DeploymentCreated' "Deployment " + _manager.DeploymentName + " created");                  }                  // check here and execute on a timer to see if the role are ready and running                  if (_manager.WaitUntilAllRoleInstancesAreRunning)                  {                      var command = new GetAggregateDeploymentStatusCommand(_manager.HostedServiceName' _manager.DeploymentSlot)                                        {                                            Certificate = _manager.ManagementCertificate'                                            SubscriptionId = _manager.SubscriptionId                                        };                      while (!command.AllDeploymentNodesRunning)                      {                          command.Execute();                          // TODO: put a 5 second timer in here for now but replace with a timeout and exception method if over a certain value                          Thread.Sleep(5000);                      }                  }              }
Magic Number,Elastacloud.AzureManagement.Fluent.Services.Classes,RemoteDesktop,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Services\Classes\RemoteDesktop.cs,ChangeConfig,The following statement contains a magic number: var pluginSettings = new NameValueCollection                                       {                                           {Constants.PluginsRemoteAccessEnabled' "true"}'                                           {Constants.PluginsRemoteAccessAccountUsername' Username}'                                           {                                               Constants.PluginsRemoteAccessAccountEncryptedPassword'                                               ExportBase64EncryptedString(Password)                                               }'                                           {                                               // Build in an ISO 8061 format date and also add 3 months to the expiry of the RD                                                Constants.PluginsRemoteAccessAccountExpiration'                                               DateTime.UtcNow.AddMonths(3).ToString(                                                   "yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK")                                               }'                                           {Constants.PluginsRemoteForwarderEnabled' "true"}                                       };
Magic Number,Elastacloud.AzureManagement.Fluent.SqlAzure.Classes,SqlAzureTransaction,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\SQL Azure\Classes\SqlAzureTransaction.cs,ExecuteBatchNonQuery,The following statement contains a magic number: try              {                  foreach (string line in sql.Split(new string[2] { "\n"' "\r" }' StringSplitOptions.RemoveEmptyEntries))                  {                      if (line.ToUpperInvariant().Trim() == "GO")                      {                          var cmd = new SqlCommand(sqlBatch' conn);                          cmd.ExecuteNonQuery();                          sqlBatch = string.Empty;                      }                      else                      {                          sqlBatch += line + "\n";                      }                  }              }              finally              {                  conn.Close();              }
Magic Number,Elastacloud.AzureManagement.Fluent.Storage.Classes,StorageActivity,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Storage\Classes\StorageActivity.cs,CreateStorageAccount,The following statement contains a magic number: try              {                  // issue the create storage account command                   _client.CreateNewStorageAccount(Manager.StorageAccountName' Manager.StorageAccountLocation);                    while (StorageStatus.Created != _client.GetStorageStatus(Manager.StorageAccountName))                  {                      Thread.Sleep(5000);                  }                    Manager.WriteComplete(EventPoint.StorageAccountCreated' "Storage account " + Manager.StorageAccountName + " created");                  // get the storage account keys                   var keys = _client.GetStorageAccountKeys(Manager.StorageAccountName);                    Manager.WriteComplete(EventPoint.StorageKeyRequestSuccess' "Keys returned from storage request");                  // populate the primary and secondary keys                   Manager.StorageAccountPrimaryKey = keys[0];                  Manager.StorageAccountSecondaryKey = keys[1];              }              catch (Exception exception)              {                  // rollback the operation if it failed                  Manager.WriteComplete(EventPoint.ExceptionOccurrence' exception.GetType() + ": " + exception.Message);                  return false;              }
Magic Number,Elastacloud.AzureManagement.Fluent.Watchers,BaseWatcher,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Fluent API\Watchers\BaseWatcher.cs,BaseWatcher,The following statement contains a magic number: Timer = new Timer(15000)                          {                              AutoReset = true'                              Enabled = true                          };
Missing Default,Elastacloud.AzureManagement.Fluent.Clients,MobileServiceClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\MobileServiceClient.cs,GetMobileAuthenticationProviderSettings,The following switch statement is missing a default case: switch (mobileServicesAuthProvider.Provider)                  {                      case Constants.GoogleProvider:                          GoogleClientId = mobileServicesAuthProvider.AppId;                          GoogleClientSecret = mobileServicesAuthProvider.Secret;                          break;                      case Constants.FacebookProvider:                          FacebookClientId = mobileServicesAuthProvider.AppId;                          FacebookClientSecret = mobileServicesAuthProvider.Secret;                          break;                      case Constants.TwitterProvider:                          TwitterClientId = mobileServicesAuthProvider.AppId;                          TwitterClientSecret = mobileServicesAuthProvider.Secret;                          break;                  }
Missing Default,Elastacloud.AzureManagement.Fluent.Clients,WebsiteClient,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Clients\WebsiteClient.cs,SetScalePotential,The following switch statement is missing a default case: switch (website.ComputeMode)              {                  case ComputeMode.Free:                      website.ComputeMode = ComputeMode.Shared;                      website.Mode = SiteMode.Limited;                      break;                  case ComputeMode.Shared:                      website.ComputeMode = ComputeMode.Shared;                      website.Mode = SiteMode.Basic;                      break;                  case ComputeMode.Dedicated:                      {                          website.ComputeMode = ComputeMode.Dedicated;                          website.Mode = SiteMode.Basic;                          // TODO: Create the default server farm here and add to config                          try                          {                              // check to see whether this has been set or not                              if (website.ServerFarm == null)                              {                                  website.ServerFarm = new ServerFarm() {Name = "DefaultServerFarm"};                                  }                              // then use this to get or create the server farm                              var command = new GetServerFarmCommand(website)                                  {                                      SubscriptionId = SubscriptionId'                                      Certificate = ManagementCertificate                                  };                              command.Execute();                              WebsiteProperties = command.Website;                          }                          catch (Exception)                          {                              // if we get the exception here then this will most likely be a 404 - for the time being treat it as such ...                              try                              {                                  var command = new CreateWebsiteServerFarmCommand(website)                                  {                                      SubscriptionId = SubscriptionId'                                      Certificate = ManagementCertificate                                  };                                  command.Execute();                              }                              catch (Exception)                              {                                  // if this fails we want to halt                                  throw new FluentManagementException(                                      "Subscription does not support a dedicated server farm"' "WebsiteClient");                              }                                                        }                          break;                      }              }
Missing Default,Elastacloud.AzureManagement.Fluent.Commands.Blobs,BlobCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Blobs\BlobCommand.cs,PrepareRequest,The following switch statement is missing a default case: switch (contentLength)              {                  case 0:                      return request;              }
Missing Default,Elastacloud.AzureManagement.Fluent.Commands.Parsers,GetMobileServiceResourceParser,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Parsers\GetMobileServiceResourceParser.cs,Parse,The following switch statement is missing a default case: switch (type)                  {                      case Constants.MobileServicesSqlServerType:                          var serverName = internalResource.Element(GetSchema() + "Name");                          dictionary["ServerName"] = serverName != null ? serverName.Value : "Unprovisioned!";                          dictionary["MobileServiceServerName"] = internalResource.Element(GetSchema() + "LogicalName").Value;                          break;                      case Constants.MobileServicesSqlDatabaseType:                          var dbName = internalResource.Element(GetSchema() + "Name");                          dictionary["DatabaseName"] = dbName != null ? dbName.Value : "Unprovisioned!";                          dictionary["MobileServiceDatabaseName"] = internalResource.Element(GetSchema() + "LogicalName").Value;                          break;                  }
Missing Default,Elastacloud.AzureManagement.Fluent.Commands.Services,ServiceCommand,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Commands\Services\ServiceCommand.cs,ResponseCallback,The following switch statement is missing a default case: switch (status)                  {                      case OperationStatus.InProgress:                          break;                      case OperationStatus.Failed:                          //Trace.WriteLine(String.Format("Hosted Service Response Id: {0}"' MsftAsyncResponseId);                          _lastFailureResponse = asyncCommand.GetFailureText();                          SitAndWait.Set();                          return;                      case OperationStatus.Succeeded:                          //Trace.WriteLine("Hosted Service Response Id: {0}"' MsftAsyncResponseId);                          SitAndWait.Set();                          return;                  }
Missing Default,Elastacloud.AzureManagement.Fluent.Types,ConfigurationFile,C:\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent\Types\ConfigurationFile.cs,PersistConfigurationFile,The following switch statement is missing a default case: switch (type)              {                  case ConfigurationFileType.Current:                      filePath = Filename;                      versionToPersist = NewVersion;                      break;                  case ConfigurationFileType.Backup:                      filePath = Path.Combine(Path.GetDirectoryName(Filename)' Path.GetFileNameWithoutExtension(Filename) + ".old");                      versionToPersist = OriginalVersion;                      break;                  case ConfigurationFileType.Replacement:                      filePath = Path.Combine(Path.GetDirectoryName(Filename)' Path.GetFileName(Filename) + ".000");                      versionToPersist = OriginalVersion;                      break;              }
