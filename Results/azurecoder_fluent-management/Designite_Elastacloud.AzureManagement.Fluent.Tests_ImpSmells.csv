Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.ServiceBus,GetManagementTokenCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\ServiceBus\GetManagementTokenCommandTest.cs,GetManagementTokenCommand_HttpVerb_Post,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => tRequest.HttpVerb == "POST")' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.ServiceBus,GetManagementTokenCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\ServiceBus\GetManagementTokenCommandTest.cs,GetManagementTokenCommand_CommandUri_ContainsNamespace,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => tRequest.Body.Contains("bobthisisanamespaces"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 159.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,AddServiceCertificateCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\AddServiceCertificateCommandTest.cs,AddServiceCertificateCommand_HttpVerb_Post,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => tRequest.HttpVerb == "POST")' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,AddServiceCertificateCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\AddServiceCertificateCommandTest.cs,AddServiceCertificateCommand_Contains_Body_Payload_CertificateFormat,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "CertificateFormat"' "pfx"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 214.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,AddServiceCertificateCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\AddServiceCertificateCommandTest.cs,AddServiceCertificateCommand_Contains_Body_Payload_Password,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "Password"' "password"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 210.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,AddServiceCertificateCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\AddServiceCertificateCommandTest.cs,AddServiceCertificateCommand_Contains_CorrectUri,The length of the statement  "                "https://management.core.windows.net/aaaaaaaa-8130-49d7-95f9-aaaaaaaaaaaa/services/hostedservices/myservice/certificates"; " is 122.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,DeleteDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\DeleteDeploymentCommandTest.cs,DeleteDeploymentCommand_HttpVerb_Delete,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => tRequest.HttpVerb == "DELETE")' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 142.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,DeleteDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\DeleteDeploymentCommandTest.cs,DeleteDeploymentCommand_Contains_Correct_Uri,The length of the statement  "            const string commandUri = "https://management.core.windows.net/aaaaaaaa-8130-49d7-95f9-aaaaaaaaaaaa/services/hostedservices/bob/deploymentslots/staging"; " is 153.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateHostedServiceCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateHostedServiceCommandTest.cs,CreateHostedServiceCommand_HttpVerb_Post,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => tRequest.HttpVerb == "POST")' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateHostedServiceCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateHostedServiceCommandTest.cs,CreateHostedServiceCommand_Contains_Body_Payload_Name,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "ServiceName"' "bob"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 208.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateHostedServiceCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateHostedServiceCommandTest.cs,CreateHostedServiceCommand_Contains_Body_Payload_Description,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "Description"' "bill"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 209.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateHostedServiceCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateHostedServiceCommandTest.cs,CreateHostedServiceCommand_Contains_Body_Payload_Location,The length of the statement  "								t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "Location"' LocationConstants.NorthEurope))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 229.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateHostedServiceCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateHostedServiceCommandTest.cs,CreateHostedServiceCommand_Contains_Correct_Uri,The length of the statement  "            const string commandUri = "https://management.core.windows.net/aaaaaaaa-8130-49d7-95f9-aaaaaaaaaaaa/services/hostedservices"; " is 125.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateDeploymentCommandTest.cs,CreateDeploymentCommand_HttpVerb_Post,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => tRequest.HttpVerb == "POST")' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 140.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateDeploymentCommandTest.cs,CreateDeploymentCommand_Contains_Body_Payload_PackageUrl,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "PackageUrl"' "mypackage"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 213.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateDeploymentCommandTest.cs,CreateDeploymentCommand_Contains_Body_Payload_StartDeployment_Default_Value,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "StartDeployment"' "true"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 213.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateDeploymentCommandTest.cs,CreateDeploymentCommand_Contains_Body_Payload_Name,The length of the statement  "                t.MakeASyncRequest(It.Is<ServiceManagementRequest>(tRequest => new XmlTestHelper(tRequest.Body).CheckXmlValue(Namespaces.NsWindowsAzure' "Name"' "bob"))' It.IsAny<ServiceManager.AsyncResponseParser>()' " is 201.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests.HttpStandard.Services,CreateDeploymentCommandTest,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\HttpStandard\Services\CreateDeploymentCommandTest.cs,CreateDeploymentCommand_Contains_Correct_Uri,The length of the statement  "                "https://management.core.windows.net/aaaaaaaa-8130-49d7-95f9-aaaaaaaaaaaa/services/hostedservices/bob/deploymentslots/production"; " is 130.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests,TestConfigFiles,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestConfigFiles.cs,TestGetSettingCheckInAllRoles,The length of the statement  "            cloudConfig.DoesSettingExist(NodeMappingName).Should().BeTrue("The setting should exist in at least one of the roles in the file"); " is 131.
Long Statement,Elastacloud.AzureManagement.Fluent.Tests,TestPublishSettings,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestPublishSettings.cs,TestAddCertificateToStoreFromPublishSettings,The length of the statement  "			cert2.HasPrivateKey.Should().BeTrue("Same certificate as above should exist and be imported with pvk into the personal store"); " is 127.
Magic Number,Elastacloud.AzureManagement.Fluent.Tests,TestConfigFiles,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestConfigFiles.cs,TestGetRoleListForThreeRoles,The following statement contains a magic number: roleNames.Count.Should().Be(3);
Magic Number,Elastacloud.AzureManagement.Fluent.Tests,TestGithub,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestGithub.cs,GithubClient_GetRepositories_List,The following statement contains a magic number: list.Count.Should().Be(5);
Magic Number,Elastacloud.AzureManagement.Fluent.Tests,TestPublishSettings,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestPublishSettings.cs,TestGetSubscriptionsInPublishsettings,The following statement contains a magic number: dictionary.Count.Should().Be(5' "Number of subscriptions in Xml .publishsettings string");
Magic Number,Elastacloud.AzureManagement.Fluent.Tests,TestPublishSettings,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestPublishSettings.cs,TestVersion2Schema,The following statement contains a magic number: settings.SchemaVersion.Should().Be(2' "the schema number used");
Magic Number,Elastacloud.AzureManagement.Fluent.Tests,TestPublishSettings,D:\research\architectureSmells\repos\azurecoder_fluent-management\Elastacloud.AzureManagement.Fluent.Tests\TestPublishSettings.cs,TestVersion2SchemaWithForeginCultureSettings,The following statement contains a magic number: settings.SchemaVersion.Should().Be(2' "the schema number used");
