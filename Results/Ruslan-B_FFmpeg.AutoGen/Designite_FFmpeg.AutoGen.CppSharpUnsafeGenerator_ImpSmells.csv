Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FFmpeg.AutoGen.CppSharpUnsafeGenerator,CliOptions,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\CliOptions.cs,Normalize,Cyclomatic complexity of the method is 9
Complex Method,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,MacroPostProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\MacroPostProcessor.cs,Rewrite,Cyclomatic complexity of the method is 10
Complex Method,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,MacroPostProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\MacroPostProcessor.cs,Serialize,Cyclomatic complexity of the method is 10
Complex Method,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeHelper,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeHelper.cs,GetTypeName,Cyclomatic complexity of the method is 27
Complex Method,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,Cyclomatic complexity of the method is 10
Complex Method,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,ToString,Cyclomatic complexity of the method is 10
Long Parameter List,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WriteDefaultFunctionDelegateExpression,The method has 5 parameters. Parameters: function' parameterNames' functionDelegateName' functionPtrName' returnCommand
Long Parameter List,FFmpeg.AutoGen.CppSharpUnsafeGenerator,FunctionExportHelper,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\FunctionExportHelper.cs,SymLoadModuleEx,The method has 8 parameters. Parameters: hProcess' hFile' imageName' moduleName' baseOfDll' dllSize' data' flags
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WriteDelegate,The length of the statement  "                Write($"new {@delegate.Name} {{ Pointer = func == null ? IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func) }};"); " is 121.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WritePrimitiveFixedArray,The length of the statement  "                WriteLine($"{@fixed} {{ var a = new {elementType}[Size]; for (uint i = 0; i < Size; i++) a[i] = p->{prefix}[i]; return a; }}"); " is 127.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WritePrimitiveFixedArray,The length of the statement  "                WriteLine($"{@fixed} {{ uint i = 0; foreach(var value in array) {{ p->{prefix}[i++] = value; if (i >= Size) return; }} }}"); " is 124.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WriteComplexFixedArray,The length of the statement  "                WriteLine($"{@fixed} {{ var a = new {elementType}[Size]; for (uint i = 0; i < Size; i++) a[i] = *(p0 + i); return a; }}"); " is 122.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WriteSummary,The length of the statement  "            if (!string.IsNullOrWhiteSpace(value.Content)) WriteLine($"/// <summary>{SecurityElement.Escape(value.Content.Trim())}</summary>"); " is 131.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Writer,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Writer.cs,WriteParam,The length of the statement  "            if (!string.IsNullOrWhiteSpace(value.Content)) WriteLine($"/// <param name=\"{name}\">{SecurityElement.Escape(value.Content.Trim())}</param>"); " is 143.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,FunctionExportHelper,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\FunctionExportHelper.cs,LoadFunctionExports,The length of the statement  "                foreach (var export in exports) yield return new FunctionExport { LibraryName = libraryName' LibraryVersion = libraryVersion' Name = export}; " is 141.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,FunctionExportHelper,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\FunctionExportHelper.cs,GetExports,The length of the statement  "                if (!SymEnumerateSymbols64(hCurrentProcess' baseOfDll' EnumSyms' IntPtr.Zero)) throw new Exception("SymEnumerateSymbols64 failed."); " is 132.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Generator,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Generator.cs,WriteLibraries,The length of the statement  "                        var libraryVersionMap = Exports.Select(x => new {x.LibraryName' x.LibraryVersion}).Distinct().ToDictionary(x => x.LibraryName' x => x.LibraryVersion); " is 150.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,MacroPostProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\MacroPostProcessor.cs,IsConst,The length of the statement  "                case VariableExpression e: return _macroExpressionMap.TryGetValue(e.Name' out var nested) && nested != null && IsConst(nested); " is 127.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,MacroProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\MacroProcessor.cs,Process,The length of the statement  "            foreach (var macro in translationUnit.PreprocessedEntities.OfType<MacroDefinition>().Where(x => !string.IsNullOrWhiteSpace(x.Expression))) " is 138.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,FunctionProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\FunctionProcessor.cs,GetReturnTypeName,The length of the statement  "                            Attributes = new[] {"[return: MarshalAs(UnmanagedType.CustomMarshaler' MarshalTypeRef = typeof(ConstCharPtrMarshaler))]"} " is 121.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,FunctionProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\FunctionProcessor.cs,GetParameterType,The length of the statement  "                !(arrayPointerType.Pointee is BuiltinType || arrayPointerType.Pointee is TypedefType typedefType && typedefType.Declaration.Type is BuiltinType)) " is 145.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,FunctionProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\FunctionProcessor.cs,GetCommentString,The length of the statement  "            return comment == null ? null : string.Join(" "' comment.ParagraphComment.Content.OfType<TextComment>().Select(x => x.Text.Trim())); " is 132.
Long Statement,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,StructureProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\StructureProcessor.cs,GetFieldTypeForFixedArray,The length of the statement  "            if (elementType is ArrayType) name = TypeHelper.GetTypeName(((ArrayType) elementType).Type) + "_arrayOfArray" + fixedSize; " is 122.
Complex Conditional,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,FunctionProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\FunctionProcessor.cs,GetParameterType,The conditional expression  "type is ArrayType arrayType &&                  arrayType.SizeType == ArrayType.ArraySize.Incomplete &&                  arrayType.Type is PointerType arrayPointerType &&                  !(arrayPointerType.Pointee is BuiltinType || arrayPointerType.Pointee is TypedefType typedefType && typedefType.Declaration.Type is BuiltinType)"  is complex.
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,StructureProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\StructureProcessor.cs,MakeDefinition,The following statement contains a magic number: bitCounter % 8 == 0
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,StructureProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\StructureProcessor.cs,GetBitField,The following statement contains a magic number: switch (bitCounter)              {                  case 8:                      fieldType = "byte";                      break;                  case 16:                      fieldType = "short";                      break;                  case 32:                      fieldType = "int";                      break;                  case 64:                      fieldType = "long";                      break;                  default:                      throw new NotSupportedException();              }
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,StructureProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\StructureProcessor.cs,GetBitField,The following statement contains a magic number: switch (bitCounter)              {                  case 8:                      fieldType = "byte";                      break;                  case 16:                      fieldType = "short";                      break;                  case 32:                      fieldType = "int";                      break;                  case 64:                      fieldType = "long";                      break;                  default:                      throw new NotSupportedException();              }
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,StructureProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\StructureProcessor.cs,GetBitField,The following statement contains a magic number: switch (bitCounter)              {                  case 8:                      fieldType = "byte";                      break;                  case 16:                      fieldType = "short";                      break;                  case 32:                      fieldType = "int";                      break;                  case 64:                      fieldType = "long";                      break;                  default:                      throw new NotSupportedException();              }
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,StructureProcessor,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\StructureProcessor.cs,GetBitField,The following statement contains a magic number: switch (bitCounter)              {                  case 8:                      fieldType = "byte";                      break;                  case 16:                      fieldType = "short";                      break;                  case 32:                      fieldType = "int";                      break;                  case 64:                      fieldType = "long";                      break;                  default:                      throw new NotSupportedException();              }
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 2;
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 3;
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 4;
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 5;
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 6;
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 7;
Magic Number,FFmpeg.AutoGen.CppSharpUnsafeGenerator.Processors,TypeOrAlias,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Processors\TypeOrAlias.cs,GetPrecedence,The following statement contains a magic number: return 8;
Missing Default,FFmpeg.AutoGen.CppSharpUnsafeGenerator,Generator,C:\research\architectureSmells\repos\Ruslan-B_FFmpeg.AutoGen\FFmpeg.AutoGen.CppSharpUnsafeGenerator\Generator.cs,OnSourceFileParsed,The following switch statement is missing a default case: switch (result.Kind)              {                  case ParserResultKind.Success:                      Diagnostics.Message("Parsed '{0}'"' string.Join("' "' files));                      break;                  case ParserResultKind.Error:                      Diagnostics.Error("Error parsing '{0}'"' string.Join("' "' files));                      _hasParsingErrors = true;                      break;                  case ParserResultKind.FileNotFound:                      Diagnostics.Error("A file from '{0}' was not found"' string.Join("'"' files));                      break;              }
