Implementation smell,Namespace,Class,File,Method,Description
Magic Number,TimberWinR.ExtractID,NativeMethods,C:\repos\Cimpress-MCP_TimberWinR\TimberWinR.ExtractID\Program.cs,MsiGetProductProperty,The following statement contains a magic number: StringBuilder sb = new StringBuilder(1024);
Magic Number,TimberWinR.ExtractID,Program,C:\repos\Cimpress-MCP_TimberWinR\TimberWinR.ExtractID\Program.cs,Main,The following statement contains a magic number: if (args.Length < 2)              {                  Console.Error.WriteLine("Expecting MSI and Tempolate file arguments");                  return 1;              }
Magic Number,TimberWinR.ExtractID,Program,C:\repos\Cimpress-MCP_TimberWinR\TimberWinR.ExtractID\Program.cs,Main,The following statement contains a magic number: string newFile = args[2];
Magic Number,TimberWinR.ExtractID,Program,C:\repos\Cimpress-MCP_TimberWinR\TimberWinR.ExtractID\Program.cs,Main,The following statement contains a magic number: NativeMethods.MsiSetInternalUI(2' IntPtr.Zero);
Magic Number,TimberWinR.ExtractID,Program,C:\repos\Cimpress-MCP_TimberWinR\TimberWinR.ExtractID\Program.cs,Main,The following statement contains a magic number: using (msi)              {                  if (0 != NativeMethods.MsiGetProductProperty(msi' "ProductCode"' out productCode))                      throw new InvalidOperationException("Can't obtain product code");                    string contents = File.ReadAllText(args[1]);                    contents = contents.Replace("${PROJECTGUID}"' productCode);                    File.WriteAllText(args[2]' contents);                    Console.WriteLine("Updated {0} ProductID: {1}"' args[2]' productCode);                    return 0;              }
Magic Number,TimberWinR.ExtractID,Program,C:\repos\Cimpress-MCP_TimberWinR\TimberWinR.ExtractID\Program.cs,Main,The following statement contains a magic number: using (msi)              {                  if (0 != NativeMethods.MsiGetProductProperty(msi' "ProductCode"' out productCode))                      throw new InvalidOperationException("Can't obtain product code");                    string contents = File.ReadAllText(args[1]);                    contents = contents.Replace("${PROJECTGUID}"' productCode);                    File.WriteAllText(args[2]' contents);                    Console.WriteLine("Updated {0} ProductID: {1}"' args[2]' productCode);                    return 0;              }
