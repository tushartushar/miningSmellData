Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AppDomainToolkit.UnitTests,AppDomainContextUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\AppDomainContextUnitTests.cs,LoadAssembly_NoRefAssembly_LoadBitsWrongPdbPathSpecified,The length of the statement  "                var pdbPath = Path.ChangeExtension(Path.Combine(TestAssemblyDir' Guid.NewGuid().ToString()' NoRefsAssemblyFileName)' "pdb"); " is 124.
Long Statement,AppDomainToolkit.UnitTests,AppDomainContextUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\AppDomainContextUnitTests.cs,ReflectionOnlyLoadAssembly_NoRefAssembly_LoadFile,The length of the statement  "                Exception ex = Assert.Throws<NotSupportedException>(()=>context.ReflectionOnlyLoadAssembly(LoadMethod.LoadFile' targetPath)); " is 125.
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_InstanceTwoTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteAction<int' int>();                  action.Invoke(1' 2' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_InstanceThreeTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteAction<int' int' int>();                  action.Invoke(1' 2' 3' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_InstanceThreeTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteAction<int' int' int>();                  action.Invoke(1' 2' 3' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteAction<int' int' int' int>();                  action.Invoke(1' 2' 3' 4' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteAction<int' int' int' int>();                  action.Invoke(1' 2' 3' 4' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteAction<int' int' int' int>();                  action.Invoke(1' 2' 3' 4' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_OneArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (test) =>                      {                          test.Value1 = 10;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_OneArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_TwoArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      (test' value2) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_TwoArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      (test' value2) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_TwoArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_TwoArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_ThreeArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      (test' value2' value3) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_ThreeArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      (test' value2' value3) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_ThreeArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      (test' value2' value3) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_ThreeArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_ThreeArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_ThreeArg,The following statement contains a magic number: Assert.Equal(12.0' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (test' value2' value3' value4) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                          test.Value4 = value4;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (test' value2' value3' value4) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                          test.Value4 = value4;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (test' value2' value3' value4) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                          test.Value4 = value4;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: RemoteAction.Invoke(                      context.Domain'                      actual'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (test' value2' value3' value4) =>                      {                          test.Value1 = 10;                          test.Value2 = value2;                          test.Value3 = value3;                          test.Value4 = value4;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: Assert.Equal(12.0' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteActionUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteActionUnitTests.cs,Invoke_MarshalObjectByRef_FourArg,The following statement contains a magic number: Assert.Equal(13' actual.Value4.Value);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,InstanceThreeTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteFuncAsync<int' int' int>();                  action.Invoke(1' 2' null' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteFuncAsync<int' int' int' int>();                  action.Invoke(1' 2' 3' null' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  var action = new RemoteFuncAsync<int' int' int' int>();                  action.Invoke(1' 2' 3' null' null);              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,InstanceFiveTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  try                  {                      var action = new RemoteFuncAsync<int' int' int' int' int>();                      action.Invoke(1' 2' 3' 4' null' null);                  }                  catch (Exception)                  {                      throw;                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,InstanceFiveTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  try                  {                      var action = new RemoteFuncAsync<int' int' int' int' int>();                      action.Invoke(1' 2' 3' 4' null' null);                  }                  catch (Exception)                  {                      throw;                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,InstanceFiveTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>              {                  try                  {                      var action = new RemoteFuncAsync<int' int' int' int' int>();                      action.Invoke(1' 2' 3' 4' null' null);                  }                  catch (Exception)                  {                      throw;                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_NoArguments,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      async () =>                      {                          return new Test() { Value1 = 10 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_NoArguments,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Delay_Short,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      async (value) =>                      {                          await Task.Delay(100);                          return new Test() { Value1 = value };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Delay_Short,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      async (value) =>                      {                          await Task.Delay(100);                          return new Test() { Value1 = value };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Delay_Short,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Delay_Long,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      async (value) =>                      {                          await Task.Delay(1000);                          return new Test() { Value1 = value };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Delay_Long,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      async (value) =>                      {                          await Task.Delay(1000);                          return new Test() { Value1 = value };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Delay_Long,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,TaskYields,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      async (value) =>                      {                          await Task.Yield();                          var test = new Test() { Value1 = value };                          await Task.Yield();                          return test;                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,TaskYields,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_OneArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      async (value) =>                      {                          return new Test() { Value1 = value };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_OneArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_TwoArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      async (value1' value2) =>                      {                          return new Test() { Value1 = value1' Value2 = value2 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_TwoArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      async (value1' value2) =>                      {                          return new Test() { Value1 = value1' Value2 = value2 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_TwoArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_TwoArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_ThreeArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12)'                      async (value1' value2' value3) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_ThreeArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12)'                      async (value1' value2' value3) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_ThreeArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12)'                      async (value1' value2' value3) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_ThreeArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_ThreeArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_ThreeArg,The following statement contains a magic number: Assert.Equal(12' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      async (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      async (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      async (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      async (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: Assert.Equal(12' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FourArg,The following statement contains a magic number: Assert.Equal(13' actual.Value4.Value);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      "Last"'                      async (value1' value2' value3' value4' value5) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      "Last"'                      async (value1' value2' value3' value4' value5) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      "Last"'                      async (value1' value2' value3' value4' value5) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: var actual = await RemoteFuncAsync.InvokeAsync(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      "Last"'                      async (value1' value2' value3' value4' value5) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: Assert.Equal(12' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Serializable_FiveArg,The following statement contains a magic number: Assert.Equal(13' actual.Value4.Value);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncAsyncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncAsyncUnitTests.cs,Exception,The following statement contains a magic number: await Assert.ThrowsAsync(typeof(AggregateException)' async () =>              {                  using (var context = AppDomainContext.Create())                  {                      Test actual = null;                        CancellationTokenSource tcs = new CancellationTokenSource();                      actual = await RemoteFuncAsync.InvokeAsync(                          context.Domain'                          10'                          (short)11'                          new Double?(12.0)'                          new Composite() { Value = 13 }'                          "Last"'                          async (value1' value2' value3' value4' value5) =>                          {                              if (value5 == "Last")                                  throw new Exception("");                              return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4' Value5 = value5 };                          });                        Assert.NotNull(actual);                      Assert.Equal(10' actual.Value1);                      Assert.Equal(11' actual.Value2);                      Assert.Equal(12' actual.Value3);                      Assert.NotNull(actual.Value4);                      Assert.Equal("Last"' actual.Value5);                      Assert.Equal(13' actual.Value4.Value);                  }              });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_InstanceThreeTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>               {                   var action = new RemoteFunc<int' int' int>();                   action.Invoke(1' 2' null);               });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>               {                   var action = new RemoteFunc<int' int' int' int>();                   action.Invoke(1' 2' 3' null);               });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_InstanceFourTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>               {                   var action = new RemoteFunc<int' int' int' int>();                   action.Invoke(1' 2' 3' null);               });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_InstanceFiveTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>               {                   var action = new RemoteFunc<int' int' int' int' int>();                   action.Invoke(1' 2' 3' 4' null);               });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_InstanceFiveTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>               {                   var action = new RemoteFunc<int' int' int' int' int>();                   action.Invoke(1' 2' 3' 4' null);               });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_InstanceFiveTypes_NullFunction,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () =>               {                   var action = new RemoteFunc<int' int' int' int' int>();                   action.Invoke(1' 2' 3' 4' null);               });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_NoArguments,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      () =>                      {                          return new Test() { Value1 = 10 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_NoArguments,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_OneArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (value) =>                      {                          return new Test() { Value1 = value };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_OneArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_TwoArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      (value1' value2) =>                      {                          return new Test() { Value1 = value1' Value2 = value2 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_TwoArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      (value1' value2) =>                      {                          return new Test() { Value1 = value1' Value2 = value2 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_TwoArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_TwoArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_ThreeArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12)'                      (value1' value2' value3) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_ThreeArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12)'                      (value1' value2' value3) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_ThreeArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12)'                      (value1' value2' value3) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_ThreeArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_ThreeArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_ThreeArg,The following statement contains a magic number: Assert.Equal(12' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: var actual = RemoteFunc.Invoke(                      context.Domain'                      10'                      (short)11'                      new Double?(12.0)'                      new Composite() { Value = 13 }'                      (value1' value2' value3' value4) =>                      {                          return new Test() { Value1 = value1' Value2 = value2' Value3 = value3' Value4 = value4 };                      });
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: Assert.Equal(10' actual.Value1);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: Assert.Equal(11' actual.Value2);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: Assert.Equal(12' actual.Value3);
Magic Number,AppDomainToolkit.UnitTests,RemoteFuncUnitTests,D:\research\architectureSmells\repos\jduv_AppDomainToolkit\AppDomainToolkit.UnitTests\RemoteFuncUnitTests.cs,Invoke_Serializable_FourArg,The following statement contains a magic number: Assert.Equal(13' actual.Value4.Value);
