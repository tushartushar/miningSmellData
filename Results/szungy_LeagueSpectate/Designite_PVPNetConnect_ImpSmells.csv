Implementation smell,Namespace,Class,File,Method,Description
Long Method,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,SetFields,The method has 117 lines of code.
Complex Method,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,Decode,Cyclomatic complexity of the method is 14
Complex Method,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,Cyclomatic complexity of the method is 17
Complex Method,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,Cyclomatic complexity of the method is 17
Complex Method,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,Encode,Cyclomatic complexity of the method is 12
Complex Method,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,Cyclomatic complexity of the method is 17
Complex Method,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,GetBaseTypedObject,Cyclomatic complexity of the method is 18
Complex Method,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,SetFields,Cyclomatic complexity of the method is 29
Long Statement,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The length of the statement  "			else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) { " is 173.
Long Statement,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,GetBaseTypedObject,The length of the statement  "	foreach (var prop in objectType.GetProperties (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly)) { " is 147.
Long Statement,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,GetBaseTypedObject,The length of the statement  "		var intern = prop.GetCustomAttributes (typeof(InternalNameAttribute)' false).FirstOrDefault () as InternalNameAttribute; " is 120.
Long Statement,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,GetBaseTypedObject,The length of the statement  "		foreach (var prop in objectBaseType.GetProperties (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly)) { " is 151.
Long Statement,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,GetBaseTypedObject,The length of the statement  "			var intern = prop.GetCustomAttributes (typeof(InternalNameAttribute)' false).FirstOrDefault () as InternalNameAttribute; " is 120.
Long Statement,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,SetFields,The length of the statement  "	foreach (var prop in typeof(T).GetProperties (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly)) { " is 146.
Long Statement,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,SetFields,The length of the statement  "		var intern = prop.GetCustomAttributes (typeof(InternalNameAttribute)' false).FirstOrDefault () as InternalNameAttribute; " is 120.
Complex Conditional,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The conditional expression  "i == 4 || i == 6 || i == 8 || i == 10"  is complex.
Complex Conditional,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The conditional expression  "i == 4 || i == 6 || i == 8 || i == 10"  is complex.
Empty Catch Block,PVPNetConnect.RiotObjects,RiotGamesObject,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RiotObjects\RiotGamesObject.cs,SetFields,The method has an empty catch block.
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,Login,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,Login,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,Subscribe,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,Subscribe,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetLoginDataPacketForUser,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetLoginDataPacketForUser,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAvailableQueues,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAvailableQueues,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSumonerActiveBoosts,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSumonerActiveBoosts,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAvailableChampions,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAvailableChampions,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerRuneInventory,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerRuneInventory,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,PerformLCDSHeartBeat,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,PerformLCDSHeartBeat,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetMyLeaguePositions,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetMyLeaguePositions,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,LoadPreferencesByKey,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,LoadPreferencesByKey,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetMasteryBook,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetMasteryBook,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreatePlayer,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreatePlayer,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerNames,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerNames,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetChallengerLeague,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetChallengerLeague,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllMyLeagues,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllMyLeagues,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllSummonerDataByAccount,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllSummonerDataByAccount,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetPointsBalance,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetPointsBalance,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerIcons,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerIcons,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CallKudos,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CallKudos,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RetrievePlayerStatsByAccountId,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RetrievePlayerStatsByAccountId,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RetrieveTopPlayedChampions,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RetrieveTopPlayedChampions,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerByName,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerByName,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAggregatedStats,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAggregatedStats,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetRecentGames,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetRecentGames,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,FindTeamById,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,FindTeamById,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,FindTeamById,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,FindTeamById,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetLeaguesForTeam,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetLeaguesForTeam,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetTeamAggregatedStats,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetTeamAggregatedStats,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetTeamEndOfGameStats,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetTeamEndOfGameStats,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DisbandTeam,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DisbandTeam,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,IsNameValidAndAvailable,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,IsNameValidAndAvailable,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,IsTagValidAndAvailable,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,IsTagValidAndAvailable,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreateTeam,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreateTeam,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,TeamInvitePlayer,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,TeamInvitePlayer,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,KickPlayer,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,KickPlayer,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllLeaguesForPlayer,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllLeaguesForPlayer,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllPublicSummonerDataByAccount,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetAllPublicSummonerDataByAccount,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,FindPlayer,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,FindPlayer,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSpellBook,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSpellBook,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AttachToQueue,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AttachToQueue,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CancelFromQueueIfPossible,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CancelFromQueueIfPossible,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetStoreUrl,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetStoreUrl,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ListAllPracticeGames,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ListAllPracticeGames,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,JoinGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,JoinGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,JoinGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,JoinGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ObserveGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ObserveGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ObserveGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ObserveGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerInternalNameByName,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerInternalNameByName,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SwitchTeams,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SwitchTeams,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SwitchPlayerToObserver,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SwitchPlayerToObserver,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SwitchObserverToPlayer,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SwitchObserverToPlayer,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,QuitGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,QuitGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreatePracticeGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreatePracticeGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectBotChampion,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectBotChampion,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RemoveBotChampion,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RemoveBotChampion,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,StartChampionSelection,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,StartChampionSelection,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SetClientReceivedGameMessage,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SetClientReceivedGameMessage,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetLatestGameTimerState,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetLatestGameTimerState,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectSpells,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectSpells,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectDefaultSpellBookPage,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectDefaultSpellBookPage,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectChampion,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectChampion,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectChampionSkin,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SelectChampionSkin,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ChampionSelectCompleted,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,ChampionSelectCompleted,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SetClientReceivedMaestroMessage,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SetClientReceivedMaestroMessage,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RetrieveInProgressSpectatorGameInfo,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,RetrieveInProgressSpectatorGameInfo,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DeclineObserverReconnect,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DeclineObserverReconnect,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptInviteForMatchmakingGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptInviteForMatchmakingGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptPoppedGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptPoppedGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,UpdateProfileIconId,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,UpdateProfileIconId,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,BanUserFromGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,BanUserFromGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,BanObserverFromGame,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,BanObserverFromGame,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,BanChampion,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,BanChampion,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetChampionsForBan,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetChampionsForBan,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SaveMasteryBook,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SaveMasteryBook,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetQueueInformation,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetQueueInformation,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerIconInventory,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetSummonerIconInventory,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetPotentialTraders,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetPotentialTraders,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AttemptTrade,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AttemptTrade,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DeclineTrade,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DeclineTrade,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptTrade,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptTrade,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreateDefaultSummoner,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CreateDefaultSummoner,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetGameMapList,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,GetGameMapList,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SavePreferences,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SavePreferences,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SetPreferenceEnabled,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SetPreferenceEnabled,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,LeaveTeam,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,LeaveTeam,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DeclineTeamInvite,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,DeclineTeamInvite,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptTeamInvite,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AcceptTeamInvite,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,TeamChangeOwner,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,TeamChangeOwner,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SaveSpellBook,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,SaveSpellBook,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CancelFromQueueIfPossible,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,CancelFromQueueIfPossible,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AttachTeamToQueue,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,AttachTeamToQueue,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,PurgeFromQueues,The following statement contains a magic number: while (!results.ContainsKey (Id))  	await Task.Delay (10);  
Magic Number,PVPNetConnect,PVPNetConnection,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\PublicMethods.cs,PurgeFromQueues,The following statement contains a magic number: await Task.Delay (10);  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadByteAsInt,The following statement contains a magic number: if (ret < 0)  	ret += 256;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadByteAsInt,The following statement contains a magic number: ret += 256;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (ret < 128) {  	return ret;  }  else {  	ret = (ret & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 7;  		tmp = ReadByteAsInt ();  		if (tmp < 128) {  			ret = ret | tmp;  		}  		else {  			ret = (ret | tmp & 0x7f) << 8;  			tmp = ReadByteAsInt ();  			ret = ret | tmp;  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (ret < 128) {  	return ret;  }  else {  	ret = (ret & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 7;  		tmp = ReadByteAsInt ();  		if (tmp < 128) {  			ret = ret | tmp;  		}  		else {  			ret = (ret | tmp & 0x7f) << 8;  			tmp = ReadByteAsInt ();  			ret = ret | tmp;  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (ret < 128) {  	return ret;  }  else {  	ret = (ret & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 7;  		tmp = ReadByteAsInt ();  		if (tmp < 128) {  			ret = ret | tmp;  		}  		else {  			ret = (ret | tmp & 0x7f) << 8;  			tmp = ReadByteAsInt ();  			ret = ret | tmp;  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (ret < 128) {  	return ret;  }  else {  	ret = (ret & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 7;  		tmp = ReadByteAsInt ();  		if (tmp < 128) {  			ret = ret | tmp;  		}  		else {  			ret = (ret | tmp & 0x7f) << 8;  			tmp = ReadByteAsInt ();  			ret = ret | tmp;  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (ret < 128) {  	return ret;  }  else {  	ret = (ret & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 7;  		tmp = ReadByteAsInt ();  		if (tmp < 128) {  			ret = ret | tmp;  		}  		else {  			ret = (ret | tmp & 0x7f) << 8;  			tmp = ReadByteAsInt ();  			ret = ret | tmp;  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (ret < 128) {  	return ret;  }  else {  	ret = (ret & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 7;  		tmp = ReadByteAsInt ();  		if (tmp < 128) {  			ret = ret | tmp;  		}  		else {  			ret = (ret | tmp & 0x7f) << 8;  			tmp = ReadByteAsInt ();  			ret = ret | tmp;  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: ret = (ret & 0x7f) << 7;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (tmp < 128) {  	ret = ret | tmp;  }  else {  	ret = (ret | tmp & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 8;  		tmp = ReadByteAsInt ();  		ret = ret | tmp;  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (tmp < 128) {  	ret = ret | tmp;  }  else {  	ret = (ret | tmp & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 8;  		tmp = ReadByteAsInt ();  		ret = ret | tmp;  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (tmp < 128) {  	ret = ret | tmp;  }  else {  	ret = (ret | tmp & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 8;  		tmp = ReadByteAsInt ();  		ret = ret | tmp;  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (tmp < 128) {  	ret = ret | tmp;  }  else {  	ret = (ret | tmp & 0x7f) << 7;  	tmp = ReadByteAsInt ();  	if (tmp < 128) {  		ret = ret | tmp;  	}  	else {  		ret = (ret | tmp & 0x7f) << 8;  		tmp = ReadByteAsInt ();  		ret = ret | tmp;  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: ret = (ret | tmp & 0x7f) << 7;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (tmp < 128) {  	ret = ret | tmp;  }  else {  	ret = (ret | tmp & 0x7f) << 8;  	tmp = ReadByteAsInt ();  	ret = ret | tmp;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: if (tmp < 128) {  	ret = ret | tmp;  }  else {  	ret = (ret | tmp & 0x7f) << 8;  	tmp = ReadByteAsInt ();  	ret = ret | tmp;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadInt,The following statement contains a magic number: ret = (ret | tmp & 0x7f) << 8;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDouble,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	value = (value << 8) + ReadByteAsInt ();  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDouble,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	value = (value << 8) + ReadByteAsInt ();  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDouble,The following statement contains a magic number: value = (value << 8) + ReadByteAsInt ();  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDate,The following statement contains a magic number: if (inline) {  	long ms = (long)ReadDouble ();  	DateTime d = new DateTime (1970' 1' 1' 0' 0' 0' 0);  	d = d.AddSeconds (ms / 1000);  	objectReferences.Add (d);  	return d;  }  else {  	return DateTime.MinValue;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDate,The following statement contains a magic number: if (inline) {  	long ms = (long)ReadDouble ();  	DateTime d = new DateTime (1970' 1' 1' 0' 0' 0' 0);  	d = d.AddSeconds (ms / 1000);  	objectReferences.Add (d);  	return d;  }  else {  	return DateTime.MinValue;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDate,The following statement contains a magic number: d = d.AddSeconds (ms / 1000);  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (inline) {  	bool inlineDefine = ((handle & 1) != 0);  	handle = handle >> 1;  	ClassDefinition cd;  	if (inlineDefine) {  		cd = new ClassDefinition ();  		cd.type = ReadString ();  		cd.externalizable = ((handle & 1) != 0);  		handle = handle >> 1;  		cd.dynamic = ((handle & 1) != 0);  		handle = handle >> 1;  		for (int i = 0; i < handle; i++)  			cd.members.Add (ReadString ());  		classDefinitions.Add (cd);  	}  	else {  		cd = classDefinitions [handle];  	}  	TypedObject ret = new TypedObject (cd.type);  	// Need to add reference here due to circular references  	objectReferences.Add (ret);  	if (cd.externalizable) {  		if (cd.type.Equals ("DSK"))  			ret = ReadDSK ();  		else if (cd.type.Equals ("DSA"))  			ret = ReadDSA ();  		else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  			object obj = Decode ();  			ret = TypedObject.MakeArrayCollection ((object[])obj);  		}  		else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  			int size = 0;  			for (int i = 0; i < 4; i++)  				size = size * 256 + ReadByteAsInt ();  			byte[] data = ReadBytes (size);  			StringBuilder sb = new StringBuilder ();  			for (int i = 0; i < data.Length; i++)  				sb.Append (Convert.ToChar (data [i]));  			JavaScriptSerializer serializer = new JavaScriptSerializer ();  			ret = serializer.Deserialize<TypedObject> (sb.ToString ());  			ret.type = cd.type;  		}  		else {  			//for (int i = dataPos; i < dataBuffer.length; i++)  			//System.out.print(String.format("%02X"' dataBuffer[i]));  			//System.out.println();  			throw new NotImplementedException ("Externalizable not handled for " + cd.type);  		}  	}  	else {  		for (int i = 0; i < cd.members.Count; i++) {  			String key = cd.members [i];  			object value = Decode ();  			ret.Add (key' value);  		}  		if (cd.dynamic) {  			String key;  			while ((key = ReadString ()).Length != 0) {  				object value = Decode ();  				ret.Add (key' value);  			}  		}  	}  	return ret;  }  else {  	return objectReferences [handle];  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (inline) {  	bool inlineDefine = ((handle & 1) != 0);  	handle = handle >> 1;  	ClassDefinition cd;  	if (inlineDefine) {  		cd = new ClassDefinition ();  		cd.type = ReadString ();  		cd.externalizable = ((handle & 1) != 0);  		handle = handle >> 1;  		cd.dynamic = ((handle & 1) != 0);  		handle = handle >> 1;  		for (int i = 0; i < handle; i++)  			cd.members.Add (ReadString ());  		classDefinitions.Add (cd);  	}  	else {  		cd = classDefinitions [handle];  	}  	TypedObject ret = new TypedObject (cd.type);  	// Need to add reference here due to circular references  	objectReferences.Add (ret);  	if (cd.externalizable) {  		if (cd.type.Equals ("DSK"))  			ret = ReadDSK ();  		else if (cd.type.Equals ("DSA"))  			ret = ReadDSA ();  		else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  			object obj = Decode ();  			ret = TypedObject.MakeArrayCollection ((object[])obj);  		}  		else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  			int size = 0;  			for (int i = 0; i < 4; i++)  				size = size * 256 + ReadByteAsInt ();  			byte[] data = ReadBytes (size);  			StringBuilder sb = new StringBuilder ();  			for (int i = 0; i < data.Length; i++)  				sb.Append (Convert.ToChar (data [i]));  			JavaScriptSerializer serializer = new JavaScriptSerializer ();  			ret = serializer.Deserialize<TypedObject> (sb.ToString ());  			ret.type = cd.type;  		}  		else {  			//for (int i = dataPos; i < dataBuffer.length; i++)  			//System.out.print(String.format("%02X"' dataBuffer[i]));  			//System.out.println();  			throw new NotImplementedException ("Externalizable not handled for " + cd.type);  		}  	}  	else {  		for (int i = 0; i < cd.members.Count; i++) {  			String key = cd.members [i];  			object value = Decode ();  			ret.Add (key' value);  		}  		if (cd.dynamic) {  			String key;  			while ((key = ReadString ()).Length != 0) {  				object value = Decode ();  				ret.Add (key' value);  			}  		}  	}  	return ret;  }  else {  	return objectReferences [handle];  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.externalizable) {  	if (cd.type.Equals ("DSK"))  		ret = ReadDSK ();  	else if (cd.type.Equals ("DSA"))  		ret = ReadDSA ();  	else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  		object obj = Decode ();  		ret = TypedObject.MakeArrayCollection ((object[])obj);  	}  	else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  		int size = 0;  		for (int i = 0; i < 4; i++)  			size = size * 256 + ReadByteAsInt ();  		byte[] data = ReadBytes (size);  		StringBuilder sb = new StringBuilder ();  		for (int i = 0; i < data.Length; i++)  			sb.Append (Convert.ToChar (data [i]));  		JavaScriptSerializer serializer = new JavaScriptSerializer ();  		ret = serializer.Deserialize<TypedObject> (sb.ToString ());  		ret.type = cd.type;  	}  	else {  		//for (int i = dataPos; i < dataBuffer.length; i++)  		//System.out.print(String.format("%02X"' dataBuffer[i]));  		//System.out.println();  		throw new NotImplementedException ("Externalizable not handled for " + cd.type);  	}  }  else {  	for (int i = 0; i < cd.members.Count; i++) {  		String key = cd.members [i];  		object value = Decode ();  		ret.Add (key' value);  	}  	if (cd.dynamic) {  		String key;  		while ((key = ReadString ()).Length != 0) {  			object value = Decode ();  			ret.Add (key' value);  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.externalizable) {  	if (cd.type.Equals ("DSK"))  		ret = ReadDSK ();  	else if (cd.type.Equals ("DSA"))  		ret = ReadDSA ();  	else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  		object obj = Decode ();  		ret = TypedObject.MakeArrayCollection ((object[])obj);  	}  	else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  		int size = 0;  		for (int i = 0; i < 4; i++)  			size = size * 256 + ReadByteAsInt ();  		byte[] data = ReadBytes (size);  		StringBuilder sb = new StringBuilder ();  		for (int i = 0; i < data.Length; i++)  			sb.Append (Convert.ToChar (data [i]));  		JavaScriptSerializer serializer = new JavaScriptSerializer ();  		ret = serializer.Deserialize<TypedObject> (sb.ToString ());  		ret.type = cd.type;  	}  	else {  		//for (int i = dataPos; i < dataBuffer.length; i++)  		//System.out.print(String.format("%02X"' dataBuffer[i]));  		//System.out.println();  		throw new NotImplementedException ("Externalizable not handled for " + cd.type);  	}  }  else {  	for (int i = 0; i < cd.members.Count; i++) {  		String key = cd.members [i];  		object value = Decode ();  		ret.Add (key' value);  	}  	if (cd.dynamic) {  		String key;  		while ((key = ReadString ()).Length != 0) {  			object value = Decode ();  			ret.Add (key' value);  		}  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("DSK"))  	ret = ReadDSK ();  else if (cd.type.Equals ("DSA"))  	ret = ReadDSA ();  else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  	object obj = Decode ();  	ret = TypedObject.MakeArrayCollection ((object[])obj);  }  else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("DSK"))  	ret = ReadDSK ();  else if (cd.type.Equals ("DSA"))  	ret = ReadDSA ();  else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  	object obj = Decode ();  	ret = TypedObject.MakeArrayCollection ((object[])obj);  }  else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("DSA"))  	ret = ReadDSA ();  else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  	object obj = Decode ();  	ret = TypedObject.MakeArrayCollection ((object[])obj);  }  else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("DSA"))  	ret = ReadDSA ();  else if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  	object obj = Decode ();  	ret = TypedObject.MakeArrayCollection ((object[])obj);  }  else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  	object obj = Decode ();  	ret = TypedObject.MakeArrayCollection ((object[])obj);  }  else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("flex.messaging.io.ArrayCollection")) {  	object obj = Decode ();  	ret = TypedObject.MakeArrayCollection ((object[])obj);  }  else if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: if (cd.type.Equals ("com.riotgames.platform.systemstate.ClientSystemStatesNotification") || cd.type.Equals ("com.riotgames.platform.broadcast.BroadcastNotification")) {  	int size = 0;  	for (int i = 0; i < 4; i++)  		size = size * 256 + ReadByteAsInt ();  	byte[] data = ReadBytes (size);  	StringBuilder sb = new StringBuilder ();  	for (int i = 0; i < data.Length; i++)  		sb.Append (Convert.ToChar (data [i]));  	JavaScriptSerializer serializer = new JavaScriptSerializer ();  	ret = serializer.Deserialize<TypedObject> (sb.ToString ());  	ret.type = cd.type;  }  else {  	//for (int i = dataPos; i < dataBuffer.length; i++)  	//System.out.print(String.format("%02X"' dataBuffer[i]));  	//System.out.println();  	throw new NotImplementedException ("Externalizable not handled for " + cd.type);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	size = size * 256 + ReadByteAsInt ();  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	size = size * 256 + ReadByteAsInt ();  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadObject,The following statement contains a magic number: size = size * 256 + ReadByteAsInt ();  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: for (int i = 0; i < flags.Count; i++) {  	flag = flags [i];  	int bits = 0;  	if (i == 0) {  		if ((flag & 0x01) != 0)  			ret.Add ("body"' Decode ());  		if ((flag & 0x02) != 0)  			ret.Add ("clientId"' Decode ());  		if ((flag & 0x04) != 0)  			ret.Add ("destination"' Decode ());  		if ((flag & 0x08) != 0)  			ret.Add ("headers"' Decode ());  		if ((flag & 0x10) != 0)  			ret.Add ("messageId"' Decode ());  		if ((flag & 0x20) != 0)  			ret.Add ("timeStamp"' Decode ());  		if ((flag & 0x40) != 0)  			ret.Add ("timeToLive"' Decode ());  		bits = 7;  	}  	else if (i == 1) {  		if ((flag & 0x01) != 0) {  			ReadByte ();  			byte[] temp = ReadByteArray ();  			ret.Add ("clientIdBytes"' temp);  			ret.Add ("clientId"' ByteArrayToID (temp));  		}  		if ((flag & 0x02) != 0) {  			ReadByte ();  			byte[] temp = ReadByteArray ();  			ret.Add ("messageIdBytes"' temp);  			ret.Add ("messageId"' ByteArrayToID (temp));  		}  		bits = 2;  	}  	ReadRemaining (flag' bits);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: for (int i = 0; i < flags.Count; i++) {  	flag = flags [i];  	int bits = 0;  	if (i == 0) {  		if ((flag & 0x01) != 0)  			ret.Add ("body"' Decode ());  		if ((flag & 0x02) != 0)  			ret.Add ("clientId"' Decode ());  		if ((flag & 0x04) != 0)  			ret.Add ("destination"' Decode ());  		if ((flag & 0x08) != 0)  			ret.Add ("headers"' Decode ());  		if ((flag & 0x10) != 0)  			ret.Add ("messageId"' Decode ());  		if ((flag & 0x20) != 0)  			ret.Add ("timeStamp"' Decode ());  		if ((flag & 0x40) != 0)  			ret.Add ("timeToLive"' Decode ());  		bits = 7;  	}  	else if (i == 1) {  		if ((flag & 0x01) != 0) {  			ReadByte ();  			byte[] temp = ReadByteArray ();  			ret.Add ("clientIdBytes"' temp);  			ret.Add ("clientId"' ByteArrayToID (temp));  		}  		if ((flag & 0x02) != 0) {  			ReadByte ();  			byte[] temp = ReadByteArray ();  			ret.Add ("messageIdBytes"' temp);  			ret.Add ("messageId"' ByteArrayToID (temp));  		}  		bits = 2;  	}  	ReadRemaining (flag' bits);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: if (i == 0) {  	if ((flag & 0x01) != 0)  		ret.Add ("body"' Decode ());  	if ((flag & 0x02) != 0)  		ret.Add ("clientId"' Decode ());  	if ((flag & 0x04) != 0)  		ret.Add ("destination"' Decode ());  	if ((flag & 0x08) != 0)  		ret.Add ("headers"' Decode ());  	if ((flag & 0x10) != 0)  		ret.Add ("messageId"' Decode ());  	if ((flag & 0x20) != 0)  		ret.Add ("timeStamp"' Decode ());  	if ((flag & 0x40) != 0)  		ret.Add ("timeToLive"' Decode ());  	bits = 7;  }  else if (i == 1) {  	if ((flag & 0x01) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("clientIdBytes"' temp);  		ret.Add ("clientId"' ByteArrayToID (temp));  	}  	if ((flag & 0x02) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("messageIdBytes"' temp);  		ret.Add ("messageId"' ByteArrayToID (temp));  	}  	bits = 2;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: if (i == 0) {  	if ((flag & 0x01) != 0)  		ret.Add ("body"' Decode ());  	if ((flag & 0x02) != 0)  		ret.Add ("clientId"' Decode ());  	if ((flag & 0x04) != 0)  		ret.Add ("destination"' Decode ());  	if ((flag & 0x08) != 0)  		ret.Add ("headers"' Decode ());  	if ((flag & 0x10) != 0)  		ret.Add ("messageId"' Decode ());  	if ((flag & 0x20) != 0)  		ret.Add ("timeStamp"' Decode ());  	if ((flag & 0x40) != 0)  		ret.Add ("timeToLive"' Decode ());  	bits = 7;  }  else if (i == 1) {  	if ((flag & 0x01) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("clientIdBytes"' temp);  		ret.Add ("clientId"' ByteArrayToID (temp));  	}  	if ((flag & 0x02) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("messageIdBytes"' temp);  		ret.Add ("messageId"' ByteArrayToID (temp));  	}  	bits = 2;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: bits = 7;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: if (i == 1) {  	if ((flag & 0x01) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("clientIdBytes"' temp);  		ret.Add ("clientId"' ByteArrayToID (temp));  	}  	if ((flag & 0x02) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("messageIdBytes"' temp);  		ret.Add ("messageId"' ByteArrayToID (temp));  	}  	bits = 2;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: bits = 2;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: for (int i = 0; i < flags.Count; i++) {  	flag = flags [i];  	int bits = 0;  	if (i == 0) {  		if ((flag & 0x01) != 0)  			ret.Add ("correlationId"' Decode ());  		if ((flag & 0x02) != 0) {  			ReadByte ();  			byte[] temp = ReadByteArray ();  			ret.Add ("correlationIdBytes"' temp);  			ret.Add ("correlationId"' ByteArrayToID (temp));  		}  		bits = 2;  	}  	ReadRemaining (flag' bits);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: if (i == 0) {  	if ((flag & 0x01) != 0)  		ret.Add ("correlationId"' Decode ());  	if ((flag & 0x02) != 0) {  		ReadByte ();  		byte[] temp = ReadByteArray ();  		ret.Add ("correlationIdBytes"' temp);  		ret.Add ("correlationId"' ByteArrayToID (temp));  	}  	bits = 2;  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadDSA,The following statement contains a magic number: bits = 2;  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadRemaining,The following statement contains a magic number: if ((flag >> bits) != 0) {  	for (int o = bits; o < 6; o++) {  		if (((flag >> o) & 1) != 0)  			Decode ();  	}  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ReadRemaining,The following statement contains a magic number: for (int o = bits; o < 6; o++) {  	if (((flag >> o) & 1) != 0)  		Decode ();  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' data [i]);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' data [i]);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' data [i]);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' data [i]);  }  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,ByteArrayToID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: result.Add ((byte)((timediff & 0xFF0000) >> 16));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: result.Add ((byte)((timediff & 0x00FF00) >> 8));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: result.Add ((byte)((data.Length & 0xFF0000) >> 16));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: result.Add ((byte)((data.Length & 0x00FF00) >> 8));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	result.Add (data [i]);  	if (i % 128 == 127 && i != data.Length - 1)  		result.Add ((byte)0xC3);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	result.Add (data [i]);  	if (i % 128 == 127 && i != data.Length - 1)  		result.Add ((byte)0xC3);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: if (i % 128 == 127 && i != data.Length - 1)  	result.Add ((byte)0xC3);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,AddHeaders,The following statement contains a magic number: if (i % 128 == 127 && i != data.Length - 1)  	result.Add ((byte)0xC3);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,EncodeConnect,The following statement contains a magic number: cm.Add ("operation"' 5);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,EncodeConnect,The following statement contains a magic number: ret [7] = (byte)0x14;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val < 0 || val >= 0x200000) {  	ret.Add ((byte)(((val >> 22) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 15) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 8) & 0x7f) | 0x80));  	ret.Add ((byte)(val & 0xff));  }  else {  	if (val >= 0x4000) {  		ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  	}  	if (val >= 0x80) {  		ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  	}  	ret.Add ((byte)(val & 0x7f));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val < 0 || val >= 0x200000) {  	ret.Add ((byte)(((val >> 22) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 15) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 8) & 0x7f) | 0x80));  	ret.Add ((byte)(val & 0xff));  }  else {  	if (val >= 0x4000) {  		ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  	}  	if (val >= 0x80) {  		ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  	}  	ret.Add ((byte)(val & 0x7f));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val < 0 || val >= 0x200000) {  	ret.Add ((byte)(((val >> 22) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 15) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 8) & 0x7f) | 0x80));  	ret.Add ((byte)(val & 0xff));  }  else {  	if (val >= 0x4000) {  		ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  	}  	if (val >= 0x80) {  		ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  	}  	ret.Add ((byte)(val & 0x7f));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val < 0 || val >= 0x200000) {  	ret.Add ((byte)(((val >> 22) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 15) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 8) & 0x7f) | 0x80));  	ret.Add ((byte)(val & 0xff));  }  else {  	if (val >= 0x4000) {  		ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  	}  	if (val >= 0x80) {  		ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  	}  	ret.Add ((byte)(val & 0x7f));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val < 0 || val >= 0x200000) {  	ret.Add ((byte)(((val >> 22) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 15) & 0x7f) | 0x80));  	ret.Add ((byte)(((val >> 8) & 0x7f) | 0x80));  	ret.Add ((byte)(val & 0xff));  }  else {  	if (val >= 0x4000) {  		ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  	}  	if (val >= 0x80) {  		ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  	}  	ret.Add ((byte)(val & 0x7f));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: ret.Add ((byte)(((val >> 22) & 0x7f) | 0x80));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: ret.Add ((byte)(((val >> 15) & 0x7f) | 0x80));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: ret.Add ((byte)(((val >> 8) & 0x7f) | 0x80));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val >= 0x4000) {  	ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: ret.Add ((byte)(((val >> 14) & 0x7f) | 0x80));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: if (val >= 0x80) {  	ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteInt,The following statement contains a magic number: ret.Add ((byte)(((val >> 7) & 0x7f) | 0x80));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type == null || val.type.Equals ("")) {  	ret.Add ((byte)0x0B);  	// Dynamic class  	ret.Add ((byte)0x01);  	// No class name  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		Encode (ret' val [key]);  	}  	ret.Add ((byte)0x01);  	// End of dynamic  }  else if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("flex.messaging.io.ArrayCollection")) {  	ret.Add ((byte)0x07);  	// Externalizable  	WriteString (ret' val.type);  	Encode (ret' val ["array"]);  }  else if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val.type.Equals ("DSK")) {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	byte[] flag1 = new byte[8];  	byte[] flag2 = new byte[8];  	if (val ["body"] != null)  		flag1 [0] = 1;  	if (val ["clientId"] != null)  		flag1 [1] = 1;  	if (val ["destination"] != null)  		flag1 [2] = 1;  	if (val ["headers"] != null)  		flag1 [3] = 1;  	if (val ["messageId"] != null && val ["clientId"] != null)  		flag1 [4] = 1;  	if (val ["timestamp"] != null && val ["destination"] != null)  		flag1 [5] = 1;  	if (val ["timeToLive"] != null && val ["headers"] != null)  		flag1 [6] = 1;  	if (val ["clientIdBytes"] != null)  		flag2 [0] = 1;  	if (val ["messageIdBytes"] != null)  		flag2 [1] = 1;  	WriteObject (ret' val.GetTO ("data"));  }  else {  	WriteInt (ret' (val.Count << 4) | 3);  	// Inline + member count  	WriteString (ret' val.type);  	List<String> keyOrder = new List<String> ();  	foreach (string key in val.Keys) {  		WriteString (ret' key);  		keyOrder.Add (key);  	}  	foreach (string key in keyOrder)  		Encode (ret' val [key]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: WriteInt (ret' (val.Count << 4) | 3);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: WriteInt (ret' (val.Count << 4) | 3);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val ["destination"] != null)  	flag1 [2] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: flag1 [2] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val ["headers"] != null)  	flag1 [3] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: flag1 [3] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val ["messageId"] != null && val ["clientId"] != null)  	flag1 [4] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: flag1 [4] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val ["timestamp"] != null && val ["destination"] != null)  	flag1 [5] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: flag1 [5] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: if (val ["timeToLive"] != null && val ["headers"] != null)  	flag1 [6] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: flag1 [6] = 1;  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: WriteInt (ret' (val.Count << 4) | 3);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteObject,The following statement contains a magic number: WriteInt (ret' (val.Count << 4) | 3);  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,WriteStringAMF0,The following statement contains a magic number: ret.Add ((byte)((temp.Length & 0xFF00) >> 8));  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' bytes [i]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' bytes [i]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' bytes [i]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (i == 4 || i == 6 || i == 8 || i == 10)  		ret.Append ('-');  	ret.AppendFormat ("{0:X2}"' bytes [i]);  }  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Magic Number,PVPNetConnect,RTMPSEncoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSEncoder.cs,RandomUID,The following statement contains a magic number: if (i == 4 || i == 6 || i == 8 || i == 10)  	ret.Append ('-');  
Missing Default,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,Decode,The following switch statement is missing a default case: switch (type) {  case 0x00:  	throw new Exception ("Undefined data type");  case 0x01:  	return null;  case 0x02:  	return false;  case 0x03:  	return true;  case 0x04:  	return ReadInt ();  case 0x05:  	return ReadDouble ();  case 0x06:  	return ReadString ();  case 0x07:  	return ReadXML ();  case 0x08:  	return ReadDate ();  case 0x09:  	return ReadArray ();  case 0x0A:  	return ReadObject ();  case 0x0B:  	return ReadXMLString ();  case 0x0C:  	return ReadByteArray ();  }  
Missing Default,PVPNetConnect,RTMPSDecoder,C:\repos\szungy_LeagueSpectate\src\PVPNetConnect\RTMPSDecoder.cs,DecodeAMF0,The following switch statement is missing a default case: switch (type) {  case 0x00:  	return ReadIntAMF0 ();  case 0x02:  	return ReadStringAMF0 ();  case 0x03:  	return ReadObjectAMF0 ();  case 0x05:  	return null;  case 0x11:  	// AMF3  	return Decode ();  }  
