Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,GlobalHotKeyPressed,Cyclomatic complexity of the method is 31
Long Parameter List,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,ZPlayCallbackFunction,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_OpenStream,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_PlayLoop,The method has 7 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_SlideVolume,The method has 9 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_GetFFTData,The method has 9 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_DrawFFTGraphOnHDC,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_DrawFFTGraphOnHWND,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_LoadFileID3W,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,zplay_LoadFileID3ExW,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,OpenStream,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,PlayLoop,The method has 6 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,SlideVolume,The method has 8 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,GetFFTData,The method has 8 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,DrawFFTGraphOnHDC,The method has 5 parameters.
Long Parameter List,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,DrawFFTGraphOnHWND,The method has 5 parameters.
Long Statement,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,BindPlaylist,The length of the statement  "	System.Windows.Data.CollectionView myView = (System.Windows.Data.CollectionView)System.Windows.Data.CollectionViewSource.GetDefaultView (PlaylistListBox.ItemsSource); " is 166.
Long Statement,Shiori.Playlist,PlaylistManager,C:\repos\fruitcode_Shiori\Shiori\Playlist\PlaylistManager.cs,Save,The length of the statement  "		MessageBoxResult result = MessageBox.Show ("Do you want to save changes of playlist?"' "Shiori"' MessageBoxButton.YesNoCancel); " is 127.
Long Statement,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,PlayLoop,The length of the statement  "	return zplay_PlayLoop (objptr' System.Convert.ToInt32 ((int)(TimeFormatStart))' ref StartPosition' System.Convert.ToInt32 ((int)(TimeFormatEnd))' ref EndPosition' NumberOfCycles' continueplay) == 1; " is 198.
Long Statement,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,SlideVolume,The length of the statement  "	return zplay_SlideVolume (objptr' TimeFormatStart' ref TimeStart' StartVolumeLeft' StartVolumeRight' TimeFormatEnd' ref TimeEnd' EndVolumeLeft' EndVolumeRight) == 1; " is 165.
Long Statement,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,LoadFileID3,The length of the statement  "	if (zplay_LoadFileID3W (objptr' FileName' System.Convert.ToInt32 (Format)' System.Convert.ToInt32 ((int)(Id3Version))' ref tmp) == 1) { " is 135.
Long Statement,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,GetFFTData,The length of the statement  "	return zplay_GetFFTData (objptr' FFTPoints' System.Convert.ToInt32 ((int)(FFTWindow))' ref HarmonicNumber' HarmonicFreq' LeftAmplitude' RightAmplitude' LeftPhase' RightPhase) == 1; " is 180.
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,GlobalHotKeyPressed,The following statement contains a magic number: switch (e.Key) {  case Key.J:  	// backward 5 seconds  	t = new TStreamTime () {  		ms = 5000  	};  	PlayerSeekTo (t' TSeekMethod.smFromCurrentBackward);  	break;  case Key.K:  	// forward 10 seconds  	t = new TStreamTime () {  		ms = 10000  	};  	PlayerSeekTo (t' TSeekMethod.smFromCurrentForward);  	break;  case Key.M:  	// add bookmark  	t = new TStreamTime ();  	player.GetPosition (ref t);  	playlistManager.CurrentElement.AddBookmark (t.ms);  	break;  case Key.H:  	// go to previous bookmark  	t = new TStreamTime ();  	player.GetPosition (ref t);  	t = playlistManager.CurrentElement.GetPreviousBookmark (t);  	PlayerSeekTo (t' TSeekMethod.smFromBeginning);  	break;  case Key.L:  	// go to next bookmark  	t = new TStreamTime ();  	player.GetPosition (ref t);  	t = playlistManager.CurrentElement.GetNextBookmark (t);  	PlayerSeekTo (t' TSeekMethod.smFromBeginning);  	break;  case Key.U:  	if (GetPlayerState () == PlayerState.Play) {  		player.PausePlayback ();  		StopUpdateTimer ();  	}  	else {  		player.ResumePlayback ();  		StartUpdateTimer ();  	}  	break;  default:  	break;  }  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,GlobalHotKeyPressed,The following statement contains a magic number: switch (e.Key) {  case Key.J:  	// backward 5 seconds  	t = new TStreamTime () {  		ms = 5000  	};  	PlayerSeekTo (t' TSeekMethod.smFromCurrentBackward);  	break;  case Key.K:  	// forward 10 seconds  	t = new TStreamTime () {  		ms = 10000  	};  	PlayerSeekTo (t' TSeekMethod.smFromCurrentForward);  	break;  case Key.M:  	// add bookmark  	t = new TStreamTime ();  	player.GetPosition (ref t);  	playlistManager.CurrentElement.AddBookmark (t.ms);  	break;  case Key.H:  	// go to previous bookmark  	t = new TStreamTime ();  	player.GetPosition (ref t);  	t = playlistManager.CurrentElement.GetPreviousBookmark (t);  	PlayerSeekTo (t' TSeekMethod.smFromBeginning);  	break;  case Key.L:  	// go to next bookmark  	t = new TStreamTime ();  	player.GetPosition (ref t);  	t = playlistManager.CurrentElement.GetNextBookmark (t);  	PlayerSeekTo (t' TSeekMethod.smFromBeginning);  	break;  case Key.U:  	if (GetPlayerState () == PlayerState.Play) {  		player.PausePlayback ();  		StopUpdateTimer ();  	}  	else {  		player.ResumePlayback ();  		StartUpdateTimer ();  	}  	break;  default:  	break;  }  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,GlobalHotKeyPressed,The following statement contains a magic number: t = new TStreamTime () {  	ms = 5000  };  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,GlobalHotKeyPressed,The following statement contains a magic number: t = new TStreamTime () {  	ms = 10000  };  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,StartUpdateTimer,The following statement contains a magic number: if (updateTimeLineTimer == null)  	updateTimeLineTimer = new Timer (UpdateTimeLineValue' null' 0' 200);  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,StartUpdateTimer,The following statement contains a magic number: updateTimeLineTimer = new Timer (UpdateTimeLineValue' null' 0' 200);  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_MouseDoubleClick,The following statement contains a magic number: if (e.ClickCount != 2)  	return;  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_Drop,The following statement contains a magic number: if (e.Data.GetDataPresent (DataFormats.FileDrop)) {  	string[] _files = (string[])e.Data.GetData (DataFormats.FileDrop);  	List<String> files = _files.OrderBy (d => d).ToList ();  	foreach (var f in files) {  		if (f.IndexOf (".shiori") == f.Length - 7 && f.Length > 7) {  			if (ClosePlaylist (true' false) == false)  				break;  			playlistManager = new PlaylistManager (f);  			BindPlaylist ();  			break;  		}  		else  			playlistManager.AddFile (f);  	}  }  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_Drop,The following statement contains a magic number: if (e.Data.GetDataPresent (DataFormats.FileDrop)) {  	string[] _files = (string[])e.Data.GetData (DataFormats.FileDrop);  	List<String> files = _files.OrderBy (d => d).ToList ();  	foreach (var f in files) {  		if (f.IndexOf (".shiori") == f.Length - 7 && f.Length > 7) {  			if (ClosePlaylist (true' false) == false)  				break;  			playlistManager = new PlaylistManager (f);  			BindPlaylist ();  			break;  		}  		else  			playlistManager.AddFile (f);  	}  }  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_Drop,The following statement contains a magic number: foreach (var f in files) {  	if (f.IndexOf (".shiori") == f.Length - 7 && f.Length > 7) {  		if (ClosePlaylist (true' false) == false)  			break;  		playlistManager = new PlaylistManager (f);  		BindPlaylist ();  		break;  	}  	else  		playlistManager.AddFile (f);  }  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_Drop,The following statement contains a magic number: foreach (var f in files) {  	if (f.IndexOf (".shiori") == f.Length - 7 && f.Length > 7) {  		if (ClosePlaylist (true' false) == false)  			break;  		playlistManager = new PlaylistManager (f);  		BindPlaylist ();  		break;  	}  	else  		playlistManager.AddFile (f);  }  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_Drop,The following statement contains a magic number: if (f.IndexOf (".shiori") == f.Length - 7 && f.Length > 7) {  	if (ClosePlaylist (true' false) == false)  		break;  	playlistManager = new PlaylistManager (f);  	BindPlaylist ();  	break;  }  else  	playlistManager.AddFile (f);  
Magic Number,Shiori,MainWindow,C:\repos\fruitcode_Shiori\Shiori\MainWindow.xaml.cs,PlaylistListBox_Drop,The following statement contains a magic number: if (f.IndexOf (".shiori") == f.Length - 7 && f.Length > 7) {  	if (ClosePlaylist (true' false) == false)  		break;  	playlistManager = new PlaylistManager (f);  	BindPlaylist ();  	break;  }  else  	playlistManager.AddFile (f);  
Magic Number,libZPlay,ZPlay,C:\repos\fruitcode_Shiori\Shiori\Lib\libZPlay.cs,ZPlay,The following statement contains a magic number: if (GetVersion () < 190)  	throw new Exception ("Need libZPlay.dll version 1.90 and above.");  
