Implementation smell,Namespace,Class,File,Method,Description
Complex Method,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,Cyclomatic complexity of the method is 9
Magic Number,lightning_talk,ConsoleX,C:\repos\krist00fer_redis-sample\.net\lightning-talk\ConsoleX.cs,WriteLine,The following statement contains a magic number: for (int i = 0; i <= ms.MaxSteps + ConsoleSpeed; i += ConsoleSpeed) {  	Console.SetCursorPosition (currentLeft' currentTop);  	Console.WriteLine (ms.Step (i));  	Thread.Sleep (10);  }  
Magic Number,lightning_talk,ConsoleX,C:\repos\krist00fer_redis-sample\.net\lightning-talk\ConsoleX.cs,WriteLine,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,Execute,The following statement contains a magic number: while (true) {  	x += GetRandomPositionDiff ();  	y += GetRandomPositionDiff ();  	if (x < 0)  		x = 0;  	else if (x >= maxX)  		x = maxX - 1;  	if (y < 0)  		y = 0;  	else if (y >= maxY)  		y = maxY - 1;  	string pos = string.Format ("{0}'{1}"' x' y);  	Console.WriteLine (pos);  	sub.Publish ("positions"' pos);  	Thread.Sleep (100);  }  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,Execute,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: if (r < 10)  	return -2;  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: if (r < 10)  	return -2;  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: return -2;  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: if (r < 20)  	return -1;  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: if (r < 80)  	return 0;  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: if (r < 90)  	return 1;  
Magic Number,lightning_talk.demos,Demo04A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo04A.cs,GetRandomPositionDiff,The following statement contains a magic number: return 2;  
Magic Number,lightning_talk.demos,Demo05B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo05B.cs,Execute,The following statement contains a magic number: while (true) {  	Console.Clear ();  	Console.WriteLine ("Highscore - Top 15 players");  	Console.WriteLine ("------------------------------------------");  	Console.WriteLine ();  	var scores = db.SortedSetRangeByRankWithScores ("scores"' 0' 15' Order.Descending);  	foreach (var score in scores) {  		Console.WriteLine ("  {0}   {1}"' score.Score' score.Element);  	}  	Thread.Sleep (1000);  }  
Magic Number,lightning_talk.demos,Demo05B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo05B.cs,Execute,The following statement contains a magic number: while (true) {  	Console.Clear ();  	Console.WriteLine ("Highscore - Top 15 players");  	Console.WriteLine ("------------------------------------------");  	Console.WriteLine ();  	var scores = db.SortedSetRangeByRankWithScores ("scores"' 0' 15' Order.Descending);  	foreach (var score in scores) {  		Console.WriteLine ("  {0}   {1}"' score.Score' score.Element);  	}  	Thread.Sleep (1000);  }  
Magic Number,lightning_talk.demos,Demo05B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo05B.cs,Execute,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,lightning_talk.demos,Demo05A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo05A.cs,Execute,The following statement contains a magic number: while (true) {  	var user = users.Random ();  	var score = GetRandomScore ();  	ConsoleX.WriteLine ("  {0}' {1} points"' user' score);  	db.SortedSetAdd ("scores"' user' score);  	Thread.Sleep (300);  }  
Magic Number,lightning_talk.demos,Demo05A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo05A.cs,Execute,The following statement contains a magic number: Thread.Sleep (300);  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: while (true) {  	var key = Console.ReadKey (true);  	if (key.Key == ConsoleKey.Q) {  		var quote = quotes.Random ();  		db.ListLeftPush ("quotequeue"' quote);  		ConsoleX.WriteLine ("  {0}"' quote);  	}  	else if (key.Key == ConsoleKey.W) {  		for (int i = 0; i < 30; i++) {  			var quote = quotes.Random ();  			db.ListLeftPush ("quotequeue"' quote);  			if (i % 10 == 0)  				Console.Write (".");  		}  	}  	else if (key.Key == ConsoleKey.E) {  		ConsoleX.WriteLine ("Processed quotes: {0}"' db.StringGet ("processedquotes"));  	}  	else if (key.Key == ConsoleKey.R) {  		string q;  		int i = -1;  		do {  			q = db.ListRightPopLeftPush ("processingquotes"' "quotequeue");  			i++;  		}  		while (!string.IsNullOrEmpty (q));  		ConsoleX.WriteLine ("Re-processing {0} quotes"' i);  	}  	ConsoleX.WriteLine ();  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: while (true) {  	var key = Console.ReadKey (true);  	if (key.Key == ConsoleKey.Q) {  		var quote = quotes.Random ();  		db.ListLeftPush ("quotequeue"' quote);  		ConsoleX.WriteLine ("  {0}"' quote);  	}  	else if (key.Key == ConsoleKey.W) {  		for (int i = 0; i < 30; i++) {  			var quote = quotes.Random ();  			db.ListLeftPush ("quotequeue"' quote);  			if (i % 10 == 0)  				Console.Write (".");  		}  	}  	else if (key.Key == ConsoleKey.E) {  		ConsoleX.WriteLine ("Processed quotes: {0}"' db.StringGet ("processedquotes"));  	}  	else if (key.Key == ConsoleKey.R) {  		string q;  		int i = -1;  		do {  			q = db.ListRightPopLeftPush ("processingquotes"' "quotequeue");  			i++;  		}  		while (!string.IsNullOrEmpty (q));  		ConsoleX.WriteLine ("Re-processing {0} quotes"' i);  	}  	ConsoleX.WriteLine ();  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: if (key.Key == ConsoleKey.Q) {  	var quote = quotes.Random ();  	db.ListLeftPush ("quotequeue"' quote);  	ConsoleX.WriteLine ("  {0}"' quote);  }  else if (key.Key == ConsoleKey.W) {  	for (int i = 0; i < 30; i++) {  		var quote = quotes.Random ();  		db.ListLeftPush ("quotequeue"' quote);  		if (i % 10 == 0)  			Console.Write (".");  	}  }  else if (key.Key == ConsoleKey.E) {  	ConsoleX.WriteLine ("Processed quotes: {0}"' db.StringGet ("processedquotes"));  }  else if (key.Key == ConsoleKey.R) {  	string q;  	int i = -1;  	do {  		q = db.ListRightPopLeftPush ("processingquotes"' "quotequeue");  		i++;  	}  	while (!string.IsNullOrEmpty (q));  	ConsoleX.WriteLine ("Re-processing {0} quotes"' i);  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: if (key.Key == ConsoleKey.Q) {  	var quote = quotes.Random ();  	db.ListLeftPush ("quotequeue"' quote);  	ConsoleX.WriteLine ("  {0}"' quote);  }  else if (key.Key == ConsoleKey.W) {  	for (int i = 0; i < 30; i++) {  		var quote = quotes.Random ();  		db.ListLeftPush ("quotequeue"' quote);  		if (i % 10 == 0)  			Console.Write (".");  	}  }  else if (key.Key == ConsoleKey.E) {  	ConsoleX.WriteLine ("Processed quotes: {0}"' db.StringGet ("processedquotes"));  }  else if (key.Key == ConsoleKey.R) {  	string q;  	int i = -1;  	do {  		q = db.ListRightPopLeftPush ("processingquotes"' "quotequeue");  		i++;  	}  	while (!string.IsNullOrEmpty (q));  	ConsoleX.WriteLine ("Re-processing {0} quotes"' i);  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: if (key.Key == ConsoleKey.W) {  	for (int i = 0; i < 30; i++) {  		var quote = quotes.Random ();  		db.ListLeftPush ("quotequeue"' quote);  		if (i % 10 == 0)  			Console.Write (".");  	}  }  else if (key.Key == ConsoleKey.E) {  	ConsoleX.WriteLine ("Processed quotes: {0}"' db.StringGet ("processedquotes"));  }  else if (key.Key == ConsoleKey.R) {  	string q;  	int i = -1;  	do {  		q = db.ListRightPopLeftPush ("processingquotes"' "quotequeue");  		i++;  	}  	while (!string.IsNullOrEmpty (q));  	ConsoleX.WriteLine ("Re-processing {0} quotes"' i);  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: if (key.Key == ConsoleKey.W) {  	for (int i = 0; i < 30; i++) {  		var quote = quotes.Random ();  		db.ListLeftPush ("quotequeue"' quote);  		if (i % 10 == 0)  			Console.Write (".");  	}  }  else if (key.Key == ConsoleKey.E) {  	ConsoleX.WriteLine ("Processed quotes: {0}"' db.StringGet ("processedquotes"));  }  else if (key.Key == ConsoleKey.R) {  	string q;  	int i = -1;  	do {  		q = db.ListRightPopLeftPush ("processingquotes"' "quotequeue");  		i++;  	}  	while (!string.IsNullOrEmpty (q));  	ConsoleX.WriteLine ("Re-processing {0} quotes"' i);  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var quote = quotes.Random ();  	db.ListLeftPush ("quotequeue"' quote);  	if (i % 10 == 0)  		Console.Write (".");  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 30; i++) {  	var quote = quotes.Random ();  	db.ListLeftPush ("quotequeue"' quote);  	if (i % 10 == 0)  		Console.Write (".");  }  
Magic Number,lightning_talk.demos,Demo03A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03A.cs,Execute,The following statement contains a magic number: if (i % 10 == 0)  	Console.Write (".");  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: while (true) {  	string quote = db.ListRightPopLeftPush ("quotequeue"' "processingquotes");  	if (string.IsNullOrEmpty (quote)) {  		Console.Write (".");  		Thread.Sleep (100);  	}  	else {  		// Simulate crash at 10% of times  		if (CrashSimulated ()) {  			var c = Console.ForegroundColor;  			Console.ForegroundColor = ConsoleColor.Red;  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  			Thread.Sleep (5000);  			ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  			Console.ForegroundColor = c;  		}  		else {  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  			// Simulate light work load by sleeping for 300ms  			Thread.Sleep (300);  			db.StringIncrement ("processedquotes"' 1);  			db.ListRemove ("processingquotes"' quote);  		}  	}  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: while (true) {  	string quote = db.ListRightPopLeftPush ("quotequeue"' "processingquotes");  	if (string.IsNullOrEmpty (quote)) {  		Console.Write (".");  		Thread.Sleep (100);  	}  	else {  		// Simulate crash at 10% of times  		if (CrashSimulated ()) {  			var c = Console.ForegroundColor;  			Console.ForegroundColor = ConsoleColor.Red;  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  			Thread.Sleep (5000);  			ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  			Console.ForegroundColor = c;  		}  		else {  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  			// Simulate light work load by sleeping for 300ms  			Thread.Sleep (300);  			db.StringIncrement ("processedquotes"' 1);  			db.ListRemove ("processingquotes"' quote);  		}  	}  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: while (true) {  	string quote = db.ListRightPopLeftPush ("quotequeue"' "processingquotes");  	if (string.IsNullOrEmpty (quote)) {  		Console.Write (".");  		Thread.Sleep (100);  	}  	else {  		// Simulate crash at 10% of times  		if (CrashSimulated ()) {  			var c = Console.ForegroundColor;  			Console.ForegroundColor = ConsoleColor.Red;  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  			Thread.Sleep (5000);  			ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  			Console.ForegroundColor = c;  		}  		else {  			ConsoleX.WriteLine ();  			ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  			// Simulate light work load by sleeping for 300ms  			Thread.Sleep (300);  			db.StringIncrement ("processedquotes"' 1);  			db.ListRemove ("processingquotes"' quote);  		}  	}  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: if (string.IsNullOrEmpty (quote)) {  	Console.Write (".");  	Thread.Sleep (100);  }  else {  	// Simulate crash at 10% of times  	if (CrashSimulated ()) {  		var c = Console.ForegroundColor;  		Console.ForegroundColor = ConsoleColor.Red;  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  		Thread.Sleep (5000);  		ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  		Console.ForegroundColor = c;  	}  	else {  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  		// Simulate light work load by sleeping for 300ms  		Thread.Sleep (300);  		db.StringIncrement ("processedquotes"' 1);  		db.ListRemove ("processingquotes"' quote);  	}  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: if (string.IsNullOrEmpty (quote)) {  	Console.Write (".");  	Thread.Sleep (100);  }  else {  	// Simulate crash at 10% of times  	if (CrashSimulated ()) {  		var c = Console.ForegroundColor;  		Console.ForegroundColor = ConsoleColor.Red;  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  		Thread.Sleep (5000);  		ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  		Console.ForegroundColor = c;  	}  	else {  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  		// Simulate light work load by sleeping for 300ms  		Thread.Sleep (300);  		db.StringIncrement ("processedquotes"' 1);  		db.ListRemove ("processingquotes"' quote);  	}  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: if (string.IsNullOrEmpty (quote)) {  	Console.Write (".");  	Thread.Sleep (100);  }  else {  	// Simulate crash at 10% of times  	if (CrashSimulated ()) {  		var c = Console.ForegroundColor;  		Console.ForegroundColor = ConsoleColor.Red;  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  		Thread.Sleep (5000);  		ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  		Console.ForegroundColor = c;  	}  	else {  		ConsoleX.WriteLine ();  		ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  		// Simulate light work load by sleeping for 300ms  		Thread.Sleep (300);  		db.StringIncrement ("processedquotes"' 1);  		db.ListRemove ("processingquotes"' quote);  	}  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: if (CrashSimulated ()) {  	var c = Console.ForegroundColor;  	Console.ForegroundColor = ConsoleColor.Red;  	ConsoleX.WriteLine ();  	ConsoleX.WriteLine ();  	ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  	Thread.Sleep (5000);  	ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  	Console.ForegroundColor = c;  }  else {  	ConsoleX.WriteLine ();  	ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  	// Simulate light work load by sleeping for 300ms  	Thread.Sleep (300);  	db.StringIncrement ("processedquotes"' 1);  	db.ListRemove ("processingquotes"' quote);  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: if (CrashSimulated ()) {  	var c = Console.ForegroundColor;  	Console.ForegroundColor = ConsoleColor.Red;  	ConsoleX.WriteLine ();  	ConsoleX.WriteLine ();  	ConsoleX.WriteLine ("WARNING        -    Process simulated a crash during proccessing of quote");  	Thread.Sleep (5000);  	ConsoleX.WriteLine ("INFORMATION    -    Recovering from simulated crash and continuing processing of quotes\r\n");  	Console.ForegroundColor = c;  }  else {  	ConsoleX.WriteLine ();  	ConsoleX.WriteLine ("  {0}"' quote.ToUpper ());  	// Simulate light work load by sleeping for 300ms  	Thread.Sleep (300);  	db.StringIncrement ("processedquotes"' 1);  	db.ListRemove ("processingquotes"' quote);  }  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,lightning_talk.demos,Demo03B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo03B.cs,Execute,The following statement contains a magic number: Thread.Sleep (300);  
Magic Number,lightning_talk.demos,Demo02B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo02B.cs,Execute,The following statement contains a magic number: while (true) {  	Console.Clear ();  	Console.WriteLine ("Listing quotes in list (LRANGE)\r\n");  	var quotes = db.ListRange ("quotelist"' 0' -1);  	foreach (var quote in quotes) {  		Console.WriteLine ("  {0}\r\n"' quote);  	}  	Thread.Sleep (1000);  }  
Magic Number,lightning_talk.demos,Demo02B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo02B.cs,Execute,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,lightning_talk.demos,Demo02A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo02A.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	var quote = quotes.Random ();  	db.ListRightPush ("quotelist"' quote);  	ConsoleX.WriteLine ("  {0}"' quote);  	ConsoleX.WriteLine ();  }  
Magic Number,lightning_talk.demos,Demo01A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo01A.cs,Execute,The following statement contains a magic number: while (true) {  	var quote = quotes.Random ();  	db.StringSet ("quote"' quote);  	ConsoleX.WriteLine ("Quote for the next 10 seconds is:");  	ConsoleX.WriteLine ("  {0}"' quote);  	ConsoleX.WriteLine ();  	Thread.Sleep (10000);  }  
Magic Number,lightning_talk.demos,Demo01A,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo01A.cs,Execute,The following statement contains a magic number: Thread.Sleep (10000);  
Magic Number,lightning_talk.demos,Demo01B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo01B.cs,Execute,The following statement contains a magic number: while (true) {  	var quote = db.StringGet ("quote");  	ConsoleX.WriteLine ("Current quote is:");  	ConsoleX.WriteLine ("  {0}"' quote);  	ConsoleX.WriteLine ();  	Thread.Sleep (3000);  }  
Magic Number,lightning_talk.demos,Demo01B,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\Demo01B.cs,Execute,The following statement contains a magic number: Thread.Sleep (3000);  
Magic Number,lightning_talk.demos,DemoBase,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\DemoBase.cs,CrashSimulated,The following statement contains a magic number: return _rnd.Next (100) < 5;  
Magic Number,lightning_talk.demos,DemoBase,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\DemoBase.cs,CrashSimulated,The following statement contains a magic number: return _rnd.Next (100) < 5;  
Magic Number,lightning_talk.demos,DemoBase,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\DemoBase.cs,GetRandomScore,The following statement contains a magic number: return _rnd.Next (100' 999);  
Magic Number,lightning_talk.demos,DemoBase,C:\repos\krist00fer_redis-sample\.net\lightning-talk\demos\DemoBase.cs,GetRandomScore,The following statement contains a magic number: return _rnd.Next (100' 999);  
