Implementation smell,Namespace,Class,File,Method,Description
Long Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The method has 231 lines of code.
Long Method,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,InitEntities,The method has 257 lines of code.
Long Method,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The method has 158 lines of code.
Long Method,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The method has 101 lines of code.
Complex Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,Cyclomatic complexity of the method is 58
Complex Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,Cyclomatic complexity of the method is 15
Complex Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,Cyclomatic complexity of the method is 18
Complex Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ToDictionary,Cyclomatic complexity of the method is 11
Complex Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,BuildHttpQuery,Cyclomatic complexity of the method is 13
Complex Method,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,Cyclomatic complexity of the method is 28
Complex Method,Facebook,FacebookOAuthResult,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookOAuthResult.cs,FacebookOAuthResult,Cyclomatic complexity of the method is 9
Complex Method,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,OpenReadAsync,Cyclomatic complexity of the method is 8
Complex Method,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,Cyclomatic complexity of the method is 8
Complex Method,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,Cyclomatic complexity of the method is 21
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 12
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 21
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 24
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,SerializeString,Cyclomatic complexity of the method is 9
Complex Method,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 21
Complex Method,Facebook,FormSettings,C:\repos\AngeloG_ClipUpload\Facebook\FormSettings.cs,FormSettings,Cyclomatic complexity of the method is 21
Complex Method,Facebook,FormSettings,C:\repos\AngeloG_ClipUpload\Facebook\FormSettings.cs,button1_Click,Cyclomatic complexity of the method is 9
Long Parameter List,Facebook,CombinationStream,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\CombinationStream.cs,BeginRead,The method has 6 parameters.
Long Parameter List,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The method has 7 parameters.
Long Parameter List,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The method has 5 parameters.
Long Parameter List,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The method has 5 parameters.
Long Parameter List,Facebook,FacebookUploadProgressChangedEventArgs,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookUploadProgressChangedEventArgs.cs,FacebookUploadProgressChangedEventArgs,The method has 6 parameters.
Long Statement,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,Menu,The length of the statement  "	UpItem.Add ("Visible"' this.facebookClient.AccessToken != "" && (Clipboard.ContainsImage () || Clipboard.ContainsFileDropList ())); " is 131.
Long Statement,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The length of the statement  "			Tray.ShowBalloonTip (1000' "Upload success!"' "Image uploaded to Facebook and URL copied to clipboard."' ToolTipIcon.Info); " is 123.
Long Statement,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The length of the statement  "			Tray.ShowBalloonTip (1000' "Upload failed!"' "Something went wrong' probably on Facebook's side. Try again."' ToolTipIcon.Error); " is 129.
Long Statement,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The length of the statement  "			Tray.ShowBalloonTip (1000' "Upload success!"' "Image(s) uploaded to Facebook and URL(s) copied to clipboard."' ToolTipIcon.Info); " is 129.
Long Statement,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The length of the statement  "			Tray.ShowBalloonTip (1000' "Upload failed!"' "You didn't copy any images' or the image format is not supported."' ToolTipIcon.Error); " is 133.
Long Statement,Facebook,DateTimeConvertor,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\DateTimeConvertor.cs,FromIso8601FormattedDateTime,The length of the statement  "	return DateTime.ParseExact (iso8601DateTime' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 157.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "	IDictionary<string' object> parametersWithoutMediaObjects = ToDictionary (parameters' out mediaObjects' out mediaStreams) ?? new Dictionary<string' object> (); " is 159.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "			throw new ArgumentException ("Parameter cannot contain method=delete. Use Delete or DeleteAsync or DeleteTaskAsync methods instead."' "parameters"); " is 148.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "				var processBatchResponse = !parametersWithoutMediaObjects.ContainsKey ("_process_batch_response_") || (bool)parametersWithoutMediaObjects ["_process_batch_response_"]; " is 167.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "			throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' "{0} is only supported for http get method."' ETagKey)' "httpMethod"); " is 144.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "			throw new InvalidOperationException ("Attachments (FacebookMediaObject/FacebookMediaStream) are valid only in POST requests."); " is 127.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "			queryString.AppendFormat ("{0}={1}&"' HttpHelper.UrlEncode (kvp.Key)' HttpHelper.UrlEncode (BuildHttpQuery (kvp.Value' HttpHelper.UrlEncode))); " is 143.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "				sb.AppendFormat ("{0}={1}&"' HttpHelper.UrlEncode (kvp.Key)' HttpHelper.UrlEncode (BuildHttpQuery (kvp.Value' HttpHelper.UrlEncode))); " is 134.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "			string boundary = Boundary == null ? DateTime.UtcNow.Ticks.ToString ("x"' CultureInfo.InvariantCulture) // for unit testing " is 123.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "				sbMediaObject.Append ("Content-Disposition: form-data; name=\"").Append (facebookMediaObject.Key).Append ("\"; filename=\"").Append (mediaObject.FileName).Append ("\"").Append (MultiPartNewLine); " is 195.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "				sbMediaObject.Append ("Content-Type: ").Append (mediaObject.ContentType).Append (MultiPartNewLine).Append (MultiPartNewLine); " is 125.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "				sbMediaStream.Append ("Content-Disposition: form-data; name=\"").Append (facebookMediaStream.Key).Append ("\"; filename=\"").Append (mediaStream.FileName).Append ("\"").Append (MultiPartNewLine); " is 195.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "				sbMediaStream.Append ("Content-Type: ").Append (mediaStream.ContentType).Append (MultiPartNewLine).Append (MultiPartNewLine); " is 125.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "			streams.Add (new MemoryStream (Encoding.UTF8.GetBytes (string.Concat (MultiPartNewLine' MultiPartFormPrefix' boundary' MultiPartFormPrefix' MultiPartNewLine)))); " is 161.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,PrepareRequest,The length of the statement  "	var request = HttpWebRequestFactory == null ? new HttpWebRequestWrapper ((HttpWebRequest)WebRequest.Create (uriBuilder.Uri)) : HttpWebRequestFactory (uriBuilder.Uri); " is 166.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The length of the statement  "		if (responseUri.Host == "api.facebook.com" || responseUri.Host == "api-read.facebook.com" || responseUri.Host == "api-video.facebook.com" || responseUri.Host == "api.beta.facebook.com" || responseUri.Host == "api-read.beta.facebook.com" || responseUri.Host == "api-video.facebook.com") { " is 287.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The length of the statement  "				else if (errorCode == "4" || errorCode == "API_EC_TOO_MANY_CALLS" || (errorMsg != null && errorMsg.Contains ("request limit reached"))) " is 135.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The length of the statement  "					resultException = new FacebookApiException (errorDescription' errorNumber.Value.ToString (CultureInfo.InvariantCulture)); " is 121.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,BuildHttpQuery,The length of the statement  "	if (parameter is int || parameter is long || parameter is float || parameter is double || parameter is decimal || parameter is byte || parameter is sbyte || parameter is short || parameter is ushort || parameter is uint || parameter is ulong) " is 242.
Long Statement,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,BuildHttpQuery,The length of the statement  "			throw new InvalidOperationException ("Parameter can contain attachements (FacebookMediaObject/FacebookMediaStream) only in the top most level."); " is 145.
Long Statement,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,OpenReadAsync,The length of the statement  "				OnOpenReadCompleted (new OpenReadCompletedEventArgs (null' webExceptionWrapper' webExceptionWrapper.Status == WebExceptionStatus.RequestCanceled' userToken)); " is 158.
Long Statement,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,OpenWriteAsync,The length of the statement  "			OnOpenWriteCompleted (new OpenWriteCompletedEventArgs (stream' exception' exception != null && exception.Status == WebExceptionStatus.RequestCanceled' userToken)); " is 163.
Long Statement,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,OpenWriteAsync,The length of the statement  "		webExceptionWrapper = new WebExceptionWrapper (new WebException ("An error occurred performing a http web request."' ex)); " is 122.
Long Statement,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,OpenWriteAsync,The length of the statement  "			OnOpenWriteCompleted (new OpenWriteCompletedEventArgs (null' webExceptionWrapper' webExceptionWrapper.Status == WebExceptionStatus.RequestCanceled' userToken)); " is 160.
Long Statement,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,ResponseCallback,The length of the statement  "	OnOpenReadCompleted (new OpenReadCompletedEventArgs (stream' webExceptionWrapper' webExceptionWrapper != null && webExceptionWrapper.Status == WebExceptionStatus.RequestCanceled' userToken)); " is 191.
Long Statement,Facebook,JsonObject,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,TryConvert,The length of the statement  "	if ((targetType == typeof(IEnumerable)) || (targetType == typeof(IEnumerable<KeyValuePair<string' object>>)) || (targetType == typeof(IDictionary<string' object>)) ||  " is 166.
Long Statement,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The length of the statement  "					if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 132.
Long Statement,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The length of the statement  "							if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) { " is 168.
Long Statement,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseNumber,The length of the statement  "	if (str.IndexOf ("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf ("e"' StringComparison.OrdinalIgnoreCase) != -1) { " is 129.
Long Statement,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseNumber,The length of the statement  "		success = double.TryParse (new string (json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 125.
Long Statement,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseNumber,The length of the statement  "		success = long.TryParse (new string (json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The length of the statement  "		if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') { " is 134.
Long Statement,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The length of the statement  "		if (!string.IsNullOrEmpty (str) && (type == typeof(DateTime) || (ReflectionUtils.IsNullableType (type) && Nullable.GetUnderlyingType (type) == typeof(DateTime)))) " is 162.
Long Statement,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The length of the statement  "			obj = DateTime.ParseExact (str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 144.
Long Statement,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The length of the statement  "		                    type == typeof(int) || type == typeof(long) || type == typeof(double) ||type == typeof(float) || type == typeof(bool) || type == typeof(decimal) ||type == typeof(byte) || type == typeof(short)" is 192.
Long Statement,Facebook,DataContractJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,BuildMap,The length of the statement  "	foreach (PropertyInfo info in type.GetProperties (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)) " is 120.
Long Statement,Facebook,DataContractJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,CanAdd,The length of the statement  "	DataMemberAttribute dataMemberAttribute = (DataMemberAttribute)ReflectionUtils.GetAttribute (info' typeof(DataMemberAttribute)); " is 128.
Long Statement,Facebook,FormSettings,C:\repos\AngeloG_ClipUpload\Facebook\FormSettings.cs,button1_Click,The length of the statement  "		mainClass.settings.SetString ("ShortcutDragKey"' (string)comboDragKeys.SelectedItem != "None" ? (string)comboDragKeys.SelectedItem : ""); " is 137.
Long Statement,Facebook,FormSettings,C:\repos\AngeloG_ClipUpload\Facebook\FormSettings.cs,button1_Click,The length of the statement  "		mainClass.settings.SetString ("ShortcutPasteKey"' (string)comboPasteKeys.SelectedItem != "None" ? (string)comboPasteKeys.SelectedItem : ""); " is 140.
Long Statement,Reflection,ReflectionUtils,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,IsTypeGenericeCollectionInterface,The length of the statement  "	return (genericDefinition == typeof(IList<>) || genericDefinition == typeof(ICollection<>) || genericDefinition == typeof(IEnumerable<>)); " is 138.
Long Statement,Reflection,ReflectionUtils,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ToNullableType,The length of the statement  "	return obj == null ? null : Convert.ChangeType (obj' Nullable.GetUnderlyingType (nullableType)' CultureInfo.InvariantCulture); " is 126.
Long Statement,Reflection,CacheResolver,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,GetNewInstance,The length of the statement  "	DynamicMethod dynamicMethod = new DynamicMethod ("Create" + type.FullName' typeof(object)' Type.EmptyTypes' type' true); " is 120.
Long Statement,Reflection,CacheResolver,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,GetNewInstance,The length of the statement  "		ConstructorInfo constructorInfo = type.GetConstructor (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' Type.EmptyTypes' null); " is 154.
Long Statement,Reflection,CacheResolver,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,GetNewInstance,The length of the statement  "	#                ConstructorInfo constructorInfo = type.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' Type.EmptyTypes' null);" is 170.
Long Statement,Reflection,CacheResolver,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,CreateDynamicMethod,The length of the statement  "	DynamicMethod dynamicMethod = !owner.IsInterface ? new DynamicMethod (name' returnType' parameterTypes' owner' true) : new DynamicMethod (name' returnType' parameterTypes' (Module)null' true); " is 192.
Complex Conditional,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The conditional expression  "responseUri.Host == "api.facebook.com" || responseUri.Host == "api-read.facebook.com" || responseUri.Host == "api-video.facebook.com" || responseUri.Host == "api.beta.facebook.com" || responseUri.Host == "api-read.beta.facebook.com" || responseUri.Host == "api-video.facebook.com""  is complex.
Complex Conditional,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The conditional expression  "errorCode == "4" || errorCode == "API_EC_TOO_MANY_CALLS" || (errorMsg != null && errorMsg.Contains ("request limit reached"))"  is complex.
Complex Conditional,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,BuildHttpQuery,The conditional expression  "parameter is int || parameter is long || parameter is float || parameter is double || parameter is decimal || parameter is byte || parameter is sbyte || parameter is short || parameter is ushort || parameter is uint || parameter is ulong"  is complex.
Complex Conditional,Facebook,JsonObject,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,TryConvert,The conditional expression  "(targetType == typeof(IEnumerable)) || (targetType == typeof(IEnumerable<KeyValuePair<string' object>>)) || (targetType == typeof(IDictionary<string' object>)) ||   #if NETFX_CORE   (targetType == typeof(IDictionary<'>)) #else  (targetType == typeof(IDictionary))"  is complex.
Complex Conditional,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The conditional expression  "json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e'"  is complex.
Complex Conditional,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The conditional expression  "json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e'"  is complex.
Complex Conditional,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The conditional expression  "json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l'"  is complex.
Complex Conditional,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The conditional expression  "!string.IsNullOrEmpty (str) && (type == typeof(DateTime) || (ReflectionUtils.IsNullableType (type) && Nullable.GetUnderlyingType (type) == typeof(DateTime)))"  is complex.
Complex Conditional,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is long && type == typeof(long)) || (value is double && type == typeof(double))"  is complex.
Complex Conditional,Facebook,PocoJsonSerializerStrategy,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is double && type != typeof(double)) || (value is long && type != typeof(long))"  is complex.
Empty Catch Block,Facebook,FormAuthenticate,C:\repos\AngeloG_ClipUpload\Facebook\FormAuthenticate.cs,timerWait_Tick,The method has an empty catch block.
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: if (url != "")  	this.Backup (ms.GetBuffer ()' url.Split ('/'' '\\').Last () + ".png");  else  	this.Backup (ms.GetBuffer ()' this.RandomFilename (5) + ".png");  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: this.Backup (ms.GetBuffer ()' this.RandomFilename (5) + ".png");  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: if (url != "CANCELED") {  	if (url != "") {  		this.SetClipboardText (url);  		Tray.ShowBalloonTip (1000' "Upload success!"' "Image uploaded to Facebook and URL copied to clipboard."' ToolTipIcon.Info);  	}  	else {  		this.ProgressBar.Done ();  		Tray.ShowBalloonTip (1000' "Upload failed!"' "Something went wrong' probably on Facebook's side. Try again."' ToolTipIcon.Error);  	}  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: if (url != "CANCELED") {  	if (url != "") {  		this.SetClipboardText (url);  		Tray.ShowBalloonTip (1000' "Upload success!"' "Image uploaded to Facebook and URL copied to clipboard."' ToolTipIcon.Info);  	}  	else {  		this.ProgressBar.Done ();  		Tray.ShowBalloonTip (1000' "Upload failed!"' "Something went wrong' probably on Facebook's side. Try again."' ToolTipIcon.Error);  	}  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: if (url != "") {  	this.SetClipboardText (url);  	Tray.ShowBalloonTip (1000' "Upload success!"' "Image uploaded to Facebook and URL copied to clipboard."' ToolTipIcon.Info);  }  else {  	this.ProgressBar.Done ();  	Tray.ShowBalloonTip (1000' "Upload failed!"' "Something went wrong' probably on Facebook's side. Try again."' ToolTipIcon.Error);  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: if (url != "") {  	this.SetClipboardText (url);  	Tray.ShowBalloonTip (1000' "Upload success!"' "Image uploaded to Facebook and URL copied to clipboard."' ToolTipIcon.Info);  }  else {  	this.ProgressBar.Done ();  	Tray.ShowBalloonTip (1000' "Upload failed!"' "Something went wrong' probably on Facebook's side. Try again."' ToolTipIcon.Error);  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: Tray.ShowBalloonTip (1000' "Upload success!"' "Image uploaded to Facebook and URL copied to clipboard."' ToolTipIcon.Info);  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImage,The following statement contains a magic number: Tray.ShowBalloonTip (1000' "Upload failed!"' "Something went wrong' probably on Facebook's side. Try again."' ToolTipIcon.Error);  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The following statement contains a magic number: if (finalCopy != "CANCELED") {  	if (finalCopy != "") {  		this.SetClipboardText (finalCopy.Substring (0' finalCopy.Length - 1));  		Tray.ShowBalloonTip (1000' "Upload success!"' "Image(s) uploaded to Facebook and URL(s) copied to clipboard."' ToolTipIcon.Info);  	}  	else {  		this.ProgressBar.Done ();  		Tray.ShowBalloonTip (1000' "Upload failed!"' "You didn't copy any images' or the image format is not supported."' ToolTipIcon.Error);  	}  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The following statement contains a magic number: if (finalCopy != "CANCELED") {  	if (finalCopy != "") {  		this.SetClipboardText (finalCopy.Substring (0' finalCopy.Length - 1));  		Tray.ShowBalloonTip (1000' "Upload success!"' "Image(s) uploaded to Facebook and URL(s) copied to clipboard."' ToolTipIcon.Info);  	}  	else {  		this.ProgressBar.Done ();  		Tray.ShowBalloonTip (1000' "Upload failed!"' "You didn't copy any images' or the image format is not supported."' ToolTipIcon.Error);  	}  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The following statement contains a magic number: if (finalCopy != "") {  	this.SetClipboardText (finalCopy.Substring (0' finalCopy.Length - 1));  	Tray.ShowBalloonTip (1000' "Upload success!"' "Image(s) uploaded to Facebook and URL(s) copied to clipboard."' ToolTipIcon.Info);  }  else {  	this.ProgressBar.Done ();  	Tray.ShowBalloonTip (1000' "Upload failed!"' "You didn't copy any images' or the image format is not supported."' ToolTipIcon.Error);  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The following statement contains a magic number: if (finalCopy != "") {  	this.SetClipboardText (finalCopy.Substring (0' finalCopy.Length - 1));  	Tray.ShowBalloonTip (1000' "Upload success!"' "Image(s) uploaded to Facebook and URL(s) copied to clipboard."' ToolTipIcon.Info);  }  else {  	this.ProgressBar.Done ();  	Tray.ShowBalloonTip (1000' "Upload failed!"' "You didn't copy any images' or the image format is not supported."' ToolTipIcon.Error);  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The following statement contains a magic number: Tray.ShowBalloonTip (1000' "Upload success!"' "Image(s) uploaded to Facebook and URL(s) copied to clipboard."' ToolTipIcon.Info);  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadImages,The following statement contains a magic number: Tray.ShowBalloonTip (1000' "Upload failed!"' "You didn't copy any images' or the image format is not supported."' ToolTipIcon.Error);  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadToFacebook,The following statement contains a magic number: try {  	ms.Seek (0' SeekOrigin.Begin);  	FacebookMediaStream img = new FacebookMediaStream ();  	img.ContentType = "image/png";  	img.FileName = this.RandomFilename (5) + ".png";  	img.SetValue (ms);  	Dictionary<string' object> photoParams = new Dictionary<string' object> ();  	// TODO: Some way to attach a message to an image  	//photoParams["message"] = message;  	photoParams ["image"] = img;  	dynamic ret = this.facebookClient.Post ("/me/photos"' photoParams);  	string photoID = ret.id;  	url = "https://" + "www.facebook.com/photo.php?fbid=" + photoID;  	this.AddLog (url' (ms.Length / 1000) + " kB");  }  catch (Exception ex) {  	this.Debug ("UploadToFacebook threw " + ex.GetType ().FullName + ": '" + ex.Message + "'");  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadToFacebook,The following statement contains a magic number: try {  	ms.Seek (0' SeekOrigin.Begin);  	FacebookMediaStream img = new FacebookMediaStream ();  	img.ContentType = "image/png";  	img.FileName = this.RandomFilename (5) + ".png";  	img.SetValue (ms);  	Dictionary<string' object> photoParams = new Dictionary<string' object> ();  	// TODO: Some way to attach a message to an image  	//photoParams["message"] = message;  	photoParams ["image"] = img;  	dynamic ret = this.facebookClient.Post ("/me/photos"' photoParams);  	string photoID = ret.id;  	url = "https://" + "www.facebook.com/photo.php?fbid=" + photoID;  	this.AddLog (url' (ms.Length / 1000) + " kB");  }  catch (Exception ex) {  	this.Debug ("UploadToFacebook threw " + ex.GetType ().FullName + ": '" + ex.Message + "'");  }  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadToFacebook,The following statement contains a magic number: img.FileName = this.RandomFilename (5) + ".png";  
Magic Number,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,UploadToFacebook,The following statement contains a magic number: this.AddLog (url' (ms.Length / 1000) + " kB");  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: try {  	object result = null;  	if (httpHelper == null) {  		// batch row  		result = DeserializeJson (responseString' resultType);  	}  	else {  		var response = httpHelper.HttpWebResponse;  		if (response == null)  			throw new InvalidOperationException (UnknownResponse);  		if (response.ContentType.Contains ("text/javascript") || response.ContentType.Contains ("application/json")) {  			result = DeserializeJson (responseString' resultType);  		}  		else if (response.StatusCode == HttpStatusCode.OK && response.ContentType.Contains ("text/plain")) {  			if (response.ResponseUri.AbsolutePath == "/oauth/access_token") {  				var body = new JsonObject ();  				foreach (var kvp in responseString.Split ('&')) {  					var split = kvp.Split ('=');  					if (split.Length == 2)  						body [split [0]] = split [1];  				}  				if (body.ContainsKey ("expires"))  					body ["expires"] = Convert.ToInt64 (body ["expires"]' CultureInfo.InvariantCulture);  				result = resultType == null ? body : DeserializeJson (body.ToString ()' resultType);  				return result;  			}  			else {  				throw new InvalidOperationException (UnknownResponse);  			}  		}  		else {  			throw new InvalidOperationException (UnknownResponse);  		}  	}  	var exception = GetException (httpHelper' result);  	if (exception == null) {  		if (containsEtag && httpHelper != null) {  			var json = new JsonObject ();  			var response = httpHelper.HttpWebResponse;  			var headers = new JsonObject ();  			foreach (var headerName in response.Headers.AllKeys)  				headers [headerName] = response.Headers [headerName];  			json ["headers"] = headers;  			json ["body"] = result;  			return json;  		}  		return batchEtags == null ? result : ProcessBatchResponse (result' batchEtags);  	}  	throw exception;  }  catch (FacebookApiException) {  	throw;  }  catch (Exception) {  	if (httpHelper != null && httpHelper.InnerException != null)  		throw httpHelper.InnerException;  	throw;  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: if (httpHelper == null) {  	// batch row  	result = DeserializeJson (responseString' resultType);  }  else {  	var response = httpHelper.HttpWebResponse;  	if (response == null)  		throw new InvalidOperationException (UnknownResponse);  	if (response.ContentType.Contains ("text/javascript") || response.ContentType.Contains ("application/json")) {  		result = DeserializeJson (responseString' resultType);  	}  	else if (response.StatusCode == HttpStatusCode.OK && response.ContentType.Contains ("text/plain")) {  		if (response.ResponseUri.AbsolutePath == "/oauth/access_token") {  			var body = new JsonObject ();  			foreach (var kvp in responseString.Split ('&')) {  				var split = kvp.Split ('=');  				if (split.Length == 2)  					body [split [0]] = split [1];  			}  			if (body.ContainsKey ("expires"))  				body ["expires"] = Convert.ToInt64 (body ["expires"]' CultureInfo.InvariantCulture);  			result = resultType == null ? body : DeserializeJson (body.ToString ()' resultType);  			return result;  		}  		else {  			throw new InvalidOperationException (UnknownResponse);  		}  	}  	else {  		throw new InvalidOperationException (UnknownResponse);  	}  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: if (response.ContentType.Contains ("text/javascript") || response.ContentType.Contains ("application/json")) {  	result = DeserializeJson (responseString' resultType);  }  else if (response.StatusCode == HttpStatusCode.OK && response.ContentType.Contains ("text/plain")) {  	if (response.ResponseUri.AbsolutePath == "/oauth/access_token") {  		var body = new JsonObject ();  		foreach (var kvp in responseString.Split ('&')) {  			var split = kvp.Split ('=');  			if (split.Length == 2)  				body [split [0]] = split [1];  		}  		if (body.ContainsKey ("expires"))  			body ["expires"] = Convert.ToInt64 (body ["expires"]' CultureInfo.InvariantCulture);  		result = resultType == null ? body : DeserializeJson (body.ToString ()' resultType);  		return result;  	}  	else {  		throw new InvalidOperationException (UnknownResponse);  	}  }  else {  	throw new InvalidOperationException (UnknownResponse);  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: if (response.StatusCode == HttpStatusCode.OK && response.ContentType.Contains ("text/plain")) {  	if (response.ResponseUri.AbsolutePath == "/oauth/access_token") {  		var body = new JsonObject ();  		foreach (var kvp in responseString.Split ('&')) {  			var split = kvp.Split ('=');  			if (split.Length == 2)  				body [split [0]] = split [1];  		}  		if (body.ContainsKey ("expires"))  			body ["expires"] = Convert.ToInt64 (body ["expires"]' CultureInfo.InvariantCulture);  		result = resultType == null ? body : DeserializeJson (body.ToString ()' resultType);  		return result;  	}  	else {  		throw new InvalidOperationException (UnknownResponse);  	}  }  else {  	throw new InvalidOperationException (UnknownResponse);  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: if (response.ResponseUri.AbsolutePath == "/oauth/access_token") {  	var body = new JsonObject ();  	foreach (var kvp in responseString.Split ('&')) {  		var split = kvp.Split ('=');  		if (split.Length == 2)  			body [split [0]] = split [1];  	}  	if (body.ContainsKey ("expires"))  		body ["expires"] = Convert.ToInt64 (body ["expires"]' CultureInfo.InvariantCulture);  	result = resultType == null ? body : DeserializeJson (body.ToString ()' resultType);  	return result;  }  else {  	throw new InvalidOperationException (UnknownResponse);  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: foreach (var kvp in responseString.Split ('&')) {  	var split = kvp.Split ('=');  	if (split.Length == 2)  		body [split [0]] = split [1];  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ProcessResponse,The following statement contains a magic number: if (split.Length == 2)  	body [split [0]] = split [1];  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The following statement contains a magic number: if (responseDict.ContainsKey ("error")) {  	var error = responseDict ["error"] as IDictionary<string' object>;  	if (error != null) {  		var errorType = error ["type"] as string;  		var errorMessage = error ["message"] as string;  		int errorCode = 0;  		if (error.ContainsKey ("code"))  			int.TryParse (error ["code"].ToString ()' out errorCode);  		// Check to make sure the correct data is in the response  		if (!string.IsNullOrEmpty (errorType) && !string.IsNullOrEmpty (errorMessage)) {  			// We don't include the inner exception because it is not needed and is always a WebException.  			// It is easier to understand the error if we use Facebook's error message.  			if (errorType == "OAuthException")  				resultException = new FacebookOAuthException (errorMessage' errorType' errorCode);  			else if (errorType == "API_EC_TOO_MANY_CALLS" || (errorMessage.Contains ("request limit reached")))  				resultException = new FacebookApiLimitException (errorMessage' errorType);  			else  				resultException = new FacebookApiException (errorMessage' errorType' errorCode);  		}  	}  	else {  		long? errorNumber = null;  		if (responseDict ["error"] is long)  			errorNumber = (long)responseDict ["error"];  		if (errorNumber == null && responseDict ["error"] is int)  			errorNumber = (int)responseDict ["error"];  		string errorDescription = null;  		if (responseDict.ContainsKey ("error_description"))  			errorDescription = responseDict ["error_description"] as string;  		if (errorNumber != null && !string.IsNullOrEmpty (errorDescription)) {  			if (errorNumber == 190)  				resultException = new FacebookOAuthException (errorDescription' "API_EC_PARAM_ACCESS_TOKEN");  			else  				resultException = new FacebookApiException (errorDescription' errorNumber.Value.ToString (CultureInfo.InvariantCulture));  		}  	}  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The following statement contains a magic number: if (error != null) {  	var errorType = error ["type"] as string;  	var errorMessage = error ["message"] as string;  	int errorCode = 0;  	if (error.ContainsKey ("code"))  		int.TryParse (error ["code"].ToString ()' out errorCode);  	// Check to make sure the correct data is in the response  	if (!string.IsNullOrEmpty (errorType) && !string.IsNullOrEmpty (errorMessage)) {  		// We don't include the inner exception because it is not needed and is always a WebException.  		// It is easier to understand the error if we use Facebook's error message.  		if (errorType == "OAuthException")  			resultException = new FacebookOAuthException (errorMessage' errorType' errorCode);  		else if (errorType == "API_EC_TOO_MANY_CALLS" || (errorMessage.Contains ("request limit reached")))  			resultException = new FacebookApiLimitException (errorMessage' errorType);  		else  			resultException = new FacebookApiException (errorMessage' errorType' errorCode);  	}  }  else {  	long? errorNumber = null;  	if (responseDict ["error"] is long)  		errorNumber = (long)responseDict ["error"];  	if (errorNumber == null && responseDict ["error"] is int)  		errorNumber = (int)responseDict ["error"];  	string errorDescription = null;  	if (responseDict.ContainsKey ("error_description"))  		errorDescription = responseDict ["error_description"] as string;  	if (errorNumber != null && !string.IsNullOrEmpty (errorDescription)) {  		if (errorNumber == 190)  			resultException = new FacebookOAuthException (errorDescription' "API_EC_PARAM_ACCESS_TOKEN");  		else  			resultException = new FacebookApiException (errorDescription' errorNumber.Value.ToString (CultureInfo.InvariantCulture));  	}  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The following statement contains a magic number: if (errorNumber != null && !string.IsNullOrEmpty (errorDescription)) {  	if (errorNumber == 190)  		resultException = new FacebookOAuthException (errorDescription' "API_EC_PARAM_ACCESS_TOKEN");  	else  		resultException = new FacebookApiException (errorDescription' errorNumber.Value.ToString (CultureInfo.InvariantCulture));  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,GetException,The following statement contains a magic number: if (errorNumber == 190)  	resultException = new FacebookOAuthException (errorDescription' "API_EC_PARAM_ACCESS_TOKEN");  else  	resultException = new FacebookApiException (errorDescription' errorNumber.Value.ToString (CultureInfo.InvariantCulture));  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: if (parts.Length == 2 && parts [1] != null) {  	// Add the query string values to the parameters dictionary  	var qs = parts [1];  	var qsItems = qs.Split ('&');  	foreach (var kvp in qsItems) {  		if (!string.IsNullOrEmpty (kvp)) {  			var qsPart = kvp.Split ('=');  			if (qsPart.Length == 2 && !string.IsNullOrEmpty (qsPart [0])) {  				var key = HttpHelper.UrlDecode (qsPart [0]);  				if (!parameters.ContainsKey (key))  					parameters [key] = HttpHelper.UrlDecode (qsPart [1]);  			}  			else  				throw new ArgumentException ("Invalid path"' "path");  		}  	}  }  else if (parts.Length > 2) {  	throw new ArgumentException ("Invalid path"' "path");  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: if (parts.Length == 2 && parts [1] != null) {  	// Add the query string values to the parameters dictionary  	var qs = parts [1];  	var qsItems = qs.Split ('&');  	foreach (var kvp in qsItems) {  		if (!string.IsNullOrEmpty (kvp)) {  			var qsPart = kvp.Split ('=');  			if (qsPart.Length == 2 && !string.IsNullOrEmpty (qsPart [0])) {  				var key = HttpHelper.UrlDecode (qsPart [0]);  				if (!parameters.ContainsKey (key))  					parameters [key] = HttpHelper.UrlDecode (qsPart [1]);  			}  			else  				throw new ArgumentException ("Invalid path"' "path");  		}  	}  }  else if (parts.Length > 2) {  	throw new ArgumentException ("Invalid path"' "path");  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: if (parts.Length == 2 && parts [1] != null) {  	// Add the query string values to the parameters dictionary  	var qs = parts [1];  	var qsItems = qs.Split ('&');  	foreach (var kvp in qsItems) {  		if (!string.IsNullOrEmpty (kvp)) {  			var qsPart = kvp.Split ('=');  			if (qsPart.Length == 2 && !string.IsNullOrEmpty (qsPart [0])) {  				var key = HttpHelper.UrlDecode (qsPart [0]);  				if (!parameters.ContainsKey (key))  					parameters [key] = HttpHelper.UrlDecode (qsPart [1]);  			}  			else  				throw new ArgumentException ("Invalid path"' "path");  		}  	}  }  else if (parts.Length > 2) {  	throw new ArgumentException ("Invalid path"' "path");  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: foreach (var kvp in qsItems) {  	if (!string.IsNullOrEmpty (kvp)) {  		var qsPart = kvp.Split ('=');  		if (qsPart.Length == 2 && !string.IsNullOrEmpty (qsPart [0])) {  			var key = HttpHelper.UrlDecode (qsPart [0]);  			if (!parameters.ContainsKey (key))  				parameters [key] = HttpHelper.UrlDecode (qsPart [1]);  		}  		else  			throw new ArgumentException ("Invalid path"' "path");  	}  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: if (!string.IsNullOrEmpty (kvp)) {  	var qsPart = kvp.Split ('=');  	if (qsPart.Length == 2 && !string.IsNullOrEmpty (qsPart [0])) {  		var key = HttpHelper.UrlDecode (qsPart [0]);  		if (!parameters.ContainsKey (key))  			parameters [key] = HttpHelper.UrlDecode (qsPart [1]);  	}  	else  		throw new ArgumentException ("Invalid path"' "path");  }  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: if (qsPart.Length == 2 && !string.IsNullOrEmpty (qsPart [0])) {  	var key = HttpHelper.UrlDecode (qsPart [0]);  	if (!parameters.ContainsKey (key))  		parameters [key] = HttpHelper.UrlDecode (qsPart [1]);  }  else  	throw new ArgumentException ("Invalid path"' "path");  
Magic Number,Facebook,FacebookClient,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\FacebookClient.cs,ParseUrlQueryString,The following statement contains a magic number: if (parts.Length > 2) {  	throw new ArgumentException ("Invalid path"' "path");  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	ch = s [i];  	if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			// unicode hex sequence  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				WriteCharBytes (bytes' (char)xchar' e);  				i += 5;  			}  			else  				WriteCharBytes (bytes' '%'' e);  		}  		else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 2;  		}  		else {  			WriteCharBytes (bytes' '%'' e);  		}  		continue;  	}  	if (ch == '+')  		WriteCharBytes (bytes' ' '' e);  	else  		WriteCharBytes (bytes' ch' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (ch == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		// unicode hex sequence  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			WriteCharBytes (bytes' (char)xchar' e);  			i += 5;  		}  		else  			WriteCharBytes (bytes' '%'' e);  	}  	else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 2;  	}  	else {  		WriteCharBytes (bytes' '%'' e);  	}  	continue;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	// unicode hex sequence  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 5;  	}  	else  		WriteCharBytes (bytes' '%'' e);  }  else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	// unicode hex sequence  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 5;  	}  	else  		WriteCharBytes (bytes' '%'' e);  }  else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	// unicode hex sequence  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 5;  	}  	else  		WriteCharBytes (bytes' '%'' e);  }  else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	// unicode hex sequence  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 5;  	}  	else  		WriteCharBytes (bytes' '%'' e);  }  else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	// unicode hex sequence  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 5;  	}  	else  		WriteCharBytes (bytes' '%'' e);  }  else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	// unicode hex sequence  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		WriteCharBytes (bytes' (char)xchar' e);  		i += 5;  	}  	else  		WriteCharBytes (bytes' '%'' e);  }  else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if (xchar != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 5;  }  else  	WriteCharBytes (bytes' '%'' e);  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: i += 5;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	WriteCharBytes (bytes' (char)xchar' e);  	i += 2;  }  else {  	WriteCharBytes (bytes' '%'' e);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,UrlDecode,The following statement contains a magic number: i += 2;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,WriteCharBytes,The following statement contains a magic number: if (ch > 255) {  	foreach (byte b in e.GetBytes (new char[] {  		ch  	}))  		buf.Add (b);  }  else  	buf.Add ((byte)ch);  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetChar,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = str [i];  	if (c > 127)  		return -1;  	int current = GetInt ((byte)c);  	if (current == -1)  		return -1;  	val = (val << 4) + current;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetChar,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = str [i];  	if (c > 127)  		return -1;  	int current = GetInt ((byte)c);  	if (current == -1)  		return -1;  	val = (val << 4) + current;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetChar,The following statement contains a magic number: if (c > 127)  	return -1;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetChar,The following statement contains a magic number: val = (val << 4) + current;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetInt,The following statement contains a magic number: if (c >= 'a' && c <= 'f')  	return c - 'a' + 10;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetInt,The following statement contains a magic number: return c - 'a' + 10;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetInt,The following statement contains a magic number: if (c >= 'A' && c <= 'F')  	return c - 'A' + 10;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,GetInt,The following statement contains a magic number: return c - 'A' + 10;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  			state = 1;  		}  		else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity.ToString ());  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity.ToString ());  			output.Append (c);  			entity.Length = 0;  		}  		else {  			number = 0;  			is_hex_value = false;  			if (c != '#') {  				state = 2;  			}  			else {  				state = 3;  			}  			entity.Append (c);  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  	}  	else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  		}  	}  	else if (state == 3) {  		if (c == ';') {  			#if NET_4_0  									if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (InvariantCulture));  				output.Append (";");  			}  			else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			#if NET_4_0  									rawEntity.Length = 0; #endif  			have_trailing_digits = false;  		}  		#if NETFX_CORE  		                    else if (is_hex_value && IsHexDigit(c)) #else  		else if (is_hex_value && Uri.IsHexDigit (c))  		#endif  		 {  			#if NETFX_CORE  			                        number = number * 16 + FromHex(c); #else  			number = number * 16 + Uri.FromHex (c);  			#endif  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (Char.IsDigit (c)) {  			number = number * 10 + ((int)c - '0');  			have_trailing_digits = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else if (number == 0 && (c == 'x' || c == 'X')) {  			is_hex_value = true;  			#if NET_4_0  									rawEntity.Append (c); #endif  		}  		else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity.ToString ());  		output.Append (c);  		entity.Length = 0;  	}  	else {  		number = 0;  		is_hex_value = false;  		if (c != '#') {  			state = 2;  		}  		else {  			state = 3;  		}  		entity.Append (c);  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  }  else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	state = 0;  	output.Append (entity.ToString ());  	output.Append (c);  	entity.Length = 0;  }  else {  	number = 0;  	is_hex_value = false;  	if (c != '#') {  		state = 2;  	}  	else {  		state = 3;  	}  	entity.Append (c);  	#if NET_4_0  							rawEntity.Append (c); #endif  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	state = 0;  	output.Append (entity.ToString ());  	output.Append (c);  	entity.Length = 0;  }  else {  	number = 0;  	is_hex_value = false;  	if (c != '#') {  		state = 2;  	}  	else {  		state = 3;  	}  	entity.Append (c);  	#if NET_4_0  							rawEntity.Append (c); #endif  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c != '#') {  	state = 2;  }  else {  	state = 3;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c != '#') {  	state = 2;  }  else {  	state = 3;  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: state = 2;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: state = 3;  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  	}  }  else if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	string key = entity.ToString ();  	if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  		key = Entities [key.Substring (1' key.Length - 2)].ToString ();  	output.Append (key);  	state = 0;  	entity.Length = 0;  	#if NET_4_0  							rawEntity.Length = 0; #endif  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	string key = entity.ToString ();  	if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  		key = Entities [key.Substring (1' key.Length - 2)].ToString ();  	output.Append (key);  	state = 0;  	entity.Length = 0;  	#if NET_4_0  							rawEntity.Length = 0; #endif  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  	key = Entities [key.Substring (1' key.Length - 2)].ToString ();  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  	key = Entities [key.Substring (1' key.Length - 2)].ToString ();  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: key = Entities [key.Substring (1' key.Length - 2)].ToString ();  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		#if NET_4_0  								if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (InvariantCulture));  			output.Append (";");  		}  		else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		#if NET_4_0  								rawEntity.Length = 0; #endif  		have_trailing_digits = false;  	}  	#if NETFX_CORE  	                    else if (is_hex_value && IsHexDigit(c)) #else  	else if (is_hex_value && Uri.IsHexDigit (c))  	#endif  	 {  		#if NETFX_CORE  		                        number = number * 16 + FromHex(c); #else  		number = number * 16 + Uri.FromHex (c);  		#endif  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (Char.IsDigit (c)) {  		number = number * 10 + ((int)c - '0');  		have_trailing_digits = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else if (number == 0 && (c == 'x' || c == 'X')) {  		is_hex_value = true;  		#if NET_4_0  								rawEntity.Append (c); #endif  	}  	else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	#if NET_4_0  							if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (InvariantCulture));  		output.Append (";");  	}  	else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	#if NET_4_0  							rawEntity.Length = 0; #endif  	have_trailing_digits = false;  }  #if NETFX_CORE                      else if (is_hex_value && IsHexDigit(c)) #else  else if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	#if NET_4_0  							if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (InvariantCulture));  		output.Append (";");  	}  	else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	#if NET_4_0  							rawEntity.Length = 0; #endif  	have_trailing_digits = false;  }  #if NETFX_CORE                      else if (is_hex_value && IsHexDigit(c)) #else  else if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	#if NET_4_0  							if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (InvariantCulture));  		output.Append (";");  	}  	else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	#if NET_4_0  							rawEntity.Length = 0; #endif  	have_trailing_digits = false;  }  #if NETFX_CORE                      else if (is_hex_value && IsHexDigit(c)) #else  else if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	#if NET_4_0  							if (number == 0) 							output.Append (rawEntity.ToString () + ";"); 						else #endif  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (InvariantCulture));  		output.Append (";");  	}  	else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	#if NET_4_0  							rawEntity.Length = 0; #endif  	have_trailing_digits = false;  }  #if NETFX_CORE                      else if (is_hex_value && IsHexDigit(c)) #else  else if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (number > 65535) {  	output.Append ("&#");  	output.Append (number.ToString (InvariantCulture));  	output.Append (";");  }  else {  	output.Append ((char)number);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (is_hex_value && Uri.IsHexDigit (c))  #endif   {  	#if NETFX_CORE  	                        number = number * 16 + FromHex(c); #else  	number = number * 16 + Uri.FromHex (c);  	#endif  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: number = number * 16 + Uri.FromHex (c);  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (Char.IsDigit (c)) {  	number = number * 10 + ((int)c - '0');  	have_trailing_digits = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: number = number * 10 + ((int)c - '0');  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: if (number == 0 && (c == 'x' || c == 'X')) {  	is_hex_value = true;  	#if NET_4_0  							rawEntity.Append (c); #endif  }  else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,Facebook,HttpHelper,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\HttpHelper.cs,HtmlDecode,The following statement contains a magic number: state = 2;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: for (int i = 0; i < jsonString.Length;) {  	c = jsonString [i++];  	if (c == '\\') {  		int remainingLength = jsonString.Length - i;  		if (remainingLength >= 2) {  			char lookahead = jsonString [i];  			if (lookahead == '\\') {  				sb.Append ('\\');  				++i;  			}  			else if (lookahead == '"') {  				sb.Append ("\"");  				++i;  			}  			else if (lookahead == 't') {  				sb.Append ('\t');  				++i;  			}  			else if (lookahead == 'b') {  				sb.Append ('\b');  				++i;  			}  			else if (lookahead == 'n') {  				sb.Append ('\n');  				++i;  			}  			else if (lookahead == 'r') {  				sb.Append ('\r');  				++i;  			}  		}  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: if (c == '\\') {  	int remainingLength = jsonString.Length - i;  	if (remainingLength >= 2) {  		char lookahead = jsonString [i];  		if (lookahead == '\\') {  			sb.Append ('\\');  			++i;  		}  		else if (lookahead == '"') {  			sb.Append ("\"");  			++i;  		}  		else if (lookahead == 't') {  			sb.Append ('\t');  			++i;  		}  		else if (lookahead == 'b') {  			sb.Append ('\b');  			++i;  		}  		else if (lookahead == 'n') {  			sb.Append ('\n');  			++i;  		}  		else if (lookahead == 'r') {  			sb.Append ('\r');  			++i;  		}  	}  }  else {  	sb.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: if (remainingLength >= 2) {  	char lookahead = jsonString [i];  	if (lookahead == '\\') {  		sb.Append ('\\');  		++i;  	}  	else if (lookahead == '"') {  		sb.Append ("\"");  		++i;  	}  	else if (lookahead == 't') {  		sb.Append ('\t');  		++i;  	}  	else if (lookahead == 'b') {  		sb.Append ('\b');  		++i;  	}  	else if (lookahead == 'n') {  		sb.Append ('\n');  		++i;  	}  	else if (lookahead == 'r') {  		sb.Append ('\r');  		++i;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: while (!complete) {  	if (index == json.Length) {  		break;  	}  	c = json [index++];  	if (c == '"') {  		complete = true;  		break;  	}  	else if (c == '\\') {  		if (index == json.Length)  			break;  		c = json [index++];  		if (c == '"')  			s.Append ('"');  		else if (c == '\\')  			s.Append ('\\');  		else if (c == '/')  			s.Append ('/');  		else if (c == 'b')  			s.Append ('\b');  		else if (c == 'f')  			s.Append ('\f');  		else if (c == 'n')  			s.Append ('\n');  		else if (c == 'r')  			s.Append ('\r');  		else if (c == 't')  			s.Append ('\t');  		else if (c == 'u') {  			int remainingLength = json.Length - index;  			if (remainingLength >= 4) {  				// parse the 32 bit hex into an integer codepoint  				uint codePoint;  				if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  					return "";  				// convert the integer codepoint to a unicode char and add to string  				if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  				 {  					index += 4;  					// skip 4 chars  					remainingLength = json.Length - index;  					if (remainingLength >= 6) {  						uint lowCodePoint;  						if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  							if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  							 {  								s.Append ((char)codePoint);  								s.Append ((char)lowCodePoint);  								index += 6;  								// skip 6 chars  								continue;  							}  						}  					}  					success = false;  					// invalid surrogate pair  					return "";  				}  				#if SILVERLIGHT  				                            s.Append(ConvertFromUtf32((int)codePoint)); #else  				s.Append (Char.ConvertFromUtf32 ((int)codePoint));  				#endif  				// skip 4 chars  				index += 4;  			}  			else  				break;  		}  	}  	else  		s.Append (c);  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"') {  	complete = true;  	break;  }  else if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\') {  	if (index == json.Length)  		break;  	c = json [index++];  	if (c == '"')  		s.Append ('"');  	else if (c == '\\')  		s.Append ('\\');  	else if (c == '/')  		s.Append ('/');  	else if (c == 'b')  		s.Append ('\b');  	else if (c == 'f')  		s.Append ('\f');  	else if (c == 'n')  		s.Append ('\n');  	else if (c == 'r')  		s.Append ('\r');  	else if (c == 't')  		s.Append ('\t');  	else if (c == 'u') {  		int remainingLength = json.Length - index;  		if (remainingLength >= 4) {  			// parse the 32 bit hex into an integer codepoint  			uint codePoint;  			if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  				return "";  			// convert the integer codepoint to a unicode char and add to string  			if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  			 {  				index += 4;  				// skip 4 chars  				remainingLength = json.Length - index;  				if (remainingLength >= 6) {  					uint lowCodePoint;  					if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  						if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  						 {  							s.Append ((char)codePoint);  							s.Append ((char)lowCodePoint);  							index += 6;  							// skip 6 chars  							continue;  						}  					}  				}  				success = false;  				// invalid surrogate pair  				return "";  			}  			#if SILVERLIGHT  			                            s.Append(ConvertFromUtf32((int)codePoint)); #else  			s.Append (Char.ConvertFromUtf32 ((int)codePoint));  			#endif  			// skip 4 chars  			index += 4;  		}  		else  			break;  	}  }  else  	s.Append (c);  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '"')  	s.Append ('"');  else if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '\\')  	s.Append ('\\');  else if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == '/')  	s.Append ('/');  else if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'b')  	s.Append ('\b');  else if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'f')  	s.Append ('\f');  else if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'n')  	s.Append ('\n');  else if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'r')  	s.Append ('\r');  else if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 't')  	s.Append ('\t');  else if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (c == 'u') {  	int remainingLength = json.Length - index;  	if (remainingLength >= 4) {  		// parse the 32 bit hex into an integer codepoint  		uint codePoint;  		if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  			return "";  		// convert the integer codepoint to a unicode char and add to string  		if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  		 {  			index += 4;  			// skip 4 chars  			remainingLength = json.Length - index;  			if (remainingLength >= 6) {  				uint lowCodePoint;  				if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  					if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  					 {  						s.Append ((char)codePoint);  						s.Append ((char)lowCodePoint);  						index += 6;  						// skip 6 chars  						continue;  					}  				}  			}  			success = false;  			// invalid surrogate pair  			return "";  		}  		#if SILVERLIGHT  		                            s.Append(ConvertFromUtf32((int)codePoint)); #else  		s.Append (Char.ConvertFromUtf32 ((int)codePoint));  		#endif  		// skip 4 chars  		index += 4;  	}  	else  		break;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 4) {  	// parse the 32 bit hex into an integer codepoint  	uint codePoint;  	if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  		return "";  	// convert the integer codepoint to a unicode char and add to string  	if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate  	 {  		index += 4;  		// skip 4 chars  		remainingLength = json.Length - index;  		if (remainingLength >= 6) {  			uint lowCodePoint;  			if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  				if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  				 {  					s.Append ((char)codePoint);  					s.Append ((char)lowCodePoint);  					index += 6;  					// skip 6 chars  					continue;  				}  			}  		}  		success = false;  		// invalid surrogate pair  		return "";  	}  	#if SILVERLIGHT  	                            s.Append(ConvertFromUtf32((int)codePoint)); #else  	s.Append (Char.ConvertFromUtf32 ((int)codePoint));  	#endif  	// skip 4 chars  	index += 4;  }  else  	break;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (!(success = UInt32.TryParse (new string (json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint)))  	return "";  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate   {  	index += 4;  	// skip 4 chars  	remainingLength = json.Length - index;  	if (remainingLength >= 6) {  		uint lowCodePoint;  		if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  			if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  			 {  				s.Append ((char)codePoint);  				s.Append ((char)lowCodePoint);  				index += 6;  				// skip 6 chars  				continue;  			}  		}  	}  	success = false;  	// invalid surrogate pair  	return "";  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate   {  	index += 4;  	// skip 4 chars  	remainingLength = json.Length - index;  	if (remainingLength >= 6) {  		uint lowCodePoint;  		if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  			if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  			 {  				s.Append ((char)codePoint);  				s.Append ((char)lowCodePoint);  				index += 6;  				// skip 6 chars  				continue;  			}  		}  	}  	success = false;  	// invalid surrogate pair  	return "";  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate   {  	index += 4;  	// skip 4 chars  	remainingLength = json.Length - index;  	if (remainingLength >= 6) {  		uint lowCodePoint;  		if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  			if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  			 {  				s.Append ((char)codePoint);  				s.Append ((char)lowCodePoint);  				index += 6;  				// skip 6 chars  				continue;  			}  		}  	}  	success = false;  	// invalid surrogate pair  	return "";  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate   {  	index += 4;  	// skip 4 chars  	remainingLength = json.Length - index;  	if (remainingLength >= 6) {  		uint lowCodePoint;  		if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  			if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  			 {  				s.Append ((char)codePoint);  				s.Append ((char)lowCodePoint);  				index += 6;  				// skip 6 chars  				continue;  			}  		}  	}  	success = false;  	// invalid surrogate pair  	return "";  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate   {  	index += 4;  	// skip 4 chars  	remainingLength = json.Length - index;  	if (remainingLength >= 6) {  		uint lowCodePoint;  		if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  			if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  			 {  				s.Append ((char)codePoint);  				s.Append ((char)lowCodePoint);  				index += 6;  				// skip 6 chars  				continue;  			}  		}  	}  	success = false;  	// invalid surrogate pair  	return "";  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xD800 <= codePoint && codePoint <= 0xDBFF)// if high surrogate   {  	index += 4;  	// skip 4 chars  	remainingLength = json.Length - index;  	if (remainingLength >= 6) {  		uint lowCodePoint;  		if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  			if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  			 {  				s.Append ((char)codePoint);  				s.Append ((char)lowCodePoint);  				index += 6;  				// skip 6 chars  				continue;  			}  		}  	}  	success = false;  	// invalid surrogate pair  	return "";  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: index += 4;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 6) {  	uint lowCodePoint;  	if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  		if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  		 {  			s.Append ((char)codePoint);  			s.Append ((char)lowCodePoint);  			index += 6;  			// skip 6 chars  			continue;  		}  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 6) {  	uint lowCodePoint;  	if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  		if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  		 {  			s.Append ((char)codePoint);  			s.Append ((char)lowCodePoint);  			index += 6;  			// skip 6 chars  			continue;  		}  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 6) {  	uint lowCodePoint;  	if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  		if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  		 {  			s.Append ((char)codePoint);  			s.Append ((char)lowCodePoint);  			index += 6;  			// skip 6 chars  			continue;  		}  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 6) {  	uint lowCodePoint;  	if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  		if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  		 {  			s.Append ((char)codePoint);  			s.Append ((char)lowCodePoint);  			index += 6;  			// skip 6 chars  			continue;  		}  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (remainingLength >= 6) {  	uint lowCodePoint;  	if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  		if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  		 {  			s.Append ((char)codePoint);  			s.Append ((char)lowCodePoint);  			index += 6;  			// skip 6 chars  			continue;  		}  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  	if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  	 {  		s.Append ((char)codePoint);  		s.Append ((char)lowCodePoint);  		index += 6;  		// skip 6 chars  		continue;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  	if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  	 {  		s.Append ((char)codePoint);  		s.Append ((char)lowCodePoint);  		index += 6;  		// skip 6 chars  		continue;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  	if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  	 {  		s.Append ((char)codePoint);  		s.Append ((char)lowCodePoint);  		index += 6;  		// skip 6 chars  		continue;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (new string (json' index' 2) == "\\u" && UInt32.TryParse (new string (json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) {  	if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate  	 {  		s.Append ((char)codePoint);  		s.Append ((char)lowCodePoint);  		index += 6;  		// skip 6 chars  		continue;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: if (0xDC00 <= lowCodePoint && lowCodePoint <= 0xDFFF)// if low surrogate   {  	s.Append ((char)codePoint);  	s.Append ((char)lowCodePoint);  	index += 6;  	// skip 6 chars  	continue;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: index += 6;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseString,The following statement contains a magic number: index += 4;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return TOKEN_FALSE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return TOKEN_FALSE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return TOKEN_FALSE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return TOKEN_FALSE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 5) {  	if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  		index += 5;  		return TOKEN_FALSE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return TOKEN_FALSE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return TOKEN_FALSE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return TOKEN_FALSE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'f' && json [index + 1] == 'a' && json [index + 2] == 'l' && json [index + 3] == 's' && json [index + 4] == 'e') {  	index += 5;  	return TOKEN_FALSE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return TOKEN_TRUE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return TOKEN_TRUE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return TOKEN_TRUE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  		index += 4;  		return TOKEN_TRUE;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  	index += 4;  	return TOKEN_TRUE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  	index += 4;  	return TOKEN_TRUE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 't' && json [index + 1] == 'r' && json [index + 2] == 'u' && json [index + 3] == 'e') {  	index += 4;  	return TOKEN_TRUE;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return TOKEN_NULL;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return TOKEN_NULL;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return TOKEN_NULL;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (remainingLength >= 4) {  	if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  		index += 4;  		return TOKEN_NULL;  	}  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  	index += 4;  	return TOKEN_NULL;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  	index += 4;  	return TOKEN_NULL;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: if (json [index] == 'n' && json [index + 1] == 'u' && json [index + 2] == 'l' && json [index + 3] == 'l') {  	index += 4;  	return TOKEN_NULL;  }  
Magic Number,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;  
Missing Default,Facebook,Facebook,C:\repos\AngeloG_ClipUpload\Facebook\Facebook.cs,DragCallback,The following switch statement is missing a default case: switch (callback.Type) {  case DragCallbackType.Image:  	UploadImage (callback.Image);  	break;  }  
Missing Default,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead (json' index)) {  case TOKEN_STRING:  	return ParseString (json' ref index' ref success);  case TOKEN_NUMBER:  	return ParseNumber (json' ref index' ref success);  case TOKEN_CURLY_OPEN:  	return ParseObject (json' ref index' ref success);  case TOKEN_SQUARED_OPEN:  	return ParseArray (json' ref index' ref success);  case TOKEN_TRUE:  	NextToken (json' ref index);  	return true;  case TOKEN_FALSE:  	NextToken (json' ref index);  	return false;  case TOKEN_NULL:  	NextToken (json' ref index);  	return null;  case TOKEN_NONE:  	break;  }  
Missing Default,Facebook,SimpleJson,C:\repos\AngeloG_ClipUpload\Facebook\Facebook\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c) {  case '{':  	return TOKEN_CURLY_OPEN;  case '}':  	return TOKEN_CURLY_CLOSE;  case '[':  	return TOKEN_SQUARED_OPEN;  case ']':  	return TOKEN_SQUARED_CLOSE;  case ''':  	return TOKEN_COMMA;  case '"':  	return TOKEN_STRING;  case '0':  case '1':  case '2':  case '3':  case '4':  case '5':  case '6':  case '7':  case '8':  case '9':  case '-':  	return TOKEN_NUMBER;  case ':':  	return TOKEN_COLON;  }  
Missing Default,Facebook,FormSettings,C:\repos\AngeloG_ClipUpload\Facebook\FormSettings.cs,FormSettings,The following switch statement is missing a default case: switch (part) {  case "Ctrl":  	checkDragModCtrl.Checked = true;  	break;  case "Alt":  	checkDragModAlt.Checked = true;  	break;  case "Shift":  	checkDragModShift.Checked = true;  	break;  }  
Missing Default,Facebook,FormSettings,C:\repos\AngeloG_ClipUpload\Facebook\FormSettings.cs,FormSettings,The following switch statement is missing a default case: switch (part) {  case "Ctrl":  	checkPasteModCtrl.Checked = true;  	break;  case "Alt":  	checkPasteModAlt.Checked = true;  	break;  case "Shift":  	checkPasteModShift.Checked = true;  	break;  }  
