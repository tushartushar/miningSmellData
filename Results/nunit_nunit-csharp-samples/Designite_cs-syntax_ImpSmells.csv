Implementation smell,Namespace,Class,File,Method,Description
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsNotNull,The following statement contains a magic number: Assert.IsNotNull(42);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsNotNull,The following statement contains a magic number: Assert.That(42' Is.Not.Null);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsNotNull,The following statement contains a magic number: Expect( 42' Not.Null );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.IsTrue(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.IsTrue(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.IsTrue(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.That(2+2==4' Is.True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.That(2+2==4' Is.True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.That(2+2==4' Is.True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.That(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.That(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Assert.That(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Expect(2+2==4' True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Expect(2+2==4' True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Expect(2+2==4' True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Expect(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Expect(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsTrue,The following statement contains a magic number: Expect(2+2==4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Assert.IsFalse(2+2==5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Assert.IsFalse(2+2==5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Assert.IsFalse(2+2==5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Assert.That(2+2== 5' Is.False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Assert.That(2+2== 5' Is.False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Assert.That(2+2== 5' Is.False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Expect(2+2==5' False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Expect(2+2==5' False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,IsFalse,The following statement contains a magic number: Expect(2+2==5' False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EmptyCollectionTests,The following statement contains a magic number: Assert.IsNotEmpty(new int[] { 1' 2' 3 });
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EmptyCollectionTests,The following statement contains a magic number: Assert.IsNotEmpty(new int[] { 1' 2' 3 });
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EmptyCollectionTests,The following statement contains a magic number: Assert.That(new int[] { 1' 2' 3 }' Is.Not.Empty);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EmptyCollectionTests,The following statement contains a magic number: Assert.That(new int[] { 1' 2' 3 }' Is.Not.Empty);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EmptyCollectionTests,The following statement contains a magic number: Expect(new int[] { 1' 2' 3 }' Not.Empty);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EmptyCollectionTests,The following statement contains a magic number: Expect(new int[] { 1' 2' 3 }' Not.Empty);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,InstanceOfTests,The following statement contains a magic number: Assert.IsNotInstanceOf(typeof(string)' 5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,InstanceOfTests,The following statement contains a magic number: Assert.That(5' Is.Not.InstanceOf(typeof(string)));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,InstanceOfTests,The following statement contains a magic number: Expect(5' Not.InstanceOf(typeof(string)));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AssignableFromTypeTests,The following statement contains a magic number: Assert.IsNotAssignableFrom(typeof(string)' 5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AssignableFromTypeTests,The following statement contains a magic number: Assert.That( 5' Is.Not.AssignableFrom(typeof(string)));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AssignableFromTypeTests,The following statement contains a magic number: Expect( 5' Not.AssignableFrom(typeof(string)));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: int[] i3 = new int[] { 1' 2' 3 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: int[] i3 = new int[] { 1' 2' 3 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: double[] d3 = new double[] { 1.0' 2.0' 3.0 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: double[] d3 = new double[] { 1.0' 2.0' 3.0 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: int[] iunequal = new int[] { 1' 3' 2 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: int[] iunequal = new int[] { 1' 3' 2 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.AreEqual(4' 2 + 2);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.AreEqual(4' 2 + 2);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.AreEqual(4' 2 + 2);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.AreNotEqual(5' 2 + 2);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.AreNotEqual(5' 2 + 2);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.AreNotEqual(5' 2 + 2);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2' Is.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2' Is.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2' Is.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2 == 4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2 == 4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2 == 4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2' EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2' EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2' EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2 == 4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2 == 4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2 == 4);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2' Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2' Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTests,The following statement contains a magic number: Expect(2 + 2' Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance,The following statement contains a magic number: Assert.That(499' Is.EqualTo(500).Within(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance,The following statement contains a magic number: Assert.That(499' Is.EqualTo(500).Within(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance,The following statement contains a magic number: Assert.That(499' Is.EqualTo(500).Within(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance,The following statement contains a magic number: Expect(499' EqualTo(500).Within(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance,The following statement contains a magic number: Expect(499' EqualTo(500).Within(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance,The following statement contains a magic number: Expect(499' EqualTo(500).Within(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That(202d' Is.EqualTo(200d).Within(2)'                  "Double actual' Double expected' int tolerance");
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 4.87m' Is.EqualTo(5).Within(.25)'                  "Decimal actual' int expected' Double tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 4.87m' Is.EqualTo(5).Within(.25)'                  "Decimal actual' int expected' Double tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487' Is.EqualTo(500).Within(25)'                  "int actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487' Is.EqualTo(500).Within(25)'                  "int actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487' Is.EqualTo(500).Within(25)'                  "int actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487u' Is.EqualTo(500).Within(25)'                  "uint actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487u' Is.EqualTo(500).Within(25)'                  "uint actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487L' Is.EqualTo(500).Within(25)'                  "long actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487L' Is.EqualTo(500).Within(25)'                  "long actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487ul' Is.EqualTo(500).Within(25)'                  "ulong actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,EqualityTestsWithTolerance_MixingTypesGenerally,The following statement contains a magic number: Assert.That( 487ul' Is.EqualTo(500).Within(25)'                  "ulong actual' int expected' int tolerance" );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.Greater(7' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.Greater(7' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.GreaterOrEqual(7' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.GreaterOrEqual(7' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.GreaterOrEqual(7' 7);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.GreaterOrEqual(7' 7);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.GreaterThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.GreaterThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.AtLeast(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.AtLeast(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.GreaterThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.GreaterThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.AtLeast(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(7' Is.AtLeast(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' GreaterThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' GreaterThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' AtLeast(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' AtLeast(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' GreaterThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' GreaterThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' AtLeast(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(7' AtLeast(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.Less(3' 7);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.Less(3' 7);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.LessOrEqual(3' 7);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.LessOrEqual(3' 7);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.LessOrEqual(3' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.LessOrEqual(3' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.LessThan(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.LessThan(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.LessThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.LessThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.AtMost(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.AtMost(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.LessThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.LessThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.AtMost(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Assert.That(3' Is.AtMost(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' LessThan(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' LessThan(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' LessThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' LessThanOrEqualTo(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' AtMost(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' AtMost(7));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' LessThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' LessThanOrEqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' AtMost(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComparisonTests,The following statement contains a magic number: Expect(3' AtMost(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] doubles = new object[] { 0.99' 2.1' 3.0' 4.05 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] doubles = new object[] { 0.99' 2.1' 3.0' 4.05 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] doubles = new object[] { 0.99' 2.1' 3.0' 4.05 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: object[] doubles = new object[] { 0.99' 2.1' 3.0' 4.05 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: Assert.That( strings' Has.Some.Property( "Length" ).EqualTo( 3 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: Assert.That( doubles' Has.Some.EqualTo( 1.0 ).Within( .05 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AllItemsTests,The following statement contains a magic number: Expect(doubles' Some.EqualTo( 1.0 ).Within( .05 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SomeItemTests,The following statement contains a magic number: object[] mixed = new object[] { 1' 2' "3"' null' "four"' 100 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SomeItemTests,The following statement contains a magic number: object[] mixed = new object[] { 1' 2' "3"' null' "four"' 100 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NoItemTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NoItemTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NoItemTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NoItemTests,The following statement contains a magic number: object[] ints = new object[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NoItemTests,The following statement contains a magic number: Assert.That(ints' Has.None.GreaterThan(99));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NoItemTests,The following statement contains a magic number: Expect(ints' None.GreaterThan(99));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: int[] iarray = new int[] { 1' 2' 3 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: int[] iarray = new int[] { 1' 2' 3 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Assert.Contains(3' iarray);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: CollectionAssert.Contains(iarray' 3);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Assert.That(iarray' Has.Member(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Assert.That(iarray' Has.Some.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Assert.That(iarray' Has.Member(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Assert.That(iarray' Has.All.LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Assert.That(sarray' Has.None.Property("Length").GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Expect(iarray' Contains(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Expect(iarray' Some.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Expect(iarray' All.LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionContainsTests,The following statement contains a magic number: Expect(sarray' None.Property("Length").GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twothrees = new int[] { 1' 2' 3' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twothrees = new int[] { 1' 2' 3' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twothrees = new int[] { 1' 2' 3' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twothrees = new int[] { 1' 2' 3' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twothrees = new int[] { 1' 2' 3' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twofours = new int[] { 1' 2' 3' 4' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twofours = new int[] { 1' 2' 3' 4' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twofours = new int[] { 1' 2' 3' 4' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twofours = new int[] { 1' 2' 3' 4' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: int[] twofours = new int[] { 1' 2' 3' 4' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreEquivalent(new int[] { 2' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreEquivalent(new int[] { 2' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreEquivalent(new int[] { 2' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreEquivalent(new int[] { 2' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 1' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 1' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 1' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 1' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: CollectionAssert.AreNotEquivalent(new int[] { 2' 2' 1' 1' 4' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 1' 4' 3' 5 }' Is.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 1' 4' 3' 5 }' Is.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 1' 4' 3' 5 }' Is.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 1' 4' 3' 5 }' Is.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Assert.That(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Is.Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 1' 4' 3' 5 }' EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 1' 4' 3' 5 }' EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 1' 4' 3' 5 }' EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 1' 4' 3' 5 }' EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,CollectionEquivalenceTests,The following statement contains a magic number: Expect(new int[] { 2' 2' 1' 1' 4' 3' 5 }' Not.EquivalentTo(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: int[] ints1to5 = new int[] { 1' 2' 3' 4' 5 };
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsSubsetOf(new int[] { 1' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsSubsetOf(new int[] { 1' 3' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsSubsetOf(new int[] { 1' 2' 3' 4' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsSubsetOf(new int[] { 1' 2' 3' 4' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsSubsetOf(new int[] { 1' 2' 3' 4' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsSubsetOf(new int[] { 1' 2' 3' 4' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 2' 4' 6 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 2' 4' 6 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 2' 4' 6 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 1' 2' 2' 2' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 1' 2' 2' 2' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 1' 2' 2' 2' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: CollectionAssert.IsNotSubsetOf(new int[] { 1' 2' 2' 2' 5 }' ints1to5);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 1' 3' 5 }' Is.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 1' 3' 5 }' Is.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 1' 2' 3' 4' 5 }' Is.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 1' 2' 3' 4' 5 }' Is.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 1' 2' 3' 4' 5 }' Is.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 1' 2' 3' 4' 5 }' Is.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 6 }' Is.Not.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 6 }' Is.Not.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Assert.That(new int[] { 2' 4' 6 }' Is.Not.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 1' 3' 5 }' SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 1' 3' 5 }' SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 1' 2' 3' 4' 5 }' SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 1' 2' 3' 4' 5 }' SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 1' 2' 3' 4' 5 }' SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 1' 2' 3' 4' 5 }' SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 6 }' Not.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 6 }' Not.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,SubsetTests,The following statement contains a magic number: Expect(new int[] { 2' 4' 6 }' Not.SubsetOf(ints1to5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( "Hello"' Has.Length.EqualTo( 5 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( "Hello"' Has.Length.LessThan( 10 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( "Hello"' Has.Property("Length").EqualTo(5) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( "Hello"' Has.Property("Length").GreaterThan(3) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Has.Property( "Length" ).EqualTo( 4 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Has.Length.EqualTo( 4 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Has.Property( "Length" ).LessThan( 10 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Has.All.Property("Length").EqualTo(3) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Has.All.Length.EqualTo( 3 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Is.All.Length.EqualTo( 3 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Has.All.Property("Length").EqualTo(3) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array' Is.All.Property("Length").EqualTo(3) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array2' Has.Some.Property("Length").EqualTo(2) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array2' Has.Some.Length.EqualTo(2) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array2' Has.Some.Property("Length").GreaterThan(2) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array2' Is.Not.Property("Length").EqualTo(4) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array2' Is.Not.Length.EqualTo( 4 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( array2' Has.No.Property("Length").GreaterThan(3) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.EqualTo( new int[] { 1' 2' 3 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.EqualTo( new int[] { 1' 2' 3 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.EquivalentTo( new int[] { 3' 2' 1 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.EquivalentTo( new int[] { 3' 2' 1 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( List.Map( array2 ).Property("Length")' Is.SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Assert.That( list' Has.Count.EqualTo( 4 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( "Hello"' Length.EqualTo( 5 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( "Hello"' Property("Length").EqualTo(5) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array' Property("Length").EqualTo(4) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array' Length.EqualTo(4) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array' Property("Length").LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array' All.Length.EqualTo( 3 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array' All.Property("Length").EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array2' Some.Property("Length").EqualTo(2) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array2' Some.Length.EqualTo( 2 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array2' Some.Property("Length").GreaterThan(2));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array2' None.Property("Length").EqualTo(4) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array2' None.Length.EqualTo( 4 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( array2' None.Property("Length").GreaterThan(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' EqualTo( new int[] { 1' 2' 3 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' EqualTo( new int[] { 1' 2' 3 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' EquivalentTo( new int[] { 3' 2' 1 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' EquivalentTo( new int[] { 3' 2' 1 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( Map( array2 ).Property("Length")' SubsetOf( new int[] { 1' 2' 3' 4' 5 } ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,PropertyTests,The following statement contains a magic number: Expect( list' Count.EqualTo( 4 ) );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(42' Is.Not.Null);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(42' Is.Not.True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(42' Is.Not.False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2.5' Is.Not.NaN);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.Not.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.Not.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.Not.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.Not.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.Not.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Assert.That(2 + 2' Is.Not.Not.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(42' Not.Null);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(42' Not.True);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(42' Not.False);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2.5' Not.NaN);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.EqualTo(3));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.Not.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.Not.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.Not.EqualTo(4));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.Not.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.Not.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotTests,The following statement contains a magic number: Expect(2 + 2' Not.Not.Not.EqualTo(5));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotOperator,The following statement contains a magic number: Assert.That(42' !Is.Null);
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,NotOperator,The following statement contains a magic number: Expect( 42' !Null );
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AndOperator,The following statement contains a magic number: Assert.That(7' Is.GreaterThan(5) & Is.LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AndOperator,The following statement contains a magic number: Assert.That(7' Is.GreaterThan(5) & Is.LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AndOperator,The following statement contains a magic number: Assert.That(7' Is.GreaterThan(5) & Is.LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AndOperator,The following statement contains a magic number: Expect( 7' GreaterThan(5) & LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AndOperator,The following statement contains a magic number: Expect( 7' GreaterThan(5) & LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,AndOperator,The following statement contains a magic number: Expect( 7' GreaterThan(5) & LessThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,OrOperator,The following statement contains a magic number: Assert.That(3' Is.LessThan(5) | Is.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,OrOperator,The following statement contains a magic number: Assert.That(3' Is.LessThan(5) | Is.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,OrOperator,The following statement contains a magic number: Assert.That(3' Is.LessThan(5) | Is.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,OrOperator,The following statement contains a magic number: Expect( 3' LessThan(5) | GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,OrOperator,The following statement contains a magic number: Expect( 3' LessThan(5) | GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,OrOperator,The following statement contains a magic number: Expect( 3' LessThan(5) | GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Assert.That(7' Is.Not.Null & Is.Not.LessThan(5) & Is.Not.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Assert.That(7' Is.Not.Null & Is.Not.LessThan(5) & Is.Not.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Assert.That(7' Is.Not.Null & Is.Not.LessThan(5) & Is.Not.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Expect(7' Not.Null & Not.LessThan(5) & Not.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Expect(7' Not.Null & Not.LessThan(5) & Not.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Expect(7' Not.Null & Not.LessThan(5) & Not.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Assert.That(7' !Is.Null & !Is.LessThan(5) & !Is.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Assert.That(7' !Is.Null & !Is.LessThan(5) & !Is.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Assert.That(7' !Is.Null & !Is.LessThan(5) & !Is.GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Expect(7' !Null & !LessThan(5) & !GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Expect(7' !Null & !LessThan(5) & !GreaterThan(10));
Magic Number,NUnit.Framework.Tests,AssertSyntaxTests,C:\repos\nunit_nunit-csharp-samples\syntax\AssertSyntaxTests.cs,ComplexTests,The following statement contains a magic number: Expect(7' !Null & !LessThan(5) & !GreaterThan(10));
