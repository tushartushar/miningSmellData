Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,TransitionsView,The following statement contains a magic number: dogView = new UIImageView (UIImage.FromBundle ("Dog.jpg")) {  				Frame = new RectangleF (22' 22' 660' 710)'  			};
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,TransitionsView,The following statement contains a magic number: dogView = new UIImageView (UIImage.FromBundle ("Dog.jpg")) {  				Frame = new RectangleF (22' 22' 660' 710)'  			};
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,TransitionsView,The following statement contains a magic number: dogView = new UIImageView (UIImage.FromBundle ("Dog.jpg")) {  				Frame = new RectangleF (22' 22' 660' 710)'  			};
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,TransitionsView,The following statement contains a magic number: dogView = new UIImageView (UIImage.FromBundle ("Dog.jpg")) {  				Frame = new RectangleF (22' 22' 660' 710)'  			};
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,CurlDown,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionCurlDown'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,CurlUp,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionCurlUp'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,FlipFromBottom,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionFlipFromBottom'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,FlipFromTop,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionFlipFromTop'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,FlipFromLeft,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionFlipFromLeft'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,FlipFromRight,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionFlipFromRight'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,TransitionsView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\TransitionsView.cs,CrossDisolve,The following statement contains a magic number: UIView.Transition (  				fromView: IsDogVisible ? dogView : catView'  				toView: IsDogVisible ? catView : dogView'  				duration: 3'  				options: UIViewAnimationOptions.TransitionCrossDissolve'  				completion: () => {});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Reset,The following statement contains a magic number: dog.Layer.ShadowOffset = new SizeF (0' 20);
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Reset,The following statement contains a magic number: dog.Layer.ShadowRadius = 10;
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Center,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Center = new PointF (View.Bounds.GetMidX ()' View.Bounds.GetMidY ());  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,BackgroundColor,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				View.BackgroundColor = UIColor.FromRGB (0xFF' 0xD3' 0x20);  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Frame,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {    				dog.Frame = View.Bounds;  			  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Alpha,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Alpha = 0.25f;  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Alpha,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Alpha = 0.25f;  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Rotate45Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Transform = CGAffineTransform.MakeRotation ((float)Math.PI/4);  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,Rotate45Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Transform = CGAffineTransform.MakeRotation ((float)Math.PI/4);  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,RotateN45Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,RotateN45Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,All,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				View.BackgroundColor = UIColor.FromRGB (0xFF' 0xD3' 0x20);  				dog.Frame = View.Bounds;  				dog.Alpha = 0.25f;  				dog.Center = new PointF (300' 300);  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,All,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				View.BackgroundColor = UIColor.FromRGB (0xFF' 0xD3' 0x20);  				dog.Frame = View.Bounds;  				dog.Alpha = 0.25f;  				dog.Center = new PointF (300' 300);  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,All,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				View.BackgroundColor = UIColor.FromRGB (0xFF' 0xD3' 0x20);  				dog.Frame = View.Bounds;  				dog.Alpha = 0.25f;  				dog.Center = new PointF (300' 300);  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,All,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				View.BackgroundColor = UIColor.FromRGB (0xFF' 0xD3' 0x20);  				dog.Frame = View.Bounds;  				dog.Alpha = 0.25f;  				dog.Center = new PointF (300' 300);  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitView,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitView.cs,All,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				View.BackgroundColor = UIColor.FromRGB (0xFF' 0xD3' 0x20);  				dog.Frame = View.Bounds;  				dog.Alpha = 0.25f;  				dog.Center = new PointF (300' 300);  				dog.Transform = CGAffineTransform.MakeRotation ((float)-Math.PI/4);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Reset,The following statement contains a magic number: dogView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Reset,The following statement contains a magic number: dogView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Reset,The following statement contains a magic number: dogView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Reset,The following statement contains a magic number: dogView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Reset,The following statement contains a magic number: dogView.Layer.ShadowOffset = new SizeF (0' 20);
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Reset,The following statement contains a magic number: dogView.Layer.ShadowRadius = 10;
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Frame,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Frame = View.Bounds;  				  			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Opacity,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Opacity = 0.25f;    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,Opacity,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Opacity = 0.25f;    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateZ60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 0' 0' 1);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateZ60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 0' 0' 1);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateX60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 1' 0' 0);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateX60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 1' 0' 0);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateY60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 0' 1' 0);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateY60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 0' 1' 0);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateXYZ60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 1' 1' 1);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitLayer.cs,RotateXYZ60Transform,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				animation: () => {  				  				dogView.Layer.Transform = CATransform3D.MakeRotation (  					(float)Math.PI/3' 1' 1' 1);    			});
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Reset,The following statement contains a magic number: dog.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Autoreverse,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				delay: 0'  				options: UIViewAnimationOptions.Autoreverse'  				animation: () => {  				  				dog.Center = new PointF (View.Bounds.GetMidX ()' View.Bounds.GetMidY ());    			}'  			completion: () => {});
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,AutoreverseWithReset,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				delay: 0'  				options: UIViewAnimationOptions.Autoreverse'  				animation: () => {  				  				dog.Center = new PointF (View.Bounds.GetMidX ()' View.Bounds.GetMidY ());    			}'  			completion: Reset);
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,RepeatWithAutoreverse,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				delay: 0'  				options: UIViewAnimationOptions.Repeat | UIViewAnimationOptions.Autoreverse'  				animation: () => {  				  				dog.Center = new PointF (View.Bounds.GetMidX ()' View.Bounds.GetMidY ());    			}'  			completion: () => {});
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Repeat,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				delay: 0'  				options: UIViewAnimationOptions.Repeat'  				animation: () => {  				  				dog.Center = new PointF (View.Bounds.GetMidX ()' View.Bounds.GetMidY ());  				  			}'  			completion: () => {});
Magic Number,Presentation.AnimationPresentation,ImplicitOptions,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ImplicitOptions.cs,Linear,The following statement contains a magic number: UIView.Animate (  				duration: 2'  				delay: 0'  				options: UIViewAnimationOptions.CurveLinear | UIViewAnimationOptions.Repeat | UIViewAnimationOptions.Autoreverse'  				animation: () => {  				  				dog.Center = new PointF (View.Bounds.GetMidX ()' View.Bounds.GetMidY ());  				  			}'  			completion: () => {});
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.CornerRadius = 5;
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.ShadowOffset = new SizeF (0' 20);
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,Reset,The following statement contains a magic number: solidView.Layer.ShadowRadius = 10;
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,To,The following statement contains a magic number: var a = new CABasicAnimation {  				To = NSNumber.FromFloat (50)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,To,The following statement contains a magic number: var a = new CABasicAnimation {  				To = NSNumber.FromFloat (50)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,FromTo,The following statement contains a magic number: var a = new CABasicAnimation {  				From = NSNumber.FromFloat (50)'  				To = NSNumber.FromFloat (5)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,FromTo,The following statement contains a magic number: var a = new CABasicAnimation {  				From = NSNumber.FromFloat (50)'  				To = NSNumber.FromFloat (5)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,FromTo,The following statement contains a magic number: var a = new CABasicAnimation {  				From = NSNumber.FromFloat (50)'  				To = NSNumber.FromFloat (5)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,ToDidStop,The following statement contains a magic number: var a = new CABasicAnimation {  				To = NSNumber.FromFloat (50)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,ToDidStop,The following statement contains a magic number: var a = new CABasicAnimation {  				To = NSNumber.FromFloat (50)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,ToDidStop,The following statement contains a magic number: a.AnimationStopped += (sender' e) => {  				solidView.Layer.CornerRadius = 50;  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,By,The following statement contains a magic number: var a = new CABasicAnimation {  				By = NSNumber.FromFloat (45)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitBasic,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitBasic.cs,By,The following statement contains a magic number: var a = new CABasicAnimation {  				By = NSNumber.FromFloat (45)'  				KeyPath = "cornerRadius"'  				Duration = 2'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.CornerRadius = 5;
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.ShadowOffset = new SizeF (0' 20);
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Reset,The following statement contains a magic number: solidView.Layer.ShadowRadius = 10;
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,Position,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.25)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.625)'  					NSNumber.FromDouble (0.75)'  					NSNumber.FromDouble (0.75+0.125/2)'  					NSNumber.FromDouble (0.75+0.125)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-100))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-25))'  					NSValue.FromPointF (startPosition)'  					NSValue.FromPointF (new PointF (startPosition.X' startPosition.Y-12.5f))'  					NSValue.FromPointF (startPosition)'  				}'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  				Duration = 4'  				KeyPath = "position"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitKeyframe,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitKeyframe.cs,CornerRadius,The following statement contains a magic number: var a = new CAKeyFrameAnimation {  				KeyTimes = new [] {  					NSNumber.FromDouble (0)'  					NSNumber.FromDouble (0.1)'  					NSNumber.FromDouble (0.5)'  					NSNumber.FromDouble (0.9)'  					NSNumber.FromDouble (1)'  				}'  				Values = new NSObject[] {  					NSNumber.FromFloat (5)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (25)'  					NSNumber.FromFloat (50)'  					NSNumber.FromFloat (5)'  				}'  				Duration = 2'  				KeyPath = "cornerRadius"'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Reset,The following statement contains a magic number: pieChart.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Reset,The following statement contains a magic number: pieChart.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Reset,The following statement contains a magic number: pieChart.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Reset,The following statement contains a magic number: pieChart.Frame = new RectangleF (100' 100' 200' 230);
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Reset,The following statement contains a magic number: pieChart.Angle = Math.PI / 4;
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Basic,The following statement contains a magic number: var a = new CABasicAnimation {  				From = NSNumber.FromDouble (pieChart.Angle)'  				To = NSNumber.FromDouble (3*Math.PI/2)'  				KeyPath = "angle"'  				Duration = 3'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Basic,The following statement contains a magic number: var a = new CABasicAnimation {  				From = NSNumber.FromDouble (pieChart.Angle)'  				To = NSNumber.FromDouble (3*Math.PI/2)'  				KeyPath = "angle"'  				Duration = 3'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Basic,The following statement contains a magic number: var a = new CABasicAnimation {  				From = NSNumber.FromDouble (pieChart.Angle)'  				To = NSNumber.FromDouble (3*Math.PI/2)'  				KeyPath = "angle"'  				Duration = 3'  				TimingFunction = CAMediaTimingFunction.FromName (  					CAMediaTimingFunction.EaseInEaseOut)'  			};
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Basic,The following statement contains a magic number: pieChart.Angle = 3*Math.PI/2;
Magic Number,Presentation.AnimationPresentation,ExplicitCustom,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\ExplicitCustom.cs,Basic,The following statement contains a magic number: pieChart.Angle = 3*Math.PI/2;
Magic Number,Presentation.AnimationPresentation,PieChartLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\PieChartLayer.cs,DrawInContext,The following statement contains a magic number: ctx.AddArc (c.X' c.Y' bounds.Width/2' (float)0' (float)Angle' false);
Magic Number,Presentation.AnimationPresentation,PieChartLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\PieChartLayer.cs,DrawInContext,The following statement contains a magic number: ctx.AddArc (c.X' c.Y' bounds.Width/2' (float)0' (float)(1e-7 + Angle)' true);
Magic Number,Presentation.AnimationPresentation,PieChartLayer,D:\research\architectureSmells\repos\xamarin_Seminars\2012-09-20-CoreAnimation\AnimationPresentation\PieChartLayer.cs,DrawInContext,The following statement contains a magic number: ctx.AddArc (c.X' c.Y' bounds.Width/2' (float)0' (float)(1e-7 + Angle)' true);
